ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_ISR, %function
  25              	ADC_ISR:
  26              	.LFB184:
  27              		.file 1 "Generated_Source\\PSoC6\\ADC_INT.c"
   1:Generated_Source\PSoC6/ADC_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_INT.c **** * \file     ADC_INT.c
   3:Generated_Source\PSoC6/ADC_INT.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_INT.c **** *
   5:Generated_Source\PSoC6/ADC_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_INT.c **** * Provides the initialization data structure for the ADC Component.
   7:Generated_Source\PSoC6/ADC_INT.c **** *
   8:Generated_Source\PSoC6/ADC_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_INT.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_INT.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_INT.c **** * liability arising out of the application or use of the Software or any
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 2


  31:Generated_Source\PSoC6/ADC_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_INT.c **** #include "ADC.h"
  40:Generated_Source\PSoC6/ADC_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_INT.c **** 
  42:Generated_Source\PSoC6/ADC_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_INT.c **** ******************************************************************************/
  47:Generated_Source\PSoC6/ADC_INT.c **** /* `#START ADC_SYS_VAR`  */
  48:Generated_Source\PSoC6/ADC_INT.c **** 
  49:Generated_Source\PSoC6/ADC_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_INT.c **** 
  51:Generated_Source\PSoC6/ADC_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_INT.c **** * Function Name: ADC_ISR
  53:Generated_Source\PSoC6/ADC_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_INT.c **** *
  55:Generated_Source\PSoC6/ADC_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_INT.c **** *
  57:Generated_Source\PSoC6/ADC_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_INT.c **** *
  59:Generated_Source\PSoC6/ADC_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_INT.c **** *
  61:Generated_Source\PSoC6/ADC_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_INT.c **** *
  63:Generated_Source\PSoC6/ADC_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_INT.c **** void ADC_ISR(void)
  65:Generated_Source\PSoC6/ADC_INT.c **** {
  28              		.loc 1 65 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36              	.LVL0:
  37              	.LBB8:
  38              	.LBB9:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 3


  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 4


  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 5


 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 6


 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 7


 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 8


 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 9


 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 10


 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 11


 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 12


 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 13


 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 14


 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 15


 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 16


 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 17


 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 18


 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 19


 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 20


 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 21


1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 22


1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 23


1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 24


1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 25


1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 26


1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 27


1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 28


1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 29


1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 30


1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
  40              		.loc 2 1556 0
  41 0002 8423     		movs	r3, #132
  42 0004 9B00     		lsls	r3, r3, #2
  43 0006 074A     		ldr	r2, .L3
  44 0008 D458     		ldr	r4, [r2, r3]
  45              	.LVL1:
  46              	.LBE9:
  47              	.LBE8:
  48              	.LBB10:
  49              	.LBB11:
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
  50              		.loc 2 1585 0
  51 000a 072C     		cmp	r4, #7
  52 000c 03D9     		bls	.L2
  53 000e 0649     		ldr	r1, .L3+4
  54 0010 0648     		ldr	r0, .L3+8
  55 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  56              	.LVL2:
  57              	.L2:
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
  58              		.loc 2 1587 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 31


  59 0016 034A     		ldr	r2, .L3
  60 0018 8423     		movs	r3, #132
  61 001a 9B00     		lsls	r3, r3, #2
  62 001c D450     		str	r4, [r2, r3]
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
  63              		.loc 2 1590 0
  64 001e D158     		ldr	r1, [r2, r3]
  65              	.LVL3:
  66              	.LBE11:
  67              	.LBE10:
  68              	.LBB12:
  69              	.LBB13:
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  70              		.loc 2 1556 0
  71 0020 D358     		ldr	r3, [r2, r3]
  72              	.LVL4:
  73              	.LBE13:
  74              	.LBE12:
  66:Generated_Source\PSoC6/ADC_INT.c ****     uint32_t intr_status;
  67:Generated_Source\PSoC6/ADC_INT.c **** 
  68:Generated_Source\PSoC6/ADC_INT.c ****     /* Read interrupt status register */
  69:Generated_Source\PSoC6/ADC_INT.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
  70:Generated_Source\PSoC6/ADC_INT.c **** 
  71:Generated_Source\PSoC6/ADC_INT.c ****     /* ISR Macro Callback */
  72:Generated_Source\PSoC6/ADC_INT.c ****     #ifdef ADC_ISR_CALLBACK
  73:Generated_Source\PSoC6/ADC_INT.c ****         ADC_ISR_Callback();
  74:Generated_Source\PSoC6/ADC_INT.c ****     #endif
  75:Generated_Source\PSoC6/ADC_INT.c **** 
  76:Generated_Source\PSoC6/ADC_INT.c ****     /************************************************************************
  77:Generated_Source\PSoC6/ADC_INT.c ****     *  Custom Code
  78:Generated_Source\PSoC6/ADC_INT.c ****     *  - add user ISR code between the following #START and #END tags
  79:Generated_Source\PSoC6/ADC_INT.c ****     *************************************************************************/
  80:Generated_Source\PSoC6/ADC_INT.c ****     /* `#START MAIN_ADC_ISR`  */
  81:Generated_Source\PSoC6/ADC_INT.c **** 
  82:Generated_Source\PSoC6/ADC_INT.c ****     /* `#END`  */
  83:Generated_Source\PSoC6/ADC_INT.c **** 
  84:Generated_Source\PSoC6/ADC_INT.c ****     /* Clear handled interrupt */
  85:Generated_Source\PSoC6/ADC_INT.c ****     Cy_SAR_ClearInterrupt(ADC_SAR__HW, intr_status);
  86:Generated_Source\PSoC6/ADC_INT.c ****     /* Read interrupt status register to ensure write completed due to buffered writes */
  87:Generated_Source\PSoC6/ADC_INT.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
  88:Generated_Source\PSoC6/ADC_INT.c **** }
  75              		.loc 1 88 0
  76              		@ sp needed
  77 0022 10BD     		pop	{r4, pc}
  78              	.L4:
  79              		.align	2
  80              	.L3:
  81 0024 00001D41 		.word	1092419584
  82 0028 31060000 		.word	1585
  83 002c 00000000 		.word	.LC0
  84              		.cfi_endproc
  85              	.LFE184:
  86              		.size	ADC_ISR, .-ADC_ISR
  87              		.section	.rodata.str1.4,"aMS",%progbits,1
  88              		.align	2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 32


  89              	.LC0:
  90 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  90      72617465 
  90      645F536F 
  90      75726365 
  90      5C50536F 
  91 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  91      5F736172 
  91      2E6800
  92              		.text
  93              	.Letext0:
  94              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
  95              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
  96              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
  97              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
  98              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
  99              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 100              		.file 9 "Generated_Source\\PSoC6\\ADC.h"
 101              		.section	.debug_info,"",%progbits
 102              	.Ldebug_info0:
 103 0000 9B0B0000 		.4byte	0xb9b
 104 0004 0400     		.2byte	0x4
 105 0006 00000000 		.4byte	.Ldebug_abbrev0
 106 000a 04       		.byte	0x4
 107 000b 01       		.uleb128 0x1
 108 000c 69090000 		.4byte	.LASF198
 109 0010 0C       		.byte	0xc
 110 0011 D3030000 		.4byte	.LASF199
 111 0015 0C040000 		.4byte	.LASF200
 112 0019 00000000 		.4byte	.Ldebug_ranges0+0
 113 001d 00000000 		.4byte	0
 114 0021 00000000 		.4byte	.Ldebug_line0
 115 0025 02       		.uleb128 0x2
 116 0026 02       		.byte	0x2
 117 0027 05       		.byte	0x5
 118 0028 A3080000 		.4byte	.LASF0
 119 002c 02       		.uleb128 0x2
 120 002d 01       		.byte	0x1
 121 002e 08       		.byte	0x8
 122 002f 5F080000 		.4byte	.LASF1
 123 0033 02       		.uleb128 0x2
 124 0034 01       		.byte	0x1
 125 0035 06       		.byte	0x6
 126 0036 DC010000 		.4byte	.LASF2
 127 003a 03       		.uleb128 0x3
 128 003b B2000000 		.4byte	.LASF3
 129 003f 03       		.byte	0x3
 130 0040 1D       		.byte	0x1d
 131 0041 2C000000 		.4byte	0x2c
 132 0045 03       		.uleb128 0x3
 133 0046 02040000 		.4byte	.LASF4
 134 004a 03       		.byte	0x3
 135 004b 29       		.byte	0x29
 136 004c 25000000 		.4byte	0x25
 137 0050 03       		.uleb128 0x3
 138 0051 350A0000 		.4byte	.LASF5
 139 0055 03       		.byte	0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 33


 140 0056 2B       		.byte	0x2b
 141 0057 5B000000 		.4byte	0x5b
 142 005b 02       		.uleb128 0x2
 143 005c 02       		.byte	0x2
 144 005d 07       		.byte	0x7
 145 005e 6F030000 		.4byte	.LASF6
 146 0062 02       		.uleb128 0x2
 147 0063 04       		.byte	0x4
 148 0064 05       		.byte	0x5
 149 0065 8F020000 		.4byte	.LASF7
 150 0069 03       		.uleb128 0x3
 151 006a AC030000 		.4byte	.LASF8
 152 006e 03       		.byte	0x3
 153 006f 41       		.byte	0x41
 154 0070 74000000 		.4byte	0x74
 155 0074 02       		.uleb128 0x2
 156 0075 04       		.byte	0x4
 157 0076 07       		.byte	0x7
 158 0077 EB040000 		.4byte	.LASF9
 159 007b 02       		.uleb128 0x2
 160 007c 08       		.byte	0x8
 161 007d 05       		.byte	0x5
 162 007e CE010000 		.4byte	.LASF10
 163 0082 02       		.uleb128 0x2
 164 0083 08       		.byte	0x8
 165 0084 07       		.byte	0x7
 166 0085 2A010000 		.4byte	.LASF11
 167 0089 04       		.uleb128 0x4
 168 008a 04       		.byte	0x4
 169 008b 05       		.byte	0x5
 170 008c 696E7400 		.ascii	"int\000"
 171 0090 02       		.uleb128 0x2
 172 0091 04       		.byte	0x4
 173 0092 07       		.byte	0x7
 174 0093 BC040000 		.4byte	.LASF12
 175 0097 03       		.uleb128 0x3
 176 0098 530A0000 		.4byte	.LASF13
 177 009c 04       		.byte	0x4
 178 009d 18       		.byte	0x18
 179 009e 3A000000 		.4byte	0x3a
 180 00a2 03       		.uleb128 0x3
 181 00a3 B2010000 		.4byte	.LASF14
 182 00a7 04       		.byte	0x4
 183 00a8 20       		.byte	0x20
 184 00a9 45000000 		.4byte	0x45
 185 00ad 03       		.uleb128 0x3
 186 00ae BC050000 		.4byte	.LASF15
 187 00b2 04       		.byte	0x4
 188 00b3 24       		.byte	0x24
 189 00b4 50000000 		.4byte	0x50
 190 00b8 03       		.uleb128 0x3
 191 00b9 42090000 		.4byte	.LASF16
 192 00bd 04       		.byte	0x4
 193 00be 30       		.byte	0x30
 194 00bf 69000000 		.4byte	0x69
 195 00c3 02       		.uleb128 0x2
 196 00c4 04       		.byte	0x4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 34


 197 00c5 07       		.byte	0x7
 198 00c6 C9040000 		.4byte	.LASF17
 199 00ca 05       		.uleb128 0x5
 200 00cb B8000000 		.4byte	0xb8
 201 00cf 06       		.uleb128 0x6
 202 00d0 CA000000 		.4byte	0xca
 203 00d4 07       		.uleb128 0x7
 204 00d5 CF000000 		.4byte	0xcf
 205 00d9 E4000000 		.4byte	0xe4
 206 00dd 08       		.uleb128 0x8
 207 00de C3000000 		.4byte	0xc3
 208 00e2 01       		.byte	0x1
 209 00e3 00       		.byte	0
 210 00e4 07       		.uleb128 0x7
 211 00e5 CA000000 		.4byte	0xca
 212 00e9 F4000000 		.4byte	0xf4
 213 00ed 08       		.uleb128 0x8
 214 00ee C3000000 		.4byte	0xc3
 215 00f2 0F       		.byte	0xf
 216 00f3 00       		.byte	0
 217 00f4 07       		.uleb128 0x7
 218 00f5 CF000000 		.4byte	0xcf
 219 00f9 04010000 		.4byte	0x104
 220 00fd 08       		.uleb128 0x8
 221 00fe C3000000 		.4byte	0xc3
 222 0102 0F       		.byte	0xf
 223 0103 00       		.byte	0
 224 0104 07       		.uleb128 0x7
 225 0105 CF000000 		.4byte	0xcf
 226 0109 14010000 		.4byte	0x114
 227 010d 08       		.uleb128 0x8
 228 010e C3000000 		.4byte	0xc3
 229 0112 02       		.byte	0x2
 230 0113 00       		.byte	0
 231 0114 07       		.uleb128 0x7
 232 0115 CF000000 		.4byte	0xcf
 233 0119 24010000 		.4byte	0x124
 234 011d 08       		.uleb128 0x8
 235 011e C3000000 		.4byte	0xc3
 236 0122 0E       		.byte	0xe
 237 0123 00       		.byte	0
 238 0124 09       		.uleb128 0x9
 239 0125 080F     		.2byte	0xf08
 240 0127 05       		.byte	0x5
 241 0128 21       		.byte	0x21
 242 0129 AC030000 		.4byte	0x3ac
 243 012d 0A       		.uleb128 0xa
 244 012e F10A0000 		.4byte	.LASF18
 245 0132 05       		.byte	0x5
 246 0133 22       		.byte	0x22
 247 0134 CA000000 		.4byte	0xca
 248 0138 00       		.byte	0
 249 0139 0A       		.uleb128 0xa
 250 013a 16070000 		.4byte	.LASF19
 251 013e 05       		.byte	0x5
 252 013f 23       		.byte	0x23
 253 0140 CA000000 		.4byte	0xca
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 35


 254 0144 04       		.byte	0x4
 255 0145 0A       		.uleb128 0xa
 256 0146 C0080000 		.4byte	.LASF20
 257 014a 05       		.byte	0x5
 258 014b 24       		.byte	0x24
 259 014c B1030000 		.4byte	0x3b1
 260 0150 08       		.byte	0x8
 261 0151 0A       		.uleb128 0xa
 262 0152 F4030000 		.4byte	.LASF21
 263 0156 05       		.byte	0x5
 264 0157 25       		.byte	0x25
 265 0158 CA000000 		.4byte	0xca
 266 015c 10       		.byte	0x10
 267 015d 0A       		.uleb128 0xa
 268 015e 47070000 		.4byte	.LASF22
 269 0162 05       		.byte	0x5
 270 0163 26       		.byte	0x26
 271 0164 CA000000 		.4byte	0xca
 272 0168 14       		.byte	0x14
 273 0169 0A       		.uleb128 0xa
 274 016a 22070000 		.4byte	.LASF23
 275 016e 05       		.byte	0x5
 276 016f 27       		.byte	0x27
 277 0170 CA000000 		.4byte	0xca
 278 0174 18       		.byte	0x18
 279 0175 0A       		.uleb128 0xa
 280 0176 F4000000 		.4byte	.LASF24
 281 017a 05       		.byte	0x5
 282 017b 28       		.byte	0x28
 283 017c CA000000 		.4byte	0xca
 284 0180 1C       		.byte	0x1c
 285 0181 0A       		.uleb128 0xa
 286 0182 3F070000 		.4byte	.LASF25
 287 0186 05       		.byte	0x5
 288 0187 29       		.byte	0x29
 289 0188 CA000000 		.4byte	0xca
 290 018c 20       		.byte	0x20
 291 018d 0A       		.uleb128 0xa
 292 018e 46060000 		.4byte	.LASF26
 293 0192 05       		.byte	0x5
 294 0193 2A       		.byte	0x2a
 295 0194 CA000000 		.4byte	0xca
 296 0198 24       		.byte	0x24
 297 0199 0A       		.uleb128 0xa
 298 019a D5070000 		.4byte	.LASF27
 299 019e 05       		.byte	0x5
 300 019f 2B       		.byte	0x2b
 301 01a0 CB030000 		.4byte	0x3cb
 302 01a4 28       		.byte	0x28
 303 01a5 0A       		.uleb128 0xa
 304 01a6 7B040000 		.4byte	.LASF28
 305 01aa 05       		.byte	0x5
 306 01ab 2C       		.byte	0x2c
 307 01ac D0030000 		.4byte	0x3d0
 308 01b0 80       		.byte	0x80
 309 01b1 0A       		.uleb128 0xa
 310 01b2 FE080000 		.4byte	.LASF29
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 36


 311 01b6 05       		.byte	0x5
 312 01b7 2D       		.byte	0x2d
 313 01b8 DA030000 		.4byte	0x3da
 314 01bc C0       		.byte	0xc0
 315 01bd 0B       		.uleb128 0xb
 316 01be C70A0000 		.4byte	.LASF30
 317 01c2 05       		.byte	0x5
 318 01c3 2E       		.byte	0x2e
 319 01c4 E4030000 		.4byte	0x3e4
 320 01c8 0001     		.2byte	0x100
 321 01ca 0B       		.uleb128 0xb
 322 01cb E9070000 		.4byte	.LASF31
 323 01cf 05       		.byte	0x5
 324 01d0 2F       		.byte	0x2f
 325 01d1 EE030000 		.4byte	0x3ee
 326 01d5 4001     		.2byte	0x140
 327 01d7 0B       		.uleb128 0xb
 328 01d8 B9060000 		.4byte	.LASF32
 329 01dc 05       		.byte	0x5
 330 01dd 30       		.byte	0x30
 331 01de F8030000 		.4byte	0x3f8
 332 01e2 8001     		.2byte	0x180
 333 01e4 0B       		.uleb128 0xb
 334 01e5 16090000 		.4byte	.LASF33
 335 01e9 05       		.byte	0x5
 336 01ea 31       		.byte	0x31
 337 01eb 02040000 		.4byte	0x402
 338 01ef C001     		.2byte	0x1c0
 339 01f1 0B       		.uleb128 0xb
 340 01f2 91050000 		.4byte	.LASF34
 341 01f6 05       		.byte	0x5
 342 01f7 32       		.byte	0x32
 343 01f8 CF000000 		.4byte	0xcf
 344 01fc 0002     		.2byte	0x200
 345 01fe 0B       		.uleb128 0xb
 346 01ff 5C0B0000 		.4byte	.LASF35
 347 0203 05       		.byte	0x5
 348 0204 33       		.byte	0x33
 349 0205 CF000000 		.4byte	0xcf
 350 0209 0402     		.2byte	0x204
 351 020b 0B       		.uleb128 0xb
 352 020c FD040000 		.4byte	.LASF36
 353 0210 05       		.byte	0x5
 354 0211 34       		.byte	0x34
 355 0212 CF000000 		.4byte	0xcf
 356 0216 0802     		.2byte	0x208
 357 0218 0B       		.uleb128 0xb
 358 0219 E9080000 		.4byte	.LASF37
 359 021d 05       		.byte	0x5
 360 021e 35       		.byte	0x35
 361 021f CF000000 		.4byte	0xcf
 362 0223 0C02     		.2byte	0x20c
 363 0225 0B       		.uleb128 0xb
 364 0226 7B0A0000 		.4byte	.LASF38
 365 022a 05       		.byte	0x5
 366 022b 36       		.byte	0x36
 367 022c CA000000 		.4byte	0xca
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 37


 368 0230 1002     		.2byte	0x210
 369 0232 0B       		.uleb128 0xb
 370 0233 51060000 		.4byte	.LASF39
 371 0237 05       		.byte	0x5
 372 0238 37       		.byte	0x37
 373 0239 CA000000 		.4byte	0xca
 374 023d 1402     		.2byte	0x214
 375 023f 0B       		.uleb128 0xb
 376 0240 2E050000 		.4byte	.LASF40
 377 0244 05       		.byte	0x5
 378 0245 38       		.byte	0x38
 379 0246 CA000000 		.4byte	0xca
 380 024a 1802     		.2byte	0x218
 381 024c 0B       		.uleb128 0xb
 382 024d 98070000 		.4byte	.LASF41
 383 0251 05       		.byte	0x5
 384 0252 39       		.byte	0x39
 385 0253 CF000000 		.4byte	0xcf
 386 0257 1C02     		.2byte	0x21c
 387 0259 0B       		.uleb128 0xb
 388 025a 6D040000 		.4byte	.LASF42
 389 025e 05       		.byte	0x5
 390 025f 3A       		.byte	0x3a
 391 0260 CA000000 		.4byte	0xca
 392 0264 2002     		.2byte	0x220
 393 0266 0B       		.uleb128 0xb
 394 0267 86070000 		.4byte	.LASF43
 395 026b 05       		.byte	0x5
 396 026c 3B       		.byte	0x3b
 397 026d CA000000 		.4byte	0xca
 398 0271 2402     		.2byte	0x224
 399 0273 0B       		.uleb128 0xb
 400 0274 680A0000 		.4byte	.LASF44
 401 0278 05       		.byte	0x5
 402 0279 3C       		.byte	0x3c
 403 027a CA000000 		.4byte	0xca
 404 027e 2802     		.2byte	0x228
 405 0280 0B       		.uleb128 0xb
 406 0281 500C0000 		.4byte	.LASF45
 407 0285 05       		.byte	0x5
 408 0286 3D       		.byte	0x3d
 409 0287 CF000000 		.4byte	0xcf
 410 028b 2C02     		.2byte	0x22c
 411 028d 0B       		.uleb128 0xb
 412 028e 86050000 		.4byte	.LASF46
 413 0292 05       		.byte	0x5
 414 0293 3E       		.byte	0x3e
 415 0294 CA000000 		.4byte	0xca
 416 0298 3002     		.2byte	0x230
 417 029a 0B       		.uleb128 0xb
 418 029b E80B0000 		.4byte	.LASF47
 419 029f 05       		.byte	0x5
 420 02a0 3F       		.byte	0x3f
 421 02a1 CA000000 		.4byte	0xca
 422 02a5 3402     		.2byte	0x234
 423 02a7 0B       		.uleb128 0xb
 424 02a8 A2010000 		.4byte	.LASF48
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 38


 425 02ac 05       		.byte	0x5
 426 02ad 40       		.byte	0x40
 427 02ae CA000000 		.4byte	0xca
 428 02b2 3802     		.2byte	0x238
 429 02b4 0B       		.uleb128 0xb
 430 02b5 280C0000 		.4byte	.LASF49
 431 02b9 05       		.byte	0x5
 432 02ba 41       		.byte	0x41
 433 02bb CF000000 		.4byte	0xcf
 434 02bf 3C02     		.2byte	0x23c
 435 02c1 0B       		.uleb128 0xb
 436 02c2 AA020000 		.4byte	.LASF50
 437 02c6 05       		.byte	0x5
 438 02c7 42       		.byte	0x42
 439 02c8 CF000000 		.4byte	0xcf
 440 02cc 4002     		.2byte	0x240
 441 02ce 0B       		.uleb128 0xb
 442 02cf FF070000 		.4byte	.LASF51
 443 02d3 05       		.byte	0x5
 444 02d4 43       		.byte	0x43
 445 02d5 0C040000 		.4byte	0x40c
 446 02d9 4402     		.2byte	0x244
 447 02db 0B       		.uleb128 0xb
 448 02dc 1F000000 		.4byte	.LASF52
 449 02e0 05       		.byte	0x5
 450 02e1 44       		.byte	0x44
 451 02e2 CA000000 		.4byte	0xca
 452 02e6 8002     		.2byte	0x280
 453 02e8 0B       		.uleb128 0xb
 454 02e9 09080000 		.4byte	.LASF53
 455 02ed 05       		.byte	0x5
 456 02ee 45       		.byte	0x45
 457 02ef 16040000 		.4byte	0x416
 458 02f3 8402     		.2byte	0x284
 459 02f5 0B       		.uleb128 0xb
 460 02f6 C3020000 		.4byte	.LASF54
 461 02fa 05       		.byte	0x5
 462 02fb 46       		.byte	0x46
 463 02fc CF000000 		.4byte	0xcf
 464 0300 9002     		.2byte	0x290
 465 0302 0B       		.uleb128 0xb
 466 0303 13080000 		.4byte	.LASF55
 467 0307 05       		.byte	0x5
 468 0308 47       		.byte	0x47
 469 0309 20040000 		.4byte	0x420
 470 030d 9402     		.2byte	0x294
 471 030f 0B       		.uleb128 0xb
 472 0310 1B0B0000 		.4byte	.LASF56
 473 0314 05       		.byte	0x5
 474 0315 48       		.byte	0x48
 475 0316 CF000000 		.4byte	0xcf
 476 031a A002     		.2byte	0x2a0
 477 031c 0B       		.uleb128 0xb
 478 031d 16000000 		.4byte	.LASF57
 479 0321 05       		.byte	0x5
 480 0322 49       		.byte	0x49
 481 0323 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 39


 482 0327 A402     		.2byte	0x2a4
 483 0329 0B       		.uleb128 0xb
 484 032a 1D080000 		.4byte	.LASF58
 485 032e 05       		.byte	0x5
 486 032f 4A       		.byte	0x4a
 487 0330 2A040000 		.4byte	0x42a
 488 0334 A802     		.2byte	0x2a8
 489 0336 0B       		.uleb128 0xb
 490 0337 98000000 		.4byte	.LASF59
 491 033b 05       		.byte	0x5
 492 033c 4B       		.byte	0x4b
 493 033d CA000000 		.4byte	0xca
 494 0341 0003     		.2byte	0x300
 495 0343 0B       		.uleb128 0xb
 496 0344 27030000 		.4byte	.LASF60
 497 0348 05       		.byte	0x5
 498 0349 4C       		.byte	0x4c
 499 034a CA000000 		.4byte	0xca
 500 034e 0403     		.2byte	0x304
 501 0350 0B       		.uleb128 0xb
 502 0351 27080000 		.4byte	.LASF61
 503 0355 05       		.byte	0x5
 504 0356 4D       		.byte	0x4d
 505 0357 44040000 		.4byte	0x444
 506 035b 0803     		.2byte	0x308
 507 035d 0B       		.uleb128 0xb
 508 035e 1B050000 		.4byte	.LASF62
 509 0362 05       		.byte	0x5
 510 0363 4E       		.byte	0x4e
 511 0364 CA000000 		.4byte	0xca
 512 0368 4003     		.2byte	0x340
 513 036a 0B       		.uleb128 0xb
 514 036b DE0A0000 		.4byte	.LASF63
 515 036f 05       		.byte	0x5
 516 0370 4F       		.byte	0x4f
 517 0371 CA000000 		.4byte	0xca
 518 0375 4403     		.2byte	0x344
 519 0377 0B       		.uleb128 0xb
 520 0378 98020000 		.4byte	.LASF64
 521 037c 05       		.byte	0x5
 522 037d 50       		.byte	0x50
 523 037e CF000000 		.4byte	0xcf
 524 0382 4803     		.2byte	0x348
 525 0384 0B       		.uleb128 0xb
 526 0385 54020000 		.4byte	.LASF65
 527 0389 05       		.byte	0x5
 528 038a 51       		.byte	0x51
 529 038b 5F040000 		.4byte	0x45f
 530 038f 4C03     		.2byte	0x34c
 531 0391 0B       		.uleb128 0xb
 532 0392 8E010000 		.4byte	.LASF66
 533 0396 05       		.byte	0x5
 534 0397 52       		.byte	0x52
 535 0398 CA000000 		.4byte	0xca
 536 039c 000F     		.2byte	0xf00
 537 039e 0B       		.uleb128 0xb
 538 039f 98010000 		.4byte	.LASF67
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 40


 539 03a3 05       		.byte	0x5
 540 03a4 53       		.byte	0x53
 541 03a5 CA000000 		.4byte	0xca
 542 03a9 040F     		.2byte	0xf04
 543 03ab 00       		.byte	0
 544 03ac 05       		.uleb128 0x5
 545 03ad D4000000 		.4byte	0xd4
 546 03b1 06       		.uleb128 0x6
 547 03b2 AC030000 		.4byte	0x3ac
 548 03b6 07       		.uleb128 0x7
 549 03b7 CF000000 		.4byte	0xcf
 550 03bb C6030000 		.4byte	0x3c6
 551 03bf 08       		.uleb128 0x8
 552 03c0 C3000000 		.4byte	0xc3
 553 03c4 15       		.byte	0x15
 554 03c5 00       		.byte	0
 555 03c6 05       		.uleb128 0x5
 556 03c7 B6030000 		.4byte	0x3b6
 557 03cb 06       		.uleb128 0x6
 558 03cc C6030000 		.4byte	0x3c6
 559 03d0 05       		.uleb128 0x5
 560 03d1 E4000000 		.4byte	0xe4
 561 03d5 05       		.uleb128 0x5
 562 03d6 F4000000 		.4byte	0xf4
 563 03da 06       		.uleb128 0x6
 564 03db D5030000 		.4byte	0x3d5
 565 03df 05       		.uleb128 0x5
 566 03e0 F4000000 		.4byte	0xf4
 567 03e4 06       		.uleb128 0x6
 568 03e5 DF030000 		.4byte	0x3df
 569 03e9 05       		.uleb128 0x5
 570 03ea F4000000 		.4byte	0xf4
 571 03ee 06       		.uleb128 0x6
 572 03ef E9030000 		.4byte	0x3e9
 573 03f3 05       		.uleb128 0x5
 574 03f4 F4000000 		.4byte	0xf4
 575 03f8 06       		.uleb128 0x6
 576 03f9 F3030000 		.4byte	0x3f3
 577 03fd 05       		.uleb128 0x5
 578 03fe F4000000 		.4byte	0xf4
 579 0402 06       		.uleb128 0x6
 580 0403 FD030000 		.4byte	0x3fd
 581 0407 05       		.uleb128 0x5
 582 0408 14010000 		.4byte	0x114
 583 040c 06       		.uleb128 0x6
 584 040d 07040000 		.4byte	0x407
 585 0411 05       		.uleb128 0x5
 586 0412 04010000 		.4byte	0x104
 587 0416 06       		.uleb128 0x6
 588 0417 11040000 		.4byte	0x411
 589 041b 05       		.uleb128 0x5
 590 041c 04010000 		.4byte	0x104
 591 0420 06       		.uleb128 0x6
 592 0421 1B040000 		.4byte	0x41b
 593 0425 05       		.uleb128 0x5
 594 0426 B6030000 		.4byte	0x3b6
 595 042a 06       		.uleb128 0x6
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 41


 596 042b 25040000 		.4byte	0x425
 597 042f 07       		.uleb128 0x7
 598 0430 CF000000 		.4byte	0xcf
 599 0434 3F040000 		.4byte	0x43f
 600 0438 08       		.uleb128 0x8
 601 0439 C3000000 		.4byte	0xc3
 602 043d 0D       		.byte	0xd
 603 043e 00       		.byte	0
 604 043f 05       		.uleb128 0x5
 605 0440 2F040000 		.4byte	0x42f
 606 0444 06       		.uleb128 0x6
 607 0445 3F040000 		.4byte	0x43f
 608 0449 07       		.uleb128 0x7
 609 044a CF000000 		.4byte	0xcf
 610 044e 5A040000 		.4byte	0x45a
 611 0452 0C       		.uleb128 0xc
 612 0453 C3000000 		.4byte	0xc3
 613 0457 EC02     		.2byte	0x2ec
 614 0459 00       		.byte	0
 615 045a 05       		.uleb128 0x5
 616 045b 49040000 		.4byte	0x449
 617 045f 06       		.uleb128 0x6
 618 0460 5A040000 		.4byte	0x45a
 619 0464 03       		.uleb128 0x3
 620 0465 C9080000 		.4byte	.LASF68
 621 0469 05       		.byte	0x5
 622 046a 54       		.byte	0x54
 623 046b 24010000 		.4byte	0x124
 624 046f 0D       		.uleb128 0xd
 625 0470 41050000 		.4byte	.LASF69
 626 0474 06       		.byte	0x6
 627 0475 5206     		.2byte	0x652
 628 0477 64040000 		.4byte	0x464
 629 047b 02       		.uleb128 0x2
 630 047c 08       		.byte	0x8
 631 047d 04       		.byte	0x4
 632 047e FB090000 		.4byte	.LASF70
 633 0482 0E       		.uleb128 0xe
 634 0483 B8       		.byte	0xb8
 635 0484 07       		.byte	0x7
 636 0485 34       		.byte	0x34
 637 0486 93080000 		.4byte	0x893
 638 048a 0A       		.uleb128 0xa
 639 048b FF000000 		.4byte	.LASF71
 640 048f 07       		.byte	0x7
 641 0490 37       		.byte	0x37
 642 0491 B8000000 		.4byte	0xb8
 643 0495 00       		.byte	0
 644 0496 0A       		.uleb128 0xa
 645 0497 8D000000 		.4byte	.LASF72
 646 049b 07       		.byte	0x7
 647 049c 38       		.byte	0x38
 648 049d B8000000 		.4byte	0xb8
 649 04a1 04       		.byte	0x4
 650 04a2 0A       		.uleb128 0xa
 651 04a3 CE020000 		.4byte	.LASF73
 652 04a7 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 42


 653 04a8 39       		.byte	0x39
 654 04a9 B8000000 		.4byte	0xb8
 655 04ad 08       		.byte	0x8
 656 04ae 0A       		.uleb128 0xa
 657 04af 38080000 		.4byte	.LASF74
 658 04b3 07       		.byte	0x7
 659 04b4 3A       		.byte	0x3a
 660 04b5 B8000000 		.4byte	0xb8
 661 04b9 0C       		.byte	0xc
 662 04ba 0A       		.uleb128 0xa
 663 04bb 2B020000 		.4byte	.LASF75
 664 04bf 07       		.byte	0x7
 665 04c0 3B       		.byte	0x3b
 666 04c1 B8000000 		.4byte	0xb8
 667 04c5 10       		.byte	0x10
 668 04c6 0A       		.uleb128 0xa
 669 04c7 5F020000 		.4byte	.LASF76
 670 04cb 07       		.byte	0x7
 671 04cc 3C       		.byte	0x3c
 672 04cd B8000000 		.4byte	0xb8
 673 04d1 14       		.byte	0x14
 674 04d2 0A       		.uleb128 0xa
 675 04d3 38050000 		.4byte	.LASF77
 676 04d7 07       		.byte	0x7
 677 04d8 3D       		.byte	0x3d
 678 04d9 B8000000 		.4byte	0xb8
 679 04dd 18       		.byte	0x18
 680 04de 0A       		.uleb128 0xa
 681 04df 84000000 		.4byte	.LASF78
 682 04e3 07       		.byte	0x7
 683 04e4 3E       		.byte	0x3e
 684 04e5 B8000000 		.4byte	0xb8
 685 04e9 1C       		.byte	0x1c
 686 04ea 0A       		.uleb128 0xa
 687 04eb 200C0000 		.4byte	.LASF79
 688 04ef 07       		.byte	0x7
 689 04f0 3F       		.byte	0x3f
 690 04f1 B8000000 		.4byte	0xb8
 691 04f5 20       		.byte	0x20
 692 04f6 0A       		.uleb128 0xa
 693 04f7 6E070000 		.4byte	.LASF80
 694 04fb 07       		.byte	0x7
 695 04fc 40       		.byte	0x40
 696 04fd B8000000 		.4byte	0xb8
 697 0501 24       		.byte	0x24
 698 0502 0A       		.uleb128 0xa
 699 0503 5A060000 		.4byte	.LASF81
 700 0507 07       		.byte	0x7
 701 0508 43       		.byte	0x43
 702 0509 97000000 		.4byte	0x97
 703 050d 28       		.byte	0x28
 704 050e 0A       		.uleb128 0xa
 705 050f 6A000000 		.4byte	.LASF82
 706 0513 07       		.byte	0x7
 707 0514 44       		.byte	0x44
 708 0515 97000000 		.4byte	0x97
 709 0519 29       		.byte	0x29
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 43


 710 051a 0A       		.uleb128 0xa
 711 051b 160C0000 		.4byte	.LASF83
 712 051f 07       		.byte	0x7
 713 0520 45       		.byte	0x45
 714 0521 97000000 		.4byte	0x97
 715 0525 2A       		.byte	0x2a
 716 0526 0A       		.uleb128 0xa
 717 0527 60070000 		.4byte	.LASF84
 718 052b 07       		.byte	0x7
 719 052c 46       		.byte	0x46
 720 052d 97000000 		.4byte	0x97
 721 0531 2B       		.byte	0x2b
 722 0532 0A       		.uleb128 0xa
 723 0533 B0050000 		.4byte	.LASF85
 724 0537 07       		.byte	0x7
 725 0538 47       		.byte	0x47
 726 0539 97000000 		.4byte	0x97
 727 053d 2C       		.byte	0x2c
 728 053e 0A       		.uleb128 0xa
 729 053f 5B0A0000 		.4byte	.LASF86
 730 0543 07       		.byte	0x7
 731 0544 48       		.byte	0x48
 732 0545 97000000 		.4byte	0x97
 733 0549 2D       		.byte	0x2d
 734 054a 0A       		.uleb128 0xa
 735 054b 34020000 		.4byte	.LASF87
 736 054f 07       		.byte	0x7
 737 0550 49       		.byte	0x49
 738 0551 97000000 		.4byte	0x97
 739 0555 2E       		.byte	0x2e
 740 0556 0A       		.uleb128 0xa
 741 0557 6C060000 		.4byte	.LASF88
 742 055b 07       		.byte	0x7
 743 055c 4A       		.byte	0x4a
 744 055d 97000000 		.4byte	0x97
 745 0561 2F       		.byte	0x2f
 746 0562 0A       		.uleb128 0xa
 747 0563 0C0A0000 		.4byte	.LASF89
 748 0567 07       		.byte	0x7
 749 0568 4B       		.byte	0x4b
 750 0569 97000000 		.4byte	0x97
 751 056d 30       		.byte	0x30
 752 056e 0A       		.uleb128 0xa
 753 056f 10050000 		.4byte	.LASF90
 754 0573 07       		.byte	0x7
 755 0574 4E       		.byte	0x4e
 756 0575 97000000 		.4byte	0x97
 757 0579 31       		.byte	0x31
 758 057a 0A       		.uleb128 0xa
 759 057b A4000000 		.4byte	.LASF91
 760 057f 07       		.byte	0x7
 761 0580 4F       		.byte	0x4f
 762 0581 97000000 		.4byte	0x97
 763 0585 32       		.byte	0x32
 764 0586 0A       		.uleb128 0xa
 765 0587 B0040000 		.4byte	.LASF92
 766 058b 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 44


 767 058c 50       		.byte	0x50
 768 058d 97000000 		.4byte	0x97
 769 0591 33       		.byte	0x33
 770 0592 0A       		.uleb128 0xa
 771 0593 C5060000 		.4byte	.LASF93
 772 0597 07       		.byte	0x7
 773 0598 51       		.byte	0x51
 774 0599 97000000 		.4byte	0x97
 775 059d 34       		.byte	0x34
 776 059e 0A       		.uleb128 0xa
 777 059f D10A0000 		.4byte	.LASF94
 778 05a3 07       		.byte	0x7
 779 05a4 52       		.byte	0x52
 780 05a5 A2000000 		.4byte	0xa2
 781 05a9 36       		.byte	0x36
 782 05aa 0A       		.uleb128 0xa
 783 05ab 00030000 		.4byte	.LASF95
 784 05af 07       		.byte	0x7
 785 05b0 53       		.byte	0x53
 786 05b1 A2000000 		.4byte	0xa2
 787 05b5 38       		.byte	0x38
 788 05b6 0A       		.uleb128 0xa
 789 05b7 2C0B0000 		.4byte	.LASF96
 790 05bb 07       		.byte	0x7
 791 05bc 54       		.byte	0x54
 792 05bd A2000000 		.4byte	0xa2
 793 05c1 3A       		.byte	0x3a
 794 05c2 0A       		.uleb128 0xa
 795 05c3 F70B0000 		.4byte	.LASF97
 796 05c7 07       		.byte	0x7
 797 05c8 55       		.byte	0x55
 798 05c9 97000000 		.4byte	0x97
 799 05cd 3C       		.byte	0x3c
 800 05ce 0A       		.uleb128 0xa
 801 05cf 39030000 		.4byte	.LASF98
 802 05d3 07       		.byte	0x7
 803 05d4 56       		.byte	0x56
 804 05d5 97000000 		.4byte	0x97
 805 05d9 3D       		.byte	0x3d
 806 05da 0A       		.uleb128 0xa
 807 05db 08090000 		.4byte	.LASF99
 808 05df 07       		.byte	0x7
 809 05e0 57       		.byte	0x57
 810 05e1 97000000 		.4byte	0x97
 811 05e5 3E       		.byte	0x3e
 812 05e6 0A       		.uleb128 0xa
 813 05e7 78000000 		.4byte	.LASF100
 814 05eb 07       		.byte	0x7
 815 05ec 58       		.byte	0x58
 816 05ed 97000000 		.4byte	0x97
 817 05f1 3F       		.byte	0x3f
 818 05f2 0A       		.uleb128 0xa
 819 05f3 79070000 		.4byte	.LASF101
 820 05f7 07       		.byte	0x7
 821 05f8 59       		.byte	0x59
 822 05f9 97000000 		.4byte	0x97
 823 05fd 40       		.byte	0x40
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 45


 824 05fe 0A       		.uleb128 0xa
 825 05ff B7030000 		.4byte	.LASF102
 826 0603 07       		.byte	0x7
 827 0604 5A       		.byte	0x5a
 828 0605 97000000 		.4byte	0x97
 829 0609 41       		.byte	0x41
 830 060a 0A       		.uleb128 0xa
 831 060b F8050000 		.4byte	.LASF103
 832 060f 07       		.byte	0x7
 833 0610 5B       		.byte	0x5b
 834 0611 97000000 		.4byte	0x97
 835 0615 42       		.byte	0x42
 836 0616 0A       		.uleb128 0xa
 837 0617 55070000 		.4byte	.LASF104
 838 061b 07       		.byte	0x7
 839 061c 5C       		.byte	0x5c
 840 061d 97000000 		.4byte	0x97
 841 0621 43       		.byte	0x43
 842 0622 0A       		.uleb128 0xa
 843 0623 D7020000 		.4byte	.LASF105
 844 0627 07       		.byte	0x7
 845 0628 5D       		.byte	0x5d
 846 0629 97000000 		.4byte	0x97
 847 062d 44       		.byte	0x44
 848 062e 0A       		.uleb128 0xa
 849 062f 4B090000 		.4byte	.LASF106
 850 0633 07       		.byte	0x7
 851 0634 5E       		.byte	0x5e
 852 0635 B8000000 		.4byte	0xb8
 853 0639 48       		.byte	0x48
 854 063a 0A       		.uleb128 0xa
 855 063b B5020000 		.4byte	.LASF107
 856 063f 07       		.byte	0x7
 857 0640 5F       		.byte	0x5f
 858 0641 B8000000 		.4byte	0xb8
 859 0645 4C       		.byte	0x4c
 860 0646 0A       		.uleb128 0xa
 861 0647 770C0000 		.4byte	.LASF108
 862 064b 07       		.byte	0x7
 863 064c 60       		.byte	0x60
 864 064d 97000000 		.4byte	0x97
 865 0651 50       		.byte	0x50
 866 0652 0A       		.uleb128 0xa
 867 0653 7C010000 		.4byte	.LASF109
 868 0657 07       		.byte	0x7
 869 0658 61       		.byte	0x61
 870 0659 97000000 		.4byte	0x97
 871 065d 51       		.byte	0x51
 872 065e 0A       		.uleb128 0xa
 873 065f 410B0000 		.4byte	.LASF110
 874 0663 07       		.byte	0x7
 875 0664 62       		.byte	0x62
 876 0665 97000000 		.4byte	0x97
 877 0669 52       		.byte	0x52
 878 066a 0A       		.uleb128 0xa
 879 066b 650C0000 		.4byte	.LASF111
 880 066f 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 46


 881 0670 63       		.byte	0x63
 882 0671 97000000 		.4byte	0x97
 883 0675 53       		.byte	0x53
 884 0676 0A       		.uleb128 0xa
 885 0677 20090000 		.4byte	.LASF112
 886 067b 07       		.byte	0x7
 887 067c 64       		.byte	0x64
 888 067d 97000000 		.4byte	0x97
 889 0681 54       		.byte	0x54
 890 0682 0A       		.uleb128 0xa
 891 0683 070B0000 		.4byte	.LASF113
 892 0687 07       		.byte	0x7
 893 0688 65       		.byte	0x65
 894 0689 97000000 		.4byte	0x97
 895 068d 55       		.byte	0x55
 896 068e 0A       		.uleb128 0xa
 897 068f 850A0000 		.4byte	.LASF114
 898 0693 07       		.byte	0x7
 899 0694 66       		.byte	0x66
 900 0695 97000000 		.4byte	0x97
 901 0699 56       		.byte	0x56
 902 069a 0A       		.uleb128 0xa
 903 069b 4A050000 		.4byte	.LASF115
 904 069f 07       		.byte	0x7
 905 06a0 67       		.byte	0x67
 906 06a1 97000000 		.4byte	0x97
 907 06a5 57       		.byte	0x57
 908 06a6 0A       		.uleb128 0xa
 909 06a7 2F000000 		.4byte	.LASF116
 910 06ab 07       		.byte	0x7
 911 06ac 68       		.byte	0x68
 912 06ad 97000000 		.4byte	0x97
 913 06b1 58       		.byte	0x58
 914 06b2 0A       		.uleb128 0xa
 915 06b3 8F080000 		.4byte	.LASF117
 916 06b7 07       		.byte	0x7
 917 06b8 69       		.byte	0x69
 918 06b9 97000000 		.4byte	0x97
 919 06bd 59       		.byte	0x59
 920 06be 0A       		.uleb128 0xa
 921 06bf A3060000 		.4byte	.LASF118
 922 06c3 07       		.byte	0x7
 923 06c4 6E       		.byte	0x6e
 924 06c5 AD000000 		.4byte	0xad
 925 06c9 5A       		.byte	0x5a
 926 06ca 0A       		.uleb128 0xa
 927 06cb B00A0000 		.4byte	.LASF119
 928 06cf 07       		.byte	0x7
 929 06d0 6F       		.byte	0x6f
 930 06d1 AD000000 		.4byte	0xad
 931 06d5 5C       		.byte	0x5c
 932 06d6 0A       		.uleb128 0xa
 933 06d7 09010000 		.4byte	.LASF120
 934 06db 07       		.byte	0x7
 935 06dc 70       		.byte	0x70
 936 06dd 97000000 		.4byte	0x97
 937 06e1 5E       		.byte	0x5e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 47


 938 06e2 0A       		.uleb128 0xa
 939 06e3 96030000 		.4byte	.LASF121
 940 06e7 07       		.byte	0x7
 941 06e8 71       		.byte	0x71
 942 06e9 97000000 		.4byte	0x97
 943 06ed 5F       		.byte	0x5f
 944 06ee 0A       		.uleb128 0xa
 945 06ef 2E070000 		.4byte	.LASF122
 946 06f3 07       		.byte	0x7
 947 06f4 72       		.byte	0x72
 948 06f5 97000000 		.4byte	0x97
 949 06f9 60       		.byte	0x60
 950 06fa 0A       		.uleb128 0xa
 951 06fb AA070000 		.4byte	.LASF123
 952 06ff 07       		.byte	0x7
 953 0700 73       		.byte	0x73
 954 0701 B8000000 		.4byte	0xb8
 955 0705 64       		.byte	0x64
 956 0706 0A       		.uleb128 0xa
 957 0707 56010000 		.4byte	.LASF124
 958 070b 07       		.byte	0x7
 959 070c 76       		.byte	0x76
 960 070d AD000000 		.4byte	0xad
 961 0711 68       		.byte	0x68
 962 0712 0A       		.uleb128 0xa
 963 0713 D9040000 		.4byte	.LASF125
 964 0717 07       		.byte	0x7
 965 0718 77       		.byte	0x77
 966 0719 AD000000 		.4byte	0xad
 967 071d 6A       		.byte	0x6a
 968 071e 0A       		.uleb128 0xa
 969 071f 5E050000 		.4byte	.LASF126
 970 0723 07       		.byte	0x7
 971 0724 78       		.byte	0x78
 972 0725 AD000000 		.4byte	0xad
 973 0729 6C       		.byte	0x6c
 974 072a 0A       		.uleb128 0xa
 975 072b A3050000 		.4byte	.LASF127
 976 072f 07       		.byte	0x7
 977 0730 79       		.byte	0x79
 978 0731 AD000000 		.4byte	0xad
 979 0735 6E       		.byte	0x6e
 980 0736 0A       		.uleb128 0xa
 981 0737 D5080000 		.4byte	.LASF128
 982 073b 07       		.byte	0x7
 983 073c 7B       		.byte	0x7b
 984 073d 97000000 		.4byte	0x97
 985 0741 70       		.byte	0x70
 986 0742 0A       		.uleb128 0xa
 987 0743 E8010000 		.4byte	.LASF129
 988 0747 07       		.byte	0x7
 989 0748 7C       		.byte	0x7c
 990 0749 97000000 		.4byte	0x97
 991 074d 71       		.byte	0x71
 992 074e 0A       		.uleb128 0xa
 993 074f 3A0C0000 		.4byte	.LASF130
 994 0753 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 48


 995 0754 7D       		.byte	0x7d
 996 0755 97000000 		.4byte	0x97
 997 0759 72       		.byte	0x72
 998 075a 0A       		.uleb128 0xa
 999 075b E3060000 		.4byte	.LASF131
 1000 075f 07       		.byte	0x7
 1001 0760 7E       		.byte	0x7e
 1002 0761 97000000 		.4byte	0x97
 1003 0765 73       		.byte	0x73
 1004 0766 0A       		.uleb128 0xa
 1005 0767 30090000 		.4byte	.LASF132
 1006 076b 07       		.byte	0x7
 1007 076c 80       		.byte	0x80
 1008 076d AD000000 		.4byte	0xad
 1009 0771 74       		.byte	0x74
 1010 0772 0A       		.uleb128 0xa
 1011 0773 400A0000 		.4byte	.LASF133
 1012 0777 07       		.byte	0x7
 1013 0778 81       		.byte	0x81
 1014 0779 AD000000 		.4byte	0xad
 1015 077d 76       		.byte	0x76
 1016 077e 0A       		.uleb128 0xa
 1017 077f 12030000 		.4byte	.LASF134
 1018 0783 07       		.byte	0x7
 1019 0784 82       		.byte	0x82
 1020 0785 AD000000 		.4byte	0xad
 1021 0789 78       		.byte	0x78
 1022 078a 0A       		.uleb128 0xa
 1023 078b C8000000 		.4byte	.LASF135
 1024 078f 07       		.byte	0x7
 1025 0790 83       		.byte	0x83
 1026 0791 AD000000 		.4byte	0xad
 1027 0795 7A       		.byte	0x7a
 1028 0796 0A       		.uleb128 0xa
 1029 0797 A30B0000 		.4byte	.LASF136
 1030 079b 07       		.byte	0x7
 1031 079c 86       		.byte	0x86
 1032 079d 97000000 		.4byte	0x97
 1033 07a1 7C       		.byte	0x7c
 1034 07a2 0A       		.uleb128 0xa
 1035 07a3 F60A0000 		.4byte	.LASF137
 1036 07a7 07       		.byte	0x7
 1037 07a8 87       		.byte	0x87
 1038 07a9 97000000 		.4byte	0x97
 1039 07ad 7D       		.byte	0x7d
 1040 07ae 0A       		.uleb128 0xa
 1041 07af 43000000 		.4byte	.LASF138
 1042 07b3 07       		.byte	0x7
 1043 07b4 88       		.byte	0x88
 1044 07b5 97000000 		.4byte	0x97
 1045 07b9 7E       		.byte	0x7e
 1046 07ba 0A       		.uleb128 0xa
 1047 07bb 82030000 		.4byte	.LASF139
 1048 07bf 07       		.byte	0x7
 1049 07c0 89       		.byte	0x89
 1050 07c1 97000000 		.4byte	0x97
 1051 07c5 7F       		.byte	0x7f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 49


 1052 07c6 0A       		.uleb128 0xa
 1053 07c7 9C040000 		.4byte	.LASF140
 1054 07cb 07       		.byte	0x7
 1055 07cc 8A       		.byte	0x8a
 1056 07cd 97000000 		.4byte	0x97
 1057 07d1 80       		.byte	0x80
 1058 07d2 0A       		.uleb128 0xa
 1059 07d3 2F060000 		.4byte	.LASF141
 1060 07d7 07       		.byte	0x7
 1061 07d8 8D       		.byte	0x8d
 1062 07d9 B8000000 		.4byte	0xb8
 1063 07dd 84       		.byte	0x84
 1064 07de 0A       		.uleb128 0xa
 1065 07df DD000000 		.4byte	.LASF142
 1066 07e3 07       		.byte	0x7
 1067 07e4 8E       		.byte	0x8e
 1068 07e5 B8000000 		.4byte	0xb8
 1069 07e9 88       		.byte	0x88
 1070 07ea 0A       		.uleb128 0xa
 1071 07eb 8E0B0000 		.4byte	.LASF143
 1072 07ef 07       		.byte	0x7
 1073 07f0 8F       		.byte	0x8f
 1074 07f1 B8000000 		.4byte	0xb8
 1075 07f5 8C       		.byte	0x8c
 1076 07f6 0A       		.uleb128 0xa
 1077 07f7 78060000 		.4byte	.LASF144
 1078 07fb 07       		.byte	0x7
 1079 07fc 90       		.byte	0x90
 1080 07fd B8000000 		.4byte	0xb8
 1081 0801 90       		.byte	0x90
 1082 0802 0A       		.uleb128 0xa
 1083 0803 87040000 		.4byte	.LASF145
 1084 0807 07       		.byte	0x7
 1085 0808 91       		.byte	0x91
 1086 0809 B8000000 		.4byte	0xb8
 1087 080d 94       		.byte	0x94
 1088 080e 0A       		.uleb128 0xa
 1089 080f 19060000 		.4byte	.LASF146
 1090 0813 07       		.byte	0x7
 1091 0814 92       		.byte	0x92
 1092 0815 B8000000 		.4byte	0xb8
 1093 0819 98       		.byte	0x98
 1094 081a 0A       		.uleb128 0xa
 1095 081b D20B0000 		.4byte	.LASF147
 1096 081f 07       		.byte	0x7
 1097 0820 93       		.byte	0x93
 1098 0821 B8000000 		.4byte	0xb8
 1099 0825 9C       		.byte	0x9c
 1100 0826 0A       		.uleb128 0xa
 1101 0827 66010000 		.4byte	.LASF148
 1102 082b 07       		.byte	0x7
 1103 082c 94       		.byte	0x94
 1104 082d B8000000 		.4byte	0xb8
 1105 0831 A0       		.byte	0xa0
 1106 0832 0A       		.uleb128 0xa
 1107 0833 3F020000 		.4byte	.LASF149
 1108 0837 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 50


 1109 0838 95       		.byte	0x95
 1110 0839 AD000000 		.4byte	0xad
 1111 083d A4       		.byte	0xa4
 1112 083e 0A       		.uleb128 0xa
 1113 083f 04060000 		.4byte	.LASF150
 1114 0843 07       		.byte	0x7
 1115 0844 96       		.byte	0x96
 1116 0845 AD000000 		.4byte	0xad
 1117 0849 A6       		.byte	0xa6
 1118 084a 0A       		.uleb128 0xa
 1119 084b F3070000 		.4byte	.LASF151
 1120 084f 07       		.byte	0x7
 1121 0850 97       		.byte	0x97
 1122 0851 AD000000 		.4byte	0xad
 1123 0855 A8       		.byte	0xa8
 1124 0856 0A       		.uleb128 0xa
 1125 0857 180A0000 		.4byte	.LASF152
 1126 085b 07       		.byte	0x7
 1127 085c 98       		.byte	0x98
 1128 085d AD000000 		.4byte	0xad
 1129 0861 AA       		.byte	0xaa
 1130 0862 0A       		.uleb128 0xa
 1131 0863 6D050000 		.4byte	.LASF153
 1132 0867 07       		.byte	0x7
 1133 0868 99       		.byte	0x99
 1134 0869 AD000000 		.4byte	0xad
 1135 086d AC       		.byte	0xac
 1136 086e 0A       		.uleb128 0xa
 1137 086f FA060000 		.4byte	.LASF154
 1138 0873 07       		.byte	0x7
 1139 0874 9A       		.byte	0x9a
 1140 0875 AD000000 		.4byte	0xad
 1141 0879 AE       		.byte	0xae
 1142 087a 0A       		.uleb128 0xa
 1143 087b B90A0000 		.4byte	.LASF155
 1144 087f 07       		.byte	0x7
 1145 0880 9D       		.byte	0x9d
 1146 0881 AD000000 		.4byte	0xad
 1147 0885 B0       		.byte	0xb0
 1148 0886 0A       		.uleb128 0xa
 1149 0887 56000000 		.4byte	.LASF156
 1150 088b 07       		.byte	0x7
 1151 088c 9E       		.byte	0x9e
 1152 088d B8000000 		.4byte	0xb8
 1153 0891 B4       		.byte	0xb4
 1154 0892 00       		.byte	0
 1155 0893 03       		.uleb128 0x3
 1156 0894 D1050000 		.4byte	.LASF157
 1157 0898 07       		.byte	0x7
 1158 0899 9F       		.byte	0x9f
 1159 089a 82040000 		.4byte	0x482
 1160 089e 0D       		.uleb128 0xd
 1161 089f D2040000 		.4byte	.LASF158
 1162 08a3 08       		.byte	0x8
 1163 08a4 F601     		.2byte	0x1f6
 1164 08a6 AA080000 		.4byte	0x8aa
 1165 08aa 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 51


 1166 08ab 01       		.byte	0x1
 1167 08ac 08       		.byte	0x8
 1168 08ad 070A0000 		.4byte	.LASF159
 1169 08b1 02       		.uleb128 0x2
 1170 08b2 04       		.byte	0x4
 1171 08b3 04       		.byte	0x4
 1172 08b4 A4070000 		.4byte	.LASF160
 1173 08b8 02       		.uleb128 0x2
 1174 08b9 08       		.byte	0x8
 1175 08ba 04       		.byte	0x4
 1176 08bb 0B030000 		.4byte	.LASF161
 1177 08bf 0F       		.uleb128 0xf
 1178 08c0 01       		.byte	0x1
 1179 08c1 2C000000 		.4byte	0x2c
 1180 08c5 02       		.byte	0x2
 1181 08c6 1304     		.2byte	0x413
 1182 08c8 E5080000 		.4byte	0x8e5
 1183 08cc 10       		.uleb128 0x10
 1184 08cd 77020000 		.4byte	.LASF162
 1185 08d1 00       		.byte	0
 1186 08d2 10       		.uleb128 0x10
 1187 08d3 40080000 		.4byte	.LASF163
 1188 08d7 01       		.byte	0x1
 1189 08d8 10       		.uleb128 0x10
 1190 08d9 E8020000 		.4byte	.LASF164
 1191 08dd 02       		.byte	0x2
 1192 08de 10       		.uleb128 0x10
 1193 08df B80B0000 		.4byte	.LASF165
 1194 08e3 03       		.byte	0x3
 1195 08e4 00       		.byte	0
 1196 08e5 0D       		.uleb128 0xd
 1197 08e6 FD010000 		.4byte	.LASF166
 1198 08ea 02       		.byte	0x2
 1199 08eb 1804     		.2byte	0x418
 1200 08ed BF080000 		.4byte	0x8bf
 1201 08f1 0F       		.uleb128 0xf
 1202 08f2 01       		.byte	0x1
 1203 08f3 2C000000 		.4byte	0x2c
 1204 08f7 02       		.byte	0x2
 1205 08f8 9404     		.2byte	0x494
 1206 08fa 17090000 		.4byte	0x917
 1207 08fe 10       		.uleb128 0x10
 1208 08ff 8D060000 		.4byte	.LASF167
 1209 0903 00       		.byte	0
 1210 0904 10       		.uleb128 0x10
 1211 0905 41010000 		.4byte	.LASF168
 1212 0909 01       		.byte	0x1
 1213 090a 10       		.uleb128 0x10
 1214 090b 75080000 		.4byte	.LASF169
 1215 090f 02       		.byte	0x2
 1216 0910 10       		.uleb128 0x10
 1217 0911 700B0000 		.4byte	.LASF170
 1218 0915 04       		.byte	0x4
 1219 0916 00       		.byte	0
 1220 0917 11       		.uleb128 0x11
 1221 0918 78       		.byte	0x78
 1222 0919 02       		.byte	0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 52


 1223 091a 0205     		.2byte	0x502
 1224 091c E4090000 		.4byte	0x9e4
 1225 0920 12       		.uleb128 0x12
 1226 0921 800A0000 		.4byte	.LASF171
 1227 0925 02       		.byte	0x2
 1228 0926 0405     		.2byte	0x504
 1229 0928 B8000000 		.4byte	0xb8
 1230 092c 00       		.byte	0
 1231 092d 12       		.uleb128 0x12
 1232 092e 510B0000 		.4byte	.LASF172
 1233 0932 02       		.byte	0x2
 1234 0933 0505     		.2byte	0x505
 1235 0935 B8000000 		.4byte	0xb8
 1236 0939 04       		.byte	0x4
 1237 093a 12       		.uleb128 0x12
 1238 093b 62030000 		.4byte	.LASF173
 1239 093f 02       		.byte	0x2
 1240 0940 0605     		.2byte	0x506
 1241 0942 B8000000 		.4byte	0xb8
 1242 0946 08       		.byte	0x8
 1243 0947 12       		.uleb128 0x12
 1244 0948 D6060000 		.4byte	.LASF174
 1245 094c 02       		.byte	0x2
 1246 094d 0705     		.2byte	0x507
 1247 094f B8000000 		.4byte	0xb8
 1248 0953 0C       		.byte	0xc
 1249 0954 12       		.uleb128 0x12
 1250 0955 7B050000 		.4byte	.LASF175
 1251 0959 02       		.byte	0x2
 1252 095a 0805     		.2byte	0x508
 1253 095c B8000000 		.4byte	0xb8
 1254 0960 10       		.byte	0x10
 1255 0961 12       		.uleb128 0x12
 1256 0962 220B0000 		.4byte	.LASF176
 1257 0966 02       		.byte	0x2
 1258 0967 0905     		.2byte	0x509
 1259 0969 E5080000 		.4byte	0x8e5
 1260 096d 14       		.byte	0x14
 1261 096e 12       		.uleb128 0x12
 1262 096f 31080000 		.4byte	.LASF177
 1263 0973 02       		.byte	0x2
 1264 0974 0A05     		.2byte	0x50a
 1265 0976 B8000000 		.4byte	0xb8
 1266 097a 18       		.byte	0x18
 1267 097b 12       		.uleb128 0x12
 1268 097c E1050000 		.4byte	.LASF178
 1269 0980 02       		.byte	0x2
 1270 0981 0B05     		.2byte	0x50b
 1271 0983 E4090000 		.4byte	0x9e4
 1272 0987 1C       		.byte	0x1c
 1273 0988 12       		.uleb128 0x12
 1274 0989 B7080000 		.4byte	.LASF179
 1275 098d 02       		.byte	0x2
 1276 098e 0C05     		.2byte	0x50c
 1277 0990 B8000000 		.4byte	0xb8
 1278 0994 5C       		.byte	0x5c
 1279 0995 12       		.uleb128 0x12
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 53


 1280 0996 BC000000 		.4byte	.LASF180
 1281 099a 02       		.byte	0x2
 1282 099b 0D05     		.2byte	0x50d
 1283 099d B8000000 		.4byte	0xb8
 1284 09a1 60       		.byte	0x60
 1285 09a2 12       		.uleb128 0x12
 1286 09a3 69020000 		.4byte	.LASF181
 1287 09a7 02       		.byte	0x2
 1288 09a8 0E05     		.2byte	0x50e
 1289 09aa B8000000 		.4byte	0xb8
 1290 09ae 64       		.byte	0x64
 1291 09af 12       		.uleb128 0x12
 1292 09b0 AD080000 		.4byte	.LASF182
 1293 09b4 02       		.byte	0x2
 1294 09b5 0F05     		.2byte	0x50f
 1295 09b7 B8000000 		.4byte	0xb8
 1296 09bb 68       		.byte	0x68
 1297 09bc 12       		.uleb128 0x12
 1298 09bd 060C0000 		.4byte	.LASF183
 1299 09c1 02       		.byte	0x2
 1300 09c2 1005     		.2byte	0x510
 1301 09c4 B8000000 		.4byte	0xb8
 1302 09c8 6C       		.byte	0x6c
 1303 09c9 12       		.uleb128 0x12
 1304 09ca 08070000 		.4byte	.LASF184
 1305 09ce 02       		.byte	0x2
 1306 09cf 1105     		.2byte	0x511
 1307 09d1 F4090000 		.4byte	0x9f4
 1308 09d5 70       		.byte	0x70
 1309 09d6 12       		.uleb128 0x12
 1310 09d7 5D090000 		.4byte	.LASF185
 1311 09db 02       		.byte	0x2
 1312 09dc 1205     		.2byte	0x512
 1313 09de B8000000 		.4byte	0xb8
 1314 09e2 74       		.byte	0x74
 1315 09e3 00       		.byte	0
 1316 09e4 07       		.uleb128 0x7
 1317 09e5 B8000000 		.4byte	0xb8
 1318 09e9 F4090000 		.4byte	0x9f4
 1319 09ed 08       		.uleb128 0x8
 1320 09ee C3000000 		.4byte	0xc3
 1321 09f2 0F       		.byte	0xf
 1322 09f3 00       		.byte	0
 1323 09f4 02       		.uleb128 0x2
 1324 09f5 01       		.byte	0x1
 1325 09f6 02       		.byte	0x2
 1326 09f7 59080000 		.4byte	.LASF186
 1327 09fb 0D       		.uleb128 0xd
 1328 09fc BA010000 		.4byte	.LASF187
 1329 0a00 02       		.byte	0x2
 1330 0a01 1305     		.2byte	0x513
 1331 0a03 17090000 		.4byte	0x917
 1332 0a07 0E       		.uleb128 0xe
 1333 0a08 14       		.byte	0x14
 1334 0a09 09       		.byte	0x9
 1335 0a0a 3B       		.byte	0x3b
 1336 0a0b 4C0A0000 		.4byte	0xa4c
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 54


 1337 0a0f 0A       		.uleb128 0xa
 1338 0a10 EC050000 		.4byte	.LASF188
 1339 0a14 09       		.byte	0x9
 1340 0a15 3D       		.byte	0x3d
 1341 0a16 B8000000 		.4byte	0xb8
 1342 0a1a 00       		.byte	0
 1343 0a1b 0A       		.uleb128 0xa
 1344 0a1c C5050000 		.4byte	.LASF189
 1345 0a20 09       		.byte	0x9
 1346 0a21 3E       		.byte	0x3e
 1347 0a22 B8000000 		.4byte	0xb8
 1348 0a26 04       		.byte	0x4
 1349 0a27 0A       		.uleb128 0xa
 1350 0a28 C7030000 		.4byte	.LASF190
 1351 0a2c 09       		.byte	0x9
 1352 0a2d 3F       		.byte	0x3f
 1353 0a2e 4C0A0000 		.4byte	0xa4c
 1354 0a32 08       		.byte	0x8
 1355 0a33 0A       		.uleb128 0xa
 1356 0a34 AE060000 		.4byte	.LASF191
 1357 0a38 09       		.byte	0x9
 1358 0a39 40       		.byte	0x40
 1359 0a3a B8000000 		.4byte	0xb8
 1360 0a3e 0C       		.byte	0xc
 1361 0a3f 0A       		.uleb128 0xa
 1362 0a40 20020000 		.4byte	.LASF192
 1363 0a44 09       		.byte	0x9
 1364 0a45 45       		.byte	0x45
 1365 0a46 B8000000 		.4byte	0xb8
 1366 0a4a 10       		.byte	0x10
 1367 0a4b 00       		.byte	0
 1368 0a4c 13       		.uleb128 0x13
 1369 0a4d 04       		.byte	0x4
 1370 0a4e 520A0000 		.4byte	0xa52
 1371 0a52 06       		.uleb128 0x6
 1372 0a53 FB090000 		.4byte	0x9fb
 1373 0a57 03       		.uleb128 0x3
 1374 0a58 44030000 		.4byte	.LASF193
 1375 0a5c 09       		.byte	0x9
 1376 0a5d 48       		.byte	0x48
 1377 0a5e 070A0000 		.4byte	0xa07
 1378 0a62 14       		.uleb128 0x14
 1379 0a63 BB070000 		.4byte	.LASF201
 1380 0a67 02       		.byte	0x2
 1381 0a68 1206     		.2byte	0x612
 1382 0a6a B8000000 		.4byte	0xb8
 1383 0a6e 03       		.byte	0x3
 1384 0a6f 800A0000 		.4byte	0xa80
 1385 0a73 15       		.uleb128 0x15
 1386 0a74 67060000 		.4byte	.LASF194
 1387 0a78 02       		.byte	0x2
 1388 0a79 1206     		.2byte	0x612
 1389 0a7b 800A0000 		.4byte	0xa80
 1390 0a7f 00       		.byte	0
 1391 0a80 13       		.uleb128 0x13
 1392 0a81 04       		.byte	0x4
 1393 0a82 860A0000 		.4byte	0xa86
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 55


 1394 0a86 06       		.uleb128 0x6
 1395 0a87 6F040000 		.4byte	0x46f
 1396 0a8b 16       		.uleb128 0x16
 1397 0a8c 00000000 		.4byte	.LASF202
 1398 0a90 02       		.byte	0x2
 1399 0a91 2F06     		.2byte	0x62f
 1400 0a93 03       		.byte	0x3
 1401 0a94 B10A0000 		.4byte	0xab1
 1402 0a98 15       		.uleb128 0x15
 1403 0a99 67060000 		.4byte	.LASF194
 1404 0a9d 02       		.byte	0x2
 1405 0a9e 2F06     		.2byte	0x62f
 1406 0aa0 B10A0000 		.4byte	0xab1
 1407 0aa4 15       		.uleb128 0x15
 1408 0aa5 B7080000 		.4byte	.LASF179
 1409 0aa9 02       		.byte	0x2
 1410 0aaa 2F06     		.2byte	0x62f
 1411 0aac B8000000 		.4byte	0xb8
 1412 0ab0 00       		.byte	0
 1413 0ab1 13       		.uleb128 0x13
 1414 0ab2 04       		.byte	0x4
 1415 0ab3 6F040000 		.4byte	0x46f
 1416 0ab7 17       		.uleb128 0x17
 1417 0ab8 6D080000 		.4byte	.LASF203
 1418 0abc 01       		.byte	0x1
 1419 0abd 40       		.byte	0x40
 1420 0abe 00000000 		.4byte	.LFB184
 1421 0ac2 30000000 		.4byte	.LFE184-.LFB184
 1422 0ac6 01       		.uleb128 0x1
 1423 0ac7 9C       		.byte	0x9c
 1424 0ac8 4A0B0000 		.4byte	0xb4a
 1425 0acc 18       		.uleb128 0x18
 1426 0acd 56030000 		.4byte	.LASF204
 1427 0ad1 01       		.byte	0x1
 1428 0ad2 42       		.byte	0x42
 1429 0ad3 B8000000 		.4byte	0xb8
 1430 0ad7 19       		.uleb128 0x19
 1431 0ad8 620A0000 		.4byte	0xa62
 1432 0adc 02000000 		.4byte	.LBB8
 1433 0ae0 08000000 		.4byte	.LBE8-.LBB8
 1434 0ae4 01       		.byte	0x1
 1435 0ae5 45       		.byte	0x45
 1436 0ae6 F40A0000 		.4byte	0xaf4
 1437 0aea 1A       		.uleb128 0x1a
 1438 0aeb 730A0000 		.4byte	0xa73
 1439 0aef 00000000 		.4byte	.LLST0
 1440 0af3 00       		.byte	0
 1441 0af4 19       		.uleb128 0x19
 1442 0af5 8B0A0000 		.4byte	0xa8b
 1443 0af9 0A000000 		.4byte	.LBB10
 1444 0afd 16000000 		.4byte	.LBE10-.LBB10
 1445 0b01 01       		.byte	0x1
 1446 0b02 55       		.byte	0x55
 1447 0b03 300B0000 		.4byte	0xb30
 1448 0b07 1B       		.uleb128 0x1b
 1449 0b08 A40A0000 		.4byte	0xaa4
 1450 0b0c 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 56


 1451 0b0d 980A0000 		.4byte	0xa98
 1452 0b11 18000000 		.4byte	.LLST1
 1453 0b15 1C       		.uleb128 0x1c
 1454 0b16 16000000 		.4byte	.LVL2
 1455 0b1a 920B0000 		.4byte	0xb92
 1456 0b1e 1D       		.uleb128 0x1d
 1457 0b1f 01       		.uleb128 0x1
 1458 0b20 50       		.byte	0x50
 1459 0b21 05       		.uleb128 0x5
 1460 0b22 03       		.byte	0x3
 1461 0b23 00000000 		.4byte	.LC0
 1462 0b27 1D       		.uleb128 0x1d
 1463 0b28 01       		.uleb128 0x1
 1464 0b29 51       		.byte	0x51
 1465 0b2a 03       		.uleb128 0x3
 1466 0b2b 0A       		.byte	0xa
 1467 0b2c 3106     		.2byte	0x631
 1468 0b2e 00       		.byte	0
 1469 0b2f 00       		.byte	0
 1470 0b30 1E       		.uleb128 0x1e
 1471 0b31 620A0000 		.4byte	0xa62
 1472 0b35 20000000 		.4byte	.LBB12
 1473 0b39 02000000 		.4byte	.LBE12-.LBB12
 1474 0b3d 01       		.byte	0x1
 1475 0b3e 57       		.byte	0x57
 1476 0b3f 1A       		.uleb128 0x1a
 1477 0b40 730A0000 		.4byte	0xa73
 1478 0b44 30000000 		.4byte	.LLST2
 1479 0b48 00       		.byte	0
 1480 0b49 00       		.byte	0
 1481 0b4a 1F       		.uleb128 0x1f
 1482 0b4b DF070000 		.4byte	.LASF195
 1483 0b4f 07       		.byte	0x7
 1484 0b50 A7       		.byte	0xa7
 1485 0b51 550B0000 		.4byte	0xb55
 1486 0b55 13       		.uleb128 0x13
 1487 0b56 04       		.byte	0x4
 1488 0b57 5B0B0000 		.4byte	0xb5b
 1489 0b5b 06       		.uleb128 0x6
 1490 0b5c 93080000 		.4byte	0x893
 1491 0b60 20       		.uleb128 0x20
 1492 0b61 18010000 		.4byte	.LASF196
 1493 0b65 09       		.byte	0x9
 1494 0b66 6001     		.2byte	0x160
 1495 0b68 B8000000 		.4byte	0xb8
 1496 0b6c 07       		.uleb128 0x7
 1497 0b6d 7C0B0000 		.4byte	0xb7c
 1498 0b71 7C0B0000 		.4byte	0xb7c
 1499 0b75 08       		.uleb128 0x8
 1500 0b76 C3000000 		.4byte	0xc3
 1501 0b7a 00       		.byte	0
 1502 0b7b 00       		.byte	0
 1503 0b7c 06       		.uleb128 0x6
 1504 0b7d 570A0000 		.4byte	0xa57
 1505 0b81 20       		.uleb128 0x20
 1506 0b82 260A0000 		.4byte	.LASF197
 1507 0b86 09       		.byte	0x9
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 57


 1508 0b87 6401     		.2byte	0x164
 1509 0b89 8D0B0000 		.4byte	0xb8d
 1510 0b8d 06       		.uleb128 0x6
 1511 0b8e 6C0B0000 		.4byte	0xb6c
 1512 0b92 21       		.uleb128 0x21
 1513 0b93 990A0000 		.4byte	.LASF205
 1514 0b97 990A0000 		.4byte	.LASF205
 1515 0b9b 08       		.byte	0x8
 1516 0b9c 9203     		.2byte	0x392
 1517 0b9e 00       		.byte	0
 1518              		.section	.debug_abbrev,"",%progbits
 1519              	.Ldebug_abbrev0:
 1520 0000 01       		.uleb128 0x1
 1521 0001 11       		.uleb128 0x11
 1522 0002 01       		.byte	0x1
 1523 0003 25       		.uleb128 0x25
 1524 0004 0E       		.uleb128 0xe
 1525 0005 13       		.uleb128 0x13
 1526 0006 0B       		.uleb128 0xb
 1527 0007 03       		.uleb128 0x3
 1528 0008 0E       		.uleb128 0xe
 1529 0009 1B       		.uleb128 0x1b
 1530 000a 0E       		.uleb128 0xe
 1531 000b 55       		.uleb128 0x55
 1532 000c 17       		.uleb128 0x17
 1533 000d 11       		.uleb128 0x11
 1534 000e 01       		.uleb128 0x1
 1535 000f 10       		.uleb128 0x10
 1536 0010 17       		.uleb128 0x17
 1537 0011 00       		.byte	0
 1538 0012 00       		.byte	0
 1539 0013 02       		.uleb128 0x2
 1540 0014 24       		.uleb128 0x24
 1541 0015 00       		.byte	0
 1542 0016 0B       		.uleb128 0xb
 1543 0017 0B       		.uleb128 0xb
 1544 0018 3E       		.uleb128 0x3e
 1545 0019 0B       		.uleb128 0xb
 1546 001a 03       		.uleb128 0x3
 1547 001b 0E       		.uleb128 0xe
 1548 001c 00       		.byte	0
 1549 001d 00       		.byte	0
 1550 001e 03       		.uleb128 0x3
 1551 001f 16       		.uleb128 0x16
 1552 0020 00       		.byte	0
 1553 0021 03       		.uleb128 0x3
 1554 0022 0E       		.uleb128 0xe
 1555 0023 3A       		.uleb128 0x3a
 1556 0024 0B       		.uleb128 0xb
 1557 0025 3B       		.uleb128 0x3b
 1558 0026 0B       		.uleb128 0xb
 1559 0027 49       		.uleb128 0x49
 1560 0028 13       		.uleb128 0x13
 1561 0029 00       		.byte	0
 1562 002a 00       		.byte	0
 1563 002b 04       		.uleb128 0x4
 1564 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 58


 1565 002d 00       		.byte	0
 1566 002e 0B       		.uleb128 0xb
 1567 002f 0B       		.uleb128 0xb
 1568 0030 3E       		.uleb128 0x3e
 1569 0031 0B       		.uleb128 0xb
 1570 0032 03       		.uleb128 0x3
 1571 0033 08       		.uleb128 0x8
 1572 0034 00       		.byte	0
 1573 0035 00       		.byte	0
 1574 0036 05       		.uleb128 0x5
 1575 0037 35       		.uleb128 0x35
 1576 0038 00       		.byte	0
 1577 0039 49       		.uleb128 0x49
 1578 003a 13       		.uleb128 0x13
 1579 003b 00       		.byte	0
 1580 003c 00       		.byte	0
 1581 003d 06       		.uleb128 0x6
 1582 003e 26       		.uleb128 0x26
 1583 003f 00       		.byte	0
 1584 0040 49       		.uleb128 0x49
 1585 0041 13       		.uleb128 0x13
 1586 0042 00       		.byte	0
 1587 0043 00       		.byte	0
 1588 0044 07       		.uleb128 0x7
 1589 0045 01       		.uleb128 0x1
 1590 0046 01       		.byte	0x1
 1591 0047 49       		.uleb128 0x49
 1592 0048 13       		.uleb128 0x13
 1593 0049 01       		.uleb128 0x1
 1594 004a 13       		.uleb128 0x13
 1595 004b 00       		.byte	0
 1596 004c 00       		.byte	0
 1597 004d 08       		.uleb128 0x8
 1598 004e 21       		.uleb128 0x21
 1599 004f 00       		.byte	0
 1600 0050 49       		.uleb128 0x49
 1601 0051 13       		.uleb128 0x13
 1602 0052 2F       		.uleb128 0x2f
 1603 0053 0B       		.uleb128 0xb
 1604 0054 00       		.byte	0
 1605 0055 00       		.byte	0
 1606 0056 09       		.uleb128 0x9
 1607 0057 13       		.uleb128 0x13
 1608 0058 01       		.byte	0x1
 1609 0059 0B       		.uleb128 0xb
 1610 005a 05       		.uleb128 0x5
 1611 005b 3A       		.uleb128 0x3a
 1612 005c 0B       		.uleb128 0xb
 1613 005d 3B       		.uleb128 0x3b
 1614 005e 0B       		.uleb128 0xb
 1615 005f 01       		.uleb128 0x1
 1616 0060 13       		.uleb128 0x13
 1617 0061 00       		.byte	0
 1618 0062 00       		.byte	0
 1619 0063 0A       		.uleb128 0xa
 1620 0064 0D       		.uleb128 0xd
 1621 0065 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 59


 1622 0066 03       		.uleb128 0x3
 1623 0067 0E       		.uleb128 0xe
 1624 0068 3A       		.uleb128 0x3a
 1625 0069 0B       		.uleb128 0xb
 1626 006a 3B       		.uleb128 0x3b
 1627 006b 0B       		.uleb128 0xb
 1628 006c 49       		.uleb128 0x49
 1629 006d 13       		.uleb128 0x13
 1630 006e 38       		.uleb128 0x38
 1631 006f 0B       		.uleb128 0xb
 1632 0070 00       		.byte	0
 1633 0071 00       		.byte	0
 1634 0072 0B       		.uleb128 0xb
 1635 0073 0D       		.uleb128 0xd
 1636 0074 00       		.byte	0
 1637 0075 03       		.uleb128 0x3
 1638 0076 0E       		.uleb128 0xe
 1639 0077 3A       		.uleb128 0x3a
 1640 0078 0B       		.uleb128 0xb
 1641 0079 3B       		.uleb128 0x3b
 1642 007a 0B       		.uleb128 0xb
 1643 007b 49       		.uleb128 0x49
 1644 007c 13       		.uleb128 0x13
 1645 007d 38       		.uleb128 0x38
 1646 007e 05       		.uleb128 0x5
 1647 007f 00       		.byte	0
 1648 0080 00       		.byte	0
 1649 0081 0C       		.uleb128 0xc
 1650 0082 21       		.uleb128 0x21
 1651 0083 00       		.byte	0
 1652 0084 49       		.uleb128 0x49
 1653 0085 13       		.uleb128 0x13
 1654 0086 2F       		.uleb128 0x2f
 1655 0087 05       		.uleb128 0x5
 1656 0088 00       		.byte	0
 1657 0089 00       		.byte	0
 1658 008a 0D       		.uleb128 0xd
 1659 008b 16       		.uleb128 0x16
 1660 008c 00       		.byte	0
 1661 008d 03       		.uleb128 0x3
 1662 008e 0E       		.uleb128 0xe
 1663 008f 3A       		.uleb128 0x3a
 1664 0090 0B       		.uleb128 0xb
 1665 0091 3B       		.uleb128 0x3b
 1666 0092 05       		.uleb128 0x5
 1667 0093 49       		.uleb128 0x49
 1668 0094 13       		.uleb128 0x13
 1669 0095 00       		.byte	0
 1670 0096 00       		.byte	0
 1671 0097 0E       		.uleb128 0xe
 1672 0098 13       		.uleb128 0x13
 1673 0099 01       		.byte	0x1
 1674 009a 0B       		.uleb128 0xb
 1675 009b 0B       		.uleb128 0xb
 1676 009c 3A       		.uleb128 0x3a
 1677 009d 0B       		.uleb128 0xb
 1678 009e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 60


 1679 009f 0B       		.uleb128 0xb
 1680 00a0 01       		.uleb128 0x1
 1681 00a1 13       		.uleb128 0x13
 1682 00a2 00       		.byte	0
 1683 00a3 00       		.byte	0
 1684 00a4 0F       		.uleb128 0xf
 1685 00a5 04       		.uleb128 0x4
 1686 00a6 01       		.byte	0x1
 1687 00a7 0B       		.uleb128 0xb
 1688 00a8 0B       		.uleb128 0xb
 1689 00a9 49       		.uleb128 0x49
 1690 00aa 13       		.uleb128 0x13
 1691 00ab 3A       		.uleb128 0x3a
 1692 00ac 0B       		.uleb128 0xb
 1693 00ad 3B       		.uleb128 0x3b
 1694 00ae 05       		.uleb128 0x5
 1695 00af 01       		.uleb128 0x1
 1696 00b0 13       		.uleb128 0x13
 1697 00b1 00       		.byte	0
 1698 00b2 00       		.byte	0
 1699 00b3 10       		.uleb128 0x10
 1700 00b4 28       		.uleb128 0x28
 1701 00b5 00       		.byte	0
 1702 00b6 03       		.uleb128 0x3
 1703 00b7 0E       		.uleb128 0xe
 1704 00b8 1C       		.uleb128 0x1c
 1705 00b9 0B       		.uleb128 0xb
 1706 00ba 00       		.byte	0
 1707 00bb 00       		.byte	0
 1708 00bc 11       		.uleb128 0x11
 1709 00bd 13       		.uleb128 0x13
 1710 00be 01       		.byte	0x1
 1711 00bf 0B       		.uleb128 0xb
 1712 00c0 0B       		.uleb128 0xb
 1713 00c1 3A       		.uleb128 0x3a
 1714 00c2 0B       		.uleb128 0xb
 1715 00c3 3B       		.uleb128 0x3b
 1716 00c4 05       		.uleb128 0x5
 1717 00c5 01       		.uleb128 0x1
 1718 00c6 13       		.uleb128 0x13
 1719 00c7 00       		.byte	0
 1720 00c8 00       		.byte	0
 1721 00c9 12       		.uleb128 0x12
 1722 00ca 0D       		.uleb128 0xd
 1723 00cb 00       		.byte	0
 1724 00cc 03       		.uleb128 0x3
 1725 00cd 0E       		.uleb128 0xe
 1726 00ce 3A       		.uleb128 0x3a
 1727 00cf 0B       		.uleb128 0xb
 1728 00d0 3B       		.uleb128 0x3b
 1729 00d1 05       		.uleb128 0x5
 1730 00d2 49       		.uleb128 0x49
 1731 00d3 13       		.uleb128 0x13
 1732 00d4 38       		.uleb128 0x38
 1733 00d5 0B       		.uleb128 0xb
 1734 00d6 00       		.byte	0
 1735 00d7 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 61


 1736 00d8 13       		.uleb128 0x13
 1737 00d9 0F       		.uleb128 0xf
 1738 00da 00       		.byte	0
 1739 00db 0B       		.uleb128 0xb
 1740 00dc 0B       		.uleb128 0xb
 1741 00dd 49       		.uleb128 0x49
 1742 00de 13       		.uleb128 0x13
 1743 00df 00       		.byte	0
 1744 00e0 00       		.byte	0
 1745 00e1 14       		.uleb128 0x14
 1746 00e2 2E       		.uleb128 0x2e
 1747 00e3 01       		.byte	0x1
 1748 00e4 03       		.uleb128 0x3
 1749 00e5 0E       		.uleb128 0xe
 1750 00e6 3A       		.uleb128 0x3a
 1751 00e7 0B       		.uleb128 0xb
 1752 00e8 3B       		.uleb128 0x3b
 1753 00e9 05       		.uleb128 0x5
 1754 00ea 27       		.uleb128 0x27
 1755 00eb 19       		.uleb128 0x19
 1756 00ec 49       		.uleb128 0x49
 1757 00ed 13       		.uleb128 0x13
 1758 00ee 20       		.uleb128 0x20
 1759 00ef 0B       		.uleb128 0xb
 1760 00f0 01       		.uleb128 0x1
 1761 00f1 13       		.uleb128 0x13
 1762 00f2 00       		.byte	0
 1763 00f3 00       		.byte	0
 1764 00f4 15       		.uleb128 0x15
 1765 00f5 05       		.uleb128 0x5
 1766 00f6 00       		.byte	0
 1767 00f7 03       		.uleb128 0x3
 1768 00f8 0E       		.uleb128 0xe
 1769 00f9 3A       		.uleb128 0x3a
 1770 00fa 0B       		.uleb128 0xb
 1771 00fb 3B       		.uleb128 0x3b
 1772 00fc 05       		.uleb128 0x5
 1773 00fd 49       		.uleb128 0x49
 1774 00fe 13       		.uleb128 0x13
 1775 00ff 00       		.byte	0
 1776 0100 00       		.byte	0
 1777 0101 16       		.uleb128 0x16
 1778 0102 2E       		.uleb128 0x2e
 1779 0103 01       		.byte	0x1
 1780 0104 03       		.uleb128 0x3
 1781 0105 0E       		.uleb128 0xe
 1782 0106 3A       		.uleb128 0x3a
 1783 0107 0B       		.uleb128 0xb
 1784 0108 3B       		.uleb128 0x3b
 1785 0109 05       		.uleb128 0x5
 1786 010a 27       		.uleb128 0x27
 1787 010b 19       		.uleb128 0x19
 1788 010c 20       		.uleb128 0x20
 1789 010d 0B       		.uleb128 0xb
 1790 010e 01       		.uleb128 0x1
 1791 010f 13       		.uleb128 0x13
 1792 0110 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 62


 1793 0111 00       		.byte	0
 1794 0112 17       		.uleb128 0x17
 1795 0113 2E       		.uleb128 0x2e
 1796 0114 01       		.byte	0x1
 1797 0115 3F       		.uleb128 0x3f
 1798 0116 19       		.uleb128 0x19
 1799 0117 03       		.uleb128 0x3
 1800 0118 0E       		.uleb128 0xe
 1801 0119 3A       		.uleb128 0x3a
 1802 011a 0B       		.uleb128 0xb
 1803 011b 3B       		.uleb128 0x3b
 1804 011c 0B       		.uleb128 0xb
 1805 011d 27       		.uleb128 0x27
 1806 011e 19       		.uleb128 0x19
 1807 011f 11       		.uleb128 0x11
 1808 0120 01       		.uleb128 0x1
 1809 0121 12       		.uleb128 0x12
 1810 0122 06       		.uleb128 0x6
 1811 0123 40       		.uleb128 0x40
 1812 0124 18       		.uleb128 0x18
 1813 0125 9742     		.uleb128 0x2117
 1814 0127 19       		.uleb128 0x19
 1815 0128 01       		.uleb128 0x1
 1816 0129 13       		.uleb128 0x13
 1817 012a 00       		.byte	0
 1818 012b 00       		.byte	0
 1819 012c 18       		.uleb128 0x18
 1820 012d 34       		.uleb128 0x34
 1821 012e 00       		.byte	0
 1822 012f 03       		.uleb128 0x3
 1823 0130 0E       		.uleb128 0xe
 1824 0131 3A       		.uleb128 0x3a
 1825 0132 0B       		.uleb128 0xb
 1826 0133 3B       		.uleb128 0x3b
 1827 0134 0B       		.uleb128 0xb
 1828 0135 49       		.uleb128 0x49
 1829 0136 13       		.uleb128 0x13
 1830 0137 00       		.byte	0
 1831 0138 00       		.byte	0
 1832 0139 19       		.uleb128 0x19
 1833 013a 1D       		.uleb128 0x1d
 1834 013b 01       		.byte	0x1
 1835 013c 31       		.uleb128 0x31
 1836 013d 13       		.uleb128 0x13
 1837 013e 11       		.uleb128 0x11
 1838 013f 01       		.uleb128 0x1
 1839 0140 12       		.uleb128 0x12
 1840 0141 06       		.uleb128 0x6
 1841 0142 58       		.uleb128 0x58
 1842 0143 0B       		.uleb128 0xb
 1843 0144 59       		.uleb128 0x59
 1844 0145 0B       		.uleb128 0xb
 1845 0146 01       		.uleb128 0x1
 1846 0147 13       		.uleb128 0x13
 1847 0148 00       		.byte	0
 1848 0149 00       		.byte	0
 1849 014a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 63


 1850 014b 05       		.uleb128 0x5
 1851 014c 00       		.byte	0
 1852 014d 31       		.uleb128 0x31
 1853 014e 13       		.uleb128 0x13
 1854 014f 02       		.uleb128 0x2
 1855 0150 17       		.uleb128 0x17
 1856 0151 00       		.byte	0
 1857 0152 00       		.byte	0
 1858 0153 1B       		.uleb128 0x1b
 1859 0154 05       		.uleb128 0x5
 1860 0155 00       		.byte	0
 1861 0156 31       		.uleb128 0x31
 1862 0157 13       		.uleb128 0x13
 1863 0158 00       		.byte	0
 1864 0159 00       		.byte	0
 1865 015a 1C       		.uleb128 0x1c
 1866 015b 898201   		.uleb128 0x4109
 1867 015e 01       		.byte	0x1
 1868 015f 11       		.uleb128 0x11
 1869 0160 01       		.uleb128 0x1
 1870 0161 31       		.uleb128 0x31
 1871 0162 13       		.uleb128 0x13
 1872 0163 00       		.byte	0
 1873 0164 00       		.byte	0
 1874 0165 1D       		.uleb128 0x1d
 1875 0166 8A8201   		.uleb128 0x410a
 1876 0169 00       		.byte	0
 1877 016a 02       		.uleb128 0x2
 1878 016b 18       		.uleb128 0x18
 1879 016c 9142     		.uleb128 0x2111
 1880 016e 18       		.uleb128 0x18
 1881 016f 00       		.byte	0
 1882 0170 00       		.byte	0
 1883 0171 1E       		.uleb128 0x1e
 1884 0172 1D       		.uleb128 0x1d
 1885 0173 01       		.byte	0x1
 1886 0174 31       		.uleb128 0x31
 1887 0175 13       		.uleb128 0x13
 1888 0176 11       		.uleb128 0x11
 1889 0177 01       		.uleb128 0x1
 1890 0178 12       		.uleb128 0x12
 1891 0179 06       		.uleb128 0x6
 1892 017a 58       		.uleb128 0x58
 1893 017b 0B       		.uleb128 0xb
 1894 017c 59       		.uleb128 0x59
 1895 017d 0B       		.uleb128 0xb
 1896 017e 00       		.byte	0
 1897 017f 00       		.byte	0
 1898 0180 1F       		.uleb128 0x1f
 1899 0181 34       		.uleb128 0x34
 1900 0182 00       		.byte	0
 1901 0183 03       		.uleb128 0x3
 1902 0184 0E       		.uleb128 0xe
 1903 0185 3A       		.uleb128 0x3a
 1904 0186 0B       		.uleb128 0xb
 1905 0187 3B       		.uleb128 0x3b
 1906 0188 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 64


 1907 0189 49       		.uleb128 0x49
 1908 018a 13       		.uleb128 0x13
 1909 018b 3F       		.uleb128 0x3f
 1910 018c 19       		.uleb128 0x19
 1911 018d 3C       		.uleb128 0x3c
 1912 018e 19       		.uleb128 0x19
 1913 018f 00       		.byte	0
 1914 0190 00       		.byte	0
 1915 0191 20       		.uleb128 0x20
 1916 0192 34       		.uleb128 0x34
 1917 0193 00       		.byte	0
 1918 0194 03       		.uleb128 0x3
 1919 0195 0E       		.uleb128 0xe
 1920 0196 3A       		.uleb128 0x3a
 1921 0197 0B       		.uleb128 0xb
 1922 0198 3B       		.uleb128 0x3b
 1923 0199 05       		.uleb128 0x5
 1924 019a 49       		.uleb128 0x49
 1925 019b 13       		.uleb128 0x13
 1926 019c 3F       		.uleb128 0x3f
 1927 019d 19       		.uleb128 0x19
 1928 019e 3C       		.uleb128 0x3c
 1929 019f 19       		.uleb128 0x19
 1930 01a0 00       		.byte	0
 1931 01a1 00       		.byte	0
 1932 01a2 21       		.uleb128 0x21
 1933 01a3 2E       		.uleb128 0x2e
 1934 01a4 00       		.byte	0
 1935 01a5 3F       		.uleb128 0x3f
 1936 01a6 19       		.uleb128 0x19
 1937 01a7 3C       		.uleb128 0x3c
 1938 01a8 19       		.uleb128 0x19
 1939 01a9 6E       		.uleb128 0x6e
 1940 01aa 0E       		.uleb128 0xe
 1941 01ab 03       		.uleb128 0x3
 1942 01ac 0E       		.uleb128 0xe
 1943 01ad 3A       		.uleb128 0x3a
 1944 01ae 0B       		.uleb128 0xb
 1945 01af 3B       		.uleb128 0x3b
 1946 01b0 05       		.uleb128 0x5
 1947 01b1 00       		.byte	0
 1948 01b2 00       		.byte	0
 1949 01b3 00       		.byte	0
 1950              		.section	.debug_loc,"",%progbits
 1951              	.Ldebug_loc0:
 1952              	.LLST0:
 1953 0000 02000000 		.4byte	.LVL0
 1954 0004 0A000000 		.4byte	.LVL1
 1955 0008 0600     		.2byte	0x6
 1956 000a 0C       		.byte	0xc
 1957 000b 00001D41 		.4byte	0x411d0000
 1958 000f 9F       		.byte	0x9f
 1959 0010 00000000 		.4byte	0
 1960 0014 00000000 		.4byte	0
 1961              	.LLST1:
 1962 0018 0A000000 		.4byte	.LVL1
 1963 001c 20000000 		.4byte	.LVL3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 65


 1964 0020 0600     		.2byte	0x6
 1965 0022 0C       		.byte	0xc
 1966 0023 00001D41 		.4byte	0x411d0000
 1967 0027 9F       		.byte	0x9f
 1968 0028 00000000 		.4byte	0
 1969 002c 00000000 		.4byte	0
 1970              	.LLST2:
 1971 0030 20000000 		.4byte	.LVL3
 1972 0034 22000000 		.4byte	.LVL4
 1973 0038 0600     		.2byte	0x6
 1974 003a 0C       		.byte	0xc
 1975 003b 00001D41 		.4byte	0x411d0000
 1976 003f 9F       		.byte	0x9f
 1977 0040 00000000 		.4byte	0
 1978 0044 00000000 		.4byte	0
 1979              		.section	.debug_aranges,"",%progbits
 1980 0000 1C000000 		.4byte	0x1c
 1981 0004 0200     		.2byte	0x2
 1982 0006 00000000 		.4byte	.Ldebug_info0
 1983 000a 04       		.byte	0x4
 1984 000b 00       		.byte	0
 1985 000c 0000     		.2byte	0
 1986 000e 0000     		.2byte	0
 1987 0010 00000000 		.4byte	.LFB184
 1988 0014 30000000 		.4byte	.LFE184-.LFB184
 1989 0018 00000000 		.4byte	0
 1990 001c 00000000 		.4byte	0
 1991              		.section	.debug_ranges,"",%progbits
 1992              	.Ldebug_ranges0:
 1993 0000 00000000 		.4byte	.LFB184
 1994 0004 30000000 		.4byte	.LFE184
 1995 0008 00000000 		.4byte	0
 1996 000c 00000000 		.4byte	0
 1997              		.section	.debug_line,"",%progbits
 1998              	.Ldebug_line0:
 1999 0000 BD020000 		.section	.debug_str,"MS",%progbits,1
 1999      02009302 
 1999      00000201 
 1999      FB0E0D00 
 1999      01010101 
 2000              	.LASF202:
 2001 0000 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 2001      41525F43 
 2001      6C656172 
 2001      496E7465 
 2001      72727570 
 2002              	.LASF57:
 2003 0016 4156475F 		.ascii	"AVG_STAT\000"
 2003      53544154 
 2003      00
 2004              	.LASF52:
 2005 001f 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 2005      4348414E 
 2005      5F434F4E 
 2005      46494700 
 2006              	.LASF116:
 2007 002f 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 66


 2007      6843746C 
 2007      4D61696E 
 2007      57733346 
 2007      72657100 
 2008              	.LASF138:
 2009 0043 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 2009      50727443 
 2009      6667496E 
 2009      4F666673 
 2009      657400
 2010              	.LASF156:
 2011 0056 6970634C 		.ascii	"ipcLockStatusOffset\000"
 2011      6F636B53 
 2011      74617475 
 2011      734F6666 
 2011      73657400 
 2012              	.LASF82:
 2013 006a 63727970 		.ascii	"cryptoVersion\000"
 2013      746F5665 
 2013      7273696F 
 2013      6E00
 2014              	.LASF100:
 2015 0078 70657269 		.ascii	"periClockNr\000"
 2015      436C6F63 
 2015      6B4E7200 
 2016              	.LASF78:
 2017 0084 70617373 		.ascii	"passBase\000"
 2017      42617365 
 2017      00
 2018              	.LASF72:
 2019 008d 666C6173 		.ascii	"flashcBase\000"
 2019      68634261 
 2019      736500
 2020              	.LASF59:
 2021 0098 4D55585F 		.ascii	"MUX_SWITCH0\000"
 2021      53574954 
 2021      43483000 
 2022              	.LASF91:
 2023 00a4 63707573 		.ascii	"cpussIpcIrqNr\000"
 2023      73497063 
 2023      4972714E 
 2023      7200
 2024              	.LASF3:
 2025 00b2 5F5F7569 		.ascii	"__uint8_t\000"
 2025      6E74385F 
 2025      7400
 2026              	.LASF180:
 2027 00bc 73617449 		.ascii	"satIntrMask\000"
 2027      6E74724D 
 2027      61736B00 
 2028              	.LASF135:
 2029 00c8 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 2029      44697632 
 2029      345F3543 
 2029      746C4F66 
 2029      66736574 
 2030              	.LASF142:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 67


 2031 00dd 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 2031      73436D34 
 2031      436C6F63 
 2031      6B43746C 
 2031      4F666673 
 2032              	.LASF24:
 2033 00f4 52414E47 		.ascii	"RANGE_COND\000"
 2033      455F434F 
 2033      4E4400
 2034              	.LASF71:
 2035 00ff 63707573 		.ascii	"cpussBase\000"
 2035      73426173 
 2035      6500
 2036              	.LASF120:
 2037 0109 64774368 		.ascii	"dwChCtlPrioPos\000"
 2037      43746C50 
 2037      72696F50 
 2037      6F7300
 2038              	.LASF196:
 2039 0118 4144435F 		.ascii	"ADC_currentConfig\000"
 2039      63757272 
 2039      656E7443 
 2039      6F6E6669 
 2039      6700
 2040              	.LASF11:
 2041 012a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2041      206C6F6E 
 2041      6720756E 
 2041      7369676E 
 2041      65642069 
 2042              	.LASF168:
 2043 0141 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 2043      41525F49 
 2043      4E54525F 
 2043      454F535F 
 2043      4D41534B 
 2044              	.LASF124:
 2045 0156 70657269 		.ascii	"periTrCmdOffset\000"
 2045      5472436D 
 2045      644F6666 
 2045      73657400 
 2046              	.LASF148:
 2047 0166 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2047      73537973 
 2047      5469636B 
 2047      43746C4F 
 2047      66667365 
 2048              	.LASF109:
 2049 017c 666C6173 		.ascii	"flashPipeRequired\000"
 2049      68506970 
 2049      65526571 
 2049      75697265 
 2049      6400
 2050              	.LASF66:
 2051 018e 414E415F 		.ascii	"ANA_TRIM0\000"
 2051      5452494D 
 2051      3000
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 68


 2052              	.LASF67:
 2053 0198 414E415F 		.ascii	"ANA_TRIM1\000"
 2053      5452494D 
 2053      3100
 2054              	.LASF48:
 2055 01a2 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 2055      455F494E 
 2055      54525F4D 
 2055      41534B00 
 2056              	.LASF14:
 2057 01b2 696E7431 		.ascii	"int16_t\000"
 2057      365F7400 
 2058              	.LASF187:
 2059 01ba 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 2059      74635F73 
 2059      61725F63 
 2059      6F6E6669 
 2059      675F7400 
 2060              	.LASF10:
 2061 01ce 6C6F6E67 		.ascii	"long long int\000"
 2061      206C6F6E 
 2061      6720696E 
 2061      7400
 2062              	.LASF2:
 2063 01dc 7369676E 		.ascii	"signed char\000"
 2063      65642063 
 2063      68617200 
 2064              	.LASF129:
 2065 01e8 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2065      44697643 
 2065      6D645479 
 2065      70655365 
 2065      6C506F73 
 2066              	.LASF166:
 2067 01fd 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 2067      6E5F7361 
 2067      725F7261 
 2067      6E67655F 
 2067      64657465 
 2068              	.LASF192:
 2069 0220 636C6B44 		.ascii	"clkDivider\000"
 2069      69766964 
 2069      657200
 2070              	.LASF75:
 2071 022b 70726F74 		.ascii	"protBase\000"
 2071      42617365 
 2071      00
 2072              	.LASF87:
 2073 0234 69706356 		.ascii	"ipcVersion\000"
 2073      65727369 
 2073      6F6E00
 2074              	.LASF149:
 2075 023f 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2075      73436D30 
 2075      4E6D6943 
 2075      746C4F66 
 2075      66736574 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 69


 2076              	.LASF65:
 2077 0254 52455345 		.ascii	"RESERVED10\000"
 2077      52564544 
 2077      313000
 2078              	.LASF76:
 2079 025f 6873696F 		.ascii	"hsiomBase\000"
 2079      6D426173 
 2079      6500
 2080              	.LASF181:
 2081 0269 72616E67 		.ascii	"rangeIntrMask\000"
 2081      65496E74 
 2081      724D6173 
 2081      6B00
 2082              	.LASF162:
 2083 0277 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 2083      41525F52 
 2083      414E4745 
 2083      5F434F4E 
 2083      445F4245 
 2084              	.LASF7:
 2085 028f 6C6F6E67 		.ascii	"long int\000"
 2085      20696E74 
 2085      00
 2086              	.LASF64:
 2087 0298 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 2087      53574954 
 2087      43485F53 
 2087      54415455 
 2087      5300
 2088              	.LASF50:
 2089 02aa 494E5452 		.ascii	"INTR_CAUSE\000"
 2089      5F434155 
 2089      534500
 2090              	.LASF107:
 2091 02b5 63727970 		.ascii	"cryptoMemSize\000"
 2091      746F4D65 
 2091      6D53697A 
 2091      6500
 2092              	.LASF54:
 2093 02c3 494E4A5F 		.ascii	"INJ_RESULT\000"
 2093      52455355 
 2093      4C5400
 2094              	.LASF73:
 2095 02ce 70657269 		.ascii	"periBase\000"
 2095      42617365 
 2095      00
 2096              	.LASF105:
 2097 02d7 73797350 		.ascii	"sysPmSimoPresent\000"
 2097      6D53696D 
 2097      6F507265 
 2097      73656E74 
 2097      00
 2098              	.LASF164:
 2099 02e8 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 2099      41525F52 
 2099      414E4745 
 2099      5F434F4E 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 70


 2099      445F4142 
 2100              	.LASF95:
 2101 0300 63707573 		.ascii	"cpussFmIrq\000"
 2101      73466D49 
 2101      727100
 2102              	.LASF161:
 2103 030b 646F7562 		.ascii	"double\000"
 2103      6C6500
 2104              	.LASF134:
 2105 0312 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2105      44697631 
 2105      365F3543 
 2105      746C4F66 
 2105      66736574 
 2106              	.LASF60:
 2107 0327 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 2107      53574954 
 2107      43485F43 
 2107      4C454152 
 2107      3000
 2108              	.LASF98:
 2109 0339 73727373 		.ascii	"srssNumPll\000"
 2109      4E756D50 
 2109      6C6C00
 2110              	.LASF193:
 2111 0344 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 2111      434F4E46 
 2111      49475F53 
 2111      54525543 
 2111      5400
 2112              	.LASF204:
 2113 0356 696E7472 		.ascii	"intr_status\000"
 2113      5F737461 
 2113      74757300 
 2114              	.LASF173:
 2115 0362 73616D70 		.ascii	"sampleTime01\000"
 2115      6C655469 
 2115      6D653031 
 2115      00
 2116              	.LASF6:
 2117 036f 73686F72 		.ascii	"short unsigned int\000"
 2117      7420756E 
 2117      7369676E 
 2117      65642069 
 2117      6E7400
 2118              	.LASF139:
 2119 0382 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2119      50727443 
 2119      66674F75 
 2119      744F6666 
 2119      73657400 
 2120              	.LASF121:
 2121 0396 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2121      43746C50 
 2121      7265656D 
 2121      70746162 
 2121      6C65506F 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 71


 2122              	.LASF8:
 2123 03ac 5F5F7569 		.ascii	"__uint32_t\000"
 2123      6E743332 
 2123      5F7400
 2124              	.LASF102:
 2125 03b7 70617373 		.ascii	"passSarChannels\000"
 2125      53617243 
 2125      68616E6E 
 2125      656C7300 
 2126              	.LASF190:
 2127 03c7 6877436F 		.ascii	"hwConfigStc\000"
 2127      6E666967 
 2127      53746300 
 2128              	.LASF199:
 2129 03d3 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_INT.c\000"
 2129      72617465 
 2129      645F536F 
 2129      75726365 
 2129      5C50536F 
 2130              	.LASF21:
 2131 03f4 53414D50 		.ascii	"SAMPLE_TIME01\000"
 2131      4C455F54 
 2131      494D4530 
 2131      3100
 2132              	.LASF4:
 2133 0402 5F5F696E 		.ascii	"__int16_t\000"
 2133      7431365F 
 2133      7400
 2134              	.LASF200:
 2135 040c 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 2135      635C4461 
 2135      74615C56 
 2135      53636F64 
 2135      655C4749 
 2136 0439 65735C45 		.ascii	"es\\Example_DevKitLightSensor\\Onethinx_Creator.cyd"
 2136      78616D70 
 2136      6C655F44 
 2136      65764B69 
 2136      744C6967 
 2137 046a 736E00   		.ascii	"sn\000"
 2138              	.LASF42:
 2139 046d 53415455 		.ascii	"SATURATE_INTR\000"
 2139      52415445 
 2139      5F494E54 
 2139      5200
 2140              	.LASF28:
 2141 047b 4348414E 		.ascii	"CHAN_CONFIG\000"
 2141      5F434F4E 
 2141      46494700 
 2142              	.LASF145:
 2143 0487 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2143      73436D34 
 2143      50777243 
 2143      746C4F66 
 2143      66736574 
 2144              	.LASF140:
 2145 049c 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 72


 2145      50727443 
 2145      66675369 
 2145      6F4F6666 
 2145      73657400 
 2146              	.LASF92:
 2147 04b0 63707573 		.ascii	"cpussDwChNr\000"
 2147      73447743 
 2147      684E7200 
 2148              	.LASF12:
 2149 04bc 756E7369 		.ascii	"unsigned int\000"
 2149      676E6564 
 2149      20696E74 
 2149      00
 2150              	.LASF17:
 2151 04c9 73697A65 		.ascii	"sizetype\000"
 2151      74797065 
 2151      00
 2152              	.LASF158:
 2153 04d2 63686172 		.ascii	"char_t\000"
 2153      5F7400
 2154              	.LASF125:
 2155 04d9 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2155      5472436D 
 2155      64477253 
 2155      656C4D73 
 2155      6B00
 2156              	.LASF9:
 2157 04eb 6C6F6E67 		.ascii	"long unsigned int\000"
 2157      20756E73 
 2157      69676E65 
 2157      6420696E 
 2157      7400
 2158              	.LASF36:
 2159 04fd 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 2159      5F574F52 
 2159      4B5F4E45 
 2159      5756414C 
 2159      554500
 2160              	.LASF90:
 2161 0510 63707573 		.ascii	"cpussIpcNr\000"
 2161      73497063 
 2161      4E7200
 2162              	.LASF62:
 2163 051b 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 2163      53574954 
 2163      43485F44 
 2163      535F4354 
 2163      524C00
 2164              	.LASF40:
 2165 052e 494E5452 		.ascii	"INTR_MASK\000"
 2165      5F4D4153 
 2165      4B00
 2166              	.LASF77:
 2167 0538 6770696F 		.ascii	"gpioBase\000"
 2167      42617365 
 2167      00
 2168              	.LASF69:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 73


 2169 0541 5341525F 		.ascii	"SAR_Type\000"
 2169      54797065 
 2169      00
 2170              	.LASF115:
 2171 054a 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2171      6843746C 
 2171      4D61696E 
 2171      57733246 
 2171      72657100 
 2172              	.LASF126:
 2173 055e 70657269 		.ascii	"periTrGrOffset\000"
 2173      54724772 
 2173      4F666673 
 2173      657400
 2174              	.LASF153:
 2175 056d 63707573 		.ascii	"cpussRam1Ctl0\000"
 2175      7352616D 
 2175      3143746C 
 2175      3000
 2176              	.LASF175:
 2177 057b 72616E67 		.ascii	"rangeThres\000"
 2177      65546872 
 2177      657300
 2178              	.LASF46:
 2179 0586 52414E47 		.ascii	"RANGE_INTR\000"
 2179      455F494E 
 2179      545200
 2180              	.LASF34:
 2181 0591 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 2181      5F574F52 
 2181      4B5F5550 
 2181      44415445 
 2181      4400
 2182              	.LASF127:
 2183 05a3 70657269 		.ascii	"periTrGrSize\000"
 2183      54724772 
 2183      53697A65 
 2183      00
 2184              	.LASF85:
 2185 05b0 6770696F 		.ascii	"gpioVersion\000"
 2185      56657273 
 2185      696F6E00 
 2186              	.LASF15:
 2187 05bc 75696E74 		.ascii	"uint16_t\000"
 2187      31365F74 
 2187      00
 2188              	.LASF189:
 2189 05c5 6E756D43 		.ascii	"numChannels\000"
 2189      68616E6E 
 2189      656C7300 
 2190              	.LASF157:
 2191 05d1 63795F73 		.ascii	"cy_stc_device_t\000"
 2191      74635F64 
 2191      65766963 
 2191      655F7400 
 2192              	.LASF178:
 2193 05e1 6368616E 		.ascii	"chanConfig\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 74


 2193      436F6E66 
 2193      696700
 2194              	.LASF188:
 2195 05ec 6368616E 		.ascii	"channelBase\000"
 2195      6E656C42 
 2195      61736500 
 2196              	.LASF103:
 2197 05f8 65704D6F 		.ascii	"epMonitorNr\000"
 2197      6E69746F 
 2197      724E7200 
 2198              	.LASF150:
 2199 0604 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2199      73436D34 
 2199      4E6D6943 
 2199      746C4F66 
 2199      66736574 
 2200              	.LASF146:
 2201 0619 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2201      73547269 
 2201      6D52616D 
 2201      43746C4F 
 2201      66667365 
 2202              	.LASF141:
 2203 062f 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2203      73436D30 
 2203      436C6F63 
 2203      6B43746C 
 2203      4F666673 
 2204              	.LASF26:
 2205 0646 53544152 		.ascii	"START_CTRL\000"
 2205      545F4354 
 2205      524C00
 2206              	.LASF39:
 2207 0651 494E5452 		.ascii	"INTR_SET\000"
 2207      5F534554 
 2207      00
 2208              	.LASF81:
 2209 065a 63707573 		.ascii	"cpussVersion\000"
 2209      73566572 
 2209      73696F6E 
 2209      00
 2210              	.LASF194:
 2211 0667 62617365 		.ascii	"base\000"
 2211      00
 2212              	.LASF88:
 2213 066c 70657269 		.ascii	"periVersion\000"
 2213      56657273 
 2213      696F6E00 
 2214              	.LASF144:
 2215 0678 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2215      73436D30 
 2215      53746174 
 2215      75734F66 
 2215      66736574 
 2216              	.LASF167:
 2217 068d 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 2217      41525F49 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 75


 2217      4E54525F 
 2217      4D41534B 
 2217      5F4E4F4E 
 2218              	.LASF118:
 2219 06a3 64774368 		.ascii	"dwChOffset\000"
 2219      4F666673 
 2219      657400
 2220              	.LASF191:
 2221 06ae 6D697363 		.ascii	"miscConfig\000"
 2221      436F6E66 
 2221      696700
 2222              	.LASF32:
 2223 06b9 4348414E 		.ascii	"CHAN_RESULT\000"
 2223      5F524553 
 2223      554C5400 
 2224              	.LASF93:
 2225 06c5 63707573 		.ascii	"cpussFlashPaSize\000"
 2225      73466C61 
 2225      73685061 
 2225      53697A65 
 2225      00
 2226              	.LASF174:
 2227 06d6 73616D70 		.ascii	"sampleTime23\000"
 2227      6C655469 
 2227      6D653233 
 2227      00
 2228              	.LASF131:
 2229 06e3 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2229      44697643 
 2229      6D645061 
 2229      54797065 
 2229      53656C50 
 2230              	.LASF154:
 2231 06fa 63707573 		.ascii	"cpussRam2Ctl0\000"
 2231      7352616D 
 2231      3243746C 
 2231      3000
 2232              	.LASF184:
 2233 0708 636F6E66 		.ascii	"configRouting\000"
 2233      6967526F 
 2233      7574696E 
 2233      6700
 2234              	.LASF19:
 2235 0716 53414D50 		.ascii	"SAMPLE_CTRL\000"
 2235      4C455F43 
 2235      54524C00 
 2236              	.LASF23:
 2237 0722 52414E47 		.ascii	"RANGE_THRES\000"
 2237      455F5448 
 2237      52455300 
 2238              	.LASF122:
 2239 072e 64775374 		.ascii	"dwStatusChIdxPos\000"
 2239      61747573 
 2239      43684964 
 2239      78506F73 
 2239      00
 2240              	.LASF25:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 76


 2241 073f 4348414E 		.ascii	"CHAN_EN\000"
 2241      5F454E00 
 2242              	.LASF22:
 2243 0747 53414D50 		.ascii	"SAMPLE_TIME23\000"
 2243      4C455F54 
 2243      494D4532 
 2243      3300
 2244              	.LASF104:
 2245 0755 75646250 		.ascii	"udbPresent\000"
 2245      72657365 
 2245      6E7400
 2246              	.LASF84:
 2247 0760 666C6173 		.ascii	"flashcVersion\000"
 2247      68635665 
 2247      7273696F 
 2247      6E00
 2248              	.LASF80:
 2249 076e 63727970 		.ascii	"cryptoBase\000"
 2249      746F4261 
 2249      736500
 2250              	.LASF101:
 2251 0779 736D6966 		.ascii	"smifDeviceNr\000"
 2251      44657669 
 2251      63654E72 
 2251      00
 2252              	.LASF43:
 2253 0786 53415455 		.ascii	"SATURATE_INTR_SET\000"
 2253      52415445 
 2253      5F494E54 
 2253      525F5345 
 2253      5400
 2254              	.LASF41:
 2255 0798 494E5452 		.ascii	"INTR_MASKED\000"
 2255      5F4D4153 
 2255      4B454400 
 2256              	.LASF160:
 2257 07a4 666C6F61 		.ascii	"float\000"
 2257      7400
 2258              	.LASF123:
 2259 07aa 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2259      61747573 
 2259      43684964 
 2259      784D736B 
 2259      00
 2260              	.LASF201:
 2261 07bb 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 2261      41525F47 
 2261      6574496E 
 2261      74657272 
 2261      75707453 
 2262              	.LASF27:
 2263 07d5 52455345 		.ascii	"RESERVED1\000"
 2263      52564544 
 2263      3100
 2264              	.LASF195:
 2265 07df 63795F64 		.ascii	"cy_device\000"
 2265      65766963 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 77


 2265      6500
 2266              	.LASF31:
 2267 07e9 52455345 		.ascii	"RESERVED3\000"
 2267      52564544 
 2267      3300
 2268              	.LASF151:
 2269 07f3 63707573 		.ascii	"cpussRomCtl\000"
 2269      73526F6D 
 2269      43746C00 
 2270              	.LASF51:
 2271 07ff 52455345 		.ascii	"RESERVED5\000"
 2271      52564544 
 2271      3500
 2272              	.LASF53:
 2273 0809 52455345 		.ascii	"RESERVED6\000"
 2273      52564544 
 2273      3600
 2274              	.LASF55:
 2275 0813 52455345 		.ascii	"RESERVED7\000"
 2275      52564544 
 2275      3700
 2276              	.LASF58:
 2277 081d 52455345 		.ascii	"RESERVED8\000"
 2277      52564544 
 2277      3800
 2278              	.LASF61:
 2279 0827 52455345 		.ascii	"RESERVED9\000"
 2279      52564544 
 2279      3900
 2280              	.LASF177:
 2281 0831 6368616E 		.ascii	"chanEn\000"
 2281      456E00
 2282              	.LASF74:
 2283 0838 75646242 		.ascii	"udbBase\000"
 2283      61736500 
 2284              	.LASF163:
 2285 0840 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 2285      41525F52 
 2285      414E4745 
 2285      5F434F4E 
 2285      445F494E 
 2286              	.LASF186:
 2287 0859 5F426F6F 		.ascii	"_Bool\000"
 2287      6C00
 2288              	.LASF1:
 2289 085f 756E7369 		.ascii	"unsigned char\000"
 2289      676E6564 
 2289      20636861 
 2289      7200
 2290              	.LASF203:
 2291 086d 4144435F 		.ascii	"ADC_ISR\000"
 2291      49535200 
 2292              	.LASF169:
 2293 0875 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 2293      41525F49 
 2293      4E54525F 
 2293      4F564552 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 78


 2293      464C4F57 
 2294              	.LASF117:
 2295 088f 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2295      6843746C 
 2295      4D61696E 
 2295      57733446 
 2295      72657100 
 2296              	.LASF0:
 2297 08a3 73686F72 		.ascii	"short int\000"
 2297      7420696E 
 2297      7400
 2298              	.LASF182:
 2299 08ad 6D757853 		.ascii	"muxSwitch\000"
 2299      77697463 
 2299      6800
 2300              	.LASF179:
 2301 08b7 696E7472 		.ascii	"intrMask\000"
 2301      4D61736B 
 2301      00
 2302              	.LASF20:
 2303 08c0 52455345 		.ascii	"RESERVED\000"
 2303      52564544 
 2303      00
 2304              	.LASF68:
 2305 08c9 5341525F 		.ascii	"SAR_V1_Type\000"
 2305      56315F54 
 2305      79706500 
 2306              	.LASF128:
 2307 08d5 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2307      44697643 
 2307      6D644469 
 2307      7653656C 
 2307      4D736B00 
 2308              	.LASF37:
 2309 08e9 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 2309      5F524553 
 2309      554C545F 
 2309      4E455756 
 2309      414C5545 
 2310              	.LASF29:
 2311 08fe 52455345 		.ascii	"RESERVED2\000"
 2311      52564544 
 2311      3200
 2312              	.LASF99:
 2313 0908 73727373 		.ascii	"srssNumHfroot\000"
 2313      4E756D48 
 2313      66726F6F 
 2313      7400
 2314              	.LASF33:
 2315 0916 52455345 		.ascii	"RESERVED4\000"
 2315      52564544 
 2315      3400
 2316              	.LASF112:
 2317 0920 666C6173 		.ascii	"flashEraseDelay\000"
 2317      68457261 
 2317      73654465 
 2317      6C617900 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 79


 2318              	.LASF132:
 2319 0930 70657269 		.ascii	"periDiv8CtlOffset\000"
 2319      44697638 
 2319      43746C4F 
 2319      66667365 
 2319      7400
 2320              	.LASF16:
 2321 0942 75696E74 		.ascii	"uint32_t\000"
 2321      33325F74 
 2321      00
 2322              	.LASF106:
 2323 094b 70726F74 		.ascii	"protBusMasterMask\000"
 2323      4275734D 
 2323      61737465 
 2323      724D6173 
 2323      6B00
 2324              	.LASF185:
 2325 095d 76726566 		.ascii	"vrefMvValue\000"
 2325      4D765661 
 2325      6C756500 
 2326              	.LASF198:
 2327 0969 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2327      43313120 
 2327      352E342E 
 2327      31203230 
 2327      31363036 
 2328 099c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2328      20726576 
 2328      6973696F 
 2328      6E203233 
 2328      37373135 
 2329 09cf 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2329      67202D66 
 2329      66756E63 
 2329      74696F6E 
 2329      2D736563 
 2330              	.LASF70:
 2331 09fb 6C6F6E67 		.ascii	"long double\000"
 2331      20646F75 
 2331      626C6500 
 2332              	.LASF159:
 2333 0a07 63686172 		.ascii	"char\000"
 2333      00
 2334              	.LASF89:
 2335 0a0c 70726F74 		.ascii	"protVersion\000"
 2335      56657273 
 2335      696F6E00 
 2336              	.LASF152:
 2337 0a18 63707573 		.ascii	"cpussRam0Ctl0\000"
 2337      7352616D 
 2337      3043746C 
 2337      3000
 2338              	.LASF197:
 2339 0a26 4144435F 		.ascii	"ADC_allConfigs\000"
 2339      616C6C43 
 2339      6F6E6669 
 2339      677300
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 80


 2340              	.LASF5:
 2341 0a35 5F5F7569 		.ascii	"__uint16_t\000"
 2341      6E743136 
 2341      5F7400
 2342              	.LASF133:
 2343 0a40 70657269 		.ascii	"periDiv16CtlOffset\000"
 2343      44697631 
 2343      3643746C 
 2343      4F666673 
 2343      657400
 2344              	.LASF13:
 2345 0a53 75696E74 		.ascii	"uint8_t\000"
 2345      385F7400 
 2346              	.LASF86:
 2347 0a5b 6873696F 		.ascii	"hsiomVersion\000"
 2347      6D566572 
 2347      73696F6E 
 2347      00
 2348              	.LASF44:
 2349 0a68 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 2349      52415445 
 2349      5F494E54 
 2349      525F4D41 
 2349      534B00
 2350              	.LASF38:
 2351 0a7b 494E5452 		.ascii	"INTR\000"
 2351      00
 2352              	.LASF171:
 2353 0a80 6374726C 		.ascii	"ctrl\000"
 2353      00
 2354              	.LASF114:
 2355 0a85 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2355      6843746C 
 2355      4D61696E 
 2355      57733146 
 2355      72657100 
 2356              	.LASF205:
 2357 0a99 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 2357      79734C69 
 2357      625F4173 
 2357      73657274 
 2357      4661696C 
 2358              	.LASF119:
 2359 0ab0 64774368 		.ascii	"dwChSize\000"
 2359      53697A65 
 2359      00
 2360              	.LASF155:
 2361 0ab9 69706353 		.ascii	"ipcStructSize\000"
 2361      74727563 
 2361      7453697A 
 2361      6500
 2362              	.LASF30:
 2363 0ac7 4348414E 		.ascii	"CHAN_WORK\000"
 2363      5F574F52 
 2363      4B00
 2364              	.LASF94:
 2365 0ad1 63707573 		.ascii	"cpussIpc0Irq\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 81


 2365      73497063 
 2365      30497271 
 2365      00
 2366              	.LASF63:
 2367 0ade 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 2367      53574954 
 2367      43485F53 
 2367      515F4354 
 2367      524C00
 2368              	.LASF18:
 2369 0af1 4354524C 		.ascii	"CTRL\000"
 2369      00
 2370              	.LASF137:
 2371 0af6 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2371      50727443 
 2371      66674F66 
 2371      66736574 
 2371      00
 2372              	.LASF113:
 2373 0b07 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2373      6843746C 
 2373      4D61696E 
 2373      57733046 
 2373      72657100 
 2374              	.LASF56:
 2375 0b1b 53544154 		.ascii	"STATUS\000"
 2375      555300
 2376              	.LASF176:
 2377 0b22 72616E67 		.ascii	"rangeCond\000"
 2377      65436F6E 
 2377      6400
 2378              	.LASF96:
 2379 0b2c 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2379      734E6F74 
 2379      436F6E6E 
 2379      65637465 
 2379      64497271 
 2380              	.LASF110:
 2381 0b41 666C6173 		.ascii	"flashWriteDelay\000"
 2381      68577269 
 2381      74654465 
 2381      6C617900 
 2382              	.LASF172:
 2383 0b51 73616D70 		.ascii	"sampleCtrl\000"
 2383      6C654374 
 2383      726C00
 2384              	.LASF35:
 2385 0b5c 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 2385      5F524553 
 2385      554C545F 
 2385      55504441 
 2385      54454400 
 2386              	.LASF170:
 2387 0b70 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 2387      41525F49 
 2387      4E54525F 
 2387      46575F43 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 82


 2387      4F4C4C49 
 2388              	.LASF143:
 2389 0b8e 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2389      73436D34 
 2389      53746174 
 2389      75734F66 
 2389      66736574 
 2390              	.LASF136:
 2391 0ba3 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2391      50727449 
 2391      6E747243 
 2391      66674F66 
 2391      66736574 
 2392              	.LASF165:
 2393 0bb8 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 2393      41525F52 
 2393      414E4745 
 2393      5F434F4E 
 2393      445F4F55 
 2394              	.LASF147:
 2395 0bd2 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2395      73547269 
 2395      6D526F6D 
 2395      43746C4F 
 2395      66667365 
 2396              	.LASF47:
 2397 0be8 52414E47 		.ascii	"RANGE_INTR_SET\000"
 2397      455F494E 
 2397      54525F53 
 2397      455400
 2398              	.LASF97:
 2399 0bf7 73727373 		.ascii	"srssNumClkpath\000"
 2399      4E756D43 
 2399      6C6B7061 
 2399      746800
 2400              	.LASF183:
 2401 0c06 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 2401      77697463 
 2401      68537143 
 2401      74726C00 
 2402              	.LASF83:
 2403 0c16 64775665 		.ascii	"dwVersion\000"
 2403      7273696F 
 2403      6E00
 2404              	.LASF79:
 2405 0c20 69706342 		.ascii	"ipcBase\000"
 2405      61736500 
 2406              	.LASF49:
 2407 0c28 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 2407      455F494E 
 2407      54525F4D 
 2407      41534B45 
 2407      4400
 2408              	.LASF130:
 2409 0c3a 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2409      44697643 
 2409      6D645061 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cclNe57Y.s 			page 83


 2409      44697653 
 2409      656C506F 
 2410              	.LASF45:
 2411 0c50 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 2411      52415445 
 2411      5F494E54 
 2411      525F4D41 
 2411      534B4544 
 2412              	.LASF111:
 2413 0c65 666C6173 		.ascii	"flashProgramDelay\000"
 2413      6850726F 
 2413      6772616D 
 2413      44656C61 
 2413      7900
 2414              	.LASF108:
 2415 0c77 666C6173 		.ascii	"flashRwwRequired\000"
 2415      68527777 
 2415      52657175 
 2415      69726564 
 2415      00
 2416              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
