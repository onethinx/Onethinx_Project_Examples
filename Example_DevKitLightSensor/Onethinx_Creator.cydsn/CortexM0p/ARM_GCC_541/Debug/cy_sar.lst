ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_sar.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_idiv
  20              		.section	.text.Cy_SAR_Init,"ax",%progbits
  21              		.align	2
  22              		.global	Cy_SAR_Init
  23              		.code	16
  24              		.thumb_func
  25              		.type	Cy_SAR_Init, %function
  26              	Cy_SAR_Init:
  27              	.LFB105:
  28              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \file cy_sar.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provides the public functions for the API for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #include "cy_sar.h"
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #ifdef CY_IP_MXS40PASS_SAR
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #if defined(__cplusplus)
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** extern "C" {
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #endif
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** static cy_stc_sar_state_backup_t enabledBeforeSleep =
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL,
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** };
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 2


  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Init
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Initialize all SAR configuration registers.
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If routing is to be configured, all switches will be cleared before
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * being initialized.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param config
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure containing configuration data. See \ref cy_stc_sar_config_t
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and guidance in the \ref group_sar_initialization section.
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : initialization complete
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, initialization incomplete
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INIT_CUSTOM
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config)
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  29              		.loc 1 57 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 4F46     		mov	r7, r9
  43 0004 4646     		mov	r6, r8
  44 0006 C0B4     		push	{r6, r7}
  45              		.cfi_def_cfa_offset 32
  46              		.cfi_offset 8, -32
  47              		.cfi_offset 9, -28
  48 0008 0700     		movs	r7, r0
  49 000a 0E00     		movs	r6, r1
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
  50              		.loc 1 58 0
  51 000c 0028     		cmp	r0, #0
  52 000e 03D1     		bne	.L2
  53              		.loc 1 58 0 is_stmt 0 discriminator 1
  54 0010 3A21     		movs	r1, #58
  55              	.LVL1:
  56 0012 7A48     		ldr	r0, .L26
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 3


  57              	.LVL2:
  58 0014 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  59              	.LVL3:
  60              	.L2:
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != config);
  61              		.loc 1 59 0 is_stmt 1
  62 0018 002E     		cmp	r6, #0
  63 001a 03D1     		bne	.L3
  64              		.loc 1 59 0 is_stmt 0 discriminator 1
  65 001c 3B21     		movs	r1, #59
  66 001e 7748     		ldr	r0, .L26
  67 0020 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  68              	.LVL4:
  69              	.L3:
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t counts;
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool vrefNegSelect;
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool singleEndedSigned;
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool chanSingleEnded;
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if ((NULL == base) || (NULL == config))
  70              		.loc 1 68 0 is_stmt 1
  71 0024 002F     		cmp	r7, #0
  72 0026 00D1     		bne	.LCB41
  73 0028 E0E0     		b	.L24	@long jump
  74              	.LCB41:
  75              		.loc 1 68 0 is_stmt 0 discriminator 1
  76 002a 002E     		cmp	r6, #0
  77 002c 00D1     		bne	.LCB43
  78 002e DFE0     		b	.L25	@long jump
  79              	.LCB43:
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_BAD_PARAM;
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CTRL(config->ctrl));
  80              		.loc 1 74 0 is_stmt 1
  81 0030 734B     		ldr	r3, .L26+4
  82 0032 3268     		ldr	r2, [r6]
  83 0034 1A42     		tst	r2, r3
  84 0036 03D0     		beq	.L5
  85              		.loc 1 74 0 is_stmt 0 discriminator 1
  86 0038 4A21     		movs	r1, #74
  87 003a 7048     		ldr	r0, .L26
  88 003c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  89              	.LVL5:
  90              	.L5:
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_CTRL(config->sampleCtrl));
  91              		.loc 1 75 0 is_stmt 1
  92 0040 704B     		ldr	r3, .L26+8
  93 0042 7268     		ldr	r2, [r6, #4]
  94 0044 1A42     		tst	r2, r3
  95 0046 03D0     		beq	.L6
  96              		.loc 1 75 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 4


  97 0048 4B21     		movs	r1, #75
  98 004a 6C48     		ldr	r0, .L26
  99 004c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 100              	.LVL6:
 101              	.L6:
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime01));
 102              		.loc 1 76 0 is_stmt 1
 103 0050 6D4B     		ldr	r3, .L26+12
 104 0052 B268     		ldr	r2, [r6, #8]
 105 0054 1A42     		tst	r2, r3
 106 0056 03D0     		beq	.L7
 107              		.loc 1 76 0 is_stmt 0 discriminator 1
 108 0058 4C21     		movs	r1, #76
 109 005a 6848     		ldr	r0, .L26
 110 005c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 111              	.LVL7:
 112              	.L7:
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime23));
 113              		.loc 1 77 0 is_stmt 1
 114 0060 694B     		ldr	r3, .L26+12
 115 0062 F268     		ldr	r2, [r6, #12]
 116 0064 1A42     		tst	r2, r3
 117 0066 03D0     		beq	.L8
 118              		.loc 1 77 0 is_stmt 0 discriminator 1
 119 0068 4D21     		movs	r1, #77
 120 006a 6448     		ldr	r0, .L26
 121 006c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 122              	.LVL8:
 123              	.L8:
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L3(CY_SAR_RANGECOND(config->rangeCond));
 124              		.loc 1 78 0 is_stmt 1
 125 0070 337D     		ldrb	r3, [r6, #20]
 126 0072 032B     		cmp	r3, #3
 127 0074 03D9     		bls	.L9
 128              		.loc 1 78 0 is_stmt 0 discriminator 1
 129 0076 4E21     		movs	r1, #78
 130 0078 6048     		ldr	r0, .L26
 131 007a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 132              	.LVL9:
 133              	.L9:
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->chanEn));
 134              		.loc 1 79 0 is_stmt 1
 135 007e 634B     		ldr	r3, .L26+16
 136 0080 B269     		ldr	r2, [r6, #24]
 137 0082 9A42     		cmp	r2, r3
 138 0084 03D9     		bls	.L10
 139              		.loc 1 79 0 is_stmt 0 discriminator 1
 140 0086 4F21     		movs	r1, #79
 141 0088 5C48     		ldr	r0, .L26
 142 008a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 143              	.LVL10:
 144              	.L10:
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_INTRMASK(config->intrMask));
 145              		.loc 1 80 0 is_stmt 1
 146 008e F36D     		ldr	r3, [r6, #92]
 147 0090 072B     		cmp	r3, #7
 148 0092 03D9     		bls	.L11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 5


 149              		.loc 1 80 0 is_stmt 0 discriminator 1
 150 0094 5021     		movs	r1, #80
 151 0096 5948     		ldr	r0, .L26
 152 0098 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 153              	.LVL11:
 154              	.L11:
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->satIntrMask));
 155              		.loc 1 81 0 is_stmt 1
 156 009c 5B4B     		ldr	r3, .L26+16
 157 009e 326E     		ldr	r2, [r6, #96]
 158 00a0 9A42     		cmp	r2, r3
 159 00a2 03D9     		bls	.L12
 160              		.loc 1 81 0 is_stmt 0 discriminator 1
 161 00a4 5121     		movs	r1, #81
 162 00a6 5548     		ldr	r0, .L26
 163 00a8 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 164              	.LVL12:
 165              	.L12:
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->rangeIntrMask));
 166              		.loc 1 82 0 is_stmt 1
 167 00ac 574B     		ldr	r3, .L26+16
 168 00ae 726E     		ldr	r2, [r6, #100]
 169 00b0 9A42     		cmp	r2, r3
 170 00b2 03D9     		bls	.L13
 171              		.loc 1 82 0 is_stmt 0 discriminator 1
 172 00b4 5221     		movs	r1, #82
 173 00b6 5148     		ldr	r0, .L26
 174 00b8 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 175              	.LVL13:
 176              	.L13:
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the EOS_DSI_OUT_EN bit so the EOS signal can be routed */
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = config->sampleCtrl | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk;
 177              		.loc 1 85 0 is_stmt 1
 178 00bc 8023     		movs	r3, #128
 179 00be 1B06     		lsls	r3, r3, #24
 180 00c0 7268     		ldr	r2, [r6, #4]
 181 00c2 1343     		orrs	r3, r2
 182 00c4 7B60     		str	r3, [r7, #4]
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
 183              		.loc 1 86 0
 184 00c6 B368     		ldr	r3, [r6, #8]
 185 00c8 3B61     		str	r3, [r7, #16]
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = config->sampleTime23;
 186              		.loc 1 87 0
 187 00ca F368     		ldr	r3, [r6, #12]
 188 00cc 7B61     		str	r3, [r7, #20]
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = config->rangeThres;
 189              		.loc 1 88 0
 190 00ce 3369     		ldr	r3, [r6, #16]
 191 00d0 BB61     		str	r3, [r7, #24]
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
 192              		.loc 1 89 0
 193 00d2 337D     		ldrb	r3, [r6, #20]
 194 00d4 9B07     		lsls	r3, r3, #30
 195 00d6 FB61     		str	r3, [r7, #28]
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 6


 196              		.loc 1 90 0
 197 00d8 B369     		ldr	r3, [r6, #24]
 198 00da 3B62     		str	r3, [r7, #32]
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether NEG_SEL is set for VREF */
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         vrefNegSelect = ((uint32_t)CY_SAR_NEG_SEL_VREF == (config->ctrl & SAR_CTRL_NEG_SEL_Msk))? t
 199              		.loc 1 93 0
 200 00dc E023     		movs	r3, #224
 201 00de 1B01     		lsls	r3, r3, #4
 202 00e0 3268     		ldr	r2, [r6]
 203 00e2 1A40     		ands	r2, r3
 204 00e4 9046     		mov	r8, r2
 205              	.LVL14:
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether single ended channels are set to signed */
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         singleEndedSigned = (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (config->sampleCtrl & SAR_S
 206              		.loc 1 95 0
 207 00e6 0423     		movs	r3, #4
 208 00e8 7268     		ldr	r2, [r6, #4]
 209              	.LVL15:
 210 00ea 1A40     		ands	r2, r3
 211 00ec 9146     		mov	r9, r2
 212              	.LVL16:
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 213              		.loc 1 97 0
 214 00ee 0024     		movs	r4, #0
 215 00f0 33E0     		b	.L14
 216              	.LVL17:
 217              	.L18:
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_CHAN_CONFIG(config->chanConfig[chan]));
 218              		.loc 1 99 0
 219 00f2 2500     		movs	r5, r4
 220 00f4 A31D     		adds	r3, r4, #6
 221 00f6 9B00     		lsls	r3, r3, #2
 222 00f8 F318     		adds	r3, r6, r3
 223 00fa 5A68     		ldr	r2, [r3, #4]
 224 00fc 444B     		ldr	r3, .L26+20
 225 00fe 1A42     		tst	r2, r3
 226 0100 03D0     		beq	.L15
 227              		.loc 1 99 0 is_stmt 0 discriminator 1
 228 0102 6321     		movs	r1, #99
 229 0104 3D48     		ldr	r0, .L26
 230 0106 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 231              	.LVL18:
 232              	.L15:
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = config->chanConfig[chan];
 233              		.loc 1 101 0 is_stmt 1
 234 010a AB1D     		adds	r3, r5, #6
 235 010c 9B00     		lsls	r3, r3, #2
 236 010e F318     		adds	r3, r6, r3
 237 0110 2A00     		movs	r2, r5
 238 0112 2032     		adds	r2, r2, #32
 239 0114 9200     		lsls	r2, r2, #2
 240 0116 5968     		ldr	r1, [r3, #4]
 241 0118 D151     		str	r1, [r2, r7]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 7


 242              	.LVL19:
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             counts = (int32_t) CY_SAR_WRK_MAX_12BIT;
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* For signed single ended channels with NEG_SEL set to VREF,
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****              * set the offset to minus half scale to convert results to unsigned format */
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             chanSingleEnded = (0uL == (config->chanConfig[chan] & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_
 243              		.loc 1 107 0
 244 011a 5A68     		ldr	r2, [r3, #4]
 245 011c 3D4B     		ldr	r3, .L26+24
 246              	.LVL20:
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (chanSingleEnded && vrefNegSelect && singleEndedSigned)
 247              		.loc 1 108 0
 248 011e 1A42     		tst	r2, r3
 249 0120 0BD1     		bne	.L16
 250              		.loc 1 108 0 is_stmt 0 discriminator 1
 251 0122 E023     		movs	r3, #224
 252              	.LVL21:
 253 0124 1B01     		lsls	r3, r3, #4
 254 0126 9845     		cmp	r8, r3
 255 0128 07D1     		bne	.L16
 256              		.loc 1 108 0 discriminator 2
 257 012a 4B46     		mov	r3, r9
 258 012c 002B     		cmp	r3, #0
 259 012e 04D0     		beq	.L16
 260              	.LVL22:
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = (int16_t) (counts / -2);
 261              		.loc 1 110 0 is_stmt 1
 262 0130 6B00     		lsls	r3, r5, #1
 263              	.LVL23:
 264 0132 3949     		ldr	r1, .L26+28
 265 0134 394A     		ldr	r2, .L26+32
 266              	.LVL24:
 267 0136 9952     		strh	r1, [r3, r2]
 268              	.LVL25:
 269 0138 03E0     		b	.L17
 270              	.LVL26:
 271              	.L16:
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = 0;
 272              		.loc 1 114 0
 273 013a 6B00     		lsls	r3, r5, #1
 274 013c 0021     		movs	r1, #0
 275 013e 374A     		ldr	r2, .L26+32
 276              	.LVL27:
 277 0140 9952     		strh	r1, [r3, r2]
 278              	.LVL28:
 279              	.L17:
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Calculate gain in counts per 10 volts with rounding */
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_countsPer10Volt[chan] = (int16_t)(((counts * CY_SAR_10MV_COUNTS) + (int32_t)conf
 280              		.loc 1 118 0 discriminator 2
 281 0142 716F     		ldr	r1, [r6, #116]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 8


 282 0144 364B     		ldr	r3, .L26+36
 283 0146 C818     		adds	r0, r1, r3
 284 0148 4900     		lsls	r1, r1, #1
 285 014a FFF7FEFF 		bl	__aeabi_idiv
 286              	.LVL29:
 287 014e 00B2     		sxth	r0, r0
 288 0150 AD00     		lsls	r5, r5, #2
 289 0152 344B     		ldr	r3, .L26+40
 290 0154 E850     		str	r0, [r5, r3]
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 291              		.loc 1 97 0 discriminator 2
 292 0156 0134     		adds	r4, r4, #1
 293              	.LVL30:
 294 0158 E4B2     		uxtb	r4, r4
 295              	.LVL31:
 296              	.L14:
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 297              		.loc 1 97 0 is_stmt 0 discriminator 1
 298 015a 0F2C     		cmp	r4, #15
 299 015c C9D9     		bls	.L18
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = config->intrMask;
 300              		.loc 1 120 0 is_stmt 1
 301 015e 8623     		movs	r3, #134
 302 0160 9B00     		lsls	r3, r3, #2
 303 0162 F26D     		ldr	r2, [r6, #92]
 304 0164 FA50     		str	r2, [r7, r3]
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = config->intrMask;
 305              		.loc 1 121 0
 306 0166 083B     		subs	r3, r3, #8
 307 0168 F26D     		ldr	r2, [r6, #92]
 308 016a FA50     		str	r2, [r7, r3]
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = config->satIntrMask;
 309              		.loc 1 122 0
 310 016c 1833     		adds	r3, r3, #24
 311 016e 326E     		ldr	r2, [r6, #96]
 312 0170 FA50     		str	r2, [r7, r3]
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR(base) = config->satIntrMask;
 313              		.loc 1 123 0
 314 0172 083B     		subs	r3, r3, #8
 315 0174 326E     		ldr	r2, [r6, #96]
 316 0176 FA50     		str	r2, [r7, r3]
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = config->rangeIntrMask;
 317              		.loc 1 124 0
 318 0178 1833     		adds	r3, r3, #24
 319 017a 726E     		ldr	r2, [r6, #100]
 320 017c FA50     		str	r2, [r7, r3]
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR(base) = config->rangeIntrMask;
 321              		.loc 1 125 0
 322 017e 083B     		subs	r3, r3, #8
 323 0180 726E     		ldr	r2, [r6, #100]
 324 0182 FA50     		str	r2, [r7, r3]
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set routing related registers if enabled */
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == config->configRouting)
 325              		.loc 1 128 0
 326 0184 C13B     		subs	r3, r3, #193
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 9


 327 0186 FF3B     		subs	r3, r3, #255
 328 0188 F35C     		ldrb	r3, [r6, r3]
 329 018a 002B     		cmp	r3, #0
 330 018c 19D0     		beq	.L19
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SWITCHMASK(config->muxSwitch));
 331              		.loc 1 130 0
 332 018e 264B     		ldr	r3, .L26+44
 333 0190 B26E     		ldr	r2, [r6, #104]
 334 0192 9A42     		cmp	r2, r3
 335 0194 03D9     		bls	.L20
 336              		.loc 1 130 0 is_stmt 0 discriminator 1
 337 0196 8221     		movs	r1, #130
 338 0198 1848     		ldr	r0, .L26
 339 019a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 340              	.LVL32:
 341              	.L20:
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SQMASK(config->muxSwitchSqCtrl));
 342              		.loc 1 131 0 is_stmt 1
 343 019e 234B     		ldr	r3, .L26+48
 344 01a0 F26E     		ldr	r2, [r6, #108]
 345 01a2 1A42     		tst	r2, r3
 346 01a4 03D0     		beq	.L21
 347              		.loc 1 131 0 is_stmt 0 discriminator 1
 348 01a6 8321     		movs	r1, #131
 349 01a8 1448     		ldr	r0, .L26
 350 01aa FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 351              	.LVL33:
 352              	.L21:
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Clear out all the switches so that only the desired switches in the config structure
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 353              		.loc 1 134 0 is_stmt 1
 354 01ae 1E4A     		ldr	r2, .L26+44
 355 01b0 C123     		movs	r3, #193
 356 01b2 9B00     		lsls	r3, r3, #2
 357 01b4 FA50     		str	r2, [r7, r3]
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH0(base) = config->muxSwitch;
 358              		.loc 1 136 0
 359 01b6 043B     		subs	r3, r3, #4
 360 01b8 B26E     		ldr	r2, [r6, #104]
 361 01ba FA50     		str	r2, [r7, r3]
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = config->muxSwitchSqCtrl;
 362              		.loc 1 137 0
 363 01bc 4433     		adds	r3, r3, #68
 364 01be F26E     		ldr	r2, [r6, #108]
 365 01c0 FA50     		str	r2, [r7, r3]
 366              	.L19:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the Cap trim if it was trimmed out of range from sflash */
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if ((CY_SAR_CAP_TRIM_MAX == SAR_ANA_TRIM0(base)) || (CY_SAR_CAP_TRIM_MIN == SAR_ANA_TRIM0(b
 367              		.loc 1 141 0
 368 01c2 F023     		movs	r3, #240
 369 01c4 1B01     		lsls	r3, r3, #4
 370 01c6 FB58     		ldr	r3, [r7, r3]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 10


 371 01c8 3F2B     		cmp	r3, #63
 372 01ca 04D0     		beq	.L22
 373              		.loc 1 141 0 is_stmt 0 discriminator 1
 374 01cc F023     		movs	r3, #240
 375 01ce 1B01     		lsls	r3, r3, #4
 376 01d0 FB58     		ldr	r3, [r7, r3]
 377 01d2 002B     		cmp	r3, #0
 378 01d4 03D1     		bne	.L23
 379              	.L22:
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_ANA_TRIM0(base) = CY_SAR_CAP_TRIM;
 380              		.loc 1 143 0 is_stmt 1
 381 01d6 0B22     		movs	r2, #11
 382 01d8 F023     		movs	r3, #240
 383 01da 1B01     		lsls	r3, r3, #4
 384 01dc FA50     		str	r2, [r7, r3]
 385              	.L23:
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the REFBUF_EN bit as this is required for proper operation. */
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = config->ctrl | SAR_CTRL_REFBUF_EN_Msk;
 386              		.loc 1 147 0
 387 01de 3368     		ldr	r3, [r6]
 388 01e0 8022     		movs	r2, #128
 389 01e2 9203     		lsls	r2, r2, #14
 390 01e4 1343     		orrs	r3, r2
 391 01e6 3B60     		str	r3, [r7]
 392              	.LVL34:
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 393              		.loc 1 149 0
 394 01e8 0020     		movs	r0, #0
 395 01ea 02E0     		b	.L4
 396              	.LVL35:
 397              	.L24:
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 398              		.loc 1 70 0
 399 01ec 1048     		ldr	r0, .L26+52
 400 01ee 00E0     		b	.L4
 401              	.L25:
 402 01f0 0F48     		ldr	r0, .L26+52
 403              	.L4:
 404              	.LVL36:
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 405              		.loc 1 153 0
 406              		@ sp needed
 407              	.LVL37:
 408              	.LVL38:
 409 01f2 0CBC     		pop	{r2, r3}
 410 01f4 9046     		mov	r8, r2
 411 01f6 9946     		mov	r9, r3
 412 01f8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 413              	.L27:
 414 01fa C046     		.align	2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 11


 415              	.L26:
 416 01fc 00000000 		.word	.LC0
 417 0200 0811DF00 		.word	14618888
 418 0204 01FE3020 		.word	540081665
 419 0208 00FC00FC 		.word	-67044352
 420 020c FFFF0000 		.word	65535
 421 0210 88CA887E 		.word	2122893960
 422 0214 00010001 		.word	16777472
 423 0218 00F8FFFF 		.word	-2048
 424 021c 00000000 		.word	Cy_SAR_offset
 425 0220 00007102 		.word	40960000
 426 0224 00000000 		.word	Cy_SAR_countsPer10Volt
 427 0228 FFFFFF3F 		.word	1073741823
 428 022c 00FF30FF 		.word	-13566208
 429 0230 01000600 		.word	393217
 430              		.cfi_endproc
 431              	.LFE105:
 432              		.size	Cy_SAR_Init, .-Cy_SAR_Init
 433              		.section	.text.Cy_SAR_DeInit,"ax",%progbits
 434              		.align	2
 435              		.global	Cy_SAR_DeInit
 436              		.code	16
 437              		.thumb_func
 438              		.type	Cy_SAR_DeInit, %function
 439              	Cy_SAR_DeInit:
 440              	.LFB106:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeInit
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Reset SAR registers back to power on reset defaults.
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The \ref Cy_SAR_offset and \ref Cy_SAR_countsPer10Volt arrays are NOT reset.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param deInitRouting
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If true, all SARMUX switches are opened and switch control registers are reset
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * to zero. If false, switch registers are untouched.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : de-initialization complete
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, de-initialization incomplete
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEINIT
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting)
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 441              		.loc 1 180 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 12


 445              	.LVL39:
 446 0000 70B5     		push	{r4, r5, r6, lr}
 447              		.cfi_def_cfa_offset 16
 448              		.cfi_offset 4, -16
 449              		.cfi_offset 5, -12
 450              		.cfi_offset 6, -8
 451              		.cfi_offset 14, -4
 452 0002 0500     		movs	r5, r0
 453 0004 0C00     		movs	r4, r1
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
 454              		.loc 1 181 0
 455 0006 0028     		cmp	r0, #0
 456 0008 03D1     		bne	.L29
 457              		.loc 1 181 0 is_stmt 0 discriminator 1
 458 000a B521     		movs	r1, #181
 459              	.LVL40:
 460 000c 1848     		ldr	r0, .L35
 461              	.LVL41:
 462 000e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 463              	.LVL42:
 464              	.L29:
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (NULL == base)
 465              		.loc 1 186 0 is_stmt 1
 466 0012 002D     		cmp	r5, #0
 467 0014 28D0     		beq	.L33
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****        result = CY_SAR_BAD_PARAM;
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = CY_SAR_DEINIT;
 468              		.loc 1 192 0
 469 0016 0023     		movs	r3, #0
 470 0018 2B60     		str	r3, [r5]
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 471              		.loc 1 193 0
 472 001a 6B60     		str	r3, [r5, #4]
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 473              		.loc 1 194 0
 474 001c 154A     		ldr	r2, .L35+4
 475 001e 2A61     		str	r2, [r5, #16]
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 476              		.loc 1 195 0
 477 0020 6A61     		str	r2, [r5, #20]
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = CY_SAR_DEINIT;
 478              		.loc 1 196 0
 479 0022 AB61     		str	r3, [r5, #24]
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = CY_SAR_DEINIT;
 480              		.loc 1 197 0
 481 0024 EB61     		str	r3, [r5, #28]
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = CY_SAR_DEINIT;
 482              		.loc 1 198 0
 483 0026 2B62     		str	r3, [r5, #32]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 13


 484              	.LVL43:
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 485              		.loc 1 199 0
 486 0028 06E0     		b	.L31
 487              	.LVL44:
 488              	.L32:
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = CY_SAR_DEINIT;
 489              		.loc 1 201 0 discriminator 3
 490 002a 1A00     		movs	r2, r3
 491 002c 2032     		adds	r2, r2, #32
 492 002e 9200     		lsls	r2, r2, #2
 493 0030 0021     		movs	r1, #0
 494 0032 5151     		str	r1, [r2, r5]
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 495              		.loc 1 199 0 discriminator 3
 496 0034 0133     		adds	r3, r3, #1
 497              	.LVL45:
 498 0036 DBB2     		uxtb	r3, r3
 499              	.LVL46:
 500              	.L31:
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 501              		.loc 1 199 0 is_stmt 0 discriminator 1
 502 0038 0F2B     		cmp	r3, #15
 503 003a F6D9     		bls	.L32
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = CY_SAR_DEINIT;
 504              		.loc 1 203 0 is_stmt 1
 505 003c 0023     		movs	r3, #0
 506              	.LVL47:
 507 003e 8622     		movs	r2, #134
 508 0040 9200     		lsls	r2, r2, #2
 509 0042 AB50     		str	r3, [r5, r2]
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = CY_SAR_DEINIT;
 510              		.loc 1 204 0
 511 0044 1032     		adds	r2, r2, #16
 512 0046 AB50     		str	r3, [r5, r2]
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = CY_SAR_DEINIT;
 513              		.loc 1 205 0
 514 0048 1032     		adds	r2, r2, #16
 515 004a AB50     		str	r3, [r5, r2]
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == deInitRouting)
 516              		.loc 1 206 0
 517 004c 002C     		cmp	r4, #0
 518 004e 0DD0     		beq	.L34
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 519              		.loc 1 208 0
 520 0050 094A     		ldr	r2, .L35+8
 521 0052 C123     		movs	r3, #193
 522 0054 9B00     		lsls	r3, r3, #2
 523 0056 EA50     		str	r2, [r5, r3]
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_DS_CTRL(base) = CY_SAR_DEINIT;
 524              		.loc 1 209 0
 525 0058 0023     		movs	r3, #0
 526 005a D022     		movs	r2, #208
 527 005c 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 14


 528 005e AB50     		str	r3, [r5, r2]
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = CY_SAR_DEINIT;
 529              		.loc 1 210 0
 530 0060 0432     		adds	r2, r2, #4
 531 0062 AB50     		str	r3, [r5, r2]
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 532              		.loc 1 212 0
 533 0064 0020     		movs	r0, #0
 534 0066 02E0     		b	.L30
 535              	.L33:
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 536              		.loc 1 188 0
 537 0068 0448     		ldr	r0, .L35+12
 538 006a 00E0     		b	.L30
 539              	.L34:
 540              		.loc 1 212 0
 541 006c 0020     		movs	r0, #0
 542              	.L30:
 543              	.LVL48:
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 544              		.loc 1 216 0
 545              		@ sp needed
 546              	.LVL49:
 547 006e 70BD     		pop	{r4, r5, r6, pc}
 548              	.L36:
 549              		.align	2
 550              	.L35:
 551 0070 00000000 		.word	.LC0
 552 0074 03000300 		.word	196611
 553 0078 FFFFFF3F 		.word	1073741823
 554 007c 01000600 		.word	393217
 555              		.cfi_endproc
 556              	.LFE106:
 557              		.size	Cy_SAR_DeInit, .-Cy_SAR_DeInit
 558              		.section	.text.Cy_SAR_Enable,"ax",%progbits
 559              		.align	2
 560              		.global	Cy_SAR_Enable
 561              		.code	16
 562              		.thumb_func
 563              		.type	Cy_SAR_Enable, %function
 564              	Cy_SAR_Enable:
 565              	.LFB107:
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Enable
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Power up the SAR ADC subsystem block. The hardware is ready to use
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * after 2 us, which is included in this function.
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 15


 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Enable(SAR_Type *base)
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 566              		.loc 1 233 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL50:
 571 0000 10B5     		push	{r4, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 4, -8
 574              		.cfi_offset 14, -4
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (0uL == (SAR_CTRL(base) & SAR_CTRL_ENABLED_Msk))
 575              		.loc 1 234 0
 576 0002 0368     		ldr	r3, [r0]
 577 0004 002B     		cmp	r3, #0
 578 0006 0CDB     		blt	.L37
 579              	.L39:
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 580              		.loc 1 236 0 discriminator 1
 581 0008 A823     		movs	r3, #168
 582 000a 9B00     		lsls	r3, r3, #2
 583 000c C358     		ldr	r3, [r0, r3]
 584 000e 002B     		cmp	r3, #0
 585 0010 FADB     		blt	.L39
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to go idle to avoid deadlock */
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) |= SAR_CTRL_ENABLED_Msk;
 586              		.loc 1 241 0
 587 0012 0368     		ldr	r3, [r0]
 588 0014 8022     		movs	r2, #128
 589 0016 1206     		lsls	r2, r2, #24
 590 0018 1343     		orrs	r3, r2
 591 001a 0360     		str	r3, [r0]
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* The block is ready to use 2 us after the enable signal is set high. */
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SysLib_DelayUs(CY_SAR_2US_DELAY);
 592              		.loc 1 244 0
 593 001c 0220     		movs	r0, #2
 594              	.LVL51:
 595 001e FFF7FEFF 		bl	Cy_SysLib_DelayUs
 596              	.LVL52:
 597              	.L37:
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 598              		.loc 1 246 0
 599              		@ sp needed
 600 0022 10BD     		pop	{r4, pc}
 601              		.cfi_endproc
 602              	.LFE107:
 603              		.size	Cy_SAR_Enable, .-Cy_SAR_Enable
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 16


 604              		.section	.text.Cy_SAR_StartConvert,"ax",%progbits
 605              		.align	2
 606              		.global	Cy_SAR_StartConvert
 607              		.code	16
 608              		.thumb_func
 609              		.type	Cy_SAR_StartConvert, %function
 610              	Cy_SAR_StartConvert:
 611              	.LFB110:
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleep
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to prepare the hardware for Deep Sleep.
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * It will call \ref Cy_SAR_StopConvert to disable continuous conversions
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and wait for SAR conversions to stop before entering Deep Sleep.
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARMUX is not configured for Deep Sleep operation, the entire SAR hardware
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * block will be turned off.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_DeepSleep(SAR_Type *base)
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     enabledBeforeSleep.hwEnabled = ctrlReg & SAR_CTRL_ENABLED_Msk;
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn off the reference buffer */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     ctrlReg &= ~SAR_CTRL_REFBUF_EN_Msk;
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Save state of CONTINUOUS bit so that conversions can be re-started upon wake-up */
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         enabledBeforeSleep.continuous = SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_StopConvert(base);
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to stop conversions before entering low power */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Turn off the entire hardware block only if the SARMUX is not
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****          * enabled for Deep Sleep operation. */
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_CTRL_DEEPSLEEP_ON_Msk != (ctrlReg & SAR_CTRL_DEEPSLEEP_ON_Msk))
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 17


 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) = ctrlReg;
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Wakeup
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to restore the hardware to the state after calling
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_DeepSleep. Restoring the hardware involves re-enabling the hardware,
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the reference buffer, and continuous scanning if it was previously
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * enabled before entering sleep.
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Calling this function without previously calling \ref Cy_SAR_DeepSleep can lead to
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * unpredictable results.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Wakeup(SAR_Type *base)
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) |= SAR_CTRL_REFBUF_EN_Msk;
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Enable(base);
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == enabledBeforeSleep.continuous)
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_StartConvert(base, CY_SAR_START_CONVERT_CONTINUOUS);
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StartConvert
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Start a single scan (one shot) of all enabled channels or start scanning
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * continuously. When in continuous mode, all firmware and hardware triggers
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * are ignored. To stop continuous scanning, call \ref Cy_SAR_StopConvert.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 18


 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param startSelect
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_start_convert_sel_t
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_START_CONVERT
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect)
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 612              		.loc 1 368 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              	.LVL53:
 617 0000 70B5     		push	{r4, r5, r6, lr}
 618              		.cfi_def_cfa_offset 16
 619              		.cfi_offset 4, -16
 620              		.cfi_offset 5, -12
 621              		.cfi_offset 6, -8
 622              		.cfi_offset 14, -4
 623 0002 0500     		movs	r5, r0
 624 0004 0C00     		movs	r4, r1
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_STARTCONVERT(startSelect));
 625              		.loc 1 369 0
 626 0006 0129     		cmp	r1, #1
 627 0008 04D9     		bls	.L41
 628              		.loc 1 369 0 is_stmt 0 discriminator 1
 629 000a 7221     		movs	r1, #114
 630              	.LVL54:
 631 000c FF31     		adds	r1, r1, #255
 632 000e 0748     		ldr	r0, .L46
 633              	.LVL55:
 634 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 635              	.LVL56:
 636              	.L41:
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(startSelect)
 637              		.loc 1 371 0 is_stmt 1
 638 0014 012C     		cmp	r4, #1
 639 0016 05D1     		bne	.L45
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) |= SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 640              		.loc 1 374 0
 641 0018 6B68     		ldr	r3, [r5, #4]
 642 001a 8022     		movs	r2, #128
 643 001c 5202     		lsls	r2, r2, #9
 644 001e 1343     		orrs	r3, r2
 645 0020 6B60     		str	r3, [r5, #4]
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 19


 646              		.loc 1 375 0
 647 0022 01E0     		b	.L40
 648              	.L45:
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_START_CTRL(base) = SAR_START_CTRL_FW_TRIGGER_Msk;
 649              		.loc 1 378 0
 650 0024 0123     		movs	r3, #1
 651 0026 6B62     		str	r3, [r5, #36]
 652              	.L40:
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 653              		.loc 1 381 0
 654              		@ sp needed
 655              	.LVL57:
 656 0028 70BD     		pop	{r4, r5, r6, pc}
 657              	.L47:
 658 002a C046     		.align	2
 659              	.L46:
 660 002c 00000000 		.word	.LC0
 661              		.cfi_endproc
 662              	.LFE110:
 663              		.size	Cy_SAR_StartConvert, .-Cy_SAR_StartConvert
 664              		.section	.text.Cy_SAR_Wakeup,"ax",%progbits
 665              		.align	2
 666              		.global	Cy_SAR_Wakeup
 667              		.code	16
 668              		.thumb_func
 669              		.type	Cy_SAR_Wakeup, %function
 670              	Cy_SAR_Wakeup:
 671              	.LFB109:
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 672              		.loc 1 330 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              	.LVL58:
 677 0000 10B5     		push	{r4, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 4, -8
 680              		.cfi_offset 14, -4
 681 0002 0400     		movs	r4, r0
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 682              		.loc 1 332 0
 683 0004 0368     		ldr	r3, [r0]
 684 0006 8022     		movs	r2, #128
 685 0008 9203     		lsls	r2, r2, #14
 686 000a 1343     		orrs	r3, r2
 687 000c 0360     		str	r3, [r0]
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 688              		.loc 1 334 0
 689 000e 094B     		ldr	r3, .L50
 690 0010 1A68     		ldr	r2, [r3]
 691 0012 8023     		movs	r3, #128
 692 0014 1B06     		lsls	r3, r3, #24
 693 0016 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 20


 694 0018 0BD1     		bne	.L48
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 695              		.loc 1 336 0
 696 001a FFF7FEFF 		bl	Cy_SAR_Enable
 697              	.LVL59:
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 698              		.loc 1 338 0
 699 001e 054B     		ldr	r3, .L50
 700 0020 5A68     		ldr	r2, [r3, #4]
 701 0022 8023     		movs	r3, #128
 702 0024 5B02     		lsls	r3, r3, #9
 703 0026 9A42     		cmp	r2, r3
 704 0028 03D1     		bne	.L48
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 705              		.loc 1 340 0
 706 002a 0121     		movs	r1, #1
 707 002c 2000     		movs	r0, r4
 708 002e FFF7FEFF 		bl	Cy_SAR_StartConvert
 709              	.LVL60:
 710              	.L48:
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 711              		.loc 1 343 0
 712              		@ sp needed
 713              	.LVL61:
 714 0032 10BD     		pop	{r4, pc}
 715              	.L51:
 716              		.align	2
 717              	.L50:
 718 0034 00000000 		.word	.LANCHOR0
 719              		.cfi_endproc
 720              	.LFE109:
 721              		.size	Cy_SAR_Wakeup, .-Cy_SAR_Wakeup
 722              		.section	.text.Cy_SAR_StopConvert,"ax",%progbits
 723              		.align	2
 724              		.global	Cy_SAR_StopConvert
 725              		.code	16
 726              		.thumb_func
 727              		.type	Cy_SAR_StopConvert, %function
 728              	Cy_SAR_StopConvert:
 729              	.LFB111:
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StopConvert
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Stop continuous scanning of enabled channels.
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If a conversion is currently executing, that conversion will complete,
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * but no further conversions will occur until the next call to
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_StartConvert or the next hardware trigger, if enabled.
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 21


 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_STOP_CONVERT
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StopConvert(SAR_Type *base)
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 730              		.loc 1 404 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL62:
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk))
 736              		.loc 1 405 0
 737 0000 4368     		ldr	r3, [r0, #4]
 738 0002 DB03     		lsls	r3, r3, #15
 739 0004 03D5     		bpl	.L52
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) &= ~SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 740              		.loc 1 407 0
 741 0006 4268     		ldr	r2, [r0, #4]
 742 0008 014B     		ldr	r3, .L54
 743 000a 1340     		ands	r3, r2
 744 000c 4360     		str	r3, [r0, #4]
 745              	.L52:
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 746              		.loc 1 409 0
 747              		@ sp needed
 748 000e 7047     		bx	lr
 749              	.L55:
 750              		.align	2
 751              	.L54:
 752 0010 FFFFFEFF 		.word	-65537
 753              		.cfi_endproc
 754              	.LFE111:
 755              		.size	Cy_SAR_StopConvert, .-Cy_SAR_StopConvert
 756              		.section	.text.Cy_SAR_DeepSleep,"ax",%progbits
 757              		.align	2
 758              		.global	Cy_SAR_DeepSleep
 759              		.code	16
 760              		.thumb_func
 761              		.type	Cy_SAR_DeepSleep, %function
 762              	Cy_SAR_DeepSleep:
 763              	.LFB108:
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 764              		.loc 1 272 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              	.LVL63:
 769 0000 70B5     		push	{r4, r5, r6, lr}
 770              		.cfi_def_cfa_offset 16
 771              		.cfi_offset 4, -16
 772              		.cfi_offset 5, -12
 773              		.cfi_offset 6, -8
 774              		.cfi_offset 14, -4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 22


 775 0002 0400     		movs	r4, r0
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 776              		.loc 1 273 0
 777 0004 0668     		ldr	r6, [r0]
 778              	.LVL64:
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 779              		.loc 1 275 0
 780 0006 F30F     		lsrs	r3, r6, #31
 781 0008 DB07     		lsls	r3, r3, #31
 782 000a 0D4A     		ldr	r2, .L59
 783 000c 1360     		str	r3, [r2]
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 784              		.loc 1 278 0
 785 000e 0D4D     		ldr	r5, .L59+4
 786 0010 3540     		ands	r5, r6
 787              	.LVL65:
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 788              		.loc 1 280 0
 789 0012 002B     		cmp	r3, #0
 790 0014 12D0     		beq	.L57
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 791              		.loc 1 284 0
 792 0016 4268     		ldr	r2, [r0, #4]
 793 0018 8023     		movs	r3, #128
 794 001a 5B02     		lsls	r3, r3, #9
 795 001c 1340     		ands	r3, r2
 796 001e 084A     		ldr	r2, .L59
 797 0020 5360     		str	r3, [r2, #4]
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 798              		.loc 1 286 0
 799 0022 FFF7FEFF 		bl	Cy_SAR_StopConvert
 800              	.LVL66:
 801              	.L58:
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 802              		.loc 1 288 0 discriminator 1
 803 0026 A823     		movs	r3, #168
 804 0028 9B00     		lsls	r3, r3, #2
 805 002a E358     		ldr	r3, [r4, r3]
 806 002c 002B     		cmp	r3, #0
 807 002e FADB     		blt	.L58
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 808              		.loc 1 295 0
 809 0030 3301     		lsls	r3, r6, #4
 810 0032 03D4     		bmi	.L57
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 811              		.loc 1 297 0
 812 0034 2368     		ldr	r3, [r4]
 813 0036 5B00     		lsls	r3, r3, #1
 814 0038 5B08     		lsrs	r3, r3, #1
 815 003a 2360     		str	r3, [r4]
 816              	.L57:
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 817              		.loc 1 301 0
 818 003c 2560     		str	r5, [r4]
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 819              		.loc 1 302 0
 820              		@ sp needed
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 23


 821              	.LVL67:
 822              	.LVL68:
 823              	.LVL69:
 824 003e 70BD     		pop	{r4, r5, r6, pc}
 825              	.L60:
 826              		.align	2
 827              	.L59:
 828 0040 00000000 		.word	.LANCHOR0
 829 0044 FFFFDFFF 		.word	-2097153
 830              		.cfi_endproc
 831              	.LFE108:
 832              		.size	Cy_SAR_DeepSleep, .-Cy_SAR_DeepSleep
 833              		.section	.text.Cy_SAR_SetConvertMode,"ax",%progbits
 834              		.align	2
 835              		.global	Cy_SAR_SetConvertMode
 836              		.code	16
 837              		.thumb_func
 838              		.type	Cy_SAR_SetConvertMode, %function
 839              	Cy_SAR_SetConvertMode:
 840              	.LFB112:
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetConvertMode
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the mode in which conversions are triggered. This function does
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not start any conversions; it only configures the mode for subsequent conversions.
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * There are three modes:
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware only; hardware triggering is disabled
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and edge sensitive hardware triggering
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and level sensitive hardware triggering
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Note that firmware triggering is always enabled.
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_sample_ctrl_trigger_mode_t
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_CONVERT_MODE
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode)
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 841              		.loc 1 440 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              	.LVL70:
 846 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 24


 847              		.cfi_def_cfa_offset 16
 848              		.cfi_offset 4, -16
 849              		.cfi_offset 5, -12
 850              		.cfi_offset 6, -8
 851              		.cfi_offset 14, -4
 852 0002 0500     		movs	r5, r0
 853 0004 0C1E     		subs	r4, r1, #0
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_TRIGGER(mode));
 854              		.loc 1 441 0
 855 0006 0CD0     		beq	.L62
 856              		.loc 1 441 0 is_stmt 0 discriminator 1
 857 0008 8023     		movs	r3, #128
 858 000a 9B02     		lsls	r3, r3, #10
 859 000c 9942     		cmp	r1, r3
 860 000e 08D0     		beq	.L62
 861              		.loc 1 441 0 discriminator 2
 862 0010 C023     		movs	r3, #192
 863 0012 DB02     		lsls	r3, r3, #11
 864 0014 9942     		cmp	r1, r3
 865 0016 04D0     		beq	.L62
 866              		.loc 1 441 0 discriminator 3
 867 0018 BA21     		movs	r1, #186
 868              	.LVL71:
 869 001a FF31     		adds	r1, r1, #255
 870 001c 0448     		ldr	r0, .L63
 871              	.LVL72:
 872 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 873              	.LVL73:
 874              	.L62:
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the TRIGGER_EN and TRIGGER_LEVEL bits */
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t sampleCtrlReg = SAR_SAMPLE_CTRL(base) & ~(SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAM
 875              		.loc 1 444 0 is_stmt 1
 876 0022 6968     		ldr	r1, [r5, #4]
 877 0024 034B     		ldr	r3, .L63+4
 878 0026 1940     		ands	r1, r3
 879              	.LVL74:
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_SAMPLE_CTRL(base) = sampleCtrlReg | mode;
 880              		.loc 1 446 0
 881 0028 2143     		orrs	r1, r4
 882              	.LVL75:
 883 002a 6960     		str	r1, [r5, #4]
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 884              		.loc 1 447 0
 885              		@ sp needed
 886              	.LVL76:
 887              	.LVL77:
 888 002c 70BD     		pop	{r4, r5, r6, pc}
 889              	.L64:
 890 002e C046     		.align	2
 891              	.L63:
 892 0030 00000000 		.word	.LC0
 893 0034 FFFFF9FF 		.word	-393217
 894              		.cfi_endproc
 895              	.LFE112:
 896              		.size	Cy_SAR_SetConvertMode, .-Cy_SAR_SetConvertMode
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 25


 897              		.section	.text.Cy_SAR_IsEndConversion,"ax",%progbits
 898              		.align	2
 899              		.global	Cy_SAR_IsEndConversion
 900              		.code	16
 901              		.thumb_func
 902              		.type	Cy_SAR_IsEndConversion, %function
 903              	Cy_SAR_IsEndConversion:
 904              	.LFB113:
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsEndConversion
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Immediately return the status of the conversion or does not return (blocking)
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * until the conversion completes, depending on the retMode parameter.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 100 MHz.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param retMode
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_return_mode_t
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : the last conversion is complete
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_CONVERSION_NOT_COMPLETE : the conversion has not completed
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_TIMEOUT : the watchdog timer has expired in blocking mode
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function reads the end of conversion status and clears it after.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_END_CONVERSION
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode)
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 905              		.loc 1 479 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              	.LVL78:
 910 0000 70B5     		push	{r4, r5, r6, lr}
 911              		.cfi_def_cfa_offset 16
 912              		.cfi_offset 4, -16
 913              		.cfi_offset 5, -12
 914              		.cfi_offset 6, -8
 915              		.cfi_offset 14, -4
 916 0002 0400     		movs	r4, r0
 917 0004 0D00     		movs	r5, r1
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_RETURN(retMode));
 918              		.loc 1 480 0
 919 0006 0129     		cmp	r1, #1
 920 0008 04D9     		bls	.L66
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 26


 921              		.loc 1 480 0 is_stmt 0 discriminator 1
 922 000a F021     		movs	r1, #240
 923              	.LVL79:
 924 000c 4900     		lsls	r1, r1, #1
 925 000e 1448     		ldr	r0, .L76
 926              	.LVL80:
 927 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 928              	.LVL81:
 929              	.L66:
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 930              		.loc 1 484 0 is_stmt 1
 931 0014 8423     		movs	r3, #132
 932 0016 9B00     		lsls	r3, r3, #2
 933 0018 E358     		ldr	r3, [r4, r3]
 934 001a 0122     		movs	r2, #1
 935 001c 1340     		ands	r3, r2
 936              	.LVL82:
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t wdt = 0x1555555uL; /* Watchdog timer for blocking while loop */
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(retMode)
 937              		.loc 1 487 0
 938 001e 012D     		cmp	r5, #1
 939 0020 07D0     		beq	.L73
 940 0022 0CE0     		b	.L75
 941              	.LVL83:
 942              	.L69:
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_WAIT_FOR_RESULT:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while((0uL == endOfConversion) && (0uL != wdt))
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 943              		.loc 1 492 0
 944 0024 8423     		movs	r3, #132
 945              	.LVL84:
 946 0026 9B00     		lsls	r3, r3, #2
 947 0028 E358     		ldr	r3, [r4, r3]
 948 002a 0121     		movs	r1, #1
 949 002c 0B40     		ands	r3, r1
 950              	.LVL85:
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             wdt--;
 951              		.loc 1 493 0
 952 002e 013A     		subs	r2, r2, #1
 953              	.LVL86:
 954 0030 00E0     		b	.L68
 955              	.LVL87:
 956              	.L73:
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 957              		.loc 1 487 0
 958 0032 0C4A     		ldr	r2, .L76+4
 959              	.LVL88:
 960              	.L68:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 961              		.loc 1 490 0
 962 0034 002B     		cmp	r3, #0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 27


 963 0036 03D1     		bne	.L67
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 964              		.loc 1 490 0 is_stmt 0 discriminator 1
 965 0038 002A     		cmp	r2, #0
 966 003a F3D1     		bne	.L69
 967 003c 00E0     		b	.L67
 968              	.LVL89:
 969              	.L75:
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 970              		.loc 1 485 0 is_stmt 1
 971 003e 094A     		ldr	r2, .L76+4
 972              	.LVL90:
 973              	.L67:
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_RETURN_STATUS:
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the EOS bit */
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_INTR_EOS_INTR_Msk == endOfConversion)
 974              		.loc 1 502 0
 975 0040 012B     		cmp	r3, #1
 976 0042 06D1     		bne	.L70
 977              	.LVL91:
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 978              		.loc 1 505 0
 979 0044 8423     		movs	r3, #132
 980              	.LVL92:
 981 0046 9B00     		lsls	r3, r3, #2
 982 0048 0122     		movs	r2, #1
 983              	.LVL93:
 984 004a E250     		str	r2, [r4, r3]
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Do a dummy read after write for buffered write */
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         (void) SAR_INTR(base);
 985              		.loc 1 507 0
 986 004c E358     		ldr	r3, [r4, r3]
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 987              		.loc 1 504 0
 988 004e 0020     		movs	r0, #0
 989 0050 04E0     		b	.L71
 990              	.LVL94:
 991              	.L70:
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (0uL == wdt)
 992              		.loc 1 509 0
 993 0052 002A     		cmp	r2, #0
 994 0054 01D1     		bne	.L74
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_TIMEOUT;
 995              		.loc 1 511 0
 996 0056 0448     		ldr	r0, .L76+8
 997 0058 00E0     		b	.L71
 998              	.L74:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 28


 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_CONVERSION_NOT_COMPLETE;
 999              		.loc 1 515 0
 1000 005a 0448     		ldr	r0, .L76+12
 1001              	.LVL95:
 1002              	.L71:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1003              		.loc 1 519 0
 1004              		@ sp needed
 1005              	.LVL96:
 1006 005c 70BD     		pop	{r4, r5, r6, pc}
 1007              	.L77:
 1008 005e C046     		.align	2
 1009              	.L76:
 1010 0060 00000000 		.word	.LC0
 1011 0064 55555501 		.word	22369621
 1012 0068 02000600 		.word	393218
 1013 006c 03000600 		.word	393219
 1014              		.cfi_endproc
 1015              	.LFE113:
 1016              		.size	Cy_SAR_IsEndConversion, .-Cy_SAR_IsEndConversion
 1017              		.section	.text.Cy_SAR_IsChannelSingleEnded,"ax",%progbits
 1018              		.align	2
 1019              		.global	Cy_SAR_IsChannelSingleEnded
 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	Cy_SAR_IsChannelSingleEnded, %function
 1023              	Cy_SAR_IsChannelSingleEnded:
 1024              	.LFB115:
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSigned
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel result is configured for signed format, else false.
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The formats for single-ended and differential channels are independent.
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function will first check whether the channel is single-ended or differential.
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SIGNED
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 29


 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan)
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSigned = false;
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Sign bits are stored separately for differential and single ended channels. */
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == Cy_SAR_IsChannelDifferential(base, chan))
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         else
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Single ended channel */
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSigned;
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSingleEnded
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel is single ended, else false
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SE
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan)
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1025              		.loc 1 595 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 30


 1029              	.LVL97:
 1030 0000 70B5     		push	{r4, r5, r6, lr}
 1031              		.cfi_def_cfa_offset 16
 1032              		.cfi_offset 4, -16
 1033              		.cfi_offset 5, -12
 1034              		.cfi_offset 6, -8
 1035              		.cfi_offset 14, -4
 1036 0002 0500     		movs	r5, r0
 1037 0004 0C00     		movs	r4, r1
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1038              		.loc 1 596 0
 1039 0006 0F29     		cmp	r1, #15
 1040 0008 04D9     		bls	.L79
 1041              		.loc 1 596 0 is_stmt 0 discriminator 1
 1042 000a 9521     		movs	r1, #149
 1043              	.LVL98:
 1044 000c 8900     		lsls	r1, r1, #2
 1045 000e 0848     		ldr	r0, .L83
 1046              	.LVL99:
 1047 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1048              	.LVL100:
 1049              	.L79:
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSingleEnded = false;
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1050              		.loc 1 600 0 is_stmt 1
 1051 0014 0F2C     		cmp	r4, #15
 1052 0016 07D8     		bhi	.L81
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (0uL == (SAR_CHAN_CONFIG(base, chan) & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk | SAR_CHAN_C
 1053              		.loc 1 602 0
 1054 0018 2034     		adds	r4, r4, #32
 1055              	.LVL101:
 1056 001a A400     		lsls	r4, r4, #2
 1057              	.LVL102:
 1058 001c 6259     		ldr	r2, [r4, r5]
 1059 001e 054B     		ldr	r3, .L83+4
 1060 0020 1A42     		tst	r2, r3
 1061 0022 03D0     		beq	.L82
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1062              		.loc 1 598 0
 1063 0024 0020     		movs	r0, #0
 1064 0026 02E0     		b	.L80
 1065              	.LVL103:
 1066              	.L81:
 1067 0028 0020     		movs	r0, #0
 1068 002a 00E0     		b	.L80
 1069              	.LVL104:
 1070              	.L82:
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             isSingleEnded = true;
 1071              		.loc 1 603 0
 1072 002c 0120     		movs	r0, #1
 1073              	.L80:
 1074              	.LVL105:
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 31


 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSingleEnded;
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1075              		.loc 1 608 0
 1076              		@ sp needed
 1077              	.LVL106:
 1078 002e 70BD     		pop	{r4, r5, r6, pc}
 1079              	.L84:
 1080              		.align	2
 1081              	.L83:
 1082 0030 00000000 		.word	.LC0
 1083 0034 00010001 		.word	16777472
 1084              		.cfi_endproc
 1085              	.LFE115:
 1086              		.size	Cy_SAR_IsChannelSingleEnded, .-Cy_SAR_IsChannelSingleEnded
 1087              		.section	.text.Cy_SAR_IsChannelSigned,"ax",%progbits
 1088              		.align	2
 1089              		.global	Cy_SAR_IsChannelSigned
 1090              		.code	16
 1091              		.thumb_func
 1092              		.type	Cy_SAR_IsChannelSigned, %function
 1093              	Cy_SAR_IsChannelSigned:
 1094              	.LFB114:
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1095              		.loc 1 545 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              	.LVL107:
 1100 0000 70B5     		push	{r4, r5, r6, lr}
 1101              		.cfi_def_cfa_offset 16
 1102              		.cfi_offset 4, -16
 1103              		.cfi_offset 5, -12
 1104              		.cfi_offset 6, -8
 1105              		.cfi_offset 14, -4
 1106 0002 0500     		movs	r5, r0
 1107 0004 0C00     		movs	r4, r1
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1108              		.loc 1 546 0
 1109 0006 0F29     		cmp	r1, #15
 1110 0008 03D9     		bls	.L86
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1111              		.loc 1 546 0 is_stmt 0 discriminator 1
 1112 000a 0F49     		ldr	r1, .L92
 1113              	.LVL108:
 1114 000c 0F48     		ldr	r0, .L92+4
 1115              	.LVL109:
 1116 000e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1117              	.LVL110:
 1118              	.L86:
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 1119              		.loc 1 550 0 is_stmt 1
 1120 0012 0F2C     		cmp	r4, #15
 1121 0014 12D8     		bhi	.L89
 1122              	.LVL111:
 1123              	.LBB4:
 1124              	.LBB5:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 32


 1125              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 33


  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 34


 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 35


 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 36


 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 37


 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * a maximum frequency of 18 MHz.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 38


 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_switches.png
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 39


 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 40


 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 41


 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 42


 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 43


 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 44


 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 45


 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 46


 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 47


 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 48


 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 49


 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 50


1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 51


1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 52


1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 53


1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 54


1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 55


1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 56


1368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 57


1425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 58


1482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 59


1539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 60


1596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
1650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 61


1653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptMask
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger the CPU interrupt controller
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * as configured by \ref Cy_SAR_SetInterruptMask.
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Interrupt mask. Compare this value with masks in \ref cy_en_sar_intr_mask_t.
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_INTERRUPT_MASK
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base)
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASK(base);
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatusMasked
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the interrupt request and mask registers.
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetInterruptStatus and \ref Cy_SAR_GetInterruptMask.
1683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the interrupt request and mask registers
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base)
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASKED(base);
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatus
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the range interrupt register status.
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), range detection is not enabled for the
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetRangeInterruptMask), or range detection was not
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 62


1710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt status for all channels. Bit 0 is for channel 0, etc.
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RANGE_INTERRUPT_STATUS
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base)
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR(base);
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearRangeInterrupt
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the range interrupt for the specified channel mask.
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the hardware can set subset interrupts and those interrupts can
1731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be forwarded to the interrupt controller, if enabled.
1732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetRangeInterruptStatus.
1739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR(base) = chanMask;
1748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_RANGE_INTR(base);
1751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterrupt
1756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a range interrupt with software for the specific channel mask.
1759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 63


1767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_SET(base) = chanMask;
1774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterruptMask
1779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a range interrupt.
1782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_INTERRUPT_MASK
1794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask)
1797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_MASK(base) = chanMask;
1801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptMask
1806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a range interrupt as configured by
1809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_SetRangeInterruptMask.
1810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt mask
1816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base)
1819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASK(base);
1821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 64


1824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatusMasked
1826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the range interrupt request and mask registers.
1829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetRangeInterruptStatus and \ref Cy_SAR_GetRangeInterruptMask.
1830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND between of range interrupt request and mask
1836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base)
1839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASKED(base);
1841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatus
1846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the saturate interrupt register status.
1849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), saturation detection is not enabled for the
1851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetSatInterruptMask), or saturation detection was not
1852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt status for all channels. Bit 0 is for channel 0, etc.
1859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_STATUS
1863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base)
1866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR(base);
1868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearSatInterrupt
1873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the saturate interrupt for the specified channel mask.
1876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 65


1881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetSatInterruptStatus.
1886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask)
1891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR(base) = chanMask;
1895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_SATURATE_INTR(base);
1898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterrupt
1903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a saturate interrupt with software for the specific channel mask.
1906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask)
1917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_SET(base) = chanMask;
1921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterruptMask
1926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a saturate interrupt.
1929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 66


1938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_MASK
1941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask)
1944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_MASK(base) = chanMask;
1948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptMask
1953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a saturate interrupt as configured
1956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * by \ref Cy_SAR_SetSatInterruptMask.
1957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt mask. Bit 0 is for channel 0, etc.
1963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base)
1966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASK(base);
1968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatusMasked
1972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the saturate interrupt request and mask registers.
1975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetSatInterruptStatus and \ref Cy_SAR_GetSatInterruptMask.
1976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the saturate interrupt request and mask
1982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base)
1985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASKED(base);
1987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptCause
1992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the cause of the interrupt.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 67


1995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt routine can be called due to one of the following events:
1996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS)
1997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow
1998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Firmware collision
1999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detected on one or more channels
2000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detected on one or more channels
2001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Mask of what caused the interrupt. Compare this value with one of these masks:
2007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_EOS_MASKED_MIR_Msk : EOS caused the interrupt
2008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_OVERFLOW_MASKED_MIR_Msk : Overflow caused the interrupt
2009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_FW_COLLISION_MASKED_MIR_Msk : Firmware collision cause the interrupt
2010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_SATURATE_MASKED_RED_Msk : Saturation detection on one or more channels caused 
2011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_RANGE_MASKED_RED_Msk : Range detection on one or more channels caused the inte
2012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base)
2015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_CAUSE(base);
2017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
2018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
2019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
2021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
2022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
2023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
2026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_IsChannelDifferential
2027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
2028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return true of channel is differential, else false.
2030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chan
2035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel to check, starting at 0.
2036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A false is return if chan is invalid.
2039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
2041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_DIFF
2043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan)
2046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return !Cy_SAR_IsChannelSingleEnded(base, chan);
 1126              		.loc 2 2047 0
 1127 0016 2100     		movs	r1, r4
 1128 0018 2800     		movs	r0, r5
 1129 001a FFF7FEFF 		bl	Cy_SAR_IsChannelSingleEnded
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 68


 1130              	.LVL112:
 1131 001e 0123     		movs	r3, #1
 1132 0020 5840     		eors	r0, r3
 1133 0022 C0B2     		uxtb	r0, r0
 1134              	.LVL113:
 1135              	.LBE5:
 1136              	.LBE4:
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 1137              		.loc 1 554 0
 1138 0024 0028     		cmp	r0, #0
 1139 0026 04D0     		beq	.L88
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 1140              		.loc 1 556 0
 1141 0028 6B68     		ldr	r3, [r5, #4]
 1142 002a 1B07     		lsls	r3, r3, #28
 1143 002c 08D4     		bmi	.L90
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1144              		.loc 1 548 0
 1145 002e 0020     		movs	r0, #0
 1146 0030 09E0     		b	.L87
 1147              	.L88:
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 1148              		.loc 1 563 0
 1149 0032 6B68     		ldr	r3, [r5, #4]
 1150 0034 5B07     		lsls	r3, r3, #29
 1151 0036 05D4     		bmi	.L91
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1152              		.loc 1 548 0
 1153 0038 0020     		movs	r0, #0
 1154 003a 04E0     		b	.L87
 1155              	.L89:
 1156 003c 0020     		movs	r0, #0
 1157 003e 02E0     		b	.L87
 1158              	.L90:
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 1159              		.loc 1 558 0
 1160 0040 0120     		movs	r0, #1
 1161 0042 00E0     		b	.L87
 1162              	.L91:
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 1163              		.loc 1 565 0
 1164 0044 0120     		movs	r0, #1
 1165              	.L87:
 1166              	.LVL114:
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1167              		.loc 1 571 0
 1168              		@ sp needed
 1169              	.LVL115:
 1170              	.LVL116:
 1171 0046 70BD     		pop	{r4, r5, r6, pc}
 1172              	.L93:
 1173              		.align	2
 1174              	.L92:
 1175 0048 22020000 		.word	546
 1176 004c 00000000 		.word	.LC0
 1177              		.cfi_endproc
 1178              	.LFE114:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 69


 1179              		.size	Cy_SAR_IsChannelSigned, .-Cy_SAR_IsChannelSigned
 1180              		.section	.text.Cy_SAR_GetResult16,"ax",%progbits
 1181              		.align	2
 1182              		.global	Cy_SAR_GetResult16
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	Cy_SAR_GetResult16, %function
 1186              	Cy_SAR_GetResult16:
 1187              	.LFB116:
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult16
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 16-bit integer.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 16-bit integer.
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT16
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan)
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1188              		.loc 1 634 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192              	.LVL117:
 1193 0000 70B5     		push	{r4, r5, r6, lr}
 1194              		.cfi_def_cfa_offset 16
 1195              		.cfi_offset 4, -16
 1196              		.cfi_offset 5, -12
 1197              		.cfi_offset 6, -8
 1198              		.cfi_offset 14, -4
 1199 0002 0500     		movs	r5, r0
 1200 0004 0C00     		movs	r4, r1
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1201              		.loc 1 635 0
 1202 0006 0F29     		cmp	r1, #15
 1203 0008 03D9     		bls	.L95
 1204              		.loc 1 635 0 is_stmt 0 discriminator 1
 1205 000a 0749     		ldr	r1, .L98
 1206              	.LVL118:
 1207 000c 0748     		ldr	r0, .L98+4
 1208              	.LVL119:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 70


 1209 000e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1210              	.LVL120:
 1211              	.L95:
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1212              		.loc 1 639 0 is_stmt 1
 1213 0012 0F2C     		cmp	r4, #15
 1214 0014 05D8     		bhi	.L97
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 1215              		.loc 1 641 0
 1216 0016 6034     		adds	r4, r4, #96
 1217              	.LVL121:
 1218 0018 A400     		lsls	r4, r4, #2
 1219              	.LVL122:
 1220 001a 6059     		ldr	r0, [r4, r5]
 1221 001c 0004     		lsls	r0, r0, #16
 1222 001e 000C     		lsrs	r0, r0, #16
 1223              	.LVL123:
 1224 0020 00E0     		b	.L96
 1225              	.LVL124:
 1226              	.L97:
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1227              		.loc 1 637 0
 1228 0022 0020     		movs	r0, #0
 1229              	.LVL125:
 1230              	.L96:
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) adcResult;
 1231              		.loc 1 644 0
 1232 0024 00B2     		sxth	r0, r0
 1233              	.LVL126:
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1234              		.loc 1 645 0
 1235              		@ sp needed
 1236              	.LVL127:
 1237 0026 70BD     		pop	{r4, r5, r6, pc}
 1238              	.L99:
 1239              		.align	2
 1240              	.L98:
 1241 0028 7B020000 		.word	635
 1242 002c 00000000 		.word	.LC0
 1243              		.cfi_endproc
 1244              	.LFE116:
 1245              		.size	Cy_SAR_GetResult16, .-Cy_SAR_GetResult16
 1246              		.section	.text.Cy_SAR_GetResult32,"ax",%progbits
 1247              		.align	2
 1248              		.global	Cy_SAR_GetResult32
 1249              		.code	16
 1250              		.thumb_func
 1251              		.type	Cy_SAR_GetResult32, %function
 1252              	Cy_SAR_GetResult32:
 1253              	.LFB117:
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 71


 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult32
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 32-bit integer.
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 32-bit integer.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT32
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan)
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1254              		.loc 1 671 0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              	.LVL128:
 1259 0000 70B5     		push	{r4, r5, r6, lr}
 1260              		.cfi_def_cfa_offset 16
 1261              		.cfi_offset 4, -16
 1262              		.cfi_offset 5, -12
 1263              		.cfi_offset 6, -8
 1264              		.cfi_offset 14, -4
 1265 0002 0500     		movs	r5, r0
 1266 0004 0E00     		movs	r6, r1
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1267              		.loc 1 672 0
 1268 0006 0F29     		cmp	r1, #15
 1269 0008 04D9     		bls	.L101
 1270              		.loc 1 672 0 is_stmt 0 discriminator 1
 1271 000a A821     		movs	r1, #168
 1272              	.LVL129:
 1273 000c 8900     		lsls	r1, r1, #2
 1274 000e 0B48     		ldr	r0, .L106
 1275              	.LVL130:
 1276 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1277              	.LVL131:
 1278              	.L101:
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t finalResult;
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 72


 1279              		.loc 1 678 0 is_stmt 1
 1280 0014 0F2E     		cmp	r6, #15
 1281 0016 06D8     		bhi	.L105
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 1282              		.loc 1 680 0
 1283 0018 3300     		movs	r3, r6
 1284 001a 6033     		adds	r3, r3, #96
 1285 001c 9B00     		lsls	r3, r3, #2
 1286 001e 5C59     		ldr	r4, [r3, r5]
 1287 0020 2404     		lsls	r4, r4, #16
 1288 0022 240C     		lsrs	r4, r4, #16
 1289              	.LVL132:
 1290 0024 00E0     		b	.L102
 1291              	.LVL133:
 1292              	.L105:
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 1293              		.loc 1 674 0
 1294 0026 0024     		movs	r4, #0
 1295              	.LVL134:
 1296              	.L102:
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (true == Cy_SAR_IsChannelSigned(base, chan))
 1297              		.loc 1 683 0
 1298 0028 3100     		movs	r1, r6
 1299 002a 2800     		movs	r0, r5
 1300 002c FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 1301              	.LVL135:
 1302 0030 0028     		cmp	r0, #0
 1303 0032 01D0     		beq	.L103
 1304              	.LVL136:
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult16 = (int16_t) adcResult;
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult16;
 1305              		.loc 1 686 0
 1306 0034 20B2     		sxth	r0, r4
 1307              	.LVL137:
 1308 0036 00E0     		b	.L104
 1309              	.LVL138:
 1310              	.L103:
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult;
 1311              		.loc 1 690 0
 1312 0038 2000     		movs	r0, r4
 1313              	.LVL139:
 1314              	.L104:
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return finalResult;
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1315              		.loc 1 694 0
 1316              		@ sp needed
 1317              	.LVL140:
 1318              	.LVL141:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 73


 1319              	.LVL142:
 1320 003a 70BD     		pop	{r4, r5, r6, pc}
 1321              	.L107:
 1322              		.align	2
 1323              	.L106:
 1324 003c 00000000 		.word	.LC0
 1325              		.cfi_endproc
 1326              	.LFE117:
 1327              		.size	Cy_SAR_GetResult32, .-Cy_SAR_GetResult32
 1328              		.section	.text.Cy_SAR_SetLowLimit,"ax",%progbits
 1329              		.align	2
 1330              		.global	Cy_SAR_SetLowLimit
 1331              		.code	16
 1332              		.thumb_func
 1333              		.type	Cy_SAR_SetLowLimit, %function
 1334              	Cy_SAR_SetLowLimit:
 1335              	.LFB118:
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetLowLimit
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the low threshold for range detection. The values are interpreted
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param lowLimit
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The low threshold for range detection
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1336              		.loc 1 720 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              	.LVL143:
 1341 0000 70B5     		push	{r4, r5, r6, lr}
 1342              		.cfi_def_cfa_offset 16
 1343              		.cfi_offset 4, -16
 1344              		.cfi_offset 5, -12
 1345              		.cfi_offset 6, -8
 1346              		.cfi_offset 14, -4
 1347 0002 0500     		movs	r5, r0
 1348 0004 0C00     		movs	r4, r1
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(lowLimit));
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 74


 1349              		.loc 1 721 0
 1350 0006 074B     		ldr	r3, .L110
 1351 0008 9942     		cmp	r1, r3
 1352 000a 03D9     		bls	.L109
 1353              		.loc 1 721 0 is_stmt 0 discriminator 1
 1354 000c 0649     		ldr	r1, .L110+4
 1355              	.LVL144:
 1356 000e 0748     		ldr	r0, .L110+8
 1357              	.LVL145:
 1358 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1359              	.LVL146:
 1360              	.L109:
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Preserve the RANGE_HIGH field value when changing the RANGE_LOW field value */
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_LOW_Msk;
 1361              		.loc 1 726 0 is_stmt 1
 1362 0014 AB69     		ldr	r3, [r5, #24]
 1363 0016 1B0C     		lsrs	r3, r3, #16
 1364 0018 1B04     		lsls	r3, r3, #16
 1365              	.LVL147:
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= lowLimit  & SAR_RANGE_THRES_RANGE_LOW_Msk;
 1366              		.loc 1 727 0
 1367 001a 2404     		lsls	r4, r4, #16
 1368              	.LVL148:
 1369 001c 240C     		lsrs	r4, r4, #16
 1370 001e 1C43     		orrs	r4, r3
 1371              	.LVL149:
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 1372              		.loc 1 728 0
 1373 0020 AC61     		str	r4, [r5, #24]
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1374              		.loc 1 729 0
 1375              		@ sp needed
 1376              	.LVL150:
 1377              	.LVL151:
 1378 0022 70BD     		pop	{r4, r5, r6, pc}
 1379              	.L111:
 1380              		.align	2
 1381              	.L110:
 1382 0024 FFFF0000 		.word	65535
 1383 0028 D1020000 		.word	721
 1384 002c 00000000 		.word	.LC0
 1385              		.cfi_endproc
 1386              	.LFE118:
 1387              		.size	Cy_SAR_SetLowLimit, .-Cy_SAR_SetLowLimit
 1388              		.section	.text.Cy_SAR_SetHighLimit,"ax",%progbits
 1389              		.align	2
 1390              		.global	Cy_SAR_SetHighLimit
 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	Cy_SAR_SetHighLimit, %function
 1394              	Cy_SAR_SetHighLimit:
 1395              	.LFB119:
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 75


 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetHighLimit
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the high threshold for range detection. The values are interpreted
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param highLimit
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The high threshold for range detection
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit)
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1396              		.loc 1 755 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              	.LVL152:
 1401 0000 70B5     		push	{r4, r5, r6, lr}
 1402              		.cfi_def_cfa_offset 16
 1403              		.cfi_offset 4, -16
 1404              		.cfi_offset 5, -12
 1405              		.cfi_offset 6, -8
 1406              		.cfi_offset 14, -4
 1407 0002 0500     		movs	r5, r0
 1408 0004 0C00     		movs	r4, r1
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(highLimit));
 1409              		.loc 1 756 0
 1410 0006 074B     		ldr	r3, .L114
 1411 0008 9942     		cmp	r1, r3
 1412 000a 04D9     		bls	.L113
 1413              		.loc 1 756 0 is_stmt 0 discriminator 1
 1414 000c BD21     		movs	r1, #189
 1415              	.LVL153:
 1416 000e 8900     		lsls	r1, r1, #2
 1417 0010 0548     		ldr	r0, .L114+4
 1418              	.LVL154:
 1419 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1420              	.LVL155:
 1421              	.L113:
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_HIGH_Msk;
 1422              		.loc 1 760 0 is_stmt 1
 1423 0016 AB69     		ldr	r3, [r5, #24]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 76


 1424 0018 1B04     		lsls	r3, r3, #16
 1425 001a 1B0C     		lsrs	r3, r3, #16
 1426              	.LVL156:
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= (highLimit << SAR_RANGE_THRES_RANGE_HIGH_Pos) & SAR_RANGE_THRES_RANGE_HIGH_Msk
 1427              		.loc 1 761 0
 1428 001c 2404     		lsls	r4, r4, #16
 1429              	.LVL157:
 1430 001e 1C43     		orrs	r4, r3
 1431              	.LVL158:
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 1432              		.loc 1 762 0
 1433 0020 AC61     		str	r4, [r5, #24]
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1434              		.loc 1 763 0
 1435              		@ sp needed
 1436              	.LVL159:
 1437              	.LVL160:
 1438 0022 70BD     		pop	{r4, r5, r6, pc}
 1439              	.L115:
 1440              		.align	2
 1441              	.L114:
 1442 0024 FFFF0000 		.word	65535
 1443 0028 00000000 		.word	.LC0
 1444              		.cfi_endproc
 1445              	.LFE119:
 1446              		.size	Cy_SAR_SetHighLimit, .-Cy_SAR_SetHighLimit
 1447              		.section	.text.Cy_SAR_SetOffset,"ax",%progbits
 1448              		.align	2
 1449              		.global	Cy_SAR_SetOffset
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	Cy_SAR_SetOffset, %function
 1453              	Cy_SAR_SetOffset:
 1454              	.LFB120:
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetOffset
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the channel offset stored in the \ref Cy_SAR_offset array
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * for the voltage conversion functions.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Offset is applied to counts before unit scaling and gain.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's offset based on a known V_offset_mV, use:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetOffset(0uL, -1 * V_offset_mV * (1uL << Resolution) / (2 * V_ref_mV));
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param offset
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The count value measured when the inputs are shorted or
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * connected to the same input voltage.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 77


 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : offset was set successfully
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset)
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1455              		.loc 1 793 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              	.LVL161:
 1460 0000 70B5     		push	{r4, r5, r6, lr}
 1461              		.cfi_def_cfa_offset 16
 1462              		.cfi_offset 4, -16
 1463              		.cfi_offset 5, -12
 1464              		.cfi_offset 6, -8
 1465              		.cfi_offset 14, -4
 1466 0002 0400     		movs	r4, r0
 1467 0004 0D00     		movs	r5, r1
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1468              		.loc 1 794 0
 1469 0006 0F28     		cmp	r0, #15
 1470 0008 03D9     		bls	.L117
 1471              		.loc 1 794 0 is_stmt 0 discriminator 1
 1472 000a 0649     		ldr	r1, .L120
 1473              	.LVL162:
 1474 000c 0648     		ldr	r0, .L120+4
 1475              	.LVL163:
 1476 000e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1477              	.LVL164:
 1478              	.L117:
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1479              		.loc 1 798 0 is_stmt 1
 1480 0012 0F2C     		cmp	r4, #15
 1481 0014 04D8     		bhi	.L119
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_offset[chan] = offset;
 1482              		.loc 1 800 0
 1483 0016 6400     		lsls	r4, r4, #1
 1484              	.LVL165:
 1485 0018 044B     		ldr	r3, .L120+8
 1486 001a E552     		strh	r5, [r4, r3]
 1487              	.LVL166:
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1488              		.loc 1 801 0
 1489 001c 0020     		movs	r0, #0
 1490 001e 00E0     		b	.L118
 1491              	.LVL167:
 1492              	.L119:
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1493              		.loc 1 796 0
 1494 0020 0348     		ldr	r0, .L120+12
 1495              	.LVL168:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 78


 1496              	.L118:
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1497              		.loc 1 805 0
 1498              		@ sp needed
 1499 0022 70BD     		pop	{r4, r5, r6, pc}
 1500              	.L121:
 1501              		.align	2
 1502              	.L120:
 1503 0024 1A030000 		.word	794
 1504 0028 00000000 		.word	.LC0
 1505 002c 00000000 		.word	Cy_SAR_offset
 1506 0030 01000600 		.word	393217
 1507              		.cfi_endproc
 1508              	.LFE120:
 1509              		.size	Cy_SAR_SetOffset, .-Cy_SAR_SetOffset
 1510              		.section	.text.Cy_SAR_SetGain,"ax",%progbits
 1511              		.align	2
 1512              		.global	Cy_SAR_SetGain
 1513              		.code	16
 1514              		.thumb_func
 1515              		.type	Cy_SAR_SetGain, %function
 1516              	Cy_SAR_SetGain:
 1517              	.LFB121:
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetGain
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the gain stored in the \ref Cy_SAR_countsPer10Volt array for the voltage conversion func
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain is configured at initialization in \ref Cy_SAR_Init
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * based on the SARADC resolution and voltage reference.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Gain is applied after offset and unit scaling.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's gain based on a known V_ref_mV, use:
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetGain(0uL, 10000 * (1uL << Resolution) / (2 * V_ref_mV));
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcGain
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain in counts per 10 volt.
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : gain was set successfully
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1518              		.loc 1 835 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 79


 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL169:
 1523 0000 70B5     		push	{r4, r5, r6, lr}
 1524              		.cfi_def_cfa_offset 16
 1525              		.cfi_offset 4, -16
 1526              		.cfi_offset 5, -12
 1527              		.cfi_offset 6, -8
 1528              		.cfi_offset 14, -4
 1529 0002 0400     		movs	r4, r0
 1530 0004 0D00     		movs	r5, r1
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1531              		.loc 1 836 0
 1532 0006 0F28     		cmp	r0, #15
 1533 0008 04D9     		bls	.L123
 1534              		.loc 1 836 0 is_stmt 0 discriminator 1
 1535 000a D121     		movs	r1, #209
 1536              	.LVL170:
 1537 000c 8900     		lsls	r1, r1, #2
 1538 000e 0648     		ldr	r0, .L126
 1539              	.LVL171:
 1540 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1541              	.LVL172:
 1542              	.L123:
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1543              		.loc 1 840 0 is_stmt 1
 1544 0014 0F2C     		cmp	r4, #15
 1545 0016 04D8     		bhi	.L125
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_countsPer10Volt[chan] = adcGain;
 1546              		.loc 1 842 0
 1547 0018 A400     		lsls	r4, r4, #2
 1548              	.LVL173:
 1549 001a 044B     		ldr	r3, .L126+4
 1550 001c E550     		str	r5, [r4, r3]
 1551              	.LVL174:
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1552              		.loc 1 843 0
 1553 001e 0020     		movs	r0, #0
 1554 0020 00E0     		b	.L124
 1555              	.LVL175:
 1556              	.L125:
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1557              		.loc 1 838 0
 1558 0022 0348     		ldr	r0, .L126+8
 1559              	.LVL176:
 1560              	.L124:
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1561              		.loc 1 847 0
 1562              		@ sp needed
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 80


 1563              	.LVL177:
 1564 0024 70BD     		pop	{r4, r5, r6, pc}
 1565              	.L127:
 1566 0026 C046     		.align	2
 1567              	.L126:
 1568 0028 00000000 		.word	.LC0
 1569 002c 00000000 		.word	Cy_SAR_countsPer10Volt
 1570 0030 01000600 		.word	393217
 1571              		.cfi_endproc
 1572              	.LFE121:
 1573              		.size	Cy_SAR_SetGain, .-Cy_SAR_SetGain
 1574              		.global	__aeabi_uidiv
 1575              		.section	.text.Cy_SAR_RawCounts2Counts,"ax",%progbits
 1576              		.align	2
 1577              		.global	Cy_SAR_RawCounts2Counts
 1578              		.code	16
 1579              		.thumb_func
 1580              		.type	Cy_SAR_RawCounts2Counts, %function
 1581              	Cy_SAR_RawCounts2Counts:
 1582              	.LFB122:
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_RawCounts2Counts
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the channel result to a consistent result after accounting for
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging and subtracting the offset.
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Counts = (RawCounts/AvgDivider - Offset)
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * adcCounts after averaging and offset adjustments.
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, adcCounts is returned unmodified.
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used by \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 81


 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and \ref Cy_SAR_CountsTo_uVolts. Calling this function directly is usually
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not needed.
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1583              		.loc 1 890 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587              	.LVL178:
 1588 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1589              		.cfi_def_cfa_offset 24
 1590              		.cfi_offset 3, -24
 1591              		.cfi_offset 4, -20
 1592              		.cfi_offset 5, -16
 1593              		.cfi_offset 6, -12
 1594              		.cfi_offset 7, -8
 1595              		.cfi_offset 14, -4
 1596 0002 0600     		movs	r6, r0
 1597 0004 0C00     		movs	r4, r1
 1598 0006 1500     		movs	r5, r2
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1599              		.loc 1 891 0
 1600 0008 0F29     		cmp	r1, #15
 1601 000a 03D9     		bls	.L129
 1602              		.loc 1 891 0 is_stmt 0 discriminator 1
 1603 000c 1A49     		ldr	r1, .L135
 1604              	.LVL179:
 1605 000e 1B48     		ldr	r0, .L135+4
 1606              	.LVL180:
 1607 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1608              	.LVL181:
 1609              	.L129:
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t temp;
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t averageAdcSamplesDiv;
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1610              		.loc 1 896 0 is_stmt 1
 1611 0014 0F2C     		cmp	r4, #15
 1612 0016 2CD8     		bhi	.L130
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_AVG_SHIFT_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_SHIFT_Msk
 1613              		.loc 1 900 0
 1614 0018 7368     		ldr	r3, [r6, #4]
 1615 001a 1B06     		lsls	r3, r3, #24
 1616 001c 23D4     		bmi	.L131
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* If Average mode != fixed */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_CHAN_CONFIG_AVG_EN_Msk == (SAR_CHAN_CONFIG(base, chan) & SAR_CHAN_CONFIG_AVG_EN
 1617              		.loc 1 903 0
 1618 001e 2300     		movs	r3, r4
 1619 0020 2033     		adds	r3, r3, #32
 1620 0022 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 82


 1621 0024 9B59     		ldr	r3, [r3, r6]
 1622 0026 5B05     		lsls	r3, r3, #21
 1623 0028 1DD5     		bpl	.L131
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             { /* If channel uses averaging */
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* Divide by 2^(AVG_CNT + 1) */
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_CNT_Msk) >> SAR
 1624              		.loc 1 907 0
 1625 002a 7368     		ldr	r3, [r6, #4]
 1626 002c 1B09     		lsrs	r3, r3, #4
 1627 002e 0722     		movs	r2, #7
 1628 0030 1340     		ands	r3, r2
 1629              	.LVL182:
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1630              		.loc 1 908 0
 1631 0032 0133     		adds	r3, r3, #1
 1632              	.LVL183:
 1633 0034 0127     		movs	r7, #1
 1634 0036 9F40     		lsls	r7, r7, r3
 1635              	.LVL184:
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If averaging mode is ACCUNDUMP (channel will be sampled back to back and average
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 * divider limit is 16 */
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (SAR_SAMPLE_CTRL_AVG_MODE_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_MO
 1636              		.loc 1 912 0
 1637 0038 7368     		ldr	r3, [r6, #4]
 1638 003a DB05     		lsls	r3, r3, #23
 1639 003c 02D4     		bmi	.L132
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     if (averageAdcSamplesDiv > 16uL)
 1640              		.loc 1 914 0
 1641 003e 102F     		cmp	r7, #16
 1642 0040 00D9     		bls	.L132
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     {
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                         averageAdcSamplesDiv = 16uL;
 1643              		.loc 1 916 0
 1644 0042 1027     		movs	r7, #16
 1645              	.LVL185:
 1646              	.L132:
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     }
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If unsigned format, prevent sign extension */
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (false == Cy_SAR_IsChannelSigned(base, chan))
 1647              		.loc 1 921 0
 1648 0044 2100     		movs	r1, r4
 1649 0046 3000     		movs	r0, r6
 1650 0048 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 1651              	.LVL186:
 1652 004c 0028     		cmp	r0, #0
 1653 004e 05D1     		bne	.L133
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1654              		.loc 1 923 0
 1655 0050 A8B2     		uxth	r0, r5
 1656 0052 3900     		movs	r1, r7
 1657 0054 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 83


 1658              	.LVL187:
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts = (int16_t) temp;
 1659              		.loc 1 924 0
 1660 0058 05B2     		sxth	r5, r0
 1661              	.LVL188:
 1662 005a 04E0     		b	.L131
 1663              	.LVL189:
 1664              	.L133:
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 else
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts /= (int16_t) averageAdcSamplesDiv;
 1665              		.loc 1 928 0
 1666 005c 39B2     		sxth	r1, r7
 1667 005e 2800     		movs	r0, r5
 1668 0060 FFF7FEFF 		bl	__aeabi_idiv
 1669              	.LVL190:
 1670 0064 05B2     		sxth	r5, r0
 1671              	.LVL191:
 1672              	.L131:
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Subtract ADC offset */
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcCounts -= Cy_SAR_offset[chan];
 1673              		.loc 1 934 0
 1674 0066 6400     		lsls	r4, r4, #1
 1675              	.LVL192:
 1676 0068 054B     		ldr	r3, .L135+8
 1677 006a E05A     		ldrh	r0, [r4, r3]
 1678 006c 00B2     		sxth	r0, r0
 1679 006e 2D1A     		subs	r5, r5, r0
 1680              	.LVL193:
 1681 0070 2DB2     		sxth	r5, r5
 1682              	.LVL194:
 1683              	.L130:
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return adcCounts;
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1684              		.loc 1 938 0
 1685 0072 2800     		movs	r0, r5
 1686              		@ sp needed
 1687              	.LVL195:
 1688              	.LVL196:
 1689 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1690              	.L136:
 1691 0076 C046     		.align	2
 1692              	.L135:
 1693 0078 7B030000 		.word	891
 1694 007c 00000000 		.word	.LC0
 1695 0080 00000000 		.word	Cy_SAR_offset
 1696              		.cfi_endproc
 1697              	.LFE122:
 1698              		.size	Cy_SAR_RawCounts2Counts, .-Cy_SAR_RawCounts2Counts
 1699              		.global	__aeabi_i2f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 84


 1700              		.global	__aeabi_fmul
 1701              		.global	__aeabi_fdiv
 1702              		.section	.text.Cy_SAR_CountsTo_Volts,"ax",%progbits
 1703              		.align	2
 1704              		.global	Cy_SAR_CountsTo_Volts
 1705              		.code	16
 1706              		.thumb_func
 1707              		.type	Cy_SAR_CountsTo_Volts, %function
 1708              	Cy_SAR_CountsTo_Volts:
 1709              	.LFB123:
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_Volts
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to Volts as a float32. For example, if the ADC
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 0.534.
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in Volts.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_VOLTS
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 85


 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1710              		.loc 1 987 0
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 0
 1713              		@ frame_needed = 0, uses_anonymous_args = 0
 1714              	.LVL197:
 1715 0000 70B5     		push	{r4, r5, r6, lr}
 1716              		.cfi_def_cfa_offset 16
 1717              		.cfi_offset 4, -16
 1718              		.cfi_offset 5, -12
 1719              		.cfi_offset 6, -8
 1720              		.cfi_offset 14, -4
 1721 0002 0500     		movs	r5, r0
 1722 0004 0C00     		movs	r4, r1
 1723 0006 1600     		movs	r6, r2
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1724              		.loc 1 988 0
 1725 0008 0F29     		cmp	r1, #15
 1726 000a 04D9     		bls	.L138
 1727              		.loc 1 988 0 is_stmt 0 discriminator 1
 1728 000c F721     		movs	r1, #247
 1729              	.LVL198:
 1730 000e 8900     		lsls	r1, r1, #2
 1731 0010 1048     		ldr	r0, .L142
 1732              	.LVL199:
 1733 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1734              	.LVL200:
 1735              	.L138:
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     float32_t result_Volts = 0.0f;
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1736              		.loc 1 992 0 is_stmt 1
 1737 0016 0F2C     		cmp	r4, #15
 1738 0018 17D8     		bhi	.L140
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1739              		.loc 1 994 0
 1740 001a 6B68     		ldr	r3, [r5, #4]
 1741 001c 9B07     		lsls	r3, r3, #30
 1742 001e 16D4     		bmi	.L141
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1743              		.loc 1 996 0
 1744 0020 3200     		movs	r2, r6
 1745 0022 2100     		movs	r1, r4
 1746 0024 2800     		movs	r0, r5
 1747 0026 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1748              	.LVL201:
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts = (float32_t)adcCounts * CY_SAR_10V_COUNTS;
 1749              		.loc 1 998 0
 1750 002a FFF7FEFF 		bl	__aeabi_i2f
 1751              	.LVL202:
 1752 002e 0A49     		ldr	r1, .L142+4
 1753 0030 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 86


 1754              	.LVL203:
 1755 0034 051C     		adds	r5, r0, #0
 1756              	.LVL204:
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1757              		.loc 1 999 0
 1758 0036 A400     		lsls	r4, r4, #2
 1759              	.LVL205:
 1760 0038 084B     		ldr	r3, .L142+8
 1761 003a E058     		ldr	r0, [r4, r3]
 1762              	.LVL206:
 1763 003c FFF7FEFF 		bl	__aeabi_i2f
 1764              	.LVL207:
 1765 0040 011C     		adds	r1, r0, #0
 1766 0042 281C     		adds	r0, r5, #0
 1767 0044 FFF7FEFF 		bl	__aeabi_fdiv
 1768              	.LVL208:
 1769 0048 02E0     		b	.L139
 1770              	.LVL209:
 1771              	.L140:
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1772              		.loc 1 990 0
 1773 004a 0020     		movs	r0, #0
 1774 004c 00E0     		b	.L139
 1775              	.L141:
 1776 004e 0020     		movs	r0, #0
 1777              	.LVL210:
 1778              	.L139:
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result_Volts;
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1779              		.loc 1 1004 0
 1780              		@ sp needed
 1781 0050 70BD     		pop	{r4, r5, r6, pc}
 1782              	.L143:
 1783 0052 C046     		.align	2
 1784              	.L142:
 1785 0054 00000000 		.word	.LC0
 1786 0058 00002041 		.word	1092616192
 1787 005c 00000000 		.word	Cy_SAR_countsPer10Volt
 1788              		.cfi_endproc
 1789              	.LFE123:
 1790              		.size	Cy_SAR_CountsTo_Volts, .-Cy_SAR_CountsTo_Volts
 1791              		.section	.text.Cy_SAR_CountsTo_mVolts,"ax",%progbits
 1792              		.align	2
 1793              		.global	Cy_SAR_CountsTo_mVolts
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	Cy_SAR_CountsTo_mVolts, %function
 1797              	Cy_SAR_CountsTo_mVolts:
 1798              	.LFB124:
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_mVolts
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 87


1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to millivolts as an int16. For example, if the ADC
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534.
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     mV = V * 1000
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in millivolts.
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_MVOLTS
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1799              		.loc 1 1054 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              	.LVL211:
 1804 0000 70B5     		push	{r4, r5, r6, lr}
 1805              		.cfi_def_cfa_offset 16
 1806              		.cfi_offset 4, -16
 1807              		.cfi_offset 5, -12
 1808              		.cfi_offset 6, -8
 1809              		.cfi_offset 14, -4
 1810 0002 0500     		movs	r5, r0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 88


 1811 0004 0C00     		movs	r4, r1
 1812 0006 1600     		movs	r6, r2
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1813              		.loc 1 1055 0
 1814 0008 0F29     		cmp	r1, #15
 1815 000a 03D9     		bls	.L145
 1816              		.loc 1 1055 0 is_stmt 0 discriminator 1
 1817 000c 1549     		ldr	r1, .L151
 1818              	.LVL212:
 1819 000e 1648     		ldr	r0, .L151+4
 1820              	.LVL213:
 1821 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1822              	.LVL214:
 1823              	.L145:
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t result_mVolts = 0;
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1824              		.loc 1 1059 0 is_stmt 1
 1825 0014 0F2C     		cmp	r4, #15
 1826 0016 20D8     		bhi	.L149
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1827              		.loc 1 1061 0
 1828 0018 6B68     		ldr	r3, [r5, #4]
 1829 001a 9B07     		lsls	r3, r3, #30
 1830 001c 1FD4     		bmi	.L150
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1831              		.loc 1 1063 0
 1832 001e 3200     		movs	r2, r6
 1833 0020 2100     		movs	r1, r4
 1834 0022 2800     		movs	r0, r5
 1835 0024 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1836              	.LVL215:
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts = ((int32_t)adcCounts * CY_SAR_10MV_COUNTS);
 1837              		.loc 1 1065 0
 1838 0028 104A     		ldr	r2, .L151+8
 1839 002a 4243     		muls	r2, r0
 1840              	.LVL216:
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (adcCounts > 0)
 1841              		.loc 1 1066 0
 1842 002c 0028     		cmp	r0, #0
 1843 002e 07DD     		ble	.L147
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts += Cy_SAR_countsPer10Volt[chan] / 2;
 1844              		.loc 1 1068 0
 1845 0030 A300     		lsls	r3, r4, #2
 1846 0032 0F49     		ldr	r1, .L151+12
 1847 0034 5B58     		ldr	r3, [r3, r1]
 1848 0036 D80F     		lsrs	r0, r3, #31
 1849              	.LVL217:
 1850 0038 C318     		adds	r3, r0, r3
 1851 003a 5B10     		asrs	r3, r3, #1
 1852 003c D018     		adds	r0, r2, r3
 1853              	.LVL218:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 89


 1854 003e 06E0     		b	.L148
 1855              	.LVL219:
 1856              	.L147:
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts -= Cy_SAR_countsPer10Volt[chan] / 2;
 1857              		.loc 1 1072 0
 1858 0040 A300     		lsls	r3, r4, #2
 1859 0042 0B49     		ldr	r1, .L151+12
 1860 0044 5B58     		ldr	r3, [r3, r1]
 1861 0046 D80F     		lsrs	r0, r3, #31
 1862              	.LVL220:
 1863 0048 C318     		adds	r3, r0, r3
 1864 004a 5B10     		asrs	r3, r3, #1
 1865 004c D01A     		subs	r0, r2, r3
 1866              	.LVL221:
 1867              	.L148:
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts /= Cy_SAR_countsPer10Volt[chan];
 1868              		.loc 1 1074 0
 1869 004e A400     		lsls	r4, r4, #2
 1870              	.LVL222:
 1871 0050 074B     		ldr	r3, .L151+12
 1872 0052 E158     		ldr	r1, [r4, r3]
 1873 0054 FFF7FEFF 		bl	__aeabi_idiv
 1874              	.LVL223:
 1875 0058 02E0     		b	.L146
 1876              	.LVL224:
 1877              	.L149:
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1878              		.loc 1 1057 0
 1879 005a 0020     		movs	r0, #0
 1880 005c 00E0     		b	.L146
 1881              	.L150:
 1882 005e 0020     		movs	r0, #0
 1883              	.LVL225:
 1884              	.L146:
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) result_mVolts;
 1885              		.loc 1 1078 0
 1886 0060 00B2     		sxth	r0, r0
 1887              	.LVL226:
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1888              		.loc 1 1079 0
 1889              		@ sp needed
 1890              	.LVL227:
 1891 0062 70BD     		pop	{r4, r5, r6, pc}
 1892              	.L152:
 1893              		.align	2
 1894              	.L151:
 1895 0064 1F040000 		.word	1055
 1896 0068 00000000 		.word	.LC0
 1897 006c 10270000 		.word	10000
 1898 0070 00000000 		.word	Cy_SAR_countsPer10Volt
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 90


 1899              		.cfi_endproc
 1900              	.LFE124:
 1901              		.size	Cy_SAR_CountsTo_mVolts, .-Cy_SAR_CountsTo_mVolts
 1902              		.global	__aeabi_lmul
 1903              		.global	__aeabi_ldivmod
 1904              		.section	.text.Cy_SAR_CountsTo_uVolts,"ax",%progbits
 1905              		.align	2
 1906              		.global	Cy_SAR_CountsTo_uVolts
 1907              		.code	16
 1908              		.thumb_func
 1909              		.type	Cy_SAR_CountsTo_uVolts, %function
 1910              	Cy_SAR_CountsTo_uVolts:
 1911              	.LFB125:
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_uVolts
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to microvolts as a int32. For example, if the ADC
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534000.
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     uV = V * 1000000
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in microvolts.
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is valid, 0 is returned.
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 91


1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_UVOLTS
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1912              		.loc 1 1129 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              	.LVL228:
 1917 0000 70B5     		push	{r4, r5, r6, lr}
 1918              		.cfi_def_cfa_offset 16
 1919              		.cfi_offset 4, -16
 1920              		.cfi_offset 5, -12
 1921              		.cfi_offset 6, -8
 1922              		.cfi_offset 14, -4
 1923 0002 0500     		movs	r5, r0
 1924 0004 0C00     		movs	r4, r1
 1925 0006 1600     		movs	r6, r2
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1926              		.loc 1 1130 0
 1927 0008 0F29     		cmp	r1, #15
 1928 000a 03D9     		bls	.L154
 1929              		.loc 1 1130 0 is_stmt 0 discriminator 1
 1930 000c 0E49     		ldr	r1, .L158
 1931              	.LVL229:
 1932 000e 0F48     		ldr	r0, .L158+4
 1933              	.LVL230:
 1934 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1935              	.LVL231:
 1936              	.L154:
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int64_t result_uVolts = 0;
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1937              		.loc 1 1134 0 is_stmt 1
 1938 0014 0F2C     		cmp	r4, #15
 1939 0016 13D8     		bhi	.L156
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1940              		.loc 1 1136 0
 1941 0018 6B68     		ldr	r3, [r5, #4]
 1942 001a 9B07     		lsls	r3, r3, #30
 1943 001c 12D4     		bmi	.L157
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1944              		.loc 1 1138 0
 1945 001e 3200     		movs	r2, r6
 1946 0020 2100     		movs	r1, r4
 1947 0022 2800     		movs	r0, r5
 1948 0024 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1949              	.LVL232:
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts = (int64_t)adcCounts * CY_SAR_10UV_COUNTS;
 1950              		.loc 1 1139 0
 1951 0028 C117     		asrs	r1, r0, #31
 1952 002a 094A     		ldr	r2, .L158+8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 92


 1953 002c 0023     		movs	r3, #0
 1954 002e FFF7FEFF 		bl	__aeabi_lmul
 1955              	.LVL233:
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts /= Cy_SAR_countsPer10Volt[chan];
 1956              		.loc 1 1140 0
 1957 0032 A400     		lsls	r4, r4, #2
 1958              	.LVL234:
 1959 0034 074B     		ldr	r3, .L158+12
 1960 0036 E258     		ldr	r2, [r4, r3]
 1961 0038 D317     		asrs	r3, r2, #31
 1962 003a FFF7FEFF 		bl	__aeabi_ldivmod
 1963              	.LVL235:
 1964 003e 02E0     		b	.L155
 1965              	.LVL236:
 1966              	.L156:
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1967              		.loc 1 1132 0
 1968 0040 0020     		movs	r0, #0
 1969 0042 00E0     		b	.L155
 1970              	.L157:
 1971 0044 0020     		movs	r0, #0
 1972              	.LVL237:
 1973              	.L155:
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int32_t)result_uVolts;
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1974              		.loc 1 1145 0
 1975              		@ sp needed
 1976              	.LVL238:
 1977 0046 70BD     		pop	{r4, r5, r6, pc}
 1978              	.L159:
 1979              		.align	2
 1980              	.L158:
 1981 0048 6A040000 		.word	1130
 1982 004c 00000000 		.word	.LC0
 1983 0050 80969800 		.word	10000000
 1984 0054 00000000 		.word	Cy_SAR_countsPer10Volt
 1985              		.cfi_endproc
 1986              	.LFE125:
 1987              		.size	Cy_SAR_CountsTo_uVolts, .-Cy_SAR_CountsTo_uVolts
 1988              		.section	.text.Cy_SAR_SetAnalogSwitch,"ax",%progbits
 1989              		.align	2
 1990              		.global	Cy_SAR_SetAnalogSwitch
 1991              		.code	16
 1992              		.thumb_func
 1993              		.type	Cy_SAR_SetAnalogSwitch, %function
 1994              	Cy_SAR_SetAnalogSwitch:
 1995              	.LFB126:
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetAnalogSwitch
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provide firmware control of the SARMUX switches for firmware sequencing.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 93


1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each call to this function can open or close a set of switches.
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARSEQ is enabled, there is no need to use this function.
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches to either open or close.
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param state
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Open or close the desired swithces. Select a value from \ref cy_en_sar_switch_state_t.
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_ANALOG_SWITCH
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1996              		.loc 1 1181 0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 2000              	.LVL239:
 2001 0000 70B5     		push	{r4, r5, r6, lr}
 2002              		.cfi_def_cfa_offset 16
 2003              		.cfi_offset 4, -16
 2004              		.cfi_offset 5, -12
 2005              		.cfi_offset 6, -8
 2006              		.cfi_offset 14, -4
 2007 0002 0600     		movs	r6, r0
 2008 0004 1400     		movs	r4, r2
 2009 0006 1D00     		movs	r5, r3
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
 2010              		.loc 1 1182 0
 2011 0008 0029     		cmp	r1, #0
 2012 000a 03D0     		beq	.L161
 2013              		.loc 1 1182 0 is_stmt 0 discriminator 1
 2014 000c 0E49     		ldr	r1, .L168
 2015              	.LVL240:
 2016 000e 0F48     		ldr	r0, .L168+4
 2017              	.LVL241:
 2018 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2019              	.LVL242:
 2020              	.L161:
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SWITCHMASK(switchMask));
 2021              		.loc 1 1183 0 is_stmt 1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 94


 2022 0014 0E4B     		ldr	r3, .L168+8
 2023 0016 9C42     		cmp	r4, r3
 2024 0018 03D9     		bls	.L162
 2025              		.loc 1 1183 0 is_stmt 0 discriminator 1
 2026 001a 0E49     		ldr	r1, .L168+12
 2027 001c 0B48     		ldr	r0, .L168+4
 2028 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2029              	.LVL243:
 2030              	.L162:
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSTATE(state));
 2031              		.loc 1 1184 0 is_stmt 1
 2032 0022 012D     		cmp	r5, #1
 2033 0024 04D9     		bls	.L163
 2034              		.loc 1 1184 0 is_stmt 0 discriminator 1
 2035 0026 9421     		movs	r1, #148
 2036 0028 C900     		lsls	r1, r1, #3
 2037 002a 0848     		ldr	r0, .L168+4
 2038 002c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2039              	.LVL244:
 2040              	.L163:
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchReg;
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchClearReg;
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchReg = &SAR_MUX_SWITCH0(base);
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchClearReg = &SAR_MUX_SWITCH_CLEAR0(base);
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(state)
 2041              		.loc 1 1192 0 is_stmt 1
 2042 0030 012D     		cmp	r5, #1
 2043 0032 05D1     		bne	.L167
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_CLOSE:
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchReg |= switchMask;
 2044              		.loc 1 1195 0
 2045 0034 C022     		movs	r2, #192
 2046 0036 9200     		lsls	r2, r2, #2
 2047 0038 B358     		ldr	r3, [r6, r2]
 2048 003a 1C43     		orrs	r4, r3
 2049              	.LVL245:
 2050 003c B450     		str	r4, [r6, r2]
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 2051              		.loc 1 1196 0
 2052 003e 02E0     		b	.L160
 2053              	.LVL246:
 2054              	.L167:
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_OPEN:
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Unlike the close case, we are not OR'ing the register. Set 1 to clear.*/
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchClearReg = switchMask;
 2055              		.loc 1 1201 0
 2056 0040 C123     		movs	r3, #193
 2057 0042 9B00     		lsls	r3, r3, #2
 2058 0044 F450     		str	r4, [r6, r3]
 2059              	.LVL247:
 2060              	.L160:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 95


1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2061              		.loc 1 1204 0
 2062              		@ sp needed
 2063              	.LVL248:
 2064 0046 70BD     		pop	{r4, r5, r6, pc}
 2065              	.L169:
 2066              		.align	2
 2067              	.L168:
 2068 0048 9E040000 		.word	1182
 2069 004c 00000000 		.word	.LC0
 2070 0050 FFFFFF3F 		.word	1073741823
 2071 0054 9F040000 		.word	1183
 2072              		.cfi_endproc
 2073              	.LFE126:
 2074              		.size	Cy_SAR_SetAnalogSwitch, .-Cy_SAR_SetAnalogSwitch
 2075              		.section	.text.Cy_SAR_GetAnalogSwitch,"ax",%progbits
 2076              		.align	2
 2077              		.global	Cy_SAR_GetAnalogSwitch
 2078              		.code	16
 2079              		.thumb_func
 2080              		.type	Cy_SAR_GetAnalogSwitch, %function
 2081              	Cy_SAR_GetAnalogSwitch:
 2082              	.LFB127:
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetAnalogSwitch
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the state (open or close) of SARMUX switches.
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each bit corresponds to a single switch, where a bit value of 0 is open
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and 1 is closed.
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Compare this value to the switch masks in \ref cy_en_sar_mux_switch_fw_ctrl_t.
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2083              		.loc 1 1227 0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 0
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087              	.LVL249:
 2088 0000 10B5     		push	{r4, lr}
 2089              		.cfi_def_cfa_offset 8
 2090              		.cfi_offset 4, -8
 2091              		.cfi_offset 14, -4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 96


 2092 0002 0400     		movs	r4, r0
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
 2093              		.loc 1 1228 0
 2094 0004 0029     		cmp	r1, #0
 2095 0006 03D0     		beq	.L171
 2096              		.loc 1 1228 0 is_stmt 0 discriminator 1
 2097 0008 0349     		ldr	r1, .L172
 2098              	.LVL250:
 2099 000a 0448     		ldr	r0, .L172+4
 2100              	.LVL251:
 2101 000c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2102              	.LVL252:
 2103              	.L171:
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return SAR_MUX_SWITCH0(base);
 2104              		.loc 1 1230 0 is_stmt 1
 2105 0010 C023     		movs	r3, #192
 2106 0012 9B00     		lsls	r3, r3, #2
 2107 0014 E058     		ldr	r0, [r4, r3]
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2108              		.loc 1 1231 0
 2109              		@ sp needed
 2110              	.LVL253:
 2111 0016 10BD     		pop	{r4, pc}
 2112              	.L173:
 2113              		.align	2
 2114              	.L172:
 2115 0018 CC040000 		.word	1228
 2116 001c 00000000 		.word	.LC0
 2117              		.cfi_endproc
 2118              	.LFE127:
 2119              		.size	Cy_SAR_GetAnalogSwitch, .-Cy_SAR_GetAnalogSwitch
 2120              		.section	.text.Cy_SAR_SetSwitchSarSeqCtrl,"ax",%progbits
 2121              		.align	2
 2122              		.global	Cy_SAR_SetSwitchSarSeqCtrl
 2123              		.code	16
 2124              		.thumb_func
 2125              		.type	Cy_SAR_SetSwitchSarSeqCtrl, %function
 2126              	Cy_SAR_SetSwitchSarSeqCtrl:
 2127              	.LFB128:
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetSwitchSarSeqCtrl
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control of one or more switches.
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 97


1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param ctrl
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control. Select a value from \ref cy_en_sar_switch_sar_seq_ctrl_t.
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_SWITCH_SAR_SEQ_CTRL
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2128              		.loc 1 1260 0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 0
 2131              		@ frame_needed = 0, uses_anonymous_args = 0
 2132              	.LVL254:
 2133 0000 70B5     		push	{r4, r5, r6, lr}
 2134              		.cfi_def_cfa_offset 16
 2135              		.cfi_offset 4, -16
 2136              		.cfi_offset 5, -12
 2137              		.cfi_offset 6, -8
 2138              		.cfi_offset 14, -4
 2139 0002 0400     		movs	r4, r0
 2140 0004 0D00     		movs	r5, r1
 2141 0006 1600     		movs	r6, r2
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SQMASK(switchMask));
 2142              		.loc 1 1261 0
 2143 0008 0D4B     		ldr	r3, .L181
 2144 000a 1942     		tst	r1, r3
 2145 000c 03D0     		beq	.L175
 2146              		.loc 1 1261 0 is_stmt 0 discriminator 1
 2147 000e 0D49     		ldr	r1, .L181+4
 2148              	.LVL255:
 2149 0010 0D48     		ldr	r0, .L181+8
 2150              	.LVL256:
 2151 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2152              	.LVL257:
 2153              	.L175:
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SQCTRL(ctrl));
 2154              		.loc 1 1262 0 is_stmt 1
 2155 0016 012E     		cmp	r6, #1
 2156 0018 03D9     		bls	.L176
 2157              		.loc 1 1262 0 is_stmt 0 discriminator 1
 2158 001a 0C49     		ldr	r1, .L181+12
 2159 001c 0A48     		ldr	r0, .L181+8
 2160 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2161              	.LVL258:
 2162              	.L176:
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(ctrl)
 2163              		.loc 1 1264 0 is_stmt 1
 2164 0022 012E     		cmp	r6, #1
 2165 0024 05D1     		bne	.L180
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_ENABLE:
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) |= switchMask;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 98


 2166              		.loc 1 1267 0
 2167 0026 D122     		movs	r2, #209
 2168 0028 9200     		lsls	r2, r2, #2
 2169 002a A358     		ldr	r3, [r4, r2]
 2170 002c 1D43     		orrs	r5, r3
 2171              	.LVL259:
 2172 002e A550     		str	r5, [r4, r2]
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 2173              		.loc 1 1268 0
 2174 0030 04E0     		b	.L174
 2175              	.LVL260:
 2176              	.L180:
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_DISABLE:
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) &= ~switchMask;
 2177              		.loc 1 1271 0
 2178 0032 D122     		movs	r2, #209
 2179 0034 9200     		lsls	r2, r2, #2
 2180 0036 A358     		ldr	r3, [r4, r2]
 2181 0038 AB43     		bics	r3, r5
 2182 003a A350     		str	r3, [r4, r2]
 2183              	.LVL261:
 2184              	.L174:
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2185              		.loc 1 1274 0
 2186              		@ sp needed
 2187              	.LVL262:
 2188 003c 70BD     		pop	{r4, r5, r6, pc}
 2189              	.L182:
 2190 003e C046     		.align	2
 2191              	.L181:
 2192 0040 00FF30FF 		.word	-13566208
 2193 0044 ED040000 		.word	1261
 2194 0048 00000000 		.word	.LC0
 2195 004c EE040000 		.word	1262
 2196              		.cfi_endproc
 2197              	.LFE128:
 2198              		.size	Cy_SAR_SetSwitchSarSeqCtrl, .-Cy_SAR_SetSwitchSarSeqCtrl
 2199              		.section	.text.Cy_SAR_DeepSleepCallback,"ax",%progbits
 2200              		.align	2
 2201              		.global	Cy_SAR_DeepSleepCallback
 2202              		.code	16
 2203              		.thumb_func
 2204              		.type	Cy_SAR_DeepSleepCallback, %function
 2205              	Cy_SAR_DeepSleepCallback:
 2206              	.LFB129:
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleepCallback
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback to prepare the SAR before entering Deep Sleep
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and to re-enable the SAR after exiting Deep Sleep.
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 99


1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param callbackParams
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure of type \ref cy_stc_syspm_callback_params_t
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref cy_en_syspm_status_t
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEEPSLEEP_CALLBACK
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2207              		.loc 1 1299 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 0
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 2211              	.LVL263:
 2212 0000 10B5     		push	{r4, lr}
 2213              		.cfi_def_cfa_offset 8
 2214              		.cfi_offset 4, -8
 2215              		.cfi_offset 14, -4
 2216              	.LVL264:
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_syspm_status_t returnValue = CY_SYSPM_SUCCESS;
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (CY_SYSPM_BEFORE_TRANSITION == mode)
 2217              		.loc 1 1302 0
 2218 0002 0429     		cmp	r1, #4
 2219 0004 03D1     		bne	.L184
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done before entering the Deep Sleep mode */
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_DeepSleep((SAR_V1_Type *)callbackParams->base);
 2220              		.loc 1 1304 0
 2221 0006 0068     		ldr	r0, [r0]
 2222              	.LVL265:
 2223 0008 FFF7FEFF 		bl	Cy_SAR_DeepSleep
 2224              	.LVL266:
 2225 000c 04E0     		b	.L185
 2226              	.LVL267:
 2227              	.L184:
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (CY_SYSPM_AFTER_TRANSITION == mode)
 2228              		.loc 1 1306 0
 2229 000e 0829     		cmp	r1, #8
 2230 0010 02D1     		bne	.L185
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done after exiting the Deep Sleep mode */
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Wakeup((SAR_V1_Type *)callbackParams->base);
 2231              		.loc 1 1308 0
 2232 0012 0068     		ldr	r0, [r0]
 2233              	.LVL268:
 2234 0014 FFF7FEFF 		bl	Cy_SAR_Wakeup
 2235              	.LVL269:
 2236              	.L185:
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 100


1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Does nothing in other modes */
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return returnValue;
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2237              		.loc 1 1315 0
 2238 0018 0020     		movs	r0, #0
 2239              		@ sp needed
 2240 001a 10BD     		pop	{r4, pc}
 2241              		.cfi_endproc
 2242              	.LFE129:
 2243              		.size	Cy_SAR_DeepSleepCallback, .-Cy_SAR_DeepSleepCallback
 2244              		.comm	Cy_SAR_countsPer10Volt,64,4
 2245              		.comm	Cy_SAR_offset,32,4
 2246              		.section	.rodata.str1.4,"aMS",%progbits,1
 2247              		.align	2
 2248              	.LC0:
 2249 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 2249      72617465 
 2249      645F536F 
 2249      75726365 
 2249      5C50536F 
 2250 002e 7361725C 		.ascii	"sar\\cy_sar.c\000"
 2250      63795F73 
 2250      61722E63 
 2250      00
 2251              		.bss
 2252              		.align	2
 2253              		.set	.LANCHOR0,. + 0
 2254              		.type	enabledBeforeSleep, %object
 2255              		.size	enabledBeforeSleep, 8
 2256              	enabledBeforeSleep:
 2257 0000 00000000 		.space	8
 2257      00000000 
 2258              		.text
 2259              	.Letext0:
 2260              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 2261              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 2262              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 2263              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 2264              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 2265              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 2266              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
 2267              		.section	.debug_info,"",%progbits
 2268              	.Ldebug_info0:
 2269 0000 1B1A0000 		.4byte	0x1a1b
 2270 0004 0400     		.2byte	0x4
 2271 0006 00000000 		.4byte	.Ldebug_abbrev0
 2272 000a 04       		.byte	0x4
 2273 000b 01       		.uleb128 0x1
 2274 000c CA090000 		.4byte	.LASF310
 2275 0010 0C       		.byte	0xc
 2276 0011 1A0F0000 		.4byte	.LASF311
 2277 0015 CC0D0000 		.4byte	.LASF312
 2278 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2279 001d 00000000 		.4byte	0
 2280 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 101


 2281 0025 02       		.uleb128 0x2
 2282 0026 01       		.byte	0x1
 2283 0027 06       		.byte	0x6
 2284 0028 43120000 		.4byte	.LASF0
 2285 002c 03       		.uleb128 0x3
 2286 002d 100F0000 		.4byte	.LASF2
 2287 0031 03       		.byte	0x3
 2288 0032 1D       		.byte	0x1d
 2289 0033 37000000 		.4byte	0x37
 2290 0037 02       		.uleb128 0x2
 2291 0038 01       		.byte	0x1
 2292 0039 08       		.byte	0x8
 2293 003a 4B0C0000 		.4byte	.LASF1
 2294 003e 03       		.uleb128 0x3
 2295 003f 640A0000 		.4byte	.LASF3
 2296 0043 03       		.byte	0x3
 2297 0044 29       		.byte	0x29
 2298 0045 49000000 		.4byte	0x49
 2299 0049 02       		.uleb128 0x2
 2300 004a 02       		.byte	0x2
 2301 004b 05       		.byte	0x5
 2302 004c 39020000 		.4byte	.LASF4
 2303 0050 03       		.uleb128 0x3
 2304 0051 FE040000 		.4byte	.LASF5
 2305 0055 03       		.byte	0x3
 2306 0056 2B       		.byte	0x2b
 2307 0057 5B000000 		.4byte	0x5b
 2308 005b 02       		.uleb128 0x2
 2309 005c 02       		.byte	0x2
 2310 005d 07       		.byte	0x7
 2311 005e CF0B0000 		.4byte	.LASF6
 2312 0062 03       		.uleb128 0x3
 2313 0063 9D010000 		.4byte	.LASF7
 2314 0067 03       		.byte	0x3
 2315 0068 3F       		.byte	0x3f
 2316 0069 6D000000 		.4byte	0x6d
 2317 006d 02       		.uleb128 0x2
 2318 006e 04       		.byte	0x4
 2319 006f 05       		.byte	0x5
 2320 0070 6D0D0000 		.4byte	.LASF8
 2321 0074 03       		.uleb128 0x3
 2322 0075 D1100000 		.4byte	.LASF9
 2323 0079 03       		.byte	0x3
 2324 007a 41       		.byte	0x41
 2325 007b 7F000000 		.4byte	0x7f
 2326 007f 02       		.uleb128 0x2
 2327 0080 04       		.byte	0x4
 2328 0081 07       		.byte	0x7
 2329 0082 DA0F0000 		.4byte	.LASF10
 2330 0086 03       		.uleb128 0x3
 2331 0087 BB0B0000 		.4byte	.LASF11
 2332 008b 03       		.byte	0x3
 2333 008c 59       		.byte	0x59
 2334 008d 91000000 		.4byte	0x91
 2335 0091 02       		.uleb128 0x2
 2336 0092 08       		.byte	0x8
 2337 0093 05       		.byte	0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 102


 2338 0094 0D090000 		.4byte	.LASF12
 2339 0098 02       		.uleb128 0x2
 2340 0099 08       		.byte	0x8
 2341 009a 07       		.byte	0x7
 2342 009b 75040000 		.4byte	.LASF13
 2343 009f 04       		.uleb128 0x4
 2344 00a0 04       		.byte	0x4
 2345 00a1 05       		.byte	0x5
 2346 00a2 696E7400 		.ascii	"int\000"
 2347 00a6 02       		.uleb128 0x2
 2348 00a7 04       		.byte	0x4
 2349 00a8 07       		.byte	0x7
 2350 00a9 2C010000 		.4byte	.LASF14
 2351 00ad 03       		.uleb128 0x3
 2352 00ae 39080000 		.4byte	.LASF15
 2353 00b2 04       		.byte	0x4
 2354 00b3 18       		.byte	0x18
 2355 00b4 2C000000 		.4byte	0x2c
 2356 00b8 03       		.uleb128 0x3
 2357 00b9 53040000 		.4byte	.LASF16
 2358 00bd 04       		.byte	0x4
 2359 00be 20       		.byte	0x20
 2360 00bf 3E000000 		.4byte	0x3e
 2361 00c3 03       		.uleb128 0x3
 2362 00c4 EE0B0000 		.4byte	.LASF17
 2363 00c8 04       		.byte	0x4
 2364 00c9 24       		.byte	0x24
 2365 00ca 50000000 		.4byte	0x50
 2366 00ce 03       		.uleb128 0x3
 2367 00cf 0B100000 		.4byte	.LASF18
 2368 00d3 04       		.byte	0x4
 2369 00d4 2C       		.byte	0x2c
 2370 00d5 62000000 		.4byte	0x62
 2371 00d9 03       		.uleb128 0x3
 2372 00da FB030000 		.4byte	.LASF19
 2373 00de 04       		.byte	0x4
 2374 00df 30       		.byte	0x30
 2375 00e0 74000000 		.4byte	0x74
 2376 00e4 03       		.uleb128 0x3
 2377 00e5 C7050000 		.4byte	.LASF20
 2378 00e9 04       		.byte	0x4
 2379 00ea 38       		.byte	0x38
 2380 00eb 86000000 		.4byte	0x86
 2381 00ef 02       		.uleb128 0x2
 2382 00f0 08       		.byte	0x8
 2383 00f1 04       		.byte	0x4
 2384 00f2 E20B0000 		.4byte	.LASF21
 2385 00f6 02       		.uleb128 0x2
 2386 00f7 04       		.byte	0x4
 2387 00f8 07       		.byte	0x7
 2388 00f9 9B0C0000 		.4byte	.LASF22
 2389 00fd 05       		.uleb128 0x5
 2390 00fe D9000000 		.4byte	0xd9
 2391 0102 06       		.uleb128 0x6
 2392 0103 FD000000 		.4byte	0xfd
 2393 0107 07       		.uleb128 0x7
 2394 0108 02010000 		.4byte	0x102
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 103


 2395 010c 17010000 		.4byte	0x117
 2396 0110 08       		.uleb128 0x8
 2397 0111 F6000000 		.4byte	0xf6
 2398 0115 01       		.byte	0x1
 2399 0116 00       		.byte	0
 2400 0117 07       		.uleb128 0x7
 2401 0118 FD000000 		.4byte	0xfd
 2402 011c 27010000 		.4byte	0x127
 2403 0120 08       		.uleb128 0x8
 2404 0121 F6000000 		.4byte	0xf6
 2405 0125 0F       		.byte	0xf
 2406 0126 00       		.byte	0
 2407 0127 07       		.uleb128 0x7
 2408 0128 02010000 		.4byte	0x102
 2409 012c 37010000 		.4byte	0x137
 2410 0130 08       		.uleb128 0x8
 2411 0131 F6000000 		.4byte	0xf6
 2412 0135 0F       		.byte	0xf
 2413 0136 00       		.byte	0
 2414 0137 07       		.uleb128 0x7
 2415 0138 02010000 		.4byte	0x102
 2416 013c 47010000 		.4byte	0x147
 2417 0140 08       		.uleb128 0x8
 2418 0141 F6000000 		.4byte	0xf6
 2419 0145 02       		.byte	0x2
 2420 0146 00       		.byte	0
 2421 0147 07       		.uleb128 0x7
 2422 0148 02010000 		.4byte	0x102
 2423 014c 57010000 		.4byte	0x157
 2424 0150 08       		.uleb128 0x8
 2425 0151 F6000000 		.4byte	0xf6
 2426 0155 0E       		.byte	0xe
 2427 0156 00       		.byte	0
 2428 0157 09       		.uleb128 0x9
 2429 0158 080F     		.2byte	0xf08
 2430 015a 05       		.byte	0x5
 2431 015b 21       		.byte	0x21
 2432 015c DF030000 		.4byte	0x3df
 2433 0160 0A       		.uleb128 0xa
 2434 0161 0D140000 		.4byte	.LASF23
 2435 0165 05       		.byte	0x5
 2436 0166 22       		.byte	0x22
 2437 0167 FD000000 		.4byte	0xfd
 2438 016b 00       		.byte	0
 2439 016c 0A       		.uleb128 0xa
 2440 016d DD0A0000 		.4byte	.LASF24
 2441 0171 05       		.byte	0x5
 2442 0172 23       		.byte	0x23
 2443 0173 FD000000 		.4byte	0xfd
 2444 0177 04       		.byte	0x4
 2445 0178 0A       		.uleb128 0xa
 2446 0179 2B000000 		.4byte	.LASF25
 2447 017d 05       		.byte	0x5
 2448 017e 24       		.byte	0x24
 2449 017f E4030000 		.4byte	0x3e4
 2450 0183 08       		.byte	0x8
 2451 0184 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 104


 2452 0185 51020000 		.4byte	.LASF26
 2453 0189 05       		.byte	0x5
 2454 018a 25       		.byte	0x25
 2455 018b FD000000 		.4byte	0xfd
 2456 018f 10       		.byte	0x10
 2457 0190 0A       		.uleb128 0xa
 2458 0191 E5040000 		.4byte	.LASF27
 2459 0195 05       		.byte	0x5
 2460 0196 26       		.byte	0x26
 2461 0197 FD000000 		.4byte	0xfd
 2462 019b 14       		.byte	0x14
 2463 019c 0A       		.uleb128 0xa
 2464 019d 570E0000 		.4byte	.LASF28
 2465 01a1 05       		.byte	0x5
 2466 01a2 27       		.byte	0x27
 2467 01a3 FD000000 		.4byte	0xfd
 2468 01a7 18       		.byte	0x18
 2469 01a8 0A       		.uleb128 0xa
 2470 01a9 0B060000 		.4byte	.LASF29
 2471 01ad 05       		.byte	0x5
 2472 01ae 28       		.byte	0x28
 2473 01af FD000000 		.4byte	0xfd
 2474 01b3 1C       		.byte	0x1c
 2475 01b4 0A       		.uleb128 0xa
 2476 01b5 BF000000 		.4byte	.LASF30
 2477 01b9 05       		.byte	0x5
 2478 01ba 29       		.byte	0x29
 2479 01bb FD000000 		.4byte	0xfd
 2480 01bf 20       		.byte	0x20
 2481 01c0 0A       		.uleb128 0xa
 2482 01c1 720B0000 		.4byte	.LASF31
 2483 01c5 05       		.byte	0x5
 2484 01c6 2A       		.byte	0x2a
 2485 01c7 FD000000 		.4byte	0xfd
 2486 01cb 24       		.byte	0x24
 2487 01cc 0A       		.uleb128 0xa
 2488 01cd 02130000 		.4byte	.LASF32
 2489 01d1 05       		.byte	0x5
 2490 01d2 2B       		.byte	0x2b
 2491 01d3 FE030000 		.4byte	0x3fe
 2492 01d7 28       		.byte	0x28
 2493 01d8 0A       		.uleb128 0xa
 2494 01d9 70100000 		.4byte	.LASF33
 2495 01dd 05       		.byte	0x5
 2496 01de 2C       		.byte	0x2c
 2497 01df 03040000 		.4byte	0x403
 2498 01e3 80       		.byte	0x80
 2499 01e4 0A       		.uleb128 0xa
 2500 01e5 EE0C0000 		.4byte	.LASF34
 2501 01e9 05       		.byte	0x5
 2502 01ea 2D       		.byte	0x2d
 2503 01eb 0D040000 		.4byte	0x40d
 2504 01ef C0       		.byte	0xc0
 2505 01f0 0B       		.uleb128 0xb
 2506 01f1 A60E0000 		.4byte	.LASF35
 2507 01f5 05       		.byte	0x5
 2508 01f6 2E       		.byte	0x2e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 105


 2509 01f7 17040000 		.4byte	0x417
 2510 01fb 0001     		.2byte	0x100
 2511 01fd 0B       		.uleb128 0xb
 2512 01fe F80C0000 		.4byte	.LASF36
 2513 0202 05       		.byte	0x5
 2514 0203 2F       		.byte	0x2f
 2515 0204 21040000 		.4byte	0x421
 2516 0208 4001     		.2byte	0x140
 2517 020a 0B       		.uleb128 0xb
 2518 020b 8C0A0000 		.4byte	.LASF37
 2519 020f 05       		.byte	0x5
 2520 0210 30       		.byte	0x30
 2521 0211 2B040000 		.4byte	0x42b
 2522 0215 8001     		.2byte	0x180
 2523 0217 0B       		.uleb128 0xb
 2524 0218 020D0000 		.4byte	.LASF38
 2525 021c 05       		.byte	0x5
 2526 021d 31       		.byte	0x31
 2527 021e 35040000 		.4byte	0x435
 2528 0222 C001     		.2byte	0x1c0
 2529 0224 0B       		.uleb128 0xb
 2530 0225 46000000 		.4byte	.LASF39
 2531 0229 05       		.byte	0x5
 2532 022a 32       		.byte	0x32
 2533 022b 02010000 		.4byte	0x102
 2534 022f 0002     		.2byte	0x200
 2535 0231 0B       		.uleb128 0xb
 2536 0232 1F100000 		.4byte	.LASF40
 2537 0236 05       		.byte	0x5
 2538 0237 33       		.byte	0x33
 2539 0238 02010000 		.4byte	0x102
 2540 023c 0402     		.2byte	0x204
 2541 023e 0B       		.uleb128 0xb
 2542 023f A7010000 		.4byte	.LASF41
 2543 0243 05       		.byte	0x5
 2544 0244 34       		.byte	0x34
 2545 0245 02010000 		.4byte	0x102
 2546 0249 0802     		.2byte	0x208
 2547 024b 0B       		.uleb128 0xb
 2548 024c E3070000 		.4byte	.LASF42
 2549 0250 05       		.byte	0x5
 2550 0251 35       		.byte	0x35
 2551 0252 02010000 		.4byte	0x102
 2552 0256 0C02     		.2byte	0x20c
 2553 0258 0B       		.uleb128 0xb
 2554 0259 18040000 		.4byte	.LASF43
 2555 025d 05       		.byte	0x5
 2556 025e 36       		.byte	0x36
 2557 025f FD000000 		.4byte	0xfd
 2558 0263 1002     		.2byte	0x210
 2559 0265 0B       		.uleb128 0xb
 2560 0266 A6020000 		.4byte	.LASF44
 2561 026a 05       		.byte	0x5
 2562 026b 37       		.byte	0x37
 2563 026c FD000000 		.4byte	0xfd
 2564 0270 1402     		.2byte	0x214
 2565 0272 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 106


 2566 0273 D30A0000 		.4byte	.LASF45
 2567 0277 05       		.byte	0x5
 2568 0278 38       		.byte	0x38
 2569 0279 FD000000 		.4byte	0xfd
 2570 027d 1802     		.2byte	0x218
 2571 027f 0B       		.uleb128 0xb
 2572 0280 900F0000 		.4byte	.LASF46
 2573 0284 05       		.byte	0x5
 2574 0285 39       		.byte	0x39
 2575 0286 02010000 		.4byte	0x102
 2576 028a 1C02     		.2byte	0x21c
 2577 028c 0B       		.uleb128 0xb
 2578 028d 43020000 		.4byte	.LASF47
 2579 0291 05       		.byte	0x5
 2580 0292 3A       		.byte	0x3a
 2581 0293 FD000000 		.4byte	0xfd
 2582 0297 2002     		.2byte	0x220
 2583 0299 0B       		.uleb128 0xb
 2584 029a 41070000 		.4byte	.LASF48
 2585 029e 05       		.byte	0x5
 2586 029f 3B       		.byte	0x3b
 2587 02a0 FD000000 		.4byte	0xfd
 2588 02a4 2402     		.2byte	0x224
 2589 02a6 0B       		.uleb128 0xb
 2590 02a7 2E110000 		.4byte	.LASF49
 2591 02ab 05       		.byte	0x5
 2592 02ac 3C       		.byte	0x3c
 2593 02ad FD000000 		.4byte	0xfd
 2594 02b1 2802     		.2byte	0x228
 2595 02b3 0B       		.uleb128 0xb
 2596 02b4 1A070000 		.4byte	.LASF50
 2597 02b8 05       		.byte	0x5
 2598 02b9 3D       		.byte	0x3d
 2599 02ba 02010000 		.4byte	0x102
 2600 02be 2C02     		.2byte	0x22c
 2601 02c0 0B       		.uleb128 0xb
 2602 02c1 BC0A0000 		.4byte	.LASF51
 2603 02c5 05       		.byte	0x5
 2604 02c6 3E       		.byte	0x3e
 2605 02c7 FD000000 		.4byte	0xfd
 2606 02cb 3002     		.2byte	0x230
 2607 02cd 0B       		.uleb128 0xb
 2608 02ce D6080000 		.4byte	.LASF52
 2609 02d2 05       		.byte	0x5
 2610 02d3 3F       		.byte	0x3f
 2611 02d4 FD000000 		.4byte	0xfd
 2612 02d8 3402     		.2byte	0x234
 2613 02da 0B       		.uleb128 0xb
 2614 02db E1050000 		.4byte	.LASF53
 2615 02df 05       		.byte	0x5
 2616 02e0 40       		.byte	0x40
 2617 02e1 FD000000 		.4byte	0xfd
 2618 02e5 3802     		.2byte	0x238
 2619 02e7 0B       		.uleb128 0xb
 2620 02e8 34000000 		.4byte	.LASF54
 2621 02ec 05       		.byte	0x5
 2622 02ed 41       		.byte	0x41
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 107


 2623 02ee 02010000 		.4byte	0x102
 2624 02f2 3C02     		.2byte	0x23c
 2625 02f4 0B       		.uleb128 0xb
 2626 02f5 39010000 		.4byte	.LASF55
 2627 02f9 05       		.byte	0x5
 2628 02fa 42       		.byte	0x42
 2629 02fb 02010000 		.4byte	0x102
 2630 02ff 4002     		.2byte	0x240
 2631 0301 0B       		.uleb128 0xb
 2632 0302 0C0D0000 		.4byte	.LASF56
 2633 0306 05       		.byte	0x5
 2634 0307 43       		.byte	0x43
 2635 0308 3F040000 		.4byte	0x43f
 2636 030c 4402     		.2byte	0x244
 2637 030e 0B       		.uleb128 0xb
 2638 030f F8070000 		.4byte	.LASF57
 2639 0313 05       		.byte	0x5
 2640 0314 44       		.byte	0x44
 2641 0315 FD000000 		.4byte	0xfd
 2642 0319 8002     		.2byte	0x280
 2643 031b 0B       		.uleb128 0xb
 2644 031c 160D0000 		.4byte	.LASF58
 2645 0320 05       		.byte	0x5
 2646 0321 45       		.byte	0x45
 2647 0322 49040000 		.4byte	0x449
 2648 0326 8402     		.2byte	0x284
 2649 0328 0B       		.uleb128 0xb
 2650 0329 76020000 		.4byte	.LASF59
 2651 032d 05       		.byte	0x5
 2652 032e 46       		.byte	0x46
 2653 032f 02010000 		.4byte	0x102
 2654 0333 9002     		.2byte	0x290
 2655 0335 0B       		.uleb128 0xb
 2656 0336 200D0000 		.4byte	.LASF60
 2657 033a 05       		.byte	0x5
 2658 033b 47       		.byte	0x47
 2659 033c 53040000 		.4byte	0x453
 2660 0340 9402     		.2byte	0x294
 2661 0342 0B       		.uleb128 0xb
 2662 0343 1B130000 		.4byte	.LASF61
 2663 0347 05       		.byte	0x5
 2664 0348 48       		.byte	0x48
 2665 0349 02010000 		.4byte	0x102
 2666 034d A002     		.2byte	0x2a0
 2667 034f 0B       		.uleb128 0xb
 2668 0350 1F080000 		.4byte	.LASF62
 2669 0354 05       		.byte	0x5
 2670 0355 49       		.byte	0x49
 2671 0356 02010000 		.4byte	0x102
 2672 035a A402     		.2byte	0x2a4
 2673 035c 0B       		.uleb128 0xb
 2674 035d 2A0D0000 		.4byte	.LASF63
 2675 0361 05       		.byte	0x5
 2676 0362 4A       		.byte	0x4a
 2677 0363 5D040000 		.4byte	0x45d
 2678 0367 A802     		.2byte	0x2a8
 2679 0369 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 108


 2680 036a 13100000 		.4byte	.LASF64
 2681 036e 05       		.byte	0x5
 2682 036f 4B       		.byte	0x4b
 2683 0370 FD000000 		.4byte	0xfd
 2684 0374 0003     		.2byte	0x300
 2685 0376 0B       		.uleb128 0xb
 2686 0377 FE0A0000 		.4byte	.LASF65
 2687 037b 05       		.byte	0x5
 2688 037c 4C       		.byte	0x4c
 2689 037d FD000000 		.4byte	0xfd
 2690 0381 0403     		.2byte	0x304
 2691 0383 0B       		.uleb128 0xb
 2692 0384 340D0000 		.4byte	.LASF66
 2693 0388 05       		.byte	0x5
 2694 0389 4D       		.byte	0x4d
 2695 038a 77040000 		.4byte	0x477
 2696 038e 0803     		.2byte	0x308
 2697 0390 0B       		.uleb128 0xb
 2698 0391 2A060000 		.4byte	.LASF67
 2699 0395 05       		.byte	0x5
 2700 0396 4E       		.byte	0x4e
 2701 0397 FD000000 		.4byte	0xfd
 2702 039b 4003     		.2byte	0x340
 2703 039d 0B       		.uleb128 0xb
 2704 039e 5A0D0000 		.4byte	.LASF68
 2705 03a2 05       		.byte	0x5
 2706 03a3 4F       		.byte	0x4f
 2707 03a4 FD000000 		.4byte	0xfd
 2708 03a8 4403     		.2byte	0x344
 2709 03aa 0B       		.uleb128 0xb
 2710 03ab B1120000 		.4byte	.LASF69
 2711 03af 05       		.byte	0x5
 2712 03b0 50       		.byte	0x50
 2713 03b1 02010000 		.4byte	0x102
 2714 03b5 4803     		.2byte	0x348
 2715 03b7 0B       		.uleb128 0xb
 2716 03b8 49110000 		.4byte	.LASF70
 2717 03bc 05       		.byte	0x5
 2718 03bd 51       		.byte	0x51
 2719 03be 92040000 		.4byte	0x492
 2720 03c2 4C03     		.2byte	0x34c
 2721 03c4 0B       		.uleb128 0xb
 2722 03c5 BD100000 		.4byte	.LASF71
 2723 03c9 05       		.byte	0x5
 2724 03ca 52       		.byte	0x52
 2725 03cb FD000000 		.4byte	0xfd
 2726 03cf 000F     		.2byte	0xf00
 2727 03d1 0B       		.uleb128 0xb
 2728 03d2 C7100000 		.4byte	.LASF72
 2729 03d6 05       		.byte	0x5
 2730 03d7 53       		.byte	0x53
 2731 03d8 FD000000 		.4byte	0xfd
 2732 03dc 040F     		.2byte	0xf04
 2733 03de 00       		.byte	0
 2734 03df 05       		.uleb128 0x5
 2735 03e0 07010000 		.4byte	0x107
 2736 03e4 06       		.uleb128 0x6
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 109


 2737 03e5 DF030000 		.4byte	0x3df
 2738 03e9 07       		.uleb128 0x7
 2739 03ea 02010000 		.4byte	0x102
 2740 03ee F9030000 		.4byte	0x3f9
 2741 03f2 08       		.uleb128 0x8
 2742 03f3 F6000000 		.4byte	0xf6
 2743 03f7 15       		.byte	0x15
 2744 03f8 00       		.byte	0
 2745 03f9 05       		.uleb128 0x5
 2746 03fa E9030000 		.4byte	0x3e9
 2747 03fe 06       		.uleb128 0x6
 2748 03ff F9030000 		.4byte	0x3f9
 2749 0403 05       		.uleb128 0x5
 2750 0404 17010000 		.4byte	0x117
 2751 0408 05       		.uleb128 0x5
 2752 0409 27010000 		.4byte	0x127
 2753 040d 06       		.uleb128 0x6
 2754 040e 08040000 		.4byte	0x408
 2755 0412 05       		.uleb128 0x5
 2756 0413 27010000 		.4byte	0x127
 2757 0417 06       		.uleb128 0x6
 2758 0418 12040000 		.4byte	0x412
 2759 041c 05       		.uleb128 0x5
 2760 041d 27010000 		.4byte	0x127
 2761 0421 06       		.uleb128 0x6
 2762 0422 1C040000 		.4byte	0x41c
 2763 0426 05       		.uleb128 0x5
 2764 0427 27010000 		.4byte	0x127
 2765 042b 06       		.uleb128 0x6
 2766 042c 26040000 		.4byte	0x426
 2767 0430 05       		.uleb128 0x5
 2768 0431 27010000 		.4byte	0x127
 2769 0435 06       		.uleb128 0x6
 2770 0436 30040000 		.4byte	0x430
 2771 043a 05       		.uleb128 0x5
 2772 043b 47010000 		.4byte	0x147
 2773 043f 06       		.uleb128 0x6
 2774 0440 3A040000 		.4byte	0x43a
 2775 0444 05       		.uleb128 0x5
 2776 0445 37010000 		.4byte	0x137
 2777 0449 06       		.uleb128 0x6
 2778 044a 44040000 		.4byte	0x444
 2779 044e 05       		.uleb128 0x5
 2780 044f 37010000 		.4byte	0x137
 2781 0453 06       		.uleb128 0x6
 2782 0454 4E040000 		.4byte	0x44e
 2783 0458 05       		.uleb128 0x5
 2784 0459 E9030000 		.4byte	0x3e9
 2785 045d 06       		.uleb128 0x6
 2786 045e 58040000 		.4byte	0x458
 2787 0462 07       		.uleb128 0x7
 2788 0463 02010000 		.4byte	0x102
 2789 0467 72040000 		.4byte	0x472
 2790 046b 08       		.uleb128 0x8
 2791 046c F6000000 		.4byte	0xf6
 2792 0470 0D       		.byte	0xd
 2793 0471 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 110


 2794 0472 05       		.uleb128 0x5
 2795 0473 62040000 		.4byte	0x462
 2796 0477 06       		.uleb128 0x6
 2797 0478 72040000 		.4byte	0x472
 2798 047c 07       		.uleb128 0x7
 2799 047d 02010000 		.4byte	0x102
 2800 0481 8D040000 		.4byte	0x48d
 2801 0485 0C       		.uleb128 0xc
 2802 0486 F6000000 		.4byte	0xf6
 2803 048a EC02     		.2byte	0x2ec
 2804 048c 00       		.byte	0
 2805 048d 05       		.uleb128 0x5
 2806 048e 7C040000 		.4byte	0x47c
 2807 0492 06       		.uleb128 0x6
 2808 0493 8D040000 		.4byte	0x48d
 2809 0497 03       		.uleb128 0x3
 2810 0498 DA060000 		.4byte	.LASF73
 2811 049c 05       		.byte	0x5
 2812 049d 54       		.byte	0x54
 2813 049e 57010000 		.4byte	0x157
 2814 04a2 0D       		.uleb128 0xd
 2815 04a3 50030000 		.4byte	.LASF74
 2816 04a7 06       		.byte	0x6
 2817 04a8 5206     		.2byte	0x652
 2818 04aa 97040000 		.4byte	0x497
 2819 04ae 0E       		.uleb128 0xe
 2820 04af B8       		.byte	0xb8
 2821 04b0 07       		.byte	0x7
 2822 04b1 34       		.byte	0x34
 2823 04b2 BF080000 		.4byte	0x8bf
 2824 04b6 0A       		.uleb128 0xa
 2825 04b7 CC010000 		.4byte	.LASF75
 2826 04bb 07       		.byte	0x7
 2827 04bc 37       		.byte	0x37
 2828 04bd D9000000 		.4byte	0xd9
 2829 04c1 00       		.byte	0
 2830 04c2 0A       		.uleb128 0xa
 2831 04c3 48040000 		.4byte	.LASF76
 2832 04c7 07       		.byte	0x7
 2833 04c8 38       		.byte	0x38
 2834 04c9 D9000000 		.4byte	0xd9
 2835 04cd 04       		.byte	0x4
 2836 04ce 0A       		.uleb128 0xa
 2837 04cf DC000000 		.4byte	.LASF77
 2838 04d3 07       		.byte	0x7
 2839 04d4 39       		.byte	0x39
 2840 04d5 D9000000 		.4byte	0xd9
 2841 04d9 08       		.byte	0x8
 2842 04da 0A       		.uleb128 0xa
 2843 04db B7000000 		.4byte	.LASF78
 2844 04df 07       		.byte	0x7
 2845 04e0 3A       		.byte	0x3a
 2846 04e1 D9000000 		.4byte	0xd9
 2847 04e5 0C       		.byte	0xc
 2848 04e6 0A       		.uleb128 0xa
 2849 04e7 F70B0000 		.4byte	.LASF79
 2850 04eb 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 111


 2851 04ec 3B       		.byte	0x3b
 2852 04ed D9000000 		.4byte	0xd9
 2853 04f1 10       		.byte	0x10
 2854 04f2 0A       		.uleb128 0xa
 2855 04f3 6E0A0000 		.4byte	.LASF80
 2856 04f7 07       		.byte	0x7
 2857 04f8 3C       		.byte	0x3c
 2858 04f9 D9000000 		.4byte	0xd9
 2859 04fd 14       		.byte	0x14
 2860 04fe 0A       		.uleb128 0xa
 2861 04ff 52060000 		.4byte	.LASF81
 2862 0503 07       		.byte	0x7
 2863 0504 3D       		.byte	0x3d
 2864 0505 D9000000 		.4byte	0xd9
 2865 0509 18       		.byte	0x18
 2866 050a 0A       		.uleb128 0xa
 2867 050b F9120000 		.4byte	.LASF82
 2868 050f 07       		.byte	0x7
 2869 0510 3E       		.byte	0x3e
 2870 0511 D9000000 		.4byte	0xd9
 2871 0515 1C       		.byte	0x1c
 2872 0516 0A       		.uleb128 0xa
 2873 0517 1B090000 		.4byte	.LASF83
 2874 051b 07       		.byte	0x7
 2875 051c 3F       		.byte	0x3f
 2876 051d D9000000 		.4byte	0xd9
 2877 0521 20       		.byte	0x20
 2878 0522 0A       		.uleb128 0xa
 2879 0523 32090000 		.4byte	.LASF84
 2880 0527 07       		.byte	0x7
 2881 0528 40       		.byte	0x40
 2882 0529 D9000000 		.4byte	0xd9
 2883 052d 24       		.byte	0x24
 2884 052e 0A       		.uleb128 0xa
 2885 052f 900D0000 		.4byte	.LASF85
 2886 0533 07       		.byte	0x7
 2887 0534 43       		.byte	0x43
 2888 0535 AD000000 		.4byte	0xad
 2889 0539 28       		.byte	0x28
 2890 053a 0A       		.uleb128 0xa
 2891 053b 23040000 		.4byte	.LASF86
 2892 053f 07       		.byte	0x7
 2893 0540 44       		.byte	0x44
 2894 0541 AD000000 		.4byte	0xad
 2895 0545 29       		.byte	0x29
 2896 0546 0A       		.uleb128 0xa
 2897 0547 2D0C0000 		.4byte	.LASF87
 2898 054b 07       		.byte	0x7
 2899 054c 45       		.byte	0x45
 2900 054d AD000000 		.4byte	0xad
 2901 0551 2A       		.byte	0x2a
 2902 0552 0A       		.uleb128 0xa
 2903 0553 BE0D0000 		.4byte	.LASF88
 2904 0557 07       		.byte	0x7
 2905 0558 46       		.byte	0x46
 2906 0559 AD000000 		.4byte	0xad
 2907 055d 2B       		.byte	0x2b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 112


 2908 055e 0A       		.uleb128 0xa
 2909 055f B20D0000 		.4byte	.LASF89
 2910 0563 07       		.byte	0x7
 2911 0564 47       		.byte	0x47
 2912 0565 AD000000 		.4byte	0xad
 2913 0569 2C       		.byte	0x2c
 2914 056a 0A       		.uleb128 0xa
 2915 056b CD0F0000 		.4byte	.LASF90
 2916 056f 07       		.byte	0x7
 2917 0570 48       		.byte	0x48
 2918 0571 AD000000 		.4byte	0xad
 2919 0575 2D       		.byte	0x2d
 2920 0576 0A       		.uleb128 0xa
 2921 0577 D2130000 		.4byte	.LASF91
 2922 057b 07       		.byte	0x7
 2923 057c 49       		.byte	0x49
 2924 057d AD000000 		.4byte	0xad
 2925 0581 2E       		.byte	0x2e
 2926 0582 0A       		.uleb128 0xa
 2927 0583 C3120000 		.4byte	.LASF92
 2928 0587 07       		.byte	0x7
 2929 0588 4A       		.byte	0x4a
 2930 0589 AD000000 		.4byte	0xad
 2931 058d 2F       		.byte	0x2f
 2932 058e 0A       		.uleb128 0xa
 2933 058f 23030000 		.4byte	.LASF93
 2934 0593 07       		.byte	0x7
 2935 0594 4B       		.byte	0x4b
 2936 0595 AD000000 		.4byte	0xad
 2937 0599 30       		.byte	0x30
 2938 059a 0A       		.uleb128 0xa
 2939 059b F30A0000 		.4byte	.LASF94
 2940 059f 07       		.byte	0x7
 2941 05a0 4E       		.byte	0x4e
 2942 05a1 AD000000 		.4byte	0xad
 2943 05a5 31       		.byte	0x31
 2944 05a6 0A       		.uleb128 0xa
 2945 05a7 5A120000 		.4byte	.LASF95
 2946 05ab 07       		.byte	0x7
 2947 05ac 4F       		.byte	0x4f
 2948 05ad AD000000 		.4byte	0xad
 2949 05b1 32       		.byte	0x32
 2950 05b2 0A       		.uleb128 0xa
 2951 05b3 C70A0000 		.4byte	.LASF96
 2952 05b7 07       		.byte	0x7
 2953 05b8 50       		.byte	0x50
 2954 05b9 AD000000 		.4byte	0xad
 2955 05bd 33       		.byte	0x33
 2956 05be 0A       		.uleb128 0xa
 2957 05bf 73010000 		.4byte	.LASF97
 2958 05c3 07       		.byte	0x7
 2959 05c4 51       		.byte	0x51
 2960 05c5 AD000000 		.4byte	0xad
 2961 05c9 34       		.byte	0x34
 2962 05ca 0A       		.uleb128 0xa
 2963 05cb 9D0D0000 		.4byte	.LASF98
 2964 05cf 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 113


 2965 05d0 52       		.byte	0x52
 2966 05d1 B8000000 		.4byte	0xb8
 2967 05d5 36       		.byte	0x36
 2968 05d6 0A       		.uleb128 0xa
 2969 05d7 FA010000 		.4byte	.LASF99
 2970 05db 07       		.byte	0x7
 2971 05dc 53       		.byte	0x53
 2972 05dd B8000000 		.4byte	0xb8
 2973 05e1 38       		.byte	0x38
 2974 05e2 0A       		.uleb128 0xa
 2975 05e3 24020000 		.4byte	.LASF100
 2976 05e7 07       		.byte	0x7
 2977 05e8 54       		.byte	0x54
 2978 05e9 B8000000 		.4byte	0xb8
 2979 05ed 3A       		.byte	0x3a
 2980 05ee 0A       		.uleb128 0xa
 2981 05ef 0C130000 		.4byte	.LASF101
 2982 05f3 07       		.byte	0x7
 2983 05f4 55       		.byte	0x55
 2984 05f5 AD000000 		.4byte	0xad
 2985 05f9 3C       		.byte	0x3c
 2986 05fa 0A       		.uleb128 0xa
 2987 05fb 9B050000 		.4byte	.LASF102
 2988 05ff 07       		.byte	0x7
 2989 0600 56       		.byte	0x56
 2990 0601 AD000000 		.4byte	0xad
 2991 0605 3D       		.byte	0x3d
 2992 0606 0A       		.uleb128 0xa
 2993 0607 1F0C0000 		.4byte	.LASF103
 2994 060b 07       		.byte	0x7
 2995 060c 57       		.byte	0x57
 2996 060d AD000000 		.4byte	0xad
 2997 0611 3E       		.byte	0x3e
 2998 0612 0A       		.uleb128 0xa
 2999 0613 A6000000 		.4byte	.LASF104
 3000 0617 07       		.byte	0x7
 3001 0618 58       		.byte	0x58
 3002 0619 AD000000 		.4byte	0xad
 3003 061d 3F       		.byte	0x3f
 3004 061e 0A       		.uleb128 0xa
 3005 061f 44010000 		.4byte	.LASF105
 3006 0623 07       		.byte	0x7
 3007 0624 59       		.byte	0x59
 3008 0625 AD000000 		.4byte	0xad
 3009 0629 40       		.byte	0x40
 3010 062a 0A       		.uleb128 0xa
 3011 062b 100B0000 		.4byte	.LASF106
 3012 062f 07       		.byte	0x7
 3013 0630 5A       		.byte	0x5a
 3014 0631 AD000000 		.4byte	0xad
 3015 0635 41       		.byte	0x41
 3016 0636 0A       		.uleb128 0xa
 3017 0637 15120000 		.4byte	.LASF107
 3018 063b 07       		.byte	0x7
 3019 063c 5B       		.byte	0x5b
 3020 063d AD000000 		.4byte	0xad
 3021 0641 42       		.byte	0x42
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 114


 3022 0642 0A       		.uleb128 0xa
 3023 0643 99060000 		.4byte	.LASF108
 3024 0647 07       		.byte	0x7
 3025 0648 5C       		.byte	0x5c
 3026 0649 AD000000 		.4byte	0xad
 3027 064d 43       		.byte	0x43
 3028 064e 0A       		.uleb128 0xa
 3029 064f D2070000 		.4byte	.LASF109
 3030 0653 07       		.byte	0x7
 3031 0654 5D       		.byte	0x5d
 3032 0655 AD000000 		.4byte	0xad
 3033 0659 44       		.byte	0x44
 3034 065a 0A       		.uleb128 0xa
 3035 065b E1110000 		.4byte	.LASF110
 3036 065f 07       		.byte	0x7
 3037 0660 5E       		.byte	0x5e
 3038 0661 D9000000 		.4byte	0xd9
 3039 0665 48       		.byte	0x48
 3040 0666 0A       		.uleb128 0xa
 3041 0667 AF020000 		.4byte	.LASF111
 3042 066b 07       		.byte	0x7
 3043 066c 5F       		.byte	0x5f
 3044 066d D9000000 		.4byte	0xd9
 3045 0671 4C       		.byte	0x4c
 3046 0672 0A       		.uleb128 0xa
 3047 0673 F3110000 		.4byte	.LASF112
 3048 0677 07       		.byte	0x7
 3049 0678 60       		.byte	0x60
 3050 0679 AD000000 		.4byte	0xad
 3051 067d 50       		.byte	0x50
 3052 067e 0A       		.uleb128 0xa
 3053 067f CF050000 		.4byte	.LASF113
 3054 0683 07       		.byte	0x7
 3055 0684 61       		.byte	0x61
 3056 0685 AD000000 		.4byte	0xad
 3057 0689 51       		.byte	0x51
 3058 068a 0A       		.uleb128 0xa
 3059 068b 98090000 		.4byte	.LASF114
 3060 068f 07       		.byte	0x7
 3061 0690 62       		.byte	0x62
 3062 0691 AD000000 		.4byte	0xad
 3063 0695 52       		.byte	0x52
 3064 0696 0A       		.uleb128 0xa
 3065 0697 31040000 		.4byte	.LASF115
 3066 069b 07       		.byte	0x7
 3067 069c 63       		.byte	0x63
 3068 069d AD000000 		.4byte	0xad
 3069 06a1 53       		.byte	0x53
 3070 06a2 0A       		.uleb128 0xa
 3071 06a3 62110000 		.4byte	.LASF116
 3072 06a7 07       		.byte	0x7
 3073 06a8 64       		.byte	0x64
 3074 06a9 AD000000 		.4byte	0xad
 3075 06ad 54       		.byte	0x54
 3076 06ae 0A       		.uleb128 0xa
 3077 06af 16060000 		.4byte	.LASF117
 3078 06b3 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 115


 3079 06b4 65       		.byte	0x65
 3080 06b5 AD000000 		.4byte	0xad
 3081 06b9 55       		.byte	0x55
 3082 06ba 0A       		.uleb128 0xa
 3083 06bb 00000000 		.4byte	.LASF118
 3084 06bf 07       		.byte	0x7
 3085 06c0 66       		.byte	0x66
 3086 06c1 AD000000 		.4byte	0xad
 3087 06c5 56       		.byte	0x56
 3088 06c6 0A       		.uleb128 0xa
 3089 06c7 370C0000 		.4byte	.LASF119
 3090 06cb 07       		.byte	0x7
 3091 06cc 67       		.byte	0x67
 3092 06cd AD000000 		.4byte	0xad
 3093 06d1 57       		.byte	0x57
 3094 06d2 0A       		.uleb128 0xa
 3095 06d3 87050000 		.4byte	.LASF120
 3096 06d7 07       		.byte	0x7
 3097 06d8 68       		.byte	0x68
 3098 06d9 AD000000 		.4byte	0xad
 3099 06dd 58       		.byte	0x58
 3100 06de 0A       		.uleb128 0xa
 3101 06df 33130000 		.4byte	.LASF121
 3102 06e3 07       		.byte	0x7
 3103 06e4 69       		.byte	0x69
 3104 06e5 AD000000 		.4byte	0xad
 3105 06e9 59       		.byte	0x59
 3106 06ea 0A       		.uleb128 0xa
 3107 06eb 4F120000 		.4byte	.LASF122
 3108 06ef 07       		.byte	0x7
 3109 06f0 6E       		.byte	0x6e
 3110 06f1 C3000000 		.4byte	0xc3
 3111 06f5 5A       		.byte	0x5a
 3112 06f6 0A       		.uleb128 0xa
 3113 06f7 07010000 		.4byte	.LASF123
 3114 06fb 07       		.byte	0x7
 3115 06fc 6F       		.byte	0x6f
 3116 06fd C3000000 		.4byte	0xc3
 3117 0701 5C       		.byte	0x5c
 3118 0702 0A       		.uleb128 0xa
 3119 0703 23090000 		.4byte	.LASF124
 3120 0707 07       		.byte	0x7
 3121 0708 70       		.byte	0x70
 3122 0709 AD000000 		.4byte	0xad
 3123 070d 5E       		.byte	0x5e
 3124 070e 0A       		.uleb128 0xa
 3125 070f 68120000 		.4byte	.LASF125
 3126 0713 07       		.byte	0x7
 3127 0714 71       		.byte	0x71
 3128 0715 AD000000 		.4byte	0xad
 3129 0719 5F       		.byte	0x5f
 3130 071a 0A       		.uleb128 0xa
 3131 071b BF060000 		.4byte	.LASF126
 3132 071f 07       		.byte	0x7
 3133 0720 72       		.byte	0x72
 3134 0721 AD000000 		.4byte	0xad
 3135 0725 60       		.byte	0x60
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 116


 3136 0726 0A       		.uleb128 0xa
 3137 0727 28080000 		.4byte	.LASF127
 3138 072b 07       		.byte	0x7
 3139 072c 73       		.byte	0x73
 3140 072d D9000000 		.4byte	0xd9
 3141 0731 64       		.byte	0x64
 3142 0732 0A       		.uleb128 0xa
 3143 0733 E6130000 		.4byte	.LASF128
 3144 0737 07       		.byte	0x7
 3145 0738 76       		.byte	0x76
 3146 0739 C3000000 		.4byte	0xc3
 3147 073d 68       		.byte	0x68
 3148 073e 0A       		.uleb128 0xa
 3149 073f 000C0000 		.4byte	.LASF129
 3150 0743 07       		.byte	0x7
 3151 0744 77       		.byte	0x77
 3152 0745 C3000000 		.4byte	0xc3
 3153 0749 6A       		.byte	0x6a
 3154 074a 0A       		.uleb128 0xa
 3155 074b A60A0000 		.4byte	.LASF130
 3156 074f 07       		.byte	0x7
 3157 0750 78       		.byte	0x78
 3158 0751 C3000000 		.4byte	0xc3
 3159 0755 6C       		.byte	0x6c
 3160 0756 0A       		.uleb128 0xa
 3161 0757 F5020000 		.4byte	.LASF131
 3162 075b 07       		.byte	0x7
 3163 075c 79       		.byte	0x79
 3164 075d C3000000 		.4byte	0xc3
 3165 0761 6E       		.byte	0x6e
 3166 0762 0A       		.uleb128 0xa
 3167 0763 9B080000 		.4byte	.LASF132
 3168 0767 07       		.byte	0x7
 3169 0768 7B       		.byte	0x7b
 3170 0769 AD000000 		.4byte	0xad
 3171 076d 70       		.byte	0x70
 3172 076e 0A       		.uleb128 0xa
 3173 076f 81030000 		.4byte	.LASF133
 3174 0773 07       		.byte	0x7
 3175 0774 7C       		.byte	0x7c
 3176 0775 AD000000 		.4byte	0xad
 3177 0779 71       		.byte	0x71
 3178 077a 0A       		.uleb128 0xa
 3179 077b 81020000 		.4byte	.LASF134
 3180 077f 07       		.byte	0x7
 3181 0780 7D       		.byte	0x7d
 3182 0781 AD000000 		.4byte	0xad
 3183 0785 72       		.byte	0x72
 3184 0786 0A       		.uleb128 0xa
 3185 0787 B7040000 		.4byte	.LASF135
 3186 078b 07       		.byte	0x7
 3187 078c 7E       		.byte	0x7e
 3188 078d AD000000 		.4byte	0xad
 3189 0791 73       		.byte	0x73
 3190 0792 0A       		.uleb128 0xa
 3191 0793 DC0C0000 		.4byte	.LASF136
 3192 0797 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 117


 3193 0798 80       		.byte	0x80
 3194 0799 C3000000 		.4byte	0xc3
 3195 079d 74       		.byte	0x74
 3196 079e 0A       		.uleb128 0xa
 3197 079f 930B0000 		.4byte	.LASF137
 3198 07a3 07       		.byte	0x7
 3199 07a4 81       		.byte	0x81
 3200 07a5 C3000000 		.4byte	0xc3
 3201 07a9 76       		.byte	0x76
 3202 07aa 0A       		.uleb128 0xa
 3203 07ab BD070000 		.4byte	.LASF138
 3204 07af 07       		.byte	0x7
 3205 07b0 82       		.byte	0x82
 3206 07b1 C3000000 		.4byte	0xc3
 3207 07b5 78       		.byte	0x78
 3208 07b6 0A       		.uleb128 0xa
 3209 07b7 65090000 		.4byte	.LASF139
 3210 07bb 07       		.byte	0x7
 3211 07bc 83       		.byte	0x83
 3212 07bd C3000000 		.4byte	0xc3
 3213 07c1 7A       		.byte	0x7a
 3214 07c2 0A       		.uleb128 0xa
 3215 07c3 640F0000 		.4byte	.LASF140
 3216 07c7 07       		.byte	0x7
 3217 07c8 86       		.byte	0x86
 3218 07c9 AD000000 		.4byte	0xad
 3219 07cd 7C       		.byte	0x7c
 3220 07ce 0A       		.uleb128 0xa
 3221 07cf 04120000 		.4byte	.LASF141
 3222 07d3 07       		.byte	0x7
 3223 07d4 87       		.byte	0x87
 3224 07d5 AD000000 		.4byte	0xad
 3225 07d9 7D       		.byte	0x7d
 3226 07da 0A       		.uleb128 0xa
 3227 07db 5B040000 		.4byte	.LASF142
 3228 07df 07       		.byte	0x7
 3229 07e0 88       		.byte	0x88
 3230 07e1 AD000000 		.4byte	0xad
 3231 07e5 7E       		.byte	0x7e
 3232 07e6 0A       		.uleb128 0xa
 3233 07e7 04040000 		.4byte	.LASF143
 3234 07eb 07       		.byte	0x7
 3235 07ec 89       		.byte	0x89
 3236 07ed AD000000 		.4byte	0xad
 3237 07f1 7F       		.byte	0x7f
 3238 07f2 0A       		.uleb128 0xa
 3239 07f3 9C040000 		.4byte	.LASF144
 3240 07f7 07       		.byte	0x7
 3241 07f8 8A       		.byte	0x8a
 3242 07f9 AD000000 		.4byte	0xad
 3243 07fd 80       		.byte	0x80
 3244 07fe 0A       		.uleb128 0xa
 3245 07ff BE110000 		.4byte	.LASF145
 3246 0803 07       		.byte	0x7
 3247 0804 8D       		.byte	0x8d
 3248 0805 D9000000 		.4byte	0xd9
 3249 0809 84       		.byte	0x84
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 118


 3250 080a 0A       		.uleb128 0xa
 3251 080b 790F0000 		.4byte	.LASF146
 3252 080f 07       		.byte	0x7
 3253 0810 8E       		.byte	0x8e
 3254 0811 D9000000 		.4byte	0xd9
 3255 0815 88       		.byte	0x88
 3256 0816 0A       		.uleb128 0xa
 3257 0817 91120000 		.4byte	.LASF147
 3258 081b 07       		.byte	0x7
 3259 081c 8F       		.byte	0x8f
 3260 081d D9000000 		.4byte	0xd9
 3261 0821 8C       		.byte	0x8c
 3262 0822 0A       		.uleb128 0xa
 3263 0823 C70C0000 		.4byte	.LASF148
 3264 0827 07       		.byte	0x7
 3265 0828 90       		.byte	0x90
 3266 0829 D9000000 		.4byte	0xd9
 3267 082d 90       		.byte	0x90
 3268 082e 0A       		.uleb128 0xa
 3269 082f FB0E0000 		.4byte	.LASF149
 3270 0833 07       		.byte	0x7
 3271 0834 91       		.byte	0x91
 3272 0835 D9000000 		.4byte	0xd9
 3273 0839 94       		.byte	0x94
 3274 083a 0A       		.uleb128 0xa
 3275 083b A8030000 		.4byte	.LASF150
 3276 083f 07       		.byte	0x7
 3277 0840 92       		.byte	0x92
 3278 0841 D9000000 		.4byte	0xd9
 3279 0845 98       		.byte	0x98
 3280 0846 0A       		.uleb128 0xa
 3281 0847 9C0F0000 		.4byte	.LASF151
 3282 084b 07       		.byte	0x7
 3283 084c 93       		.byte	0x93
 3284 084d D9000000 		.4byte	0xd9
 3285 0851 9C       		.byte	0x9c
 3286 0852 0A       		.uleb128 0xa
 3287 0853 83060000 		.4byte	.LASF152
 3288 0857 07       		.byte	0x7
 3289 0858 94       		.byte	0x94
 3290 0859 D9000000 		.4byte	0xd9
 3291 085d A0       		.byte	0xa0
 3292 085e 0A       		.uleb128 0xa
 3293 085f F2000000 		.4byte	.LASF153
 3294 0863 07       		.byte	0x7
 3295 0864 95       		.byte	0x95
 3296 0865 C3000000 		.4byte	0xc3
 3297 0869 A4       		.byte	0xa4
 3298 086a 0A       		.uleb128 0xa
 3299 086b 19110000 		.4byte	.LASF154
 3300 086f 07       		.byte	0x7
 3301 0870 96       		.byte	0x96
 3302 0871 C3000000 		.4byte	0xc3
 3303 0875 A6       		.byte	0xa6
 3304 0876 0A       		.uleb128 0xa
 3305 0877 EC0F0000 		.4byte	.LASF155
 3306 087b 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 119


 3307 087c 97       		.byte	0x97
 3308 087d C3000000 		.4byte	0xc3
 3309 0881 A8       		.byte	0xa8
 3310 0882 0A       		.uleb128 0xa
 3311 0883 FF080000 		.4byte	.LASF156
 3312 0887 07       		.byte	0x7
 3313 0888 98       		.byte	0x98
 3314 0889 C3000000 		.4byte	0xc3
 3315 088d AA       		.byte	0xaa
 3316 088e 0A       		.uleb128 0xa
 3317 088f 980A0000 		.4byte	.LASF157
 3318 0893 07       		.byte	0x7
 3319 0894 99       		.byte	0x99
 3320 0895 C3000000 		.4byte	0xc3
 3321 0899 AC       		.byte	0xac
 3322 089a 0A       		.uleb128 0xa
 3323 089b 200B0000 		.4byte	.LASF158
 3324 089f 07       		.byte	0x7
 3325 08a0 9A       		.byte	0x9a
 3326 08a1 C3000000 		.4byte	0xc3
 3327 08a5 AE       		.byte	0xae
 3328 08a6 0A       		.uleb128 0xa
 3329 08a7 02030000 		.4byte	.LASF159
 3330 08ab 07       		.byte	0x7
 3331 08ac 9D       		.byte	0x9d
 3332 08ad C3000000 		.4byte	0xc3
 3333 08b1 B0       		.byte	0xb0
 3334 08b2 0A       		.uleb128 0xa
 3335 08b3 F2100000 		.4byte	.LASF160
 3336 08b7 07       		.byte	0x7
 3337 08b8 9E       		.byte	0x9e
 3338 08b9 D9000000 		.4byte	0xd9
 3339 08bd B4       		.byte	0xb4
 3340 08be 00       		.byte	0
 3341 08bf 03       		.uleb128 0x3
 3342 08c0 EB030000 		.4byte	.LASF161
 3343 08c4 07       		.byte	0x7
 3344 08c5 9F       		.byte	0x9f
 3345 08c6 AE040000 		.4byte	0x4ae
 3346 08ca 0D       		.uleb128 0xd
 3347 08cb 6E0E0000 		.4byte	.LASF162
 3348 08cf 08       		.byte	0x8
 3349 08d0 F601     		.2byte	0x1f6
 3350 08d2 D6080000 		.4byte	0x8d6
 3351 08d6 02       		.uleb128 0x2
 3352 08d7 01       		.byte	0x1
 3353 08d8 08       		.byte	0x8
 3354 08d9 B2000000 		.4byte	.LASF163
 3355 08dd 0D       		.uleb128 0xd
 3356 08de 20050000 		.4byte	.LASF164
 3357 08e2 08       		.byte	0x8
 3358 08e3 F701     		.2byte	0x1f7
 3359 08e5 E9080000 		.4byte	0x8e9
 3360 08e9 02       		.uleb128 0x2
 3361 08ea 04       		.byte	0x4
 3362 08eb 04       		.byte	0x4
 3363 08ec 1D040000 		.4byte	.LASF165
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 120


 3364 08f0 02       		.uleb128 0x2
 3365 08f1 08       		.byte	0x8
 3366 08f2 04       		.byte	0x4
 3367 08f3 F1050000 		.4byte	.LASF166
 3368 08f7 0D       		.uleb128 0xd
 3369 08f8 B50A0000 		.4byte	.LASF167
 3370 08fc 08       		.byte	0x8
 3371 08fd EB03     		.2byte	0x3eb
 3372 08ff C3000000 		.4byte	0xc3
 3373 0903 0F       		.uleb128 0xf
 3374 0904 04       		.byte	0x4
 3375 0905 A6000000 		.4byte	0xa6
 3376 0909 09       		.byte	0x9
 3377 090a 1405     		.2byte	0x514
 3378 090c 44090000 		.4byte	0x944
 3379 0910 10       		.uleb128 0x10
 3380 0911 76050000 		.4byte	.LASF168
 3381 0915 00       		.byte	0
 3382 0916 11       		.uleb128 0x11
 3383 0917 21120000 		.4byte	.LASF169
 3384 091b 01004200 		.4byte	0x420001
 3385 091f 11       		.uleb128 0x11
 3386 0920 E6060000 		.4byte	.LASF170
 3387 0924 02004200 		.4byte	0x420002
 3388 0928 11       		.uleb128 0x11
 3389 0929 03070000 		.4byte	.LASF171
 3390 092d 03004200 		.4byte	0x420003
 3391 0931 11       		.uleb128 0x11
 3392 0932 2F070000 		.4byte	.LASF172
 3393 0936 04004200 		.4byte	0x420004
 3394 093a 11       		.uleb128 0x11
 3395 093b 54110000 		.4byte	.LASF173
 3396 093f FF004200 		.4byte	0x4200ff
 3397 0943 00       		.byte	0
 3398 0944 0D       		.uleb128 0xd
 3399 0945 C7000000 		.4byte	.LASF174
 3400 0949 09       		.byte	0x9
 3401 094a 1C05     		.2byte	0x51c
 3402 094c 03090000 		.4byte	0x903
 3403 0950 0F       		.uleb128 0xf
 3404 0951 01       		.byte	0x1
 3405 0952 37000000 		.4byte	0x37
 3406 0956 09       		.byte	0x9
 3407 0957 BC05     		.2byte	0x5bc
 3408 0959 76090000 		.4byte	0x976
 3409 095d 10       		.uleb128 0x10
 3410 095e 47140000 		.4byte	.LASF175
 3411 0962 01       		.byte	0x1
 3412 0963 10       		.uleb128 0x10
 3413 0964 D7030000 		.4byte	.LASF176
 3414 0968 02       		.byte	0x2
 3415 0969 10       		.uleb128 0x10
 3416 096a 12140000 		.4byte	.LASF177
 3417 096e 04       		.byte	0x4
 3418 096f 10       		.uleb128 0x10
 3419 0970 2D140000 		.4byte	.LASF178
 3420 0974 08       		.byte	0x8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 121


 3421 0975 00       		.byte	0
 3422 0976 0D       		.uleb128 0xd
 3423 0977 3E0D0000 		.4byte	.LASF179
 3424 097b 09       		.byte	0x9
 3425 097c CB05     		.2byte	0x5cb
 3426 097e 50090000 		.4byte	0x950
 3427 0982 12       		.uleb128 0x12
 3428 0983 08       		.byte	0x8
 3429 0984 09       		.byte	0x9
 3430 0985 E705     		.2byte	0x5e7
 3431 0987 A6090000 		.4byte	0x9a6
 3432 098b 13       		.uleb128 0x13
 3433 098c 43040000 		.4byte	.LASF180
 3434 0990 09       		.byte	0x9
 3435 0991 E905     		.2byte	0x5e9
 3436 0993 A6090000 		.4byte	0x9a6
 3437 0997 00       		.byte	0
 3438 0998 13       		.uleb128 0x13
 3439 0999 5C0A0000 		.4byte	.LASF181
 3440 099d 09       		.byte	0x9
 3441 099e EC05     		.2byte	0x5ec
 3442 09a0 A6090000 		.4byte	0x9a6
 3443 09a4 04       		.byte	0x4
 3444 09a5 00       		.byte	0
 3445 09a6 14       		.uleb128 0x14
 3446 09a7 04       		.byte	0x4
 3447 09a8 0D       		.uleb128 0xd
 3448 09a9 58000000 		.4byte	.LASF182
 3449 09ad 09       		.byte	0x9
 3450 09ae EF05     		.2byte	0x5ef
 3451 09b0 82090000 		.4byte	0x982
 3452 09b4 15       		.uleb128 0x15
 3453 09b5 04       		.byte	0x4
 3454 09b6 A8090000 		.4byte	0x9a8
 3455 09ba 0F       		.uleb128 0xf
 3456 09bb 04       		.byte	0x4
 3457 09bc A6000000 		.4byte	0xa6
 3458 09c0 02       		.byte	0x2
 3459 09c1 FE02     		.2byte	0x2fe
 3460 09c3 E9090000 		.4byte	0x9e9
 3461 09c7 10       		.uleb128 0x10
 3462 09c8 C7080000 		.4byte	.LASF183
 3463 09cc 00       		.byte	0
 3464 09cd 11       		.uleb128 0x11
 3465 09ce 5B060000 		.4byte	.LASF184
 3466 09d2 01000600 		.4byte	0x60001
 3467 09d6 11       		.uleb128 0x11
 3468 09d7 7D0B0000 		.4byte	.LASF185
 3469 09db 02000600 		.4byte	0x60002
 3470 09df 11       		.uleb128 0x11
 3471 09e0 05020000 		.4byte	.LASF186
 3472 09e4 03000600 		.4byte	0x60003
 3473 09e8 00       		.byte	0
 3474 09e9 0D       		.uleb128 0xd
 3475 09ea 72080000 		.4byte	.LASF187
 3476 09ee 02       		.byte	0x2
 3477 09ef 0303     		.2byte	0x303
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 122


 3478 09f1 BA090000 		.4byte	0x9ba
 3479 09f5 0F       		.uleb128 0xf
 3480 09f6 01       		.byte	0x1
 3481 09f7 37000000 		.4byte	0x37
 3482 09fb 02       		.byte	0x2
 3483 09fc 0703     		.2byte	0x307
 3484 09fe 0F0A0000 		.4byte	0xa0f
 3485 0a02 10       		.uleb128 0x10
 3486 0a03 450B0000 		.4byte	.LASF188
 3487 0a07 00       		.byte	0
 3488 0a08 10       		.uleb128 0x10
 3489 0a09 9F130000 		.4byte	.LASF189
 3490 0a0d 01       		.byte	0x1
 3491 0a0e 00       		.byte	0
 3492 0a0f 0D       		.uleb128 0xd
 3493 0a10 D7020000 		.4byte	.LASF190
 3494 0a14 02       		.byte	0x2
 3495 0a15 0A03     		.2byte	0x30a
 3496 0a17 F5090000 		.4byte	0x9f5
 3497 0a1b 0F       		.uleb128 0xf
 3498 0a1c 01       		.byte	0x1
 3499 0a1d 37000000 		.4byte	0x37
 3500 0a21 02       		.byte	0x2
 3501 0a22 0E03     		.2byte	0x30e
 3502 0a24 350A0000 		.4byte	0xa35
 3503 0a28 10       		.uleb128 0x10
 3504 0a29 A40C0000 		.4byte	.LASF191
 3505 0a2d 00       		.byte	0
 3506 0a2e 10       		.uleb128 0x10
 3507 0a2f 5F020000 		.4byte	.LASF192
 3508 0a33 01       		.byte	0x1
 3509 0a34 00       		.byte	0
 3510 0a35 0D       		.uleb128 0xd
 3511 0a36 33100000 		.4byte	.LASF193
 3512 0a3a 02       		.byte	0x2
 3513 0a3b 1103     		.2byte	0x311
 3514 0a3d 1B0A0000 		.4byte	0xa1b
 3515 0a41 0F       		.uleb128 0xf
 3516 0a42 01       		.byte	0x1
 3517 0a43 37000000 		.4byte	0x37
 3518 0a47 02       		.byte	0x2
 3519 0a48 1503     		.2byte	0x315
 3520 0a4a 5B0A0000 		.4byte	0xa5b
 3521 0a4e 10       		.uleb128 0x10
 3522 0a4f 06110000 		.4byte	.LASF194
 3523 0a53 00       		.byte	0
 3524 0a54 10       		.uleb128 0x10
 3525 0a55 55130000 		.4byte	.LASF195
 3526 0a59 01       		.byte	0x1
 3527 0a5a 00       		.byte	0
 3528 0a5b 0D       		.uleb128 0xd
 3529 0a5c 84010000 		.4byte	.LASF196
 3530 0a60 02       		.byte	0x2
 3531 0a61 1803     		.2byte	0x318
 3532 0a63 410A0000 		.4byte	0xa41
 3533 0a67 0F       		.uleb128 0xf
 3534 0a68 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 123


 3535 0a69 37000000 		.4byte	0x37
 3536 0a6d 02       		.byte	0x2
 3537 0a6e 1C03     		.2byte	0x31c
 3538 0a70 810A0000 		.4byte	0xa81
 3539 0a74 10       		.uleb128 0x10
 3540 0a75 9F110000 		.4byte	.LASF197
 3541 0a79 00       		.byte	0
 3542 0a7a 10       		.uleb128 0x10
 3543 0a7b 7D0C0000 		.4byte	.LASF198
 3544 0a7f 01       		.byte	0x1
 3545 0a80 00       		.byte	0
 3546 0a81 0D       		.uleb128 0xd
 3547 0a82 6B070000 		.4byte	.LASF199
 3548 0a86 02       		.byte	0x2
 3549 0a87 1F03     		.2byte	0x31f
 3550 0a89 670A0000 		.4byte	0xa67
 3551 0a8d 0F       		.uleb128 0xf
 3552 0a8e 01       		.byte	0x1
 3553 0a8f 37000000 		.4byte	0x37
 3554 0a93 02       		.byte	0x2
 3555 0a94 2303     		.2byte	0x323
 3556 0a96 A10A0000 		.4byte	0xaa1
 3557 0a9a 10       		.uleb128 0x10
 3558 0a9b A6050000 		.4byte	.LASF200
 3559 0a9f 00       		.byte	0
 3560 0aa0 00       		.byte	0
 3561 0aa1 0D       		.uleb128 0xd
 3562 0aa2 B00E0000 		.4byte	.LASF201
 3563 0aa6 02       		.byte	0x2
 3564 0aa7 2503     		.2byte	0x325
 3565 0aa9 8D0A0000 		.4byte	0xa8d
 3566 0aad 0F       		.uleb128 0xf
 3567 0aae 02       		.byte	0x2
 3568 0aaf 5B000000 		.4byte	0x5b
 3569 0ab3 02       		.byte	0x2
 3570 0ab4 5703     		.2byte	0x357
 3571 0ab6 EB0A0000 		.4byte	0xaeb
 3572 0aba 10       		.uleb128 0x10
 3573 0abb 55100000 		.4byte	.LASF202
 3574 0abf 00       		.byte	0
 3575 0ac0 16       		.uleb128 0x16
 3576 0ac1 BA010000 		.4byte	.LASF203
 3577 0ac5 0004     		.2byte	0x400
 3578 0ac7 16       		.uleb128 0x16
 3579 0ac8 96030000 		.4byte	.LASF204
 3580 0acc 0006     		.2byte	0x600
 3581 0ace 16       		.uleb128 0x16
 3582 0acf D6010000 		.4byte	.LASF205
 3583 0ad3 0008     		.2byte	0x800
 3584 0ad5 16       		.uleb128 0x16
 3585 0ad6 E8010000 		.4byte	.LASF206
 3586 0ada 000A     		.2byte	0xa00
 3587 0adc 16       		.uleb128 0x16
 3588 0add A60B0000 		.4byte	.LASF207
 3589 0ae1 000C     		.2byte	0xc00
 3590 0ae3 16       		.uleb128 0x16
 3591 0ae4 92000000 		.4byte	.LASF208
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 124


 3592 0ae8 000E     		.2byte	0xe00
 3593 0aea 00       		.byte	0
 3594 0aeb 0F       		.uleb128 0xf
 3595 0aec 04       		.byte	0x4
 3596 0aed A6000000 		.4byte	0xa6
 3597 0af1 02       		.byte	0x2
 3598 0af2 E403     		.2byte	0x3e4
 3599 0af4 110B0000 		.4byte	0xb11
 3600 0af8 10       		.uleb128 0x10
 3601 0af9 8A0E0000 		.4byte	.LASF209
 3602 0afd 00       		.byte	0
 3603 0afe 11       		.uleb128 0x11
 3604 0aff A8090000 		.4byte	.LASF210
 3605 0b03 00000200 		.4byte	0x20000
 3606 0b07 11       		.uleb128 0x11
 3607 0b08 41080000 		.4byte	.LASF211
 3608 0b0c 00000600 		.4byte	0x60000
 3609 0b10 00       		.byte	0
 3610 0b11 0D       		.uleb128 0xd
 3611 0b12 2D0E0000 		.4byte	.LASF212
 3612 0b16 02       		.byte	0x2
 3613 0b17 E803     		.2byte	0x3e8
 3614 0b19 EB0A0000 		.4byte	0xaeb
 3615 0b1d 0F       		.uleb128 0xf
 3616 0b1e 01       		.byte	0x1
 3617 0b1f 37000000 		.4byte	0x37
 3618 0b23 02       		.byte	0x2
 3619 0b24 1304     		.2byte	0x413
 3620 0b26 430B0000 		.4byte	0xb43
 3621 0b2a 10       		.uleb128 0x10
 3622 0b2b 2F030000 		.4byte	.LASF213
 3623 0b2f 00       		.byte	0
 3624 0b30 10       		.uleb128 0x10
 3625 0b31 5D050000 		.4byte	.LASF214
 3626 0b35 01       		.byte	0x1
 3627 0b36 10       		.uleb128 0x10
 3628 0b37 53070000 		.4byte	.LASF215
 3629 0b3b 02       		.byte	0x2
 3630 0b3c 10       		.uleb128 0x10
 3631 0b3d 51010000 		.4byte	.LASF216
 3632 0b41 03       		.byte	0x3
 3633 0b42 00       		.byte	0
 3634 0b43 0D       		.uleb128 0xd
 3635 0b44 69130000 		.4byte	.LASF217
 3636 0b48 02       		.byte	0x2
 3637 0b49 1804     		.2byte	0x418
 3638 0b4b 1D0B0000 		.4byte	0xb1d
 3639 0b4f 0F       		.uleb128 0xf
 3640 0b50 01       		.byte	0x1
 3641 0b51 37000000 		.4byte	0x37
 3642 0b55 02       		.byte	0x2
 3643 0b56 9404     		.2byte	0x494
 3644 0b58 750B0000 		.4byte	0xb75
 3645 0b5c 10       		.uleb128 0x10
 3646 0b5d A7100000 		.4byte	.LASF218
 3647 0b61 00       		.byte	0
 3648 0b62 10       		.uleb128 0x10
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 125


 3649 0b63 3D060000 		.4byte	.LASF219
 3650 0b67 01       		.byte	0x1
 3651 0b68 10       		.uleb128 0x10
 3652 0b69 3D090000 		.4byte	.LASF220
 3653 0b6d 02       		.byte	0x2
 3654 0b6e 10       		.uleb128 0x10
 3655 0b6f 7A090000 		.4byte	.LASF221
 3656 0b73 04       		.byte	0x4
 3657 0b74 00       		.byte	0
 3658 0b75 12       		.uleb128 0x12
 3659 0b76 78       		.byte	0x78
 3660 0b77 02       		.byte	0x2
 3661 0b78 0205     		.2byte	0x502
 3662 0b7a 420C0000 		.4byte	0xc42
 3663 0b7e 13       		.uleb128 0x13
 3664 0b7f 3E050000 		.4byte	.LASF222
 3665 0b83 02       		.byte	0x2
 3666 0b84 0405     		.2byte	0x504
 3667 0b86 D9000000 		.4byte	0xd9
 3668 0b8a 00       		.byte	0
 3669 0b8b 13       		.uleb128 0x13
 3670 0b8c 8E100000 		.4byte	.LASF223
 3671 0b90 02       		.byte	0x2
 3672 0b91 0505     		.2byte	0x505
 3673 0b93 D9000000 		.4byte	0xd9
 3674 0b97 04       		.byte	0x4
 3675 0b98 13       		.uleb128 0x13
 3676 0b99 120C0000 		.4byte	.LASF224
 3677 0b9d 02       		.byte	0x2
 3678 0b9e 0605     		.2byte	0x506
 3679 0ba0 D9000000 		.4byte	0xd9
 3680 0ba4 08       		.byte	0x8
 3681 0ba5 13       		.uleb128 0x13
 3682 0ba6 B20F0000 		.4byte	.LASF225
 3683 0baa 02       		.byte	0x2
 3684 0bab 0705     		.2byte	0x507
 3685 0bad D9000000 		.4byte	0xd9
 3686 0bb1 0C       		.byte	0xc
 3687 0bb2 13       		.uleb128 0x13
 3688 0bb3 F3040000 		.4byte	.LASF226
 3689 0bb7 02       		.byte	0x2
 3690 0bb8 0805     		.2byte	0x508
 3691 0bba D9000000 		.4byte	0xd9
 3692 0bbe 10       		.byte	0x10
 3693 0bbf 13       		.uleb128 0x13
 3694 0bc0 F5080000 		.4byte	.LASF227
 3695 0bc4 02       		.byte	0x2
 3696 0bc5 0905     		.2byte	0x509
 3697 0bc7 430B0000 		.4byte	0xb43
 3698 0bcb 14       		.byte	0x14
 3699 0bcc 13       		.uleb128 0x13
 3700 0bcd B6070000 		.4byte	.LASF228
 3701 0bd1 02       		.byte	0x2
 3702 0bd2 0A05     		.2byte	0x50a
 3703 0bd4 D9000000 		.4byte	0xd9
 3704 0bd8 18       		.byte	0x18
 3705 0bd9 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 126


 3706 0bda A6120000 		.4byte	.LASF229
 3707 0bde 02       		.byte	0x2
 3708 0bdf 0B05     		.2byte	0x50b
 3709 0be1 420C0000 		.4byte	0xc42
 3710 0be5 1C       		.byte	0x1c
 3711 0be6 13       		.uleb128 0x13
 3712 0be7 DD130000 		.4byte	.LASF230
 3713 0beb 02       		.byte	0x2
 3714 0bec 0C05     		.2byte	0x50c
 3715 0bee D9000000 		.4byte	0xd9
 3716 0bf2 5C       		.byte	0x5c
 3717 0bf3 13       		.uleb128 0x13
 3718 0bf4 CB020000 		.4byte	.LASF231
 3719 0bf8 02       		.byte	0x2
 3720 0bf9 0D05     		.2byte	0x50d
 3721 0bfb D9000000 		.4byte	0xd9
 3722 0bff 60       		.byte	0x60
 3723 0c00 13       		.uleb128 0x13
 3724 0c01 47130000 		.4byte	.LASF232
 3725 0c05 02       		.byte	0x2
 3726 0c06 0E05     		.2byte	0x50e
 3727 0c08 D9000000 		.4byte	0xd9
 3728 0c0c 64       		.byte	0x64
 3729 0c0d 13       		.uleb128 0x13
 3730 0c0e C50B0000 		.4byte	.LASF233
 3731 0c12 02       		.byte	0x2
 3732 0c13 0F05     		.2byte	0x50f
 3733 0c15 D9000000 		.4byte	0xd9
 3734 0c19 68       		.byte	0x68
 3735 0c1a 13       		.uleb128 0x13
 3736 0c1b E5080000 		.4byte	.LASF234
 3737 0c1f 02       		.byte	0x2
 3738 0c20 1005     		.2byte	0x510
 3739 0c22 D9000000 		.4byte	0xd9
 3740 0c26 6C       		.byte	0x6c
 3741 0c27 13       		.uleb128 0x13
 3742 0c28 EB120000 		.4byte	.LASF235
 3743 0c2c 02       		.byte	0x2
 3744 0c2d 1105     		.2byte	0x511
 3745 0c2f 520C0000 		.4byte	0xc52
 3746 0c33 70       		.byte	0x70
 3747 0c34 13       		.uleb128 0x13
 3748 0c35 F7060000 		.4byte	.LASF236
 3749 0c39 02       		.byte	0x2
 3750 0c3a 1205     		.2byte	0x512
 3751 0c3c D9000000 		.4byte	0xd9
 3752 0c40 74       		.byte	0x74
 3753 0c41 00       		.byte	0
 3754 0c42 07       		.uleb128 0x7
 3755 0c43 D9000000 		.4byte	0xd9
 3756 0c47 520C0000 		.4byte	0xc52
 3757 0c4b 08       		.uleb128 0x8
 3758 0c4c F6000000 		.4byte	0xf6
 3759 0c50 0F       		.byte	0xf
 3760 0c51 00       		.byte	0
 3761 0c52 02       		.uleb128 0x2
 3762 0c53 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 127


 3763 0c54 02       		.byte	0x2
 3764 0c55 05060000 		.4byte	.LASF237
 3765 0c59 0D       		.uleb128 0xd
 3766 0c5a 2A050000 		.4byte	.LASF238
 3767 0c5e 02       		.byte	0x2
 3768 0c5f 1305     		.2byte	0x513
 3769 0c61 750B0000 		.4byte	0xb75
 3770 0c65 12       		.uleb128 0x12
 3771 0c66 08       		.byte	0x8
 3772 0c67 02       		.byte	0x2
 3773 0c68 1705     		.2byte	0x517
 3774 0c6a 890C0000 		.4byte	0xc89
 3775 0c6e 13       		.uleb128 0x13
 3776 0c6f D0060000 		.4byte	.LASF239
 3777 0c73 02       		.byte	0x2
 3778 0c74 1905     		.2byte	0x519
 3779 0c76 D9000000 		.4byte	0xd9
 3780 0c7a 00       		.byte	0
 3781 0c7b 13       		.uleb128 0x13
 3782 0c7c F00E0000 		.4byte	.LASF240
 3783 0c80 02       		.byte	0x2
 3784 0c81 1A05     		.2byte	0x51a
 3785 0c83 D9000000 		.4byte	0xd9
 3786 0c87 04       		.byte	0x4
 3787 0c88 00       		.byte	0
 3788 0c89 0D       		.uleb128 0xd
 3789 0c8a 760D0000 		.4byte	.LASF241
 3790 0c8e 02       		.byte	0x2
 3791 0c8f 1B05     		.2byte	0x51b
 3792 0c91 650C0000 		.4byte	0xc65
 3793 0c95 17       		.uleb128 0x17
 3794 0c96 600C0000 		.4byte	.LASF313
 3795 0c9a 02       		.byte	0x2
 3796 0c9b FD07     		.2byte	0x7fd
 3797 0c9d 520C0000 		.4byte	0xc52
 3798 0ca1 03       		.byte	0x3
 3799 0ca2 BF0C0000 		.4byte	0xcbf
 3800 0ca6 18       		.uleb128 0x18
 3801 0ca7 43040000 		.4byte	.LASF180
 3802 0cab 02       		.byte	0x2
 3803 0cac FD07     		.2byte	0x7fd
 3804 0cae BF0C0000 		.4byte	0xcbf
 3805 0cb2 18       		.uleb128 0x18
 3806 0cb3 81000000 		.4byte	.LASF242
 3807 0cb7 02       		.byte	0x2
 3808 0cb8 FD07     		.2byte	0x7fd
 3809 0cba D9000000 		.4byte	0xd9
 3810 0cbe 00       		.byte	0
 3811 0cbf 15       		.uleb128 0x15
 3812 0cc0 04       		.byte	0x4
 3813 0cc1 C50C0000 		.4byte	0xcc5
 3814 0cc5 06       		.uleb128 0x6
 3815 0cc6 A2040000 		.4byte	0x4a2
 3816 0cca 19       		.uleb128 0x19
 3817 0ccb D5110000 		.4byte	.LASF249
 3818 0ccf 01       		.byte	0x1
 3819 0cd0 38       		.byte	0x38
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 128


 3820 0cd1 E9090000 		.4byte	0x9e9
 3821 0cd5 00000000 		.4byte	.LFB105
 3822 0cd9 34020000 		.4byte	.LFE105-.LFB105
 3823 0cdd 01       		.uleb128 0x1
 3824 0cde 9C       		.byte	0x9c
 3825 0cdf EE0E0000 		.4byte	0xeee
 3826 0ce3 1A       		.uleb128 0x1a
 3827 0ce4 43040000 		.4byte	.LASF180
 3828 0ce8 01       		.byte	0x1
 3829 0ce9 38       		.byte	0x38
 3830 0cea EE0E0000 		.4byte	0xeee
 3831 0cee 00000000 		.4byte	.LLST0
 3832 0cf2 1A       		.uleb128 0x1a
 3833 0cf3 590C0000 		.4byte	.LASF243
 3834 0cf7 01       		.byte	0x1
 3835 0cf8 38       		.byte	0x38
 3836 0cf9 F40E0000 		.4byte	0xef4
 3837 0cfd 2C000000 		.4byte	.LLST1
 3838 0d01 1B       		.uleb128 0x1b
 3839 0d02 6E040000 		.4byte	.LASF244
 3840 0d06 01       		.byte	0x1
 3841 0d07 3D       		.byte	0x3d
 3842 0d08 E9090000 		.4byte	0x9e9
 3843 0d0c 58000000 		.4byte	.LLST2
 3844 0d10 1B       		.uleb128 0x1b
 3845 0d11 81000000 		.4byte	.LASF242
 3846 0d15 01       		.byte	0x1
 3847 0d16 3E       		.byte	0x3e
 3848 0d17 AD000000 		.4byte	0xad
 3849 0d1b 77000000 		.4byte	.LLST3
 3850 0d1f 1B       		.uleb128 0x1b
 3851 0d20 8C0B0000 		.4byte	.LASF245
 3852 0d24 01       		.byte	0x1
 3853 0d25 3F       		.byte	0x3f
 3854 0d26 CE000000 		.4byte	0xce
 3855 0d2a A1000000 		.4byte	.LLST4
 3856 0d2e 1B       		.uleb128 0x1b
 3857 0d2f 99100000 		.4byte	.LASF246
 3858 0d33 01       		.byte	0x1
 3859 0d34 40       		.byte	0x40
 3860 0d35 520C0000 		.4byte	0xc52
 3861 0d39 B7000000 		.4byte	.LLST5
 3862 0d3d 1B       		.uleb128 0x1b
 3863 0d3e 1A010000 		.4byte	.LASF247
 3864 0d42 01       		.byte	0x1
 3865 0d43 41       		.byte	0x41
 3866 0d44 520C0000 		.4byte	0xc52
 3867 0d48 E1000000 		.4byte	.LLST6
 3868 0d4c 1B       		.uleb128 0x1b
 3869 0d4d 8C040000 		.4byte	.LASF248
 3870 0d51 01       		.byte	0x1
 3871 0d52 42       		.byte	0x42
 3872 0d53 520C0000 		.4byte	0xc52
 3873 0d57 25010000 		.4byte	.LLST7
 3874 0d5b 1C       		.uleb128 0x1c
 3875 0d5c 18000000 		.4byte	.LVL3
 3876 0d60 061A0000 		.4byte	0x1a06
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 129


 3877 0d64 780D0000 		.4byte	0xd78
 3878 0d68 1D       		.uleb128 0x1d
 3879 0d69 01       		.uleb128 0x1
 3880 0d6a 50       		.byte	0x50
 3881 0d6b 05       		.uleb128 0x5
 3882 0d6c 03       		.byte	0x3
 3883 0d6d 00000000 		.4byte	.LC0
 3884 0d71 1D       		.uleb128 0x1d
 3885 0d72 01       		.uleb128 0x1
 3886 0d73 51       		.byte	0x51
 3887 0d74 02       		.uleb128 0x2
 3888 0d75 08       		.byte	0x8
 3889 0d76 3A       		.byte	0x3a
 3890 0d77 00       		.byte	0
 3891 0d78 1C       		.uleb128 0x1c
 3892 0d79 24000000 		.4byte	.LVL4
 3893 0d7d 061A0000 		.4byte	0x1a06
 3894 0d81 950D0000 		.4byte	0xd95
 3895 0d85 1D       		.uleb128 0x1d
 3896 0d86 01       		.uleb128 0x1
 3897 0d87 50       		.byte	0x50
 3898 0d88 05       		.uleb128 0x5
 3899 0d89 03       		.byte	0x3
 3900 0d8a 00000000 		.4byte	.LC0
 3901 0d8e 1D       		.uleb128 0x1d
 3902 0d8f 01       		.uleb128 0x1
 3903 0d90 51       		.byte	0x51
 3904 0d91 02       		.uleb128 0x2
 3905 0d92 08       		.byte	0x8
 3906 0d93 3B       		.byte	0x3b
 3907 0d94 00       		.byte	0
 3908 0d95 1C       		.uleb128 0x1c
 3909 0d96 40000000 		.4byte	.LVL5
 3910 0d9a 061A0000 		.4byte	0x1a06
 3911 0d9e B20D0000 		.4byte	0xdb2
 3912 0da2 1D       		.uleb128 0x1d
 3913 0da3 01       		.uleb128 0x1
 3914 0da4 50       		.byte	0x50
 3915 0da5 05       		.uleb128 0x5
 3916 0da6 03       		.byte	0x3
 3917 0da7 00000000 		.4byte	.LC0
 3918 0dab 1D       		.uleb128 0x1d
 3919 0dac 01       		.uleb128 0x1
 3920 0dad 51       		.byte	0x51
 3921 0dae 02       		.uleb128 0x2
 3922 0daf 08       		.byte	0x8
 3923 0db0 4A       		.byte	0x4a
 3924 0db1 00       		.byte	0
 3925 0db2 1C       		.uleb128 0x1c
 3926 0db3 50000000 		.4byte	.LVL6
 3927 0db7 061A0000 		.4byte	0x1a06
 3928 0dbb CF0D0000 		.4byte	0xdcf
 3929 0dbf 1D       		.uleb128 0x1d
 3930 0dc0 01       		.uleb128 0x1
 3931 0dc1 50       		.byte	0x50
 3932 0dc2 05       		.uleb128 0x5
 3933 0dc3 03       		.byte	0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 130


 3934 0dc4 00000000 		.4byte	.LC0
 3935 0dc8 1D       		.uleb128 0x1d
 3936 0dc9 01       		.uleb128 0x1
 3937 0dca 51       		.byte	0x51
 3938 0dcb 02       		.uleb128 0x2
 3939 0dcc 08       		.byte	0x8
 3940 0dcd 4B       		.byte	0x4b
 3941 0dce 00       		.byte	0
 3942 0dcf 1C       		.uleb128 0x1c
 3943 0dd0 60000000 		.4byte	.LVL7
 3944 0dd4 061A0000 		.4byte	0x1a06
 3945 0dd8 EC0D0000 		.4byte	0xdec
 3946 0ddc 1D       		.uleb128 0x1d
 3947 0ddd 01       		.uleb128 0x1
 3948 0dde 50       		.byte	0x50
 3949 0ddf 05       		.uleb128 0x5
 3950 0de0 03       		.byte	0x3
 3951 0de1 00000000 		.4byte	.LC0
 3952 0de5 1D       		.uleb128 0x1d
 3953 0de6 01       		.uleb128 0x1
 3954 0de7 51       		.byte	0x51
 3955 0de8 02       		.uleb128 0x2
 3956 0de9 08       		.byte	0x8
 3957 0dea 4C       		.byte	0x4c
 3958 0deb 00       		.byte	0
 3959 0dec 1C       		.uleb128 0x1c
 3960 0ded 70000000 		.4byte	.LVL8
 3961 0df1 061A0000 		.4byte	0x1a06
 3962 0df5 090E0000 		.4byte	0xe09
 3963 0df9 1D       		.uleb128 0x1d
 3964 0dfa 01       		.uleb128 0x1
 3965 0dfb 50       		.byte	0x50
 3966 0dfc 05       		.uleb128 0x5
 3967 0dfd 03       		.byte	0x3
 3968 0dfe 00000000 		.4byte	.LC0
 3969 0e02 1D       		.uleb128 0x1d
 3970 0e03 01       		.uleb128 0x1
 3971 0e04 51       		.byte	0x51
 3972 0e05 02       		.uleb128 0x2
 3973 0e06 08       		.byte	0x8
 3974 0e07 4D       		.byte	0x4d
 3975 0e08 00       		.byte	0
 3976 0e09 1C       		.uleb128 0x1c
 3977 0e0a 7E000000 		.4byte	.LVL9
 3978 0e0e 061A0000 		.4byte	0x1a06
 3979 0e12 260E0000 		.4byte	0xe26
 3980 0e16 1D       		.uleb128 0x1d
 3981 0e17 01       		.uleb128 0x1
 3982 0e18 50       		.byte	0x50
 3983 0e19 05       		.uleb128 0x5
 3984 0e1a 03       		.byte	0x3
 3985 0e1b 00000000 		.4byte	.LC0
 3986 0e1f 1D       		.uleb128 0x1d
 3987 0e20 01       		.uleb128 0x1
 3988 0e21 51       		.byte	0x51
 3989 0e22 02       		.uleb128 0x2
 3990 0e23 08       		.byte	0x8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 131


 3991 0e24 4E       		.byte	0x4e
 3992 0e25 00       		.byte	0
 3993 0e26 1C       		.uleb128 0x1c
 3994 0e27 8E000000 		.4byte	.LVL10
 3995 0e2b 061A0000 		.4byte	0x1a06
 3996 0e2f 430E0000 		.4byte	0xe43
 3997 0e33 1D       		.uleb128 0x1d
 3998 0e34 01       		.uleb128 0x1
 3999 0e35 50       		.byte	0x50
 4000 0e36 05       		.uleb128 0x5
 4001 0e37 03       		.byte	0x3
 4002 0e38 00000000 		.4byte	.LC0
 4003 0e3c 1D       		.uleb128 0x1d
 4004 0e3d 01       		.uleb128 0x1
 4005 0e3e 51       		.byte	0x51
 4006 0e3f 02       		.uleb128 0x2
 4007 0e40 08       		.byte	0x8
 4008 0e41 4F       		.byte	0x4f
 4009 0e42 00       		.byte	0
 4010 0e43 1C       		.uleb128 0x1c
 4011 0e44 9C000000 		.4byte	.LVL11
 4012 0e48 061A0000 		.4byte	0x1a06
 4013 0e4c 600E0000 		.4byte	0xe60
 4014 0e50 1D       		.uleb128 0x1d
 4015 0e51 01       		.uleb128 0x1
 4016 0e52 50       		.byte	0x50
 4017 0e53 05       		.uleb128 0x5
 4018 0e54 03       		.byte	0x3
 4019 0e55 00000000 		.4byte	.LC0
 4020 0e59 1D       		.uleb128 0x1d
 4021 0e5a 01       		.uleb128 0x1
 4022 0e5b 51       		.byte	0x51
 4023 0e5c 02       		.uleb128 0x2
 4024 0e5d 08       		.byte	0x8
 4025 0e5e 50       		.byte	0x50
 4026 0e5f 00       		.byte	0
 4027 0e60 1C       		.uleb128 0x1c
 4028 0e61 AC000000 		.4byte	.LVL12
 4029 0e65 061A0000 		.4byte	0x1a06
 4030 0e69 7D0E0000 		.4byte	0xe7d
 4031 0e6d 1D       		.uleb128 0x1d
 4032 0e6e 01       		.uleb128 0x1
 4033 0e6f 50       		.byte	0x50
 4034 0e70 05       		.uleb128 0x5
 4035 0e71 03       		.byte	0x3
 4036 0e72 00000000 		.4byte	.LC0
 4037 0e76 1D       		.uleb128 0x1d
 4038 0e77 01       		.uleb128 0x1
 4039 0e78 51       		.byte	0x51
 4040 0e79 02       		.uleb128 0x2
 4041 0e7a 08       		.byte	0x8
 4042 0e7b 51       		.byte	0x51
 4043 0e7c 00       		.byte	0
 4044 0e7d 1C       		.uleb128 0x1c
 4045 0e7e BC000000 		.4byte	.LVL13
 4046 0e82 061A0000 		.4byte	0x1a06
 4047 0e86 9A0E0000 		.4byte	0xe9a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 132


 4048 0e8a 1D       		.uleb128 0x1d
 4049 0e8b 01       		.uleb128 0x1
 4050 0e8c 50       		.byte	0x50
 4051 0e8d 05       		.uleb128 0x5
 4052 0e8e 03       		.byte	0x3
 4053 0e8f 00000000 		.4byte	.LC0
 4054 0e93 1D       		.uleb128 0x1d
 4055 0e94 01       		.uleb128 0x1
 4056 0e95 51       		.byte	0x51
 4057 0e96 02       		.uleb128 0x2
 4058 0e97 08       		.byte	0x8
 4059 0e98 52       		.byte	0x52
 4060 0e99 00       		.byte	0
 4061 0e9a 1C       		.uleb128 0x1c
 4062 0e9b 0A010000 		.4byte	.LVL18
 4063 0e9f 061A0000 		.4byte	0x1a06
 4064 0ea3 B70E0000 		.4byte	0xeb7
 4065 0ea7 1D       		.uleb128 0x1d
 4066 0ea8 01       		.uleb128 0x1
 4067 0ea9 50       		.byte	0x50
 4068 0eaa 05       		.uleb128 0x5
 4069 0eab 03       		.byte	0x3
 4070 0eac 00000000 		.4byte	.LC0
 4071 0eb0 1D       		.uleb128 0x1d
 4072 0eb1 01       		.uleb128 0x1
 4073 0eb2 51       		.byte	0x51
 4074 0eb3 02       		.uleb128 0x2
 4075 0eb4 08       		.byte	0x8
 4076 0eb5 63       		.byte	0x63
 4077 0eb6 00       		.byte	0
 4078 0eb7 1C       		.uleb128 0x1c
 4079 0eb8 9E010000 		.4byte	.LVL32
 4080 0ebc 061A0000 		.4byte	0x1a06
 4081 0ec0 D40E0000 		.4byte	0xed4
 4082 0ec4 1D       		.uleb128 0x1d
 4083 0ec5 01       		.uleb128 0x1
 4084 0ec6 50       		.byte	0x50
 4085 0ec7 05       		.uleb128 0x5
 4086 0ec8 03       		.byte	0x3
 4087 0ec9 00000000 		.4byte	.LC0
 4088 0ecd 1D       		.uleb128 0x1d
 4089 0ece 01       		.uleb128 0x1
 4090 0ecf 51       		.byte	0x51
 4091 0ed0 02       		.uleb128 0x2
 4092 0ed1 08       		.byte	0x8
 4093 0ed2 82       		.byte	0x82
 4094 0ed3 00       		.byte	0
 4095 0ed4 1E       		.uleb128 0x1e
 4096 0ed5 AE010000 		.4byte	.LVL33
 4097 0ed9 061A0000 		.4byte	0x1a06
 4098 0edd 1D       		.uleb128 0x1d
 4099 0ede 01       		.uleb128 0x1
 4100 0edf 50       		.byte	0x50
 4101 0ee0 05       		.uleb128 0x5
 4102 0ee1 03       		.byte	0x3
 4103 0ee2 00000000 		.4byte	.LC0
 4104 0ee6 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 133


 4105 0ee7 01       		.uleb128 0x1
 4106 0ee8 51       		.byte	0x51
 4107 0ee9 02       		.uleb128 0x2
 4108 0eea 08       		.byte	0x8
 4109 0eeb 83       		.byte	0x83
 4110 0eec 00       		.byte	0
 4111 0eed 00       		.byte	0
 4112 0eee 15       		.uleb128 0x15
 4113 0eef 04       		.byte	0x4
 4114 0ef0 A2040000 		.4byte	0x4a2
 4115 0ef4 15       		.uleb128 0x15
 4116 0ef5 04       		.byte	0x4
 4117 0ef6 FA0E0000 		.4byte	0xefa
 4118 0efa 06       		.uleb128 0x6
 4119 0efb 590C0000 		.4byte	0xc59
 4120 0eff 1F       		.uleb128 0x1f
 4121 0f00 B9050000 		.4byte	.LASF250
 4122 0f04 01       		.byte	0x1
 4123 0f05 B3       		.byte	0xb3
 4124 0f06 E9090000 		.4byte	0x9e9
 4125 0f0a 00000000 		.4byte	.LFB106
 4126 0f0e 80000000 		.4byte	.LFE106-.LFB106
 4127 0f12 01       		.uleb128 0x1
 4128 0f13 9C       		.byte	0x9c
 4129 0f14 6C0F0000 		.4byte	0xf6c
 4130 0f18 1A       		.uleb128 0x1a
 4131 0f19 43040000 		.4byte	.LASF180
 4132 0f1d 01       		.byte	0x1
 4133 0f1e B3       		.byte	0xb3
 4134 0f1f EE0E0000 		.4byte	0xeee
 4135 0f23 A3010000 		.4byte	.LLST8
 4136 0f27 1A       		.uleb128 0x1a
 4137 0f28 DD120000 		.4byte	.LASF251
 4138 0f2c 01       		.byte	0x1
 4139 0f2d B3       		.byte	0xb3
 4140 0f2e 520C0000 		.4byte	0xc52
 4141 0f32 CF010000 		.4byte	.LLST9
 4142 0f36 20       		.uleb128 0x20
 4143 0f37 6E040000 		.4byte	.LASF244
 4144 0f3b 01       		.byte	0x1
 4145 0f3c B7       		.byte	0xb7
 4146 0f3d E9090000 		.4byte	0x9e9
 4147 0f41 01       		.uleb128 0x1
 4148 0f42 50       		.byte	0x50
 4149 0f43 1B       		.uleb128 0x1b
 4150 0f44 81000000 		.4byte	.LASF242
 4151 0f48 01       		.byte	0x1
 4152 0f49 B8       		.byte	0xb8
 4153 0f4a AD000000 		.4byte	0xad
 4154 0f4e F0010000 		.4byte	.LLST10
 4155 0f52 1E       		.uleb128 0x1e
 4156 0f53 12000000 		.4byte	.LVL42
 4157 0f57 061A0000 		.4byte	0x1a06
 4158 0f5b 1D       		.uleb128 0x1d
 4159 0f5c 01       		.uleb128 0x1
 4160 0f5d 50       		.byte	0x50
 4161 0f5e 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 134


 4162 0f5f 03       		.byte	0x3
 4163 0f60 00000000 		.4byte	.LC0
 4164 0f64 1D       		.uleb128 0x1d
 4165 0f65 01       		.uleb128 0x1
 4166 0f66 51       		.byte	0x51
 4167 0f67 02       		.uleb128 0x2
 4168 0f68 08       		.byte	0x8
 4169 0f69 B5       		.byte	0xb5
 4170 0f6a 00       		.byte	0
 4171 0f6b 00       		.byte	0
 4172 0f6c 21       		.uleb128 0x21
 4173 0f6d BF0F0000 		.4byte	.LASF252
 4174 0f71 01       		.byte	0x1
 4175 0f72 E8       		.byte	0xe8
 4176 0f73 00000000 		.4byte	.LFB107
 4177 0f77 24000000 		.4byte	.LFE107-.LFB107
 4178 0f7b 01       		.uleb128 0x1
 4179 0f7c 9C       		.byte	0x9c
 4180 0f7d A00F0000 		.4byte	0xfa0
 4181 0f81 1A       		.uleb128 0x1a
 4182 0f82 43040000 		.4byte	.LASF180
 4183 0f86 01       		.byte	0x1
 4184 0f87 E8       		.byte	0xe8
 4185 0f88 EE0E0000 		.4byte	0xeee
 4186 0f8c 1A020000 		.4byte	.LLST11
 4187 0f90 1E       		.uleb128 0x1e
 4188 0f91 22000000 		.4byte	.LVL52
 4189 0f95 121A0000 		.4byte	0x1a12
 4190 0f99 1D       		.uleb128 0x1d
 4191 0f9a 01       		.uleb128 0x1
 4192 0f9b 50       		.byte	0x50
 4193 0f9c 01       		.uleb128 0x1
 4194 0f9d 32       		.byte	0x32
 4195 0f9e 00       		.byte	0
 4196 0f9f 00       		.byte	0
 4197 0fa0 22       		.uleb128 0x22
 4198 0fa1 780A0000 		.4byte	.LASF253
 4199 0fa5 01       		.byte	0x1
 4200 0fa6 6F01     		.2byte	0x16f
 4201 0fa8 00000000 		.4byte	.LFB110
 4202 0fac 30000000 		.4byte	.LFE110-.LFB110
 4203 0fb0 01       		.uleb128 0x1
 4204 0fb1 9C       		.byte	0x9c
 4205 0fb2 F10F0000 		.4byte	0xff1
 4206 0fb6 23       		.uleb128 0x23
 4207 0fb7 43040000 		.4byte	.LASF180
 4208 0fbb 01       		.byte	0x1
 4209 0fbc 6F01     		.2byte	0x16f
 4210 0fbe EE0E0000 		.4byte	0xeee
 4211 0fc2 3B020000 		.4byte	.LLST12
 4212 0fc6 23       		.uleb128 0x23
 4213 0fc7 43050000 		.4byte	.LASF254
 4214 0fcb 01       		.byte	0x1
 4215 0fcc 6F01     		.2byte	0x16f
 4216 0fce 0F0A0000 		.4byte	0xa0f
 4217 0fd2 67020000 		.4byte	.LLST13
 4218 0fd6 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 135


 4219 0fd7 14000000 		.4byte	.LVL56
 4220 0fdb 061A0000 		.4byte	0x1a06
 4221 0fdf 1D       		.uleb128 0x1d
 4222 0fe0 01       		.uleb128 0x1
 4223 0fe1 50       		.byte	0x50
 4224 0fe2 05       		.uleb128 0x5
 4225 0fe3 03       		.byte	0x3
 4226 0fe4 00000000 		.4byte	.LC0
 4227 0fe8 1D       		.uleb128 0x1d
 4228 0fe9 01       		.uleb128 0x1
 4229 0fea 51       		.byte	0x51
 4230 0feb 03       		.uleb128 0x3
 4231 0fec 0A       		.byte	0xa
 4232 0fed 7101     		.2byte	0x171
 4233 0fef 00       		.byte	0
 4234 0ff0 00       		.byte	0
 4235 0ff1 22       		.uleb128 0x22
 4236 0ff2 BD020000 		.4byte	.LASF255
 4237 0ff6 01       		.byte	0x1
 4238 0ff7 4901     		.2byte	0x149
 4239 0ff9 00000000 		.4byte	.LFB109
 4240 0ffd 38000000 		.4byte	.LFE109-.LFB109
 4241 1001 01       		.uleb128 0x1
 4242 1002 9C       		.byte	0x9c
 4243 1003 41100000 		.4byte	0x1041
 4244 1007 23       		.uleb128 0x23
 4245 1008 43040000 		.4byte	.LASF180
 4246 100c 01       		.byte	0x1
 4247 100d 4901     		.2byte	0x149
 4248 100f EE0E0000 		.4byte	0xeee
 4249 1013 88020000 		.4byte	.LLST14
 4250 1017 1C       		.uleb128 0x1c
 4251 1018 1E000000 		.4byte	.LVL59
 4252 101c 6C0F0000 		.4byte	0xf6c
 4253 1020 2B100000 		.4byte	0x102b
 4254 1024 1D       		.uleb128 0x1d
 4255 1025 01       		.uleb128 0x1
 4256 1026 50       		.byte	0x50
 4257 1027 02       		.uleb128 0x2
 4258 1028 74       		.byte	0x74
 4259 1029 00       		.sleb128 0
 4260 102a 00       		.byte	0
 4261 102b 1E       		.uleb128 0x1e
 4262 102c 32000000 		.4byte	.LVL60
 4263 1030 A00F0000 		.4byte	0xfa0
 4264 1034 1D       		.uleb128 0x1d
 4265 1035 01       		.uleb128 0x1
 4266 1036 50       		.byte	0x50
 4267 1037 02       		.uleb128 0x2
 4268 1038 74       		.byte	0x74
 4269 1039 00       		.sleb128 0
 4270 103a 1D       		.uleb128 0x1d
 4271 103b 01       		.uleb128 0x1
 4272 103c 51       		.byte	0x51
 4273 103d 01       		.uleb128 0x1
 4274 103e 31       		.byte	0x31
 4275 103f 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 136


 4276 1040 00       		.byte	0
 4277 1041 22       		.uleb128 0x22
 4278 1042 8C130000 		.4byte	.LASF256
 4279 1046 01       		.byte	0x1
 4280 1047 9301     		.2byte	0x193
 4281 1049 00000000 		.4byte	.LFB111
 4282 104d 14000000 		.4byte	.LFE111-.LFB111
 4283 1051 01       		.uleb128 0x1
 4284 1052 9C       		.byte	0x9c
 4285 1053 66100000 		.4byte	0x1066
 4286 1057 24       		.uleb128 0x24
 4287 1058 43040000 		.4byte	.LASF180
 4288 105c 01       		.byte	0x1
 4289 105d 9301     		.2byte	0x193
 4290 105f EE0E0000 		.4byte	0xeee
 4291 1063 01       		.uleb128 0x1
 4292 1064 50       		.byte	0x50
 4293 1065 00       		.byte	0
 4294 1066 22       		.uleb128 0x22
 4295 1067 D50E0000 		.4byte	.LASF257
 4296 106b 01       		.byte	0x1
 4297 106c 0F01     		.2byte	0x10f
 4298 106e 00000000 		.4byte	.LFB108
 4299 1072 48000000 		.4byte	.LFE108-.LFB108
 4300 1076 01       		.uleb128 0x1
 4301 1077 9C       		.byte	0x9c
 4302 1078 AD100000 		.4byte	0x10ad
 4303 107c 23       		.uleb128 0x23
 4304 107d 43040000 		.4byte	.LASF180
 4305 1081 01       		.byte	0x1
 4306 1082 0F01     		.2byte	0x10f
 4307 1084 EE0E0000 		.4byte	0xeee
 4308 1088 B4020000 		.4byte	.LLST15
 4309 108c 25       		.uleb128 0x25
 4310 108d AA0D0000 		.4byte	.LASF258
 4311 1091 01       		.byte	0x1
 4312 1092 1101     		.2byte	0x111
 4313 1094 D9000000 		.4byte	0xd9
 4314 1098 E0020000 		.4byte	.LLST16
 4315 109c 1E       		.uleb128 0x1e
 4316 109d 26000000 		.4byte	.LVL66
 4317 10a1 41100000 		.4byte	0x1041
 4318 10a5 1D       		.uleb128 0x1d
 4319 10a6 01       		.uleb128 0x1
 4320 10a7 50       		.byte	0x50
 4321 10a8 02       		.uleb128 0x2
 4322 10a9 74       		.byte	0x74
 4323 10aa 00       		.sleb128 0
 4324 10ab 00       		.byte	0
 4325 10ac 00       		.byte	0
 4326 10ad 22       		.uleb128 0x22
 4327 10ae 85080000 		.4byte	.LASF259
 4328 10b2 01       		.byte	0x1
 4329 10b3 B701     		.2byte	0x1b7
 4330 10b5 00000000 		.4byte	.LFB112
 4331 10b9 38000000 		.4byte	.LFE112-.LFB112
 4332 10bd 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 137


 4333 10be 9C       		.byte	0x9c
 4334 10bf 0E110000 		.4byte	0x110e
 4335 10c3 23       		.uleb128 0x23
 4336 10c4 43040000 		.4byte	.LASF180
 4337 10c8 01       		.byte	0x1
 4338 10c9 B701     		.2byte	0x1b7
 4339 10cb EE0E0000 		.4byte	0xeee
 4340 10cf 1E030000 		.4byte	.LLST17
 4341 10d3 23       		.uleb128 0x23
 4342 10d4 D00E0000 		.4byte	.LASF260
 4343 10d8 01       		.byte	0x1
 4344 10d9 B701     		.2byte	0x1b7
 4345 10db 110B0000 		.4byte	0xb11
 4346 10df 4A030000 		.4byte	.LLST18
 4347 10e3 25       		.uleb128 0x25
 4348 10e4 CF120000 		.4byte	.LASF261
 4349 10e8 01       		.byte	0x1
 4350 10e9 BC01     		.2byte	0x1bc
 4351 10eb D9000000 		.4byte	0xd9
 4352 10ef 76030000 		.4byte	.LLST19
 4353 10f3 1E       		.uleb128 0x1e
 4354 10f4 22000000 		.4byte	.LVL73
 4355 10f8 061A0000 		.4byte	0x1a06
 4356 10fc 1D       		.uleb128 0x1d
 4357 10fd 01       		.uleb128 0x1
 4358 10fe 50       		.byte	0x50
 4359 10ff 05       		.uleb128 0x5
 4360 1100 03       		.byte	0x3
 4361 1101 00000000 		.4byte	.LC0
 4362 1105 1D       		.uleb128 0x1d
 4363 1106 01       		.uleb128 0x1
 4364 1107 51       		.byte	0x51
 4365 1108 03       		.uleb128 0x3
 4366 1109 0A       		.byte	0xa
 4367 110a B901     		.2byte	0x1b9
 4368 110c 00       		.byte	0
 4369 110d 00       		.byte	0
 4370 110e 26       		.uleb128 0x26
 4371 110f F6130000 		.4byte	.LASF262
 4372 1113 01       		.byte	0x1
 4373 1114 DE01     		.2byte	0x1de
 4374 1116 E9090000 		.4byte	0x9e9
 4375 111a 00000000 		.4byte	.LFB113
 4376 111e 70000000 		.4byte	.LFE113-.LFB113
 4377 1122 01       		.uleb128 0x1
 4378 1123 9C       		.byte	0x9c
 4379 1124 93110000 		.4byte	0x1193
 4380 1128 23       		.uleb128 0x23
 4381 1129 43040000 		.4byte	.LASF180
 4382 112d 01       		.byte	0x1
 4383 112e DE01     		.2byte	0x1de
 4384 1130 EE0E0000 		.4byte	0xeee
 4385 1134 89030000 		.4byte	.LLST20
 4386 1138 23       		.uleb128 0x23
 4387 1139 41110000 		.4byte	.LASF263
 4388 113d 01       		.byte	0x1
 4389 113e DE01     		.2byte	0x1de
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 138


 4390 1140 350A0000 		.4byte	0xa35
 4391 1144 B5030000 		.4byte	.LLST21
 4392 1148 25       		.uleb128 0x25
 4393 1149 6E040000 		.4byte	.LASF244
 4394 114d 01       		.byte	0x1
 4395 114e E201     		.2byte	0x1e2
 4396 1150 E9090000 		.4byte	0x9e9
 4397 1154 D6030000 		.4byte	.LLST22
 4398 1158 25       		.uleb128 0x25
 4399 1159 8F110000 		.4byte	.LASF264
 4400 115d 01       		.byte	0x1
 4401 115e E401     		.2byte	0x1e4
 4402 1160 D9000000 		.4byte	0xd9
 4403 1164 F5030000 		.4byte	.LLST23
 4404 1168 27       		.uleb128 0x27
 4405 1169 77647400 		.ascii	"wdt\000"
 4406 116d 01       		.byte	0x1
 4407 116e E501     		.2byte	0x1e5
 4408 1170 D9000000 		.4byte	0xd9
 4409 1174 1E040000 		.4byte	.LLST24
 4410 1178 1E       		.uleb128 0x1e
 4411 1179 14000000 		.4byte	.LVL81
 4412 117d 061A0000 		.4byte	0x1a06
 4413 1181 1D       		.uleb128 0x1d
 4414 1182 01       		.uleb128 0x1
 4415 1183 50       		.byte	0x50
 4416 1184 05       		.uleb128 0x5
 4417 1185 03       		.byte	0x3
 4418 1186 00000000 		.4byte	.LC0
 4419 118a 1D       		.uleb128 0x1d
 4420 118b 01       		.uleb128 0x1
 4421 118c 51       		.byte	0x51
 4422 118d 03       		.uleb128 0x3
 4423 118e 0A       		.byte	0xa
 4424 118f E001     		.2byte	0x1e0
 4425 1191 00       		.byte	0
 4426 1192 00       		.byte	0
 4427 1193 26       		.uleb128 0x26
 4428 1194 65030000 		.4byte	.LASF265
 4429 1198 01       		.byte	0x1
 4430 1199 5202     		.2byte	0x252
 4431 119b 520C0000 		.4byte	0xc52
 4432 119f 00000000 		.4byte	.LFB115
 4433 11a3 38000000 		.4byte	.LFE115-.LFB115
 4434 11a7 01       		.uleb128 0x1
 4435 11a8 9C       		.byte	0x9c
 4436 11a9 F8110000 		.4byte	0x11f8
 4437 11ad 23       		.uleb128 0x23
 4438 11ae 43040000 		.4byte	.LASF180
 4439 11b2 01       		.byte	0x1
 4440 11b3 5202     		.2byte	0x252
 4441 11b5 BF0C0000 		.4byte	0xcbf
 4442 11b9 82040000 		.4byte	.LLST25
 4443 11bd 23       		.uleb128 0x23
 4444 11be 81000000 		.4byte	.LASF242
 4445 11c2 01       		.byte	0x1
 4446 11c3 5202     		.2byte	0x252
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 139


 4447 11c5 D9000000 		.4byte	0xd9
 4448 11c9 AE040000 		.4byte	.LLST26
 4449 11cd 25       		.uleb128 0x25
 4450 11ce 4F050000 		.4byte	.LASF266
 4451 11d2 01       		.byte	0x1
 4452 11d3 5602     		.2byte	0x256
 4453 11d5 520C0000 		.4byte	0xc52
 4454 11d9 00050000 		.4byte	.LLST27
 4455 11dd 1E       		.uleb128 0x1e
 4456 11de 14000000 		.4byte	.LVL100
 4457 11e2 061A0000 		.4byte	0x1a06
 4458 11e6 1D       		.uleb128 0x1d
 4459 11e7 01       		.uleb128 0x1
 4460 11e8 50       		.byte	0x50
 4461 11e9 05       		.uleb128 0x5
 4462 11ea 03       		.byte	0x3
 4463 11eb 00000000 		.4byte	.LC0
 4464 11ef 1D       		.uleb128 0x1d
 4465 11f0 01       		.uleb128 0x1
 4466 11f1 51       		.byte	0x51
 4467 11f2 03       		.uleb128 0x3
 4468 11f3 0A       		.byte	0xa
 4469 11f4 5402     		.2byte	0x254
 4470 11f6 00       		.byte	0
 4471 11f7 00       		.byte	0
 4472 11f8 26       		.uleb128 0x26
 4473 11f9 09050000 		.4byte	.LASF267
 4474 11fd 01       		.byte	0x1
 4475 11fe 2002     		.2byte	0x220
 4476 1200 520C0000 		.4byte	0xc52
 4477 1204 00000000 		.4byte	.LFB114
 4478 1208 50000000 		.4byte	.LFE114-.LFB114
 4479 120c 01       		.uleb128 0x1
 4480 120d 9C       		.byte	0x9c
 4481 120e 9A120000 		.4byte	0x129a
 4482 1212 23       		.uleb128 0x23
 4483 1213 43040000 		.4byte	.LASF180
 4484 1217 01       		.byte	0x1
 4485 1218 2002     		.2byte	0x220
 4486 121a BF0C0000 		.4byte	0xcbf
 4487 121e 1F050000 		.4byte	.LLST28
 4488 1222 23       		.uleb128 0x23
 4489 1223 81000000 		.4byte	.LASF242
 4490 1227 01       		.byte	0x1
 4491 1228 2002     		.2byte	0x220
 4492 122a D9000000 		.4byte	0xd9
 4493 122e 4B050000 		.4byte	.LLST29
 4494 1232 25       		.uleb128 0x25
 4495 1233 47030000 		.4byte	.LASF268
 4496 1237 01       		.byte	0x1
 4497 1238 2402     		.2byte	0x224
 4498 123a 520C0000 		.4byte	0xc52
 4499 123e 77050000 		.4byte	.LLST30
 4500 1242 28       		.uleb128 0x28
 4501 1243 950C0000 		.4byte	0xc95
 4502 1247 16000000 		.4byte	.LBB4
 4503 124b 0E000000 		.4byte	.LBE4-.LBB4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 140


 4504 124f 01       		.byte	0x1
 4505 1250 2A02     		.2byte	0x22a
 4506 1252 7F120000 		.4byte	0x127f
 4507 1256 29       		.uleb128 0x29
 4508 1257 B20C0000 		.4byte	0xcb2
 4509 125b 96050000 		.4byte	.LLST31
 4510 125f 29       		.uleb128 0x29
 4511 1260 A60C0000 		.4byte	0xca6
 4512 1264 A9050000 		.4byte	.LLST32
 4513 1268 1E       		.uleb128 0x1e
 4514 1269 1E000000 		.4byte	.LVL112
 4515 126d 93110000 		.4byte	0x1193
 4516 1271 1D       		.uleb128 0x1d
 4517 1272 01       		.uleb128 0x1
 4518 1273 50       		.byte	0x50
 4519 1274 02       		.uleb128 0x2
 4520 1275 75       		.byte	0x75
 4521 1276 00       		.sleb128 0
 4522 1277 1D       		.uleb128 0x1d
 4523 1278 01       		.uleb128 0x1
 4524 1279 51       		.byte	0x51
 4525 127a 02       		.uleb128 0x2
 4526 127b 74       		.byte	0x74
 4527 127c 00       		.sleb128 0
 4528 127d 00       		.byte	0
 4529 127e 00       		.byte	0
 4530 127f 1E       		.uleb128 0x1e
 4531 1280 12000000 		.4byte	.LVL110
 4532 1284 061A0000 		.4byte	0x1a06
 4533 1288 1D       		.uleb128 0x1d
 4534 1289 01       		.uleb128 0x1
 4535 128a 50       		.byte	0x50
 4536 128b 05       		.uleb128 0x5
 4537 128c 03       		.byte	0x3
 4538 128d 00000000 		.4byte	.LC0
 4539 1291 1D       		.uleb128 0x1d
 4540 1292 01       		.uleb128 0x1
 4541 1293 51       		.byte	0x51
 4542 1294 03       		.uleb128 0x3
 4543 1295 0A       		.byte	0xa
 4544 1296 2202     		.2byte	0x222
 4545 1298 00       		.byte	0
 4546 1299 00       		.byte	0
 4547 129a 26       		.uleb128 0x26
 4548 129b F80F0000 		.4byte	.LASF269
 4549 129f 01       		.byte	0x1
 4550 12a0 7902     		.2byte	0x279
 4551 12a2 B8000000 		.4byte	0xb8
 4552 12a6 00000000 		.4byte	.LFB116
 4553 12aa 30000000 		.4byte	.LFE116-.LFB116
 4554 12ae 01       		.uleb128 0x1
 4555 12af 9C       		.byte	0x9c
 4556 12b0 FF120000 		.4byte	0x12ff
 4557 12b4 23       		.uleb128 0x23
 4558 12b5 43040000 		.4byte	.LASF180
 4559 12b9 01       		.byte	0x1
 4560 12ba 7902     		.2byte	0x279
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 141


 4561 12bc BF0C0000 		.4byte	0xcbf
 4562 12c0 BC050000 		.4byte	.LLST33
 4563 12c4 23       		.uleb128 0x23
 4564 12c5 81000000 		.4byte	.LASF242
 4565 12c9 01       		.byte	0x1
 4566 12ca 7902     		.2byte	0x279
 4567 12cc D9000000 		.4byte	0xd9
 4568 12d0 E8050000 		.4byte	.LLST34
 4569 12d4 25       		.uleb128 0x25
 4570 12d5 4B100000 		.4byte	.LASF270
 4571 12d9 01       		.byte	0x1
 4572 12da 7D02     		.2byte	0x27d
 4573 12dc D9000000 		.4byte	0xd9
 4574 12e0 3B060000 		.4byte	.LLST35
 4575 12e4 1E       		.uleb128 0x1e
 4576 12e5 12000000 		.4byte	.LVL120
 4577 12e9 061A0000 		.4byte	0x1a06
 4578 12ed 1D       		.uleb128 0x1d
 4579 12ee 01       		.uleb128 0x1
 4580 12ef 50       		.byte	0x50
 4581 12f0 05       		.uleb128 0x5
 4582 12f1 03       		.byte	0x3
 4583 12f2 00000000 		.4byte	.LC0
 4584 12f6 1D       		.uleb128 0x1d
 4585 12f7 01       		.uleb128 0x1
 4586 12f8 51       		.byte	0x51
 4587 12f9 03       		.uleb128 0x3
 4588 12fa 0A       		.byte	0xa
 4589 12fb 7B02     		.2byte	0x27b
 4590 12fd 00       		.byte	0
 4591 12fe 00       		.byte	0
 4592 12ff 26       		.uleb128 0x26
 4593 1300 7E120000 		.4byte	.LASF271
 4594 1304 01       		.byte	0x1
 4595 1305 9E02     		.2byte	0x29e
 4596 1307 CE000000 		.4byte	0xce
 4597 130b 00000000 		.4byte	.LFB117
 4598 130f 40000000 		.4byte	.LFE117-.LFB117
 4599 1313 01       		.uleb128 0x1
 4600 1314 9C       		.byte	0x9c
 4601 1315 9E130000 		.4byte	0x139e
 4602 1319 23       		.uleb128 0x23
 4603 131a 43040000 		.4byte	.LASF180
 4604 131e 01       		.byte	0x1
 4605 131f 9E02     		.2byte	0x29e
 4606 1321 BF0C0000 		.4byte	0xcbf
 4607 1325 71060000 		.4byte	.LLST36
 4608 1329 23       		.uleb128 0x23
 4609 132a 81000000 		.4byte	.LASF242
 4610 132e 01       		.byte	0x1
 4611 132f 9E02     		.2byte	0x29e
 4612 1331 D9000000 		.4byte	0xd9
 4613 1335 9D060000 		.4byte	.LLST37
 4614 1339 25       		.uleb128 0x25
 4615 133a 4B100000 		.4byte	.LASF270
 4616 133e 01       		.byte	0x1
 4617 133f A202     		.2byte	0x2a2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 142


 4618 1341 D9000000 		.4byte	0xd9
 4619 1345 C9060000 		.4byte	.LLST38
 4620 1349 25       		.uleb128 0x25
 4621 134a 59030000 		.4byte	.LASF272
 4622 134e 01       		.byte	0x1
 4623 134f A302     		.2byte	0x2a3
 4624 1351 B8000000 		.4byte	0xb8
 4625 1355 FF060000 		.4byte	.LLST39
 4626 1359 25       		.uleb128 0x25
 4627 135a 86000000 		.4byte	.LASF273
 4628 135e 01       		.byte	0x1
 4629 135f A402     		.2byte	0x2a4
 4630 1361 CE000000 		.4byte	0xce
 4631 1365 12070000 		.4byte	.LLST40
 4632 1369 1C       		.uleb128 0x1c
 4633 136a 14000000 		.4byte	.LVL131
 4634 136e 061A0000 		.4byte	0x1a06
 4635 1372 87130000 		.4byte	0x1387
 4636 1376 1D       		.uleb128 0x1d
 4637 1377 01       		.uleb128 0x1
 4638 1378 50       		.byte	0x50
 4639 1379 05       		.uleb128 0x5
 4640 137a 03       		.byte	0x3
 4641 137b 00000000 		.4byte	.LC0
 4642 137f 1D       		.uleb128 0x1d
 4643 1380 01       		.uleb128 0x1
 4644 1381 51       		.byte	0x51
 4645 1382 03       		.uleb128 0x3
 4646 1383 0A       		.byte	0xa
 4647 1384 A002     		.2byte	0x2a0
 4648 1386 00       		.byte	0
 4649 1387 1E       		.uleb128 0x1e
 4650 1388 30000000 		.4byte	.LVL135
 4651 138c F8110000 		.4byte	0x11f8
 4652 1390 1D       		.uleb128 0x1d
 4653 1391 01       		.uleb128 0x1
 4654 1392 50       		.byte	0x50
 4655 1393 02       		.uleb128 0x2
 4656 1394 75       		.byte	0x75
 4657 1395 00       		.sleb128 0
 4658 1396 1D       		.uleb128 0x1d
 4659 1397 01       		.uleb128 0x1
 4660 1398 51       		.byte	0x51
 4661 1399 02       		.uleb128 0x2
 4662 139a 76       		.byte	0x76
 4663 139b 00       		.sleb128 0
 4664 139c 00       		.byte	0
 4665 139d 00       		.byte	0
 4666 139e 22       		.uleb128 0x22
 4667 139f 10030000 		.4byte	.LASF274
 4668 13a3 01       		.byte	0x1
 4669 13a4 CF02     		.2byte	0x2cf
 4670 13a6 00000000 		.4byte	.LFB118
 4671 13aa 30000000 		.4byte	.LFE118-.LFB118
 4672 13ae 01       		.uleb128 0x1
 4673 13af 9C       		.byte	0x9c
 4674 13b0 FF130000 		.4byte	0x13ff
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 143


 4675 13b4 23       		.uleb128 0x23
 4676 13b5 43040000 		.4byte	.LASF180
 4677 13b9 01       		.byte	0x1
 4678 13ba CF02     		.2byte	0x2cf
 4679 13bc EE0E0000 		.4byte	0xeee
 4680 13c0 30070000 		.4byte	.LLST41
 4681 13c4 23       		.uleb128 0x23
 4682 13c5 22000000 		.4byte	.LASF275
 4683 13c9 01       		.byte	0x1
 4684 13ca CF02     		.2byte	0x2cf
 4685 13cc D9000000 		.4byte	0xd9
 4686 13d0 5C070000 		.4byte	.LLST42
 4687 13d4 25       		.uleb128 0x25
 4688 13d5 14000000 		.4byte	.LASF276
 4689 13d9 01       		.byte	0x1
 4690 13da D302     		.2byte	0x2d3
 4691 13dc D9000000 		.4byte	0xd9
 4692 13e0 88070000 		.4byte	.LLST43
 4693 13e4 1E       		.uleb128 0x1e
 4694 13e5 14000000 		.4byte	.LVL146
 4695 13e9 061A0000 		.4byte	0x1a06
 4696 13ed 1D       		.uleb128 0x1d
 4697 13ee 01       		.uleb128 0x1
 4698 13ef 50       		.byte	0x50
 4699 13f0 05       		.uleb128 0x5
 4700 13f1 03       		.byte	0x3
 4701 13f2 00000000 		.4byte	.LC0
 4702 13f6 1D       		.uleb128 0x1d
 4703 13f7 01       		.uleb128 0x1
 4704 13f8 51       		.byte	0x51
 4705 13f9 03       		.uleb128 0x3
 4706 13fa 0A       		.byte	0xa
 4707 13fb D102     		.2byte	0x2d1
 4708 13fd 00       		.byte	0
 4709 13fe 00       		.byte	0
 4710 13ff 22       		.uleb128 0x22
 4711 1400 A2070000 		.4byte	.LASF277
 4712 1404 01       		.byte	0x1
 4713 1405 F202     		.2byte	0x2f2
 4714 1407 00000000 		.4byte	.LFB119
 4715 140b 2C000000 		.4byte	.LFE119-.LFB119
 4716 140f 01       		.uleb128 0x1
 4717 1410 9C       		.byte	0x9c
 4718 1411 60140000 		.4byte	0x1460
 4719 1415 23       		.uleb128 0x23
 4720 1416 43040000 		.4byte	.LASF180
 4721 141a 01       		.byte	0x1
 4722 141b F202     		.2byte	0x2f2
 4723 141d EE0E0000 		.4byte	0xeee
 4724 1421 C1070000 		.4byte	.LLST44
 4725 1425 23       		.uleb128 0x23
 4726 1426 E60E0000 		.4byte	.LASF278
 4727 142a 01       		.byte	0x1
 4728 142b F202     		.2byte	0x2f2
 4729 142d D9000000 		.4byte	0xd9
 4730 1431 ED070000 		.4byte	.LLST45
 4731 1435 25       		.uleb128 0x25
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 144


 4732 1436 14000000 		.4byte	.LASF276
 4733 143a 01       		.byte	0x1
 4734 143b F602     		.2byte	0x2f6
 4735 143d D9000000 		.4byte	0xd9
 4736 1441 19080000 		.4byte	.LLST46
 4737 1445 1E       		.uleb128 0x1e
 4738 1446 16000000 		.4byte	.LVL155
 4739 144a 061A0000 		.4byte	0x1a06
 4740 144e 1D       		.uleb128 0x1d
 4741 144f 01       		.uleb128 0x1
 4742 1450 50       		.byte	0x50
 4743 1451 05       		.uleb128 0x5
 4744 1452 03       		.byte	0x3
 4745 1453 00000000 		.4byte	.LC0
 4746 1457 1D       		.uleb128 0x1d
 4747 1458 01       		.uleb128 0x1
 4748 1459 51       		.byte	0x51
 4749 145a 03       		.uleb128 0x3
 4750 145b 0A       		.byte	0xa
 4751 145c F402     		.2byte	0x2f4
 4752 145e 00       		.byte	0
 4753 145f 00       		.byte	0
 4754 1460 26       		.uleb128 0x26
 4755 1461 22130000 		.4byte	.LASF279
 4756 1465 01       		.byte	0x1
 4757 1466 1803     		.2byte	0x318
 4758 1468 E9090000 		.4byte	0x9e9
 4759 146c 00000000 		.4byte	.LFB120
 4760 1470 34000000 		.4byte	.LFE120-.LFB120
 4761 1474 01       		.uleb128 0x1
 4762 1475 9C       		.byte	0x9c
 4763 1476 C5140000 		.4byte	0x14c5
 4764 147a 23       		.uleb128 0x23
 4765 147b 81000000 		.4byte	.LASF242
 4766 147f 01       		.byte	0x1
 4767 1480 1803     		.2byte	0x318
 4768 1482 D9000000 		.4byte	0xd9
 4769 1486 52080000 		.4byte	.LLST47
 4770 148a 23       		.uleb128 0x23
 4771 148b B0040000 		.4byte	.LASF280
 4772 148f 01       		.byte	0x1
 4773 1490 1803     		.2byte	0x318
 4774 1492 B8000000 		.4byte	0xb8
 4775 1496 97080000 		.4byte	.LLST48
 4776 149a 25       		.uleb128 0x25
 4777 149b 6E040000 		.4byte	.LASF244
 4778 149f 01       		.byte	0x1
 4779 14a0 1C03     		.2byte	0x31c
 4780 14a2 E9090000 		.4byte	0x9e9
 4781 14a6 B8080000 		.4byte	.LLST49
 4782 14aa 1E       		.uleb128 0x1e
 4783 14ab 12000000 		.4byte	.LVL164
 4784 14af 061A0000 		.4byte	0x1a06
 4785 14b3 1D       		.uleb128 0x1d
 4786 14b4 01       		.uleb128 0x1
 4787 14b5 50       		.byte	0x50
 4788 14b6 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 145


 4789 14b7 03       		.byte	0x3
 4790 14b8 00000000 		.4byte	.LC0
 4791 14bc 1D       		.uleb128 0x1d
 4792 14bd 01       		.uleb128 0x1
 4793 14be 51       		.byte	0x51
 4794 14bf 03       		.uleb128 0x3
 4795 14c0 0A       		.byte	0xa
 4796 14c1 1A03     		.2byte	0x31a
 4797 14c3 00       		.byte	0
 4798 14c4 00       		.byte	0
 4799 14c5 26       		.uleb128 0x26
 4800 14c6 550F0000 		.4byte	.LASF281
 4801 14ca 01       		.byte	0x1
 4802 14cb 4203     		.2byte	0x342
 4803 14cd E9090000 		.4byte	0x9e9
 4804 14d1 00000000 		.4byte	.LFB121
 4805 14d5 34000000 		.4byte	.LFE121-.LFB121
 4806 14d9 01       		.uleb128 0x1
 4807 14da 9C       		.byte	0x9c
 4808 14db 2A150000 		.4byte	0x152a
 4809 14df 23       		.uleb128 0x23
 4810 14e0 81000000 		.4byte	.LASF242
 4811 14e4 01       		.byte	0x1
 4812 14e5 4203     		.2byte	0x342
 4813 14e7 D9000000 		.4byte	0xd9
 4814 14eb F7080000 		.4byte	.LLST50
 4815 14ef 23       		.uleb128 0x23
 4816 14f0 6B010000 		.4byte	.LASF282
 4817 14f4 01       		.byte	0x1
 4818 14f5 4203     		.2byte	0x342
 4819 14f7 CE000000 		.4byte	0xce
 4820 14fb 3C090000 		.4byte	.LLST51
 4821 14ff 25       		.uleb128 0x25
 4822 1500 6E040000 		.4byte	.LASF244
 4823 1504 01       		.byte	0x1
 4824 1505 4603     		.2byte	0x346
 4825 1507 E9090000 		.4byte	0x9e9
 4826 150b 68090000 		.4byte	.LLST52
 4827 150f 1E       		.uleb128 0x1e
 4828 1510 14000000 		.4byte	.LVL172
 4829 1514 061A0000 		.4byte	0x1a06
 4830 1518 1D       		.uleb128 0x1d
 4831 1519 01       		.uleb128 0x1
 4832 151a 50       		.byte	0x50
 4833 151b 05       		.uleb128 0x5
 4834 151c 03       		.byte	0x3
 4835 151d 00000000 		.4byte	.LC0
 4836 1521 1D       		.uleb128 0x1d
 4837 1522 01       		.uleb128 0x1
 4838 1523 51       		.byte	0x51
 4839 1524 03       		.uleb128 0x3
 4840 1525 0A       		.byte	0xa
 4841 1526 4403     		.2byte	0x344
 4842 1528 00       		.byte	0
 4843 1529 00       		.byte	0
 4844 152a 2A       		.uleb128 0x2a
 4845 152b AF080000 		.4byte	.LASF283
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 146


 4846 152f 01       		.byte	0x1
 4847 1530 7903     		.2byte	0x379
 4848 1532 B8000000 		.4byte	0xb8
 4849 1536 00000000 		.4byte	.LFB122
 4850 153a 84000000 		.4byte	.LFE122-.LFB122
 4851 153e 01       		.uleb128 0x1
 4852 153f 9C       		.byte	0x9c
 4853 1540 C9150000 		.4byte	0x15c9
 4854 1544 23       		.uleb128 0x23
 4855 1545 43040000 		.4byte	.LASF180
 4856 1549 01       		.byte	0x1
 4857 154a 7903     		.2byte	0x379
 4858 154c BF0C0000 		.4byte	0xcbf
 4859 1550 A7090000 		.4byte	.LLST53
 4860 1554 23       		.uleb128 0x23
 4861 1555 81000000 		.4byte	.LASF242
 4862 1559 01       		.byte	0x1
 4863 155a 7903     		.2byte	0x379
 4864 155c D9000000 		.4byte	0xd9
 4865 1560 D3090000 		.4byte	.LLST54
 4866 1564 23       		.uleb128 0x23
 4867 1565 10010000 		.4byte	.LASF284
 4868 1569 01       		.byte	0x1
 4869 156a 7903     		.2byte	0x379
 4870 156c B8000000 		.4byte	0xb8
 4871 1570 FF090000 		.4byte	.LLST55
 4872 1574 25       		.uleb128 0x25
 4873 1575 520E0000 		.4byte	.LASF285
 4874 1579 01       		.byte	0x1
 4875 157a 7D03     		.2byte	0x37d
 4876 157c D9000000 		.4byte	0xd9
 4877 1580 4F0A0000 		.4byte	.LLST56
 4878 1584 25       		.uleb128 0x25
 4879 1585 750E0000 		.4byte	.LASF286
 4880 1589 01       		.byte	0x1
 4881 158a 7E03     		.2byte	0x37e
 4882 158c D9000000 		.4byte	0xd9
 4883 1590 620A0000 		.4byte	.LLST57
 4884 1594 1C       		.uleb128 0x1c
 4885 1595 14000000 		.4byte	.LVL181
 4886 1599 061A0000 		.4byte	0x1a06
 4887 159d B2150000 		.4byte	0x15b2
 4888 15a1 1D       		.uleb128 0x1d
 4889 15a2 01       		.uleb128 0x1
 4890 15a3 50       		.byte	0x50
 4891 15a4 05       		.uleb128 0x5
 4892 15a5 03       		.byte	0x3
 4893 15a6 00000000 		.4byte	.LC0
 4894 15aa 1D       		.uleb128 0x1d
 4895 15ab 01       		.uleb128 0x1
 4896 15ac 51       		.byte	0x51
 4897 15ad 03       		.uleb128 0x3
 4898 15ae 0A       		.byte	0xa
 4899 15af 7B03     		.2byte	0x37b
 4900 15b1 00       		.byte	0
 4901 15b2 1E       		.uleb128 0x1e
 4902 15b3 4C000000 		.4byte	.LVL186
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 147


 4903 15b7 F8110000 		.4byte	0x11f8
 4904 15bb 1D       		.uleb128 0x1d
 4905 15bc 01       		.uleb128 0x1
 4906 15bd 50       		.byte	0x50
 4907 15be 02       		.uleb128 0x2
 4908 15bf 76       		.byte	0x76
 4909 15c0 00       		.sleb128 0
 4910 15c1 1D       		.uleb128 0x1d
 4911 15c2 01       		.uleb128 0x1
 4912 15c3 51       		.byte	0x51
 4913 15c4 02       		.uleb128 0x2
 4914 15c5 74       		.byte	0x74
 4915 15c6 00       		.sleb128 0
 4916 15c7 00       		.byte	0
 4917 15c8 00       		.byte	0
 4918 15c9 2A       		.uleb128 0x2a
 4919 15ca DC100000 		.4byte	.LASF287
 4920 15ce 01       		.byte	0x1
 4921 15cf DA03     		.2byte	0x3da
 4922 15d1 DD080000 		.4byte	0x8dd
 4923 15d5 00000000 		.4byte	.LFB123
 4924 15d9 60000000 		.4byte	.LFE123-.LFB123
 4925 15dd 01       		.uleb128 0x1
 4926 15de 9C       		.byte	0x9c
 4927 15df 5E160000 		.4byte	0x165e
 4928 15e3 23       		.uleb128 0x23
 4929 15e4 43040000 		.4byte	.LASF180
 4930 15e8 01       		.byte	0x1
 4931 15e9 DA03     		.2byte	0x3da
 4932 15eb BF0C0000 		.4byte	0xcbf
 4933 15ef 8D0A0000 		.4byte	.LLST58
 4934 15f3 23       		.uleb128 0x23
 4935 15f4 81000000 		.4byte	.LASF242
 4936 15f8 01       		.byte	0x1
 4937 15f9 DA03     		.2byte	0x3da
 4938 15fb D9000000 		.4byte	0xd9
 4939 15ff D20A0000 		.4byte	.LLST59
 4940 1603 23       		.uleb128 0x23
 4941 1604 10010000 		.4byte	.LASF284
 4942 1608 01       		.byte	0x1
 4943 1609 DA03     		.2byte	0x3da
 4944 160b B8000000 		.4byte	0xb8
 4945 160f 170B0000 		.4byte	.LLST60
 4946 1613 25       		.uleb128 0x25
 4947 1614 F8050000 		.4byte	.LASF288
 4948 1618 01       		.byte	0x1
 4949 1619 DE03     		.2byte	0x3de
 4950 161b DD080000 		.4byte	0x8dd
 4951 161f 510B0000 		.4byte	.LLST61
 4952 1623 1C       		.uleb128 0x1c
 4953 1624 16000000 		.4byte	.LVL200
 4954 1628 061A0000 		.4byte	0x1a06
 4955 162c 41160000 		.4byte	0x1641
 4956 1630 1D       		.uleb128 0x1d
 4957 1631 01       		.uleb128 0x1
 4958 1632 50       		.byte	0x50
 4959 1633 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 148


 4960 1634 03       		.byte	0x3
 4961 1635 00000000 		.4byte	.LC0
 4962 1639 1D       		.uleb128 0x1d
 4963 163a 01       		.uleb128 0x1
 4964 163b 51       		.byte	0x51
 4965 163c 03       		.uleb128 0x3
 4966 163d 0A       		.byte	0xa
 4967 163e DC03     		.2byte	0x3dc
 4968 1640 00       		.byte	0
 4969 1641 1E       		.uleb128 0x1e
 4970 1642 2A000000 		.4byte	.LVL201
 4971 1646 2A150000 		.4byte	0x152a
 4972 164a 1D       		.uleb128 0x1d
 4973 164b 01       		.uleb128 0x1
 4974 164c 50       		.byte	0x50
 4975 164d 02       		.uleb128 0x2
 4976 164e 75       		.byte	0x75
 4977 164f 00       		.sleb128 0
 4978 1650 1D       		.uleb128 0x1d
 4979 1651 01       		.uleb128 0x1
 4980 1652 51       		.byte	0x51
 4981 1653 02       		.uleb128 0x2
 4982 1654 74       		.byte	0x74
 4983 1655 00       		.sleb128 0
 4984 1656 1D       		.uleb128 0x1d
 4985 1657 01       		.uleb128 0x1
 4986 1658 52       		.byte	0x52
 4987 1659 02       		.uleb128 0x2
 4988 165a 76       		.byte	0x76
 4989 165b 00       		.sleb128 0
 4990 165c 00       		.byte	0
 4991 165d 00       		.byte	0
 4992 165e 2A       		.uleb128 0x2a
 4993 165f 6C060000 		.4byte	.LASF289
 4994 1663 01       		.byte	0x1
 4995 1664 1D04     		.2byte	0x41d
 4996 1666 B8000000 		.4byte	0xb8
 4997 166a 00000000 		.4byte	.LFB124
 4998 166e 74000000 		.4byte	.LFE124-.LFB124
 4999 1672 01       		.uleb128 0x1
 5000 1673 9C       		.byte	0x9c
 5001 1674 F3160000 		.4byte	0x16f3
 5002 1678 23       		.uleb128 0x23
 5003 1679 43040000 		.4byte	.LASF180
 5004 167d 01       		.byte	0x1
 5005 167e 1D04     		.2byte	0x41d
 5006 1680 BF0C0000 		.4byte	0xcbf
 5007 1684 A50B0000 		.4byte	.LLST62
 5008 1688 23       		.uleb128 0x23
 5009 1689 81000000 		.4byte	.LASF242
 5010 168d 01       		.byte	0x1
 5011 168e 1D04     		.2byte	0x41d
 5012 1690 D9000000 		.4byte	0xd9
 5013 1694 D10B0000 		.4byte	.LLST63
 5014 1698 23       		.uleb128 0x23
 5015 1699 10010000 		.4byte	.LASF284
 5016 169d 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 149


 5017 169e 1D04     		.2byte	0x41d
 5018 16a0 B8000000 		.4byte	0xb8
 5019 16a4 160C0000 		.4byte	.LLST64
 5020 16a8 25       		.uleb128 0x25
 5021 16a9 B90C0000 		.4byte	.LASF290
 5022 16ad 01       		.byte	0x1
 5023 16ae 2104     		.2byte	0x421
 5024 16b0 CE000000 		.4byte	0xce
 5025 16b4 5B0C0000 		.4byte	.LLST65
 5026 16b8 1C       		.uleb128 0x1c
 5027 16b9 14000000 		.4byte	.LVL214
 5028 16bd 061A0000 		.4byte	0x1a06
 5029 16c1 D6160000 		.4byte	0x16d6
 5030 16c5 1D       		.uleb128 0x1d
 5031 16c6 01       		.uleb128 0x1
 5032 16c7 50       		.byte	0x50
 5033 16c8 05       		.uleb128 0x5
 5034 16c9 03       		.byte	0x3
 5035 16ca 00000000 		.4byte	.LC0
 5036 16ce 1D       		.uleb128 0x1d
 5037 16cf 01       		.uleb128 0x1
 5038 16d0 51       		.byte	0x51
 5039 16d1 03       		.uleb128 0x3
 5040 16d2 0A       		.byte	0xa
 5041 16d3 1F04     		.2byte	0x41f
 5042 16d5 00       		.byte	0
 5043 16d6 1E       		.uleb128 0x1e
 5044 16d7 28000000 		.4byte	.LVL215
 5045 16db 2A150000 		.4byte	0x152a
 5046 16df 1D       		.uleb128 0x1d
 5047 16e0 01       		.uleb128 0x1
 5048 16e1 50       		.byte	0x50
 5049 16e2 02       		.uleb128 0x2
 5050 16e3 75       		.byte	0x75
 5051 16e4 00       		.sleb128 0
 5052 16e5 1D       		.uleb128 0x1d
 5053 16e6 01       		.uleb128 0x1
 5054 16e7 51       		.byte	0x51
 5055 16e8 02       		.uleb128 0x2
 5056 16e9 74       		.byte	0x74
 5057 16ea 00       		.sleb128 0
 5058 16eb 1D       		.uleb128 0x1d
 5059 16ec 01       		.uleb128 0x1
 5060 16ed 52       		.byte	0x52
 5061 16ee 02       		.uleb128 0x2
 5062 16ef 76       		.byte	0x76
 5063 16f0 00       		.sleb128 0
 5064 16f1 00       		.byte	0
 5065 16f2 00       		.byte	0
 5066 16f3 2A       		.uleb128 0x2a
 5067 16f4 CE040000 		.4byte	.LASF291
 5068 16f8 01       		.byte	0x1
 5069 16f9 6804     		.2byte	0x468
 5070 16fb CE000000 		.4byte	0xce
 5071 16ff 00000000 		.4byte	.LFB125
 5072 1703 58000000 		.4byte	.LFE125-.LFB125
 5073 1707 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 150


 5074 1708 9C       		.byte	0x9c
 5075 1709 88170000 		.4byte	0x1788
 5076 170d 23       		.uleb128 0x23
 5077 170e 43040000 		.4byte	.LASF180
 5078 1712 01       		.byte	0x1
 5079 1713 6804     		.2byte	0x468
 5080 1715 BF0C0000 		.4byte	0xcbf
 5081 1719 BD0C0000 		.4byte	.LLST66
 5082 171d 23       		.uleb128 0x23
 5083 171e 81000000 		.4byte	.LASF242
 5084 1722 01       		.byte	0x1
 5085 1723 6804     		.2byte	0x468
 5086 1725 D9000000 		.4byte	0xd9
 5087 1729 E90C0000 		.4byte	.LLST67
 5088 172d 23       		.uleb128 0x23
 5089 172e 10010000 		.4byte	.LASF284
 5090 1732 01       		.byte	0x1
 5091 1733 6804     		.2byte	0x468
 5092 1735 B8000000 		.4byte	0xb8
 5093 1739 2E0D0000 		.4byte	.LLST68
 5094 173d 25       		.uleb128 0x25
 5095 173e 64080000 		.4byte	.LASF292
 5096 1742 01       		.byte	0x1
 5097 1743 6C04     		.2byte	0x46c
 5098 1745 E4000000 		.4byte	0xe4
 5099 1749 680D0000 		.4byte	.LLST69
 5100 174d 1C       		.uleb128 0x1c
 5101 174e 14000000 		.4byte	.LVL231
 5102 1752 061A0000 		.4byte	0x1a06
 5103 1756 6B170000 		.4byte	0x176b
 5104 175a 1D       		.uleb128 0x1d
 5105 175b 01       		.uleb128 0x1
 5106 175c 50       		.byte	0x50
 5107 175d 05       		.uleb128 0x5
 5108 175e 03       		.byte	0x3
 5109 175f 00000000 		.4byte	.LC0
 5110 1763 1D       		.uleb128 0x1d
 5111 1764 01       		.uleb128 0x1
 5112 1765 51       		.byte	0x51
 5113 1766 03       		.uleb128 0x3
 5114 1767 0A       		.byte	0xa
 5115 1768 6A04     		.2byte	0x46a
 5116 176a 00       		.byte	0
 5117 176b 1E       		.uleb128 0x1e
 5118 176c 28000000 		.4byte	.LVL232
 5119 1770 2A150000 		.4byte	0x152a
 5120 1774 1D       		.uleb128 0x1d
 5121 1775 01       		.uleb128 0x1
 5122 1776 50       		.byte	0x50
 5123 1777 02       		.uleb128 0x2
 5124 1778 75       		.byte	0x75
 5125 1779 00       		.sleb128 0
 5126 177a 1D       		.uleb128 0x1d
 5127 177b 01       		.uleb128 0x1
 5128 177c 51       		.byte	0x51
 5129 177d 02       		.uleb128 0x2
 5130 177e 74       		.byte	0x74
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 151


 5131 177f 00       		.sleb128 0
 5132 1780 1D       		.uleb128 0x1d
 5133 1781 01       		.uleb128 0x1
 5134 1782 52       		.byte	0x52
 5135 1783 02       		.uleb128 0x2
 5136 1784 76       		.byte	0x76
 5137 1785 00       		.sleb128 0
 5138 1786 00       		.byte	0
 5139 1787 00       		.byte	0
 5140 1788 22       		.uleb128 0x22
 5141 1789 72110000 		.4byte	.LASF293
 5142 178d 01       		.byte	0x1
 5143 178e 9C04     		.2byte	0x49c
 5144 1790 00000000 		.4byte	.LFB126
 5145 1794 58000000 		.4byte	.LFE126-.LFB126
 5146 1798 01       		.uleb128 0x1
 5147 1799 9C       		.byte	0x9c
 5148 179a 55180000 		.4byte	0x1855
 5149 179e 23       		.uleb128 0x23
 5150 179f 43040000 		.4byte	.LASF180
 5151 17a3 01       		.byte	0x1
 5152 17a4 9C04     		.2byte	0x49c
 5153 17a6 EE0E0000 		.4byte	0xeee
 5154 17aa A80D0000 		.4byte	.LLST70
 5155 17ae 23       		.uleb128 0x23
 5156 17af E5000000 		.4byte	.LASF294
 5157 17b3 01       		.byte	0x1
 5158 17b4 9C04     		.2byte	0x49c
 5159 17b6 A10A0000 		.4byte	0xaa1
 5160 17ba D40D0000 		.4byte	.LLST71
 5161 17be 23       		.uleb128 0x23
 5162 17bf 630E0000 		.4byte	.LASF295
 5163 17c3 01       		.byte	0x1
 5164 17c4 9C04     		.2byte	0x49c
 5165 17c6 D9000000 		.4byte	0xd9
 5166 17ca F50D0000 		.4byte	.LLST72
 5167 17ce 23       		.uleb128 0x23
 5168 17cf 89110000 		.4byte	.LASF296
 5169 17d3 01       		.byte	0x1
 5170 17d4 9C04     		.2byte	0x49c
 5171 17d6 5B0A0000 		.4byte	0xa5b
 5172 17da 3A0E0000 		.4byte	.LLST73
 5173 17de 25       		.uleb128 0x25
 5174 17df E90A0000 		.4byte	.LASF297
 5175 17e3 01       		.byte	0x1
 5176 17e4 A204     		.2byte	0x4a2
 5177 17e6 55180000 		.4byte	0x1855
 5178 17ea 5B0E0000 		.4byte	.LLST74
 5179 17ee 25       		.uleb128 0x25
 5180 17ef 97020000 		.4byte	.LASF298
 5181 17f3 01       		.byte	0x1
 5182 17f4 A304     		.2byte	0x4a3
 5183 17f6 55180000 		.4byte	0x1855
 5184 17fa 820E0000 		.4byte	.LLST75
 5185 17fe 1C       		.uleb128 0x1c
 5186 17ff 14000000 		.4byte	.LVL242
 5187 1803 061A0000 		.4byte	0x1a06
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 152


 5188 1807 1C180000 		.4byte	0x181c
 5189 180b 1D       		.uleb128 0x1d
 5190 180c 01       		.uleb128 0x1
 5191 180d 50       		.byte	0x50
 5192 180e 05       		.uleb128 0x5
 5193 180f 03       		.byte	0x3
 5194 1810 00000000 		.4byte	.LC0
 5195 1814 1D       		.uleb128 0x1d
 5196 1815 01       		.uleb128 0x1
 5197 1816 51       		.byte	0x51
 5198 1817 03       		.uleb128 0x3
 5199 1818 0A       		.byte	0xa
 5200 1819 9E04     		.2byte	0x49e
 5201 181b 00       		.byte	0
 5202 181c 1C       		.uleb128 0x1c
 5203 181d 22000000 		.4byte	.LVL243
 5204 1821 061A0000 		.4byte	0x1a06
 5205 1825 3A180000 		.4byte	0x183a
 5206 1829 1D       		.uleb128 0x1d
 5207 182a 01       		.uleb128 0x1
 5208 182b 50       		.byte	0x50
 5209 182c 05       		.uleb128 0x5
 5210 182d 03       		.byte	0x3
 5211 182e 00000000 		.4byte	.LC0
 5212 1832 1D       		.uleb128 0x1d
 5213 1833 01       		.uleb128 0x1
 5214 1834 51       		.byte	0x51
 5215 1835 03       		.uleb128 0x3
 5216 1836 0A       		.byte	0xa
 5217 1837 9F04     		.2byte	0x49f
 5218 1839 00       		.byte	0
 5219 183a 1E       		.uleb128 0x1e
 5220 183b 30000000 		.4byte	.LVL244
 5221 183f 061A0000 		.4byte	0x1a06
 5222 1843 1D       		.uleb128 0x1d
 5223 1844 01       		.uleb128 0x1
 5224 1845 50       		.byte	0x50
 5225 1846 05       		.uleb128 0x5
 5226 1847 03       		.byte	0x3
 5227 1848 00000000 		.4byte	.LC0
 5228 184c 1D       		.uleb128 0x1d
 5229 184d 01       		.uleb128 0x1
 5230 184e 51       		.byte	0x51
 5231 184f 03       		.uleb128 0x3
 5232 1850 0A       		.byte	0xa
 5233 1851 A004     		.2byte	0x4a0
 5234 1853 00       		.byte	0
 5235 1854 00       		.byte	0
 5236 1855 15       		.uleb128 0x15
 5237 1856 04       		.byte	0x4
 5238 1857 FD000000 		.4byte	0xfd
 5239 185b 26       		.uleb128 0x26
 5240 185c 08080000 		.4byte	.LASF299
 5241 1860 01       		.byte	0x1
 5242 1861 CA04     		.2byte	0x4ca
 5243 1863 D9000000 		.4byte	0xd9
 5244 1867 00000000 		.4byte	.LFB127
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 153


 5245 186b 20000000 		.4byte	.LFE127-.LFB127
 5246 186f 01       		.uleb128 0x1
 5247 1870 9C       		.byte	0x9c
 5248 1871 B0180000 		.4byte	0x18b0
 5249 1875 23       		.uleb128 0x23
 5250 1876 43040000 		.4byte	.LASF180
 5251 187a 01       		.byte	0x1
 5252 187b CA04     		.2byte	0x4ca
 5253 187d BF0C0000 		.4byte	0xcbf
 5254 1881 A90E0000 		.4byte	.LLST76
 5255 1885 23       		.uleb128 0x23
 5256 1886 E5000000 		.4byte	.LASF294
 5257 188a 01       		.byte	0x1
 5258 188b CA04     		.2byte	0x4ca
 5259 188d A10A0000 		.4byte	0xaa1
 5260 1891 D50E0000 		.4byte	.LLST77
 5261 1895 1E       		.uleb128 0x1e
 5262 1896 10000000 		.4byte	.LVL252
 5263 189a 061A0000 		.4byte	0x1a06
 5264 189e 1D       		.uleb128 0x1d
 5265 189f 01       		.uleb128 0x1
 5266 18a0 50       		.byte	0x50
 5267 18a1 05       		.uleb128 0x5
 5268 18a2 03       		.byte	0x3
 5269 18a3 00000000 		.4byte	.LC0
 5270 18a7 1D       		.uleb128 0x1d
 5271 18a8 01       		.uleb128 0x1
 5272 18a9 51       		.byte	0x51
 5273 18aa 03       		.uleb128 0x3
 5274 18ab 0A       		.byte	0xa
 5275 18ac CC04     		.2byte	0x4cc
 5276 18ae 00       		.byte	0
 5277 18af 00       		.byte	0
 5278 18b0 22       		.uleb128 0x22
 5279 18b1 A4060000 		.4byte	.LASF300
 5280 18b5 01       		.byte	0x1
 5281 18b6 EB04     		.2byte	0x4eb
 5282 18b8 00000000 		.4byte	.LFB128
 5283 18bc 50000000 		.4byte	.LFE128-.LFB128
 5284 18c0 01       		.uleb128 0x1
 5285 18c1 9C       		.byte	0x9c
 5286 18c2 2F190000 		.4byte	0x192f
 5287 18c6 23       		.uleb128 0x23
 5288 18c7 43040000 		.4byte	.LASF180
 5289 18cb 01       		.byte	0x1
 5290 18cc EB04     		.2byte	0x4eb
 5291 18ce EE0E0000 		.4byte	0xeee
 5292 18d2 F60E0000 		.4byte	.LLST78
 5293 18d6 23       		.uleb128 0x23
 5294 18d7 630E0000 		.4byte	.LASF295
 5295 18db 01       		.byte	0x1
 5296 18dc EB04     		.2byte	0x4eb
 5297 18de D9000000 		.4byte	0xd9
 5298 18e2 220F0000 		.4byte	.LLST79
 5299 18e6 23       		.uleb128 0x23
 5300 18e7 3E050000 		.4byte	.LASF222
 5301 18eb 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 154


 5302 18ec EB04     		.2byte	0x4eb
 5303 18ee 810A0000 		.4byte	0xa81
 5304 18f2 670F0000 		.4byte	.LLST80
 5305 18f6 1C       		.uleb128 0x1c
 5306 18f7 16000000 		.4byte	.LVL257
 5307 18fb 061A0000 		.4byte	0x1a06
 5308 18ff 14190000 		.4byte	0x1914
 5309 1903 1D       		.uleb128 0x1d
 5310 1904 01       		.uleb128 0x1
 5311 1905 50       		.byte	0x50
 5312 1906 05       		.uleb128 0x5
 5313 1907 03       		.byte	0x3
 5314 1908 00000000 		.4byte	.LC0
 5315 190c 1D       		.uleb128 0x1d
 5316 190d 01       		.uleb128 0x1
 5317 190e 51       		.byte	0x51
 5318 190f 03       		.uleb128 0x3
 5319 1910 0A       		.byte	0xa
 5320 1911 ED04     		.2byte	0x4ed
 5321 1913 00       		.byte	0
 5322 1914 1E       		.uleb128 0x1e
 5323 1915 22000000 		.4byte	.LVL258
 5324 1919 061A0000 		.4byte	0x1a06
 5325 191d 1D       		.uleb128 0x1d
 5326 191e 01       		.uleb128 0x1
 5327 191f 50       		.byte	0x50
 5328 1920 05       		.uleb128 0x5
 5329 1921 03       		.byte	0x3
 5330 1922 00000000 		.4byte	.LC0
 5331 1926 1D       		.uleb128 0x1d
 5332 1927 01       		.uleb128 0x1
 5333 1928 51       		.byte	0x51
 5334 1929 03       		.uleb128 0x3
 5335 192a 0A       		.byte	0xa
 5336 192b EE04     		.2byte	0x4ee
 5337 192d 00       		.byte	0
 5338 192e 00       		.byte	0
 5339 192f 26       		.uleb128 0x26
 5340 1930 BE030000 		.4byte	.LASF301
 5341 1934 01       		.byte	0x1
 5342 1935 1205     		.2byte	0x512
 5343 1937 44090000 		.4byte	0x944
 5344 193b 00000000 		.4byte	.LFB129
 5345 193f 1C000000 		.4byte	.LFE129-.LFB129
 5346 1943 01       		.uleb128 0x1
 5347 1944 9C       		.byte	0x9c
 5348 1945 89190000 		.4byte	0x1989
 5349 1949 23       		.uleb128 0x23
 5350 194a 34120000 		.4byte	.LASF302
 5351 194e 01       		.byte	0x1
 5352 194f 1205     		.2byte	0x512
 5353 1951 B4090000 		.4byte	0x9b4
 5354 1955 880F0000 		.4byte	.LLST81
 5355 1959 23       		.uleb128 0x23
 5356 195a D00E0000 		.4byte	.LASF260
 5357 195e 01       		.byte	0x1
 5358 195f 1205     		.2byte	0x512
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 155


 5359 1961 76090000 		.4byte	0x976
 5360 1965 C20F0000 		.4byte	.LLST82
 5361 1969 2B       		.uleb128 0x2b
 5362 196a 660B0000 		.4byte	.LASF303
 5363 196e 01       		.byte	0x1
 5364 196f 1405     		.2byte	0x514
 5365 1971 44090000 		.4byte	0x944
 5366 1975 00       		.byte	0
 5367 1976 2C       		.uleb128 0x2c
 5368 1977 0C000000 		.4byte	.LVL266
 5369 197b 66100000 		.4byte	0x1066
 5370 197f 2C       		.uleb128 0x2c
 5371 1980 18000000 		.4byte	.LVL269
 5372 1984 F10F0000 		.4byte	0xff1
 5373 1988 00       		.byte	0
 5374 1989 20       		.uleb128 0x20
 5375 198a BF130000 		.4byte	.LASF304
 5376 198e 01       		.byte	0x1
 5377 198f 16       		.byte	0x16
 5378 1990 890C0000 		.4byte	0xc89
 5379 1994 05       		.uleb128 0x5
 5380 1995 03       		.byte	0x3
 5381 1996 00000000 		.4byte	enabledBeforeSleep
 5382 199a 2D       		.uleb128 0x2d
 5383 199b 77000000 		.4byte	.LASF305
 5384 199f 07       		.byte	0x7
 5385 19a0 A7       		.byte	0xa7
 5386 19a1 A5190000 		.4byte	0x19a5
 5387 19a5 15       		.uleb128 0x15
 5388 19a6 04       		.byte	0x4
 5389 19a7 AB190000 		.4byte	0x19ab
 5390 19ab 06       		.uleb128 0x6
 5391 19ac BF080000 		.4byte	0x8bf
 5392 19b0 07       		.uleb128 0x7
 5393 19b1 C0190000 		.4byte	0x19c0
 5394 19b5 C0190000 		.4byte	0x19c0
 5395 19b9 08       		.uleb128 0x8
 5396 19ba F6000000 		.4byte	0xf6
 5397 19be 0F       		.byte	0xf
 5398 19bf 00       		.byte	0
 5399 19c0 05       		.uleb128 0x5
 5400 19c1 B8000000 		.4byte	0xb8
 5401 19c5 2E       		.uleb128 0x2e
 5402 19c6 57090000 		.4byte	.LASF306
 5403 19ca 01       		.byte	0x1
 5404 19cb 1C       		.byte	0x1c
 5405 19cc D6190000 		.4byte	0x19d6
 5406 19d0 05       		.uleb128 0x5
 5407 19d1 03       		.byte	0x3
 5408 19d2 00000000 		.4byte	Cy_SAR_offset
 5409 19d6 05       		.uleb128 0x5
 5410 19d7 B0190000 		.4byte	0x19b0
 5411 19db 07       		.uleb128 0x7
 5412 19dc EB190000 		.4byte	0x19eb
 5413 19e0 EB190000 		.4byte	0x19eb
 5414 19e4 08       		.uleb128 0x8
 5415 19e5 F6000000 		.4byte	0xf6
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 156


 5416 19e9 0F       		.byte	0xf
 5417 19ea 00       		.byte	0
 5418 19eb 05       		.uleb128 0x5
 5419 19ec CE000000 		.4byte	0xce
 5420 19f0 2E       		.uleb128 0x2e
 5421 19f1 2E0B0000 		.4byte	.LASF307
 5422 19f5 01       		.byte	0x1
 5423 19f6 1D       		.byte	0x1d
 5424 19f7 011A0000 		.4byte	0x1a01
 5425 19fb 05       		.uleb128 0x5
 5426 19fc 03       		.byte	0x3
 5427 19fd 00000000 		.4byte	Cy_SAR_countsPer10Volt
 5428 1a01 05       		.uleb128 0x5
 5429 1a02 DB190000 		.4byte	0x19db
 5430 1a06 2F       		.uleb128 0x2f
 5431 1a07 8B070000 		.4byte	.LASF308
 5432 1a0b 8B070000 		.4byte	.LASF308
 5433 1a0f 08       		.byte	0x8
 5434 1a10 9203     		.2byte	0x392
 5435 1a12 2F       		.uleb128 0x2f
 5436 1a13 7C100000 		.4byte	.LASF309
 5437 1a17 7C100000 		.4byte	.LASF309
 5438 1a1b 08       		.byte	0x8
 5439 1a1c 8A03     		.2byte	0x38a
 5440 1a1e 00       		.byte	0
 5441              		.section	.debug_abbrev,"",%progbits
 5442              	.Ldebug_abbrev0:
 5443 0000 01       		.uleb128 0x1
 5444 0001 11       		.uleb128 0x11
 5445 0002 01       		.byte	0x1
 5446 0003 25       		.uleb128 0x25
 5447 0004 0E       		.uleb128 0xe
 5448 0005 13       		.uleb128 0x13
 5449 0006 0B       		.uleb128 0xb
 5450 0007 03       		.uleb128 0x3
 5451 0008 0E       		.uleb128 0xe
 5452 0009 1B       		.uleb128 0x1b
 5453 000a 0E       		.uleb128 0xe
 5454 000b 55       		.uleb128 0x55
 5455 000c 17       		.uleb128 0x17
 5456 000d 11       		.uleb128 0x11
 5457 000e 01       		.uleb128 0x1
 5458 000f 10       		.uleb128 0x10
 5459 0010 17       		.uleb128 0x17
 5460 0011 00       		.byte	0
 5461 0012 00       		.byte	0
 5462 0013 02       		.uleb128 0x2
 5463 0014 24       		.uleb128 0x24
 5464 0015 00       		.byte	0
 5465 0016 0B       		.uleb128 0xb
 5466 0017 0B       		.uleb128 0xb
 5467 0018 3E       		.uleb128 0x3e
 5468 0019 0B       		.uleb128 0xb
 5469 001a 03       		.uleb128 0x3
 5470 001b 0E       		.uleb128 0xe
 5471 001c 00       		.byte	0
 5472 001d 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 157


 5473 001e 03       		.uleb128 0x3
 5474 001f 16       		.uleb128 0x16
 5475 0020 00       		.byte	0
 5476 0021 03       		.uleb128 0x3
 5477 0022 0E       		.uleb128 0xe
 5478 0023 3A       		.uleb128 0x3a
 5479 0024 0B       		.uleb128 0xb
 5480 0025 3B       		.uleb128 0x3b
 5481 0026 0B       		.uleb128 0xb
 5482 0027 49       		.uleb128 0x49
 5483 0028 13       		.uleb128 0x13
 5484 0029 00       		.byte	0
 5485 002a 00       		.byte	0
 5486 002b 04       		.uleb128 0x4
 5487 002c 24       		.uleb128 0x24
 5488 002d 00       		.byte	0
 5489 002e 0B       		.uleb128 0xb
 5490 002f 0B       		.uleb128 0xb
 5491 0030 3E       		.uleb128 0x3e
 5492 0031 0B       		.uleb128 0xb
 5493 0032 03       		.uleb128 0x3
 5494 0033 08       		.uleb128 0x8
 5495 0034 00       		.byte	0
 5496 0035 00       		.byte	0
 5497 0036 05       		.uleb128 0x5
 5498 0037 35       		.uleb128 0x35
 5499 0038 00       		.byte	0
 5500 0039 49       		.uleb128 0x49
 5501 003a 13       		.uleb128 0x13
 5502 003b 00       		.byte	0
 5503 003c 00       		.byte	0
 5504 003d 06       		.uleb128 0x6
 5505 003e 26       		.uleb128 0x26
 5506 003f 00       		.byte	0
 5507 0040 49       		.uleb128 0x49
 5508 0041 13       		.uleb128 0x13
 5509 0042 00       		.byte	0
 5510 0043 00       		.byte	0
 5511 0044 07       		.uleb128 0x7
 5512 0045 01       		.uleb128 0x1
 5513 0046 01       		.byte	0x1
 5514 0047 49       		.uleb128 0x49
 5515 0048 13       		.uleb128 0x13
 5516 0049 01       		.uleb128 0x1
 5517 004a 13       		.uleb128 0x13
 5518 004b 00       		.byte	0
 5519 004c 00       		.byte	0
 5520 004d 08       		.uleb128 0x8
 5521 004e 21       		.uleb128 0x21
 5522 004f 00       		.byte	0
 5523 0050 49       		.uleb128 0x49
 5524 0051 13       		.uleb128 0x13
 5525 0052 2F       		.uleb128 0x2f
 5526 0053 0B       		.uleb128 0xb
 5527 0054 00       		.byte	0
 5528 0055 00       		.byte	0
 5529 0056 09       		.uleb128 0x9
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 158


 5530 0057 13       		.uleb128 0x13
 5531 0058 01       		.byte	0x1
 5532 0059 0B       		.uleb128 0xb
 5533 005a 05       		.uleb128 0x5
 5534 005b 3A       		.uleb128 0x3a
 5535 005c 0B       		.uleb128 0xb
 5536 005d 3B       		.uleb128 0x3b
 5537 005e 0B       		.uleb128 0xb
 5538 005f 01       		.uleb128 0x1
 5539 0060 13       		.uleb128 0x13
 5540 0061 00       		.byte	0
 5541 0062 00       		.byte	0
 5542 0063 0A       		.uleb128 0xa
 5543 0064 0D       		.uleb128 0xd
 5544 0065 00       		.byte	0
 5545 0066 03       		.uleb128 0x3
 5546 0067 0E       		.uleb128 0xe
 5547 0068 3A       		.uleb128 0x3a
 5548 0069 0B       		.uleb128 0xb
 5549 006a 3B       		.uleb128 0x3b
 5550 006b 0B       		.uleb128 0xb
 5551 006c 49       		.uleb128 0x49
 5552 006d 13       		.uleb128 0x13
 5553 006e 38       		.uleb128 0x38
 5554 006f 0B       		.uleb128 0xb
 5555 0070 00       		.byte	0
 5556 0071 00       		.byte	0
 5557 0072 0B       		.uleb128 0xb
 5558 0073 0D       		.uleb128 0xd
 5559 0074 00       		.byte	0
 5560 0075 03       		.uleb128 0x3
 5561 0076 0E       		.uleb128 0xe
 5562 0077 3A       		.uleb128 0x3a
 5563 0078 0B       		.uleb128 0xb
 5564 0079 3B       		.uleb128 0x3b
 5565 007a 0B       		.uleb128 0xb
 5566 007b 49       		.uleb128 0x49
 5567 007c 13       		.uleb128 0x13
 5568 007d 38       		.uleb128 0x38
 5569 007e 05       		.uleb128 0x5
 5570 007f 00       		.byte	0
 5571 0080 00       		.byte	0
 5572 0081 0C       		.uleb128 0xc
 5573 0082 21       		.uleb128 0x21
 5574 0083 00       		.byte	0
 5575 0084 49       		.uleb128 0x49
 5576 0085 13       		.uleb128 0x13
 5577 0086 2F       		.uleb128 0x2f
 5578 0087 05       		.uleb128 0x5
 5579 0088 00       		.byte	0
 5580 0089 00       		.byte	0
 5581 008a 0D       		.uleb128 0xd
 5582 008b 16       		.uleb128 0x16
 5583 008c 00       		.byte	0
 5584 008d 03       		.uleb128 0x3
 5585 008e 0E       		.uleb128 0xe
 5586 008f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 159


 5587 0090 0B       		.uleb128 0xb
 5588 0091 3B       		.uleb128 0x3b
 5589 0092 05       		.uleb128 0x5
 5590 0093 49       		.uleb128 0x49
 5591 0094 13       		.uleb128 0x13
 5592 0095 00       		.byte	0
 5593 0096 00       		.byte	0
 5594 0097 0E       		.uleb128 0xe
 5595 0098 13       		.uleb128 0x13
 5596 0099 01       		.byte	0x1
 5597 009a 0B       		.uleb128 0xb
 5598 009b 0B       		.uleb128 0xb
 5599 009c 3A       		.uleb128 0x3a
 5600 009d 0B       		.uleb128 0xb
 5601 009e 3B       		.uleb128 0x3b
 5602 009f 0B       		.uleb128 0xb
 5603 00a0 01       		.uleb128 0x1
 5604 00a1 13       		.uleb128 0x13
 5605 00a2 00       		.byte	0
 5606 00a3 00       		.byte	0
 5607 00a4 0F       		.uleb128 0xf
 5608 00a5 04       		.uleb128 0x4
 5609 00a6 01       		.byte	0x1
 5610 00a7 0B       		.uleb128 0xb
 5611 00a8 0B       		.uleb128 0xb
 5612 00a9 49       		.uleb128 0x49
 5613 00aa 13       		.uleb128 0x13
 5614 00ab 3A       		.uleb128 0x3a
 5615 00ac 0B       		.uleb128 0xb
 5616 00ad 3B       		.uleb128 0x3b
 5617 00ae 05       		.uleb128 0x5
 5618 00af 01       		.uleb128 0x1
 5619 00b0 13       		.uleb128 0x13
 5620 00b1 00       		.byte	0
 5621 00b2 00       		.byte	0
 5622 00b3 10       		.uleb128 0x10
 5623 00b4 28       		.uleb128 0x28
 5624 00b5 00       		.byte	0
 5625 00b6 03       		.uleb128 0x3
 5626 00b7 0E       		.uleb128 0xe
 5627 00b8 1C       		.uleb128 0x1c
 5628 00b9 0B       		.uleb128 0xb
 5629 00ba 00       		.byte	0
 5630 00bb 00       		.byte	0
 5631 00bc 11       		.uleb128 0x11
 5632 00bd 28       		.uleb128 0x28
 5633 00be 00       		.byte	0
 5634 00bf 03       		.uleb128 0x3
 5635 00c0 0E       		.uleb128 0xe
 5636 00c1 1C       		.uleb128 0x1c
 5637 00c2 06       		.uleb128 0x6
 5638 00c3 00       		.byte	0
 5639 00c4 00       		.byte	0
 5640 00c5 12       		.uleb128 0x12
 5641 00c6 13       		.uleb128 0x13
 5642 00c7 01       		.byte	0x1
 5643 00c8 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 160


 5644 00c9 0B       		.uleb128 0xb
 5645 00ca 3A       		.uleb128 0x3a
 5646 00cb 0B       		.uleb128 0xb
 5647 00cc 3B       		.uleb128 0x3b
 5648 00cd 05       		.uleb128 0x5
 5649 00ce 01       		.uleb128 0x1
 5650 00cf 13       		.uleb128 0x13
 5651 00d0 00       		.byte	0
 5652 00d1 00       		.byte	0
 5653 00d2 13       		.uleb128 0x13
 5654 00d3 0D       		.uleb128 0xd
 5655 00d4 00       		.byte	0
 5656 00d5 03       		.uleb128 0x3
 5657 00d6 0E       		.uleb128 0xe
 5658 00d7 3A       		.uleb128 0x3a
 5659 00d8 0B       		.uleb128 0xb
 5660 00d9 3B       		.uleb128 0x3b
 5661 00da 05       		.uleb128 0x5
 5662 00db 49       		.uleb128 0x49
 5663 00dc 13       		.uleb128 0x13
 5664 00dd 38       		.uleb128 0x38
 5665 00de 0B       		.uleb128 0xb
 5666 00df 00       		.byte	0
 5667 00e0 00       		.byte	0
 5668 00e1 14       		.uleb128 0x14
 5669 00e2 0F       		.uleb128 0xf
 5670 00e3 00       		.byte	0
 5671 00e4 0B       		.uleb128 0xb
 5672 00e5 0B       		.uleb128 0xb
 5673 00e6 00       		.byte	0
 5674 00e7 00       		.byte	0
 5675 00e8 15       		.uleb128 0x15
 5676 00e9 0F       		.uleb128 0xf
 5677 00ea 00       		.byte	0
 5678 00eb 0B       		.uleb128 0xb
 5679 00ec 0B       		.uleb128 0xb
 5680 00ed 49       		.uleb128 0x49
 5681 00ee 13       		.uleb128 0x13
 5682 00ef 00       		.byte	0
 5683 00f0 00       		.byte	0
 5684 00f1 16       		.uleb128 0x16
 5685 00f2 28       		.uleb128 0x28
 5686 00f3 00       		.byte	0
 5687 00f4 03       		.uleb128 0x3
 5688 00f5 0E       		.uleb128 0xe
 5689 00f6 1C       		.uleb128 0x1c
 5690 00f7 05       		.uleb128 0x5
 5691 00f8 00       		.byte	0
 5692 00f9 00       		.byte	0
 5693 00fa 17       		.uleb128 0x17
 5694 00fb 2E       		.uleb128 0x2e
 5695 00fc 01       		.byte	0x1
 5696 00fd 03       		.uleb128 0x3
 5697 00fe 0E       		.uleb128 0xe
 5698 00ff 3A       		.uleb128 0x3a
 5699 0100 0B       		.uleb128 0xb
 5700 0101 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 161


 5701 0102 05       		.uleb128 0x5
 5702 0103 27       		.uleb128 0x27
 5703 0104 19       		.uleb128 0x19
 5704 0105 49       		.uleb128 0x49
 5705 0106 13       		.uleb128 0x13
 5706 0107 20       		.uleb128 0x20
 5707 0108 0B       		.uleb128 0xb
 5708 0109 01       		.uleb128 0x1
 5709 010a 13       		.uleb128 0x13
 5710 010b 00       		.byte	0
 5711 010c 00       		.byte	0
 5712 010d 18       		.uleb128 0x18
 5713 010e 05       		.uleb128 0x5
 5714 010f 00       		.byte	0
 5715 0110 03       		.uleb128 0x3
 5716 0111 0E       		.uleb128 0xe
 5717 0112 3A       		.uleb128 0x3a
 5718 0113 0B       		.uleb128 0xb
 5719 0114 3B       		.uleb128 0x3b
 5720 0115 05       		.uleb128 0x5
 5721 0116 49       		.uleb128 0x49
 5722 0117 13       		.uleb128 0x13
 5723 0118 00       		.byte	0
 5724 0119 00       		.byte	0
 5725 011a 19       		.uleb128 0x19
 5726 011b 2E       		.uleb128 0x2e
 5727 011c 01       		.byte	0x1
 5728 011d 3F       		.uleb128 0x3f
 5729 011e 19       		.uleb128 0x19
 5730 011f 03       		.uleb128 0x3
 5731 0120 0E       		.uleb128 0xe
 5732 0121 3A       		.uleb128 0x3a
 5733 0122 0B       		.uleb128 0xb
 5734 0123 3B       		.uleb128 0x3b
 5735 0124 0B       		.uleb128 0xb
 5736 0125 27       		.uleb128 0x27
 5737 0126 19       		.uleb128 0x19
 5738 0127 49       		.uleb128 0x49
 5739 0128 13       		.uleb128 0x13
 5740 0129 11       		.uleb128 0x11
 5741 012a 01       		.uleb128 0x1
 5742 012b 12       		.uleb128 0x12
 5743 012c 06       		.uleb128 0x6
 5744 012d 40       		.uleb128 0x40
 5745 012e 18       		.uleb128 0x18
 5746 012f 9642     		.uleb128 0x2116
 5747 0131 19       		.uleb128 0x19
 5748 0132 01       		.uleb128 0x1
 5749 0133 13       		.uleb128 0x13
 5750 0134 00       		.byte	0
 5751 0135 00       		.byte	0
 5752 0136 1A       		.uleb128 0x1a
 5753 0137 05       		.uleb128 0x5
 5754 0138 00       		.byte	0
 5755 0139 03       		.uleb128 0x3
 5756 013a 0E       		.uleb128 0xe
 5757 013b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 162


 5758 013c 0B       		.uleb128 0xb
 5759 013d 3B       		.uleb128 0x3b
 5760 013e 0B       		.uleb128 0xb
 5761 013f 49       		.uleb128 0x49
 5762 0140 13       		.uleb128 0x13
 5763 0141 02       		.uleb128 0x2
 5764 0142 17       		.uleb128 0x17
 5765 0143 00       		.byte	0
 5766 0144 00       		.byte	0
 5767 0145 1B       		.uleb128 0x1b
 5768 0146 34       		.uleb128 0x34
 5769 0147 00       		.byte	0
 5770 0148 03       		.uleb128 0x3
 5771 0149 0E       		.uleb128 0xe
 5772 014a 3A       		.uleb128 0x3a
 5773 014b 0B       		.uleb128 0xb
 5774 014c 3B       		.uleb128 0x3b
 5775 014d 0B       		.uleb128 0xb
 5776 014e 49       		.uleb128 0x49
 5777 014f 13       		.uleb128 0x13
 5778 0150 02       		.uleb128 0x2
 5779 0151 17       		.uleb128 0x17
 5780 0152 00       		.byte	0
 5781 0153 00       		.byte	0
 5782 0154 1C       		.uleb128 0x1c
 5783 0155 898201   		.uleb128 0x4109
 5784 0158 01       		.byte	0x1
 5785 0159 11       		.uleb128 0x11
 5786 015a 01       		.uleb128 0x1
 5787 015b 31       		.uleb128 0x31
 5788 015c 13       		.uleb128 0x13
 5789 015d 01       		.uleb128 0x1
 5790 015e 13       		.uleb128 0x13
 5791 015f 00       		.byte	0
 5792 0160 00       		.byte	0
 5793 0161 1D       		.uleb128 0x1d
 5794 0162 8A8201   		.uleb128 0x410a
 5795 0165 00       		.byte	0
 5796 0166 02       		.uleb128 0x2
 5797 0167 18       		.uleb128 0x18
 5798 0168 9142     		.uleb128 0x2111
 5799 016a 18       		.uleb128 0x18
 5800 016b 00       		.byte	0
 5801 016c 00       		.byte	0
 5802 016d 1E       		.uleb128 0x1e
 5803 016e 898201   		.uleb128 0x4109
 5804 0171 01       		.byte	0x1
 5805 0172 11       		.uleb128 0x11
 5806 0173 01       		.uleb128 0x1
 5807 0174 31       		.uleb128 0x31
 5808 0175 13       		.uleb128 0x13
 5809 0176 00       		.byte	0
 5810 0177 00       		.byte	0
 5811 0178 1F       		.uleb128 0x1f
 5812 0179 2E       		.uleb128 0x2e
 5813 017a 01       		.byte	0x1
 5814 017b 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 163


 5815 017c 19       		.uleb128 0x19
 5816 017d 03       		.uleb128 0x3
 5817 017e 0E       		.uleb128 0xe
 5818 017f 3A       		.uleb128 0x3a
 5819 0180 0B       		.uleb128 0xb
 5820 0181 3B       		.uleb128 0x3b
 5821 0182 0B       		.uleb128 0xb
 5822 0183 27       		.uleb128 0x27
 5823 0184 19       		.uleb128 0x19
 5824 0185 49       		.uleb128 0x49
 5825 0186 13       		.uleb128 0x13
 5826 0187 11       		.uleb128 0x11
 5827 0188 01       		.uleb128 0x1
 5828 0189 12       		.uleb128 0x12
 5829 018a 06       		.uleb128 0x6
 5830 018b 40       		.uleb128 0x40
 5831 018c 18       		.uleb128 0x18
 5832 018d 9742     		.uleb128 0x2117
 5833 018f 19       		.uleb128 0x19
 5834 0190 01       		.uleb128 0x1
 5835 0191 13       		.uleb128 0x13
 5836 0192 00       		.byte	0
 5837 0193 00       		.byte	0
 5838 0194 20       		.uleb128 0x20
 5839 0195 34       		.uleb128 0x34
 5840 0196 00       		.byte	0
 5841 0197 03       		.uleb128 0x3
 5842 0198 0E       		.uleb128 0xe
 5843 0199 3A       		.uleb128 0x3a
 5844 019a 0B       		.uleb128 0xb
 5845 019b 3B       		.uleb128 0x3b
 5846 019c 0B       		.uleb128 0xb
 5847 019d 49       		.uleb128 0x49
 5848 019e 13       		.uleb128 0x13
 5849 019f 02       		.uleb128 0x2
 5850 01a0 18       		.uleb128 0x18
 5851 01a1 00       		.byte	0
 5852 01a2 00       		.byte	0
 5853 01a3 21       		.uleb128 0x21
 5854 01a4 2E       		.uleb128 0x2e
 5855 01a5 01       		.byte	0x1
 5856 01a6 3F       		.uleb128 0x3f
 5857 01a7 19       		.uleb128 0x19
 5858 01a8 03       		.uleb128 0x3
 5859 01a9 0E       		.uleb128 0xe
 5860 01aa 3A       		.uleb128 0x3a
 5861 01ab 0B       		.uleb128 0xb
 5862 01ac 3B       		.uleb128 0x3b
 5863 01ad 0B       		.uleb128 0xb
 5864 01ae 27       		.uleb128 0x27
 5865 01af 19       		.uleb128 0x19
 5866 01b0 11       		.uleb128 0x11
 5867 01b1 01       		.uleb128 0x1
 5868 01b2 12       		.uleb128 0x12
 5869 01b3 06       		.uleb128 0x6
 5870 01b4 40       		.uleb128 0x40
 5871 01b5 18       		.uleb128 0x18
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 164


 5872 01b6 9742     		.uleb128 0x2117
 5873 01b8 19       		.uleb128 0x19
 5874 01b9 01       		.uleb128 0x1
 5875 01ba 13       		.uleb128 0x13
 5876 01bb 00       		.byte	0
 5877 01bc 00       		.byte	0
 5878 01bd 22       		.uleb128 0x22
 5879 01be 2E       		.uleb128 0x2e
 5880 01bf 01       		.byte	0x1
 5881 01c0 3F       		.uleb128 0x3f
 5882 01c1 19       		.uleb128 0x19
 5883 01c2 03       		.uleb128 0x3
 5884 01c3 0E       		.uleb128 0xe
 5885 01c4 3A       		.uleb128 0x3a
 5886 01c5 0B       		.uleb128 0xb
 5887 01c6 3B       		.uleb128 0x3b
 5888 01c7 05       		.uleb128 0x5
 5889 01c8 27       		.uleb128 0x27
 5890 01c9 19       		.uleb128 0x19
 5891 01ca 11       		.uleb128 0x11
 5892 01cb 01       		.uleb128 0x1
 5893 01cc 12       		.uleb128 0x12
 5894 01cd 06       		.uleb128 0x6
 5895 01ce 40       		.uleb128 0x40
 5896 01cf 18       		.uleb128 0x18
 5897 01d0 9742     		.uleb128 0x2117
 5898 01d2 19       		.uleb128 0x19
 5899 01d3 01       		.uleb128 0x1
 5900 01d4 13       		.uleb128 0x13
 5901 01d5 00       		.byte	0
 5902 01d6 00       		.byte	0
 5903 01d7 23       		.uleb128 0x23
 5904 01d8 05       		.uleb128 0x5
 5905 01d9 00       		.byte	0
 5906 01da 03       		.uleb128 0x3
 5907 01db 0E       		.uleb128 0xe
 5908 01dc 3A       		.uleb128 0x3a
 5909 01dd 0B       		.uleb128 0xb
 5910 01de 3B       		.uleb128 0x3b
 5911 01df 05       		.uleb128 0x5
 5912 01e0 49       		.uleb128 0x49
 5913 01e1 13       		.uleb128 0x13
 5914 01e2 02       		.uleb128 0x2
 5915 01e3 17       		.uleb128 0x17
 5916 01e4 00       		.byte	0
 5917 01e5 00       		.byte	0
 5918 01e6 24       		.uleb128 0x24
 5919 01e7 05       		.uleb128 0x5
 5920 01e8 00       		.byte	0
 5921 01e9 03       		.uleb128 0x3
 5922 01ea 0E       		.uleb128 0xe
 5923 01eb 3A       		.uleb128 0x3a
 5924 01ec 0B       		.uleb128 0xb
 5925 01ed 3B       		.uleb128 0x3b
 5926 01ee 05       		.uleb128 0x5
 5927 01ef 49       		.uleb128 0x49
 5928 01f0 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 165


 5929 01f1 02       		.uleb128 0x2
 5930 01f2 18       		.uleb128 0x18
 5931 01f3 00       		.byte	0
 5932 01f4 00       		.byte	0
 5933 01f5 25       		.uleb128 0x25
 5934 01f6 34       		.uleb128 0x34
 5935 01f7 00       		.byte	0
 5936 01f8 03       		.uleb128 0x3
 5937 01f9 0E       		.uleb128 0xe
 5938 01fa 3A       		.uleb128 0x3a
 5939 01fb 0B       		.uleb128 0xb
 5940 01fc 3B       		.uleb128 0x3b
 5941 01fd 05       		.uleb128 0x5
 5942 01fe 49       		.uleb128 0x49
 5943 01ff 13       		.uleb128 0x13
 5944 0200 02       		.uleb128 0x2
 5945 0201 17       		.uleb128 0x17
 5946 0202 00       		.byte	0
 5947 0203 00       		.byte	0
 5948 0204 26       		.uleb128 0x26
 5949 0205 2E       		.uleb128 0x2e
 5950 0206 01       		.byte	0x1
 5951 0207 3F       		.uleb128 0x3f
 5952 0208 19       		.uleb128 0x19
 5953 0209 03       		.uleb128 0x3
 5954 020a 0E       		.uleb128 0xe
 5955 020b 3A       		.uleb128 0x3a
 5956 020c 0B       		.uleb128 0xb
 5957 020d 3B       		.uleb128 0x3b
 5958 020e 05       		.uleb128 0x5
 5959 020f 27       		.uleb128 0x27
 5960 0210 19       		.uleb128 0x19
 5961 0211 49       		.uleb128 0x49
 5962 0212 13       		.uleb128 0x13
 5963 0213 11       		.uleb128 0x11
 5964 0214 01       		.uleb128 0x1
 5965 0215 12       		.uleb128 0x12
 5966 0216 06       		.uleb128 0x6
 5967 0217 40       		.uleb128 0x40
 5968 0218 18       		.uleb128 0x18
 5969 0219 9742     		.uleb128 0x2117
 5970 021b 19       		.uleb128 0x19
 5971 021c 01       		.uleb128 0x1
 5972 021d 13       		.uleb128 0x13
 5973 021e 00       		.byte	0
 5974 021f 00       		.byte	0
 5975 0220 27       		.uleb128 0x27
 5976 0221 34       		.uleb128 0x34
 5977 0222 00       		.byte	0
 5978 0223 03       		.uleb128 0x3
 5979 0224 08       		.uleb128 0x8
 5980 0225 3A       		.uleb128 0x3a
 5981 0226 0B       		.uleb128 0xb
 5982 0227 3B       		.uleb128 0x3b
 5983 0228 05       		.uleb128 0x5
 5984 0229 49       		.uleb128 0x49
 5985 022a 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 166


 5986 022b 02       		.uleb128 0x2
 5987 022c 17       		.uleb128 0x17
 5988 022d 00       		.byte	0
 5989 022e 00       		.byte	0
 5990 022f 28       		.uleb128 0x28
 5991 0230 1D       		.uleb128 0x1d
 5992 0231 01       		.byte	0x1
 5993 0232 31       		.uleb128 0x31
 5994 0233 13       		.uleb128 0x13
 5995 0234 11       		.uleb128 0x11
 5996 0235 01       		.uleb128 0x1
 5997 0236 12       		.uleb128 0x12
 5998 0237 06       		.uleb128 0x6
 5999 0238 58       		.uleb128 0x58
 6000 0239 0B       		.uleb128 0xb
 6001 023a 59       		.uleb128 0x59
 6002 023b 05       		.uleb128 0x5
 6003 023c 01       		.uleb128 0x1
 6004 023d 13       		.uleb128 0x13
 6005 023e 00       		.byte	0
 6006 023f 00       		.byte	0
 6007 0240 29       		.uleb128 0x29
 6008 0241 05       		.uleb128 0x5
 6009 0242 00       		.byte	0
 6010 0243 31       		.uleb128 0x31
 6011 0244 13       		.uleb128 0x13
 6012 0245 02       		.uleb128 0x2
 6013 0246 17       		.uleb128 0x17
 6014 0247 00       		.byte	0
 6015 0248 00       		.byte	0
 6016 0249 2A       		.uleb128 0x2a
 6017 024a 2E       		.uleb128 0x2e
 6018 024b 01       		.byte	0x1
 6019 024c 3F       		.uleb128 0x3f
 6020 024d 19       		.uleb128 0x19
 6021 024e 03       		.uleb128 0x3
 6022 024f 0E       		.uleb128 0xe
 6023 0250 3A       		.uleb128 0x3a
 6024 0251 0B       		.uleb128 0xb
 6025 0252 3B       		.uleb128 0x3b
 6026 0253 05       		.uleb128 0x5
 6027 0254 27       		.uleb128 0x27
 6028 0255 19       		.uleb128 0x19
 6029 0256 49       		.uleb128 0x49
 6030 0257 13       		.uleb128 0x13
 6031 0258 11       		.uleb128 0x11
 6032 0259 01       		.uleb128 0x1
 6033 025a 12       		.uleb128 0x12
 6034 025b 06       		.uleb128 0x6
 6035 025c 40       		.uleb128 0x40
 6036 025d 18       		.uleb128 0x18
 6037 025e 9642     		.uleb128 0x2116
 6038 0260 19       		.uleb128 0x19
 6039 0261 01       		.uleb128 0x1
 6040 0262 13       		.uleb128 0x13
 6041 0263 00       		.byte	0
 6042 0264 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 167


 6043 0265 2B       		.uleb128 0x2b
 6044 0266 34       		.uleb128 0x34
 6045 0267 00       		.byte	0
 6046 0268 03       		.uleb128 0x3
 6047 0269 0E       		.uleb128 0xe
 6048 026a 3A       		.uleb128 0x3a
 6049 026b 0B       		.uleb128 0xb
 6050 026c 3B       		.uleb128 0x3b
 6051 026d 05       		.uleb128 0x5
 6052 026e 49       		.uleb128 0x49
 6053 026f 13       		.uleb128 0x13
 6054 0270 1C       		.uleb128 0x1c
 6055 0271 0B       		.uleb128 0xb
 6056 0272 00       		.byte	0
 6057 0273 00       		.byte	0
 6058 0274 2C       		.uleb128 0x2c
 6059 0275 898201   		.uleb128 0x4109
 6060 0278 00       		.byte	0
 6061 0279 11       		.uleb128 0x11
 6062 027a 01       		.uleb128 0x1
 6063 027b 31       		.uleb128 0x31
 6064 027c 13       		.uleb128 0x13
 6065 027d 00       		.byte	0
 6066 027e 00       		.byte	0
 6067 027f 2D       		.uleb128 0x2d
 6068 0280 34       		.uleb128 0x34
 6069 0281 00       		.byte	0
 6070 0282 03       		.uleb128 0x3
 6071 0283 0E       		.uleb128 0xe
 6072 0284 3A       		.uleb128 0x3a
 6073 0285 0B       		.uleb128 0xb
 6074 0286 3B       		.uleb128 0x3b
 6075 0287 0B       		.uleb128 0xb
 6076 0288 49       		.uleb128 0x49
 6077 0289 13       		.uleb128 0x13
 6078 028a 3F       		.uleb128 0x3f
 6079 028b 19       		.uleb128 0x19
 6080 028c 3C       		.uleb128 0x3c
 6081 028d 19       		.uleb128 0x19
 6082 028e 00       		.byte	0
 6083 028f 00       		.byte	0
 6084 0290 2E       		.uleb128 0x2e
 6085 0291 34       		.uleb128 0x34
 6086 0292 00       		.byte	0
 6087 0293 03       		.uleb128 0x3
 6088 0294 0E       		.uleb128 0xe
 6089 0295 3A       		.uleb128 0x3a
 6090 0296 0B       		.uleb128 0xb
 6091 0297 3B       		.uleb128 0x3b
 6092 0298 0B       		.uleb128 0xb
 6093 0299 49       		.uleb128 0x49
 6094 029a 13       		.uleb128 0x13
 6095 029b 3F       		.uleb128 0x3f
 6096 029c 19       		.uleb128 0x19
 6097 029d 02       		.uleb128 0x2
 6098 029e 18       		.uleb128 0x18
 6099 029f 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 168


 6100 02a0 00       		.byte	0
 6101 02a1 2F       		.uleb128 0x2f
 6102 02a2 2E       		.uleb128 0x2e
 6103 02a3 00       		.byte	0
 6104 02a4 3F       		.uleb128 0x3f
 6105 02a5 19       		.uleb128 0x19
 6106 02a6 3C       		.uleb128 0x3c
 6107 02a7 19       		.uleb128 0x19
 6108 02a8 6E       		.uleb128 0x6e
 6109 02a9 0E       		.uleb128 0xe
 6110 02aa 03       		.uleb128 0x3
 6111 02ab 0E       		.uleb128 0xe
 6112 02ac 3A       		.uleb128 0x3a
 6113 02ad 0B       		.uleb128 0xb
 6114 02ae 3B       		.uleb128 0x3b
 6115 02af 05       		.uleb128 0x5
 6116 02b0 00       		.byte	0
 6117 02b1 00       		.byte	0
 6118 02b2 00       		.byte	0
 6119              		.section	.debug_loc,"",%progbits
 6120              	.Ldebug_loc0:
 6121              	.LLST0:
 6122 0000 00000000 		.4byte	.LVL0
 6123 0004 14000000 		.4byte	.LVL2
 6124 0008 0100     		.2byte	0x1
 6125 000a 50       		.byte	0x50
 6126 000b 14000000 		.4byte	.LVL2
 6127 000f F2010000 		.4byte	.LVL38
 6128 0013 0100     		.2byte	0x1
 6129 0015 57       		.byte	0x57
 6130 0016 F2010000 		.4byte	.LVL38
 6131 001a 34020000 		.4byte	.LFE105
 6132 001e 0400     		.2byte	0x4
 6133 0020 F3       		.byte	0xf3
 6134 0021 01       		.uleb128 0x1
 6135 0022 50       		.byte	0x50
 6136 0023 9F       		.byte	0x9f
 6137 0024 00000000 		.4byte	0
 6138 0028 00000000 		.4byte	0
 6139              	.LLST1:
 6140 002c 00000000 		.4byte	.LVL0
 6141 0030 12000000 		.4byte	.LVL1
 6142 0034 0100     		.2byte	0x1
 6143 0036 51       		.byte	0x51
 6144 0037 12000000 		.4byte	.LVL1
 6145 003b F2010000 		.4byte	.LVL37
 6146 003f 0100     		.2byte	0x1
 6147 0041 56       		.byte	0x56
 6148 0042 F2010000 		.4byte	.LVL37
 6149 0046 34020000 		.4byte	.LFE105
 6150 004a 0400     		.2byte	0x4
 6151 004c F3       		.byte	0xf3
 6152 004d 01       		.uleb128 0x1
 6153 004e 51       		.byte	0x51
 6154 004f 9F       		.byte	0x9f
 6155 0050 00000000 		.4byte	0
 6156 0054 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 169


 6157              	.LLST2:
 6158 0058 E8010000 		.4byte	.LVL34
 6159 005c EC010000 		.4byte	.LVL35
 6160 0060 0200     		.2byte	0x2
 6161 0062 30       		.byte	0x30
 6162 0063 9F       		.byte	0x9f
 6163 0064 F2010000 		.4byte	.LVL36
 6164 0068 34020000 		.4byte	.LFE105
 6165 006c 0100     		.2byte	0x1
 6166 006e 50       		.byte	0x50
 6167 006f 00000000 		.4byte	0
 6168 0073 00000000 		.4byte	0
 6169              	.LLST3:
 6170 0077 EE000000 		.4byte	.LVL16
 6171 007b F2000000 		.4byte	.LVL17
 6172 007f 0200     		.2byte	0x2
 6173 0081 30       		.byte	0x30
 6174 0082 9F       		.byte	0x9f
 6175 0083 F2000000 		.4byte	.LVL17
 6176 0087 58010000 		.4byte	.LVL30
 6177 008b 0100     		.2byte	0x1
 6178 008d 54       		.byte	0x54
 6179 008e 5A010000 		.4byte	.LVL31
 6180 0092 EC010000 		.4byte	.LVL35
 6181 0096 0100     		.2byte	0x1
 6182 0098 54       		.byte	0x54
 6183 0099 00000000 		.4byte	0
 6184 009d 00000000 		.4byte	0
 6185              	.LLST4:
 6186 00a1 1A010000 		.4byte	.LVL19
 6187 00a5 5A010000 		.4byte	.LVL31
 6188 00a9 0400     		.2byte	0x4
 6189 00ab 0A       		.byte	0xa
 6190 00ac 0010     		.2byte	0x1000
 6191 00ae 9F       		.byte	0x9f
 6192 00af 00000000 		.4byte	0
 6193 00b3 00000000 		.4byte	0
 6194              	.LLST5:
 6195 00b7 E6000000 		.4byte	.LVL14
 6196 00bb EA000000 		.4byte	.LVL15
 6197 00bf 0700     		.2byte	0x7
 6198 00c1 72       		.byte	0x72
 6199 00c2 00       		.sleb128 0
 6200 00c3 0A       		.byte	0xa
 6201 00c4 000E     		.2byte	0xe00
 6202 00c6 29       		.byte	0x29
 6203 00c7 9F       		.byte	0x9f
 6204 00c8 EA000000 		.4byte	.LVL15
 6205 00cc EC010000 		.4byte	.LVL35
 6206 00d0 0700     		.2byte	0x7
 6207 00d2 78       		.byte	0x78
 6208 00d3 00       		.sleb128 0
 6209 00d4 0A       		.byte	0xa
 6210 00d5 000E     		.2byte	0xe00
 6211 00d7 29       		.byte	0x29
 6212 00d8 9F       		.byte	0x9f
 6213 00d9 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 170


 6214 00dd 00000000 		.4byte	0
 6215              	.LLST6:
 6216 00e1 EE000000 		.4byte	.LVL16
 6217 00e5 F2000000 		.4byte	.LVL17
 6218 00e9 0500     		.2byte	0x5
 6219 00eb 72       		.byte	0x72
 6220 00ec 00       		.sleb128 0
 6221 00ed 30       		.byte	0x30
 6222 00ee 2E       		.byte	0x2e
 6223 00ef 9F       		.byte	0x9f
 6224 00f0 F2000000 		.4byte	.LVL17
 6225 00f4 30010000 		.4byte	.LVL22
 6226 00f8 0500     		.2byte	0x5
 6227 00fa 79       		.byte	0x79
 6228 00fb 00       		.sleb128 0
 6229 00fc 30       		.byte	0x30
 6230 00fd 2E       		.byte	0x2e
 6231 00fe 9F       		.byte	0x9f
 6232 00ff 30010000 		.4byte	.LVL22
 6233 0103 32010000 		.4byte	.LVL23
 6234 0107 0500     		.2byte	0x5
 6235 0109 73       		.byte	0x73
 6236 010a 00       		.sleb128 0
 6237 010b 30       		.byte	0x30
 6238 010c 2E       		.byte	0x2e
 6239 010d 9F       		.byte	0x9f
 6240 010e 32010000 		.4byte	.LVL23
 6241 0112 EC010000 		.4byte	.LVL35
 6242 0116 0500     		.2byte	0x5
 6243 0118 79       		.byte	0x79
 6244 0119 00       		.sleb128 0
 6245 011a 30       		.byte	0x30
 6246 011b 2E       		.byte	0x2e
 6247 011c 9F       		.byte	0x9f
 6248 011d 00000000 		.4byte	0
 6249 0121 00000000 		.4byte	0
 6250              	.LLST7:
 6251 0125 1E010000 		.4byte	.LVL20
 6252 0129 24010000 		.4byte	.LVL21
 6253 012d 0800     		.2byte	0x8
 6254 012f 72       		.byte	0x72
 6255 0130 00       		.sleb128 0
 6256 0131 73       		.byte	0x73
 6257 0132 00       		.sleb128 0
 6258 0133 1A       		.byte	0x1a
 6259 0134 30       		.byte	0x30
 6260 0135 29       		.byte	0x29
 6261 0136 9F       		.byte	0x9f
 6262 0137 24010000 		.4byte	.LVL21
 6263 013b 36010000 		.4byte	.LVL24
 6264 013f 0B00     		.2byte	0xb
 6265 0141 72       		.byte	0x72
 6266 0142 00       		.sleb128 0
 6267 0143 0C       		.byte	0xc
 6268 0144 00010001 		.4byte	0x1000100
 6269 0148 1A       		.byte	0x1a
 6270 0149 30       		.byte	0x30
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 171


 6271 014a 29       		.byte	0x29
 6272 014b 9F       		.byte	0x9f
 6273 014c 36010000 		.4byte	.LVL24
 6274 0150 38010000 		.4byte	.LVL25
 6275 0154 1300     		.2byte	0x13
 6276 0156 74       		.byte	0x74
 6277 0157 06       		.sleb128 6
 6278 0158 32       		.byte	0x32
 6279 0159 24       		.byte	0x24
 6280 015a 76       		.byte	0x76
 6281 015b 00       		.sleb128 0
 6282 015c 22       		.byte	0x22
 6283 015d 23       		.byte	0x23
 6284 015e 04       		.uleb128 0x4
 6285 015f 06       		.byte	0x6
 6286 0160 0C       		.byte	0xc
 6287 0161 00010001 		.4byte	0x1000100
 6288 0165 1A       		.byte	0x1a
 6289 0166 30       		.byte	0x30
 6290 0167 29       		.byte	0x29
 6291 0168 9F       		.byte	0x9f
 6292 0169 3A010000 		.4byte	.LVL26
 6293 016d 40010000 		.4byte	.LVL27
 6294 0171 0B00     		.2byte	0xb
 6295 0173 72       		.byte	0x72
 6296 0174 00       		.sleb128 0
 6297 0175 0C       		.byte	0xc
 6298 0176 00010001 		.4byte	0x1000100
 6299 017a 1A       		.byte	0x1a
 6300 017b 30       		.byte	0x30
 6301 017c 29       		.byte	0x29
 6302 017d 9F       		.byte	0x9f
 6303 017e 40010000 		.4byte	.LVL27
 6304 0182 42010000 		.4byte	.LVL28
 6305 0186 1300     		.2byte	0x13
 6306 0188 74       		.byte	0x74
 6307 0189 06       		.sleb128 6
 6308 018a 32       		.byte	0x32
 6309 018b 24       		.byte	0x24
 6310 018c 76       		.byte	0x76
 6311 018d 00       		.sleb128 0
 6312 018e 22       		.byte	0x22
 6313 018f 23       		.byte	0x23
 6314 0190 04       		.uleb128 0x4
 6315 0191 06       		.byte	0x6
 6316 0192 0C       		.byte	0xc
 6317 0193 00010001 		.4byte	0x1000100
 6318 0197 1A       		.byte	0x1a
 6319 0198 30       		.byte	0x30
 6320 0199 29       		.byte	0x29
 6321 019a 9F       		.byte	0x9f
 6322 019b 00000000 		.4byte	0
 6323 019f 00000000 		.4byte	0
 6324              	.LLST8:
 6325 01a3 00000000 		.4byte	.LVL39
 6326 01a7 0E000000 		.4byte	.LVL41
 6327 01ab 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 172


 6328 01ad 50       		.byte	0x50
 6329 01ae 0E000000 		.4byte	.LVL41
 6330 01b2 6E000000 		.4byte	.LVL49
 6331 01b6 0100     		.2byte	0x1
 6332 01b8 55       		.byte	0x55
 6333 01b9 6E000000 		.4byte	.LVL49
 6334 01bd 80000000 		.4byte	.LFE106
 6335 01c1 0400     		.2byte	0x4
 6336 01c3 F3       		.byte	0xf3
 6337 01c4 01       		.uleb128 0x1
 6338 01c5 50       		.byte	0x50
 6339 01c6 9F       		.byte	0x9f
 6340 01c7 00000000 		.4byte	0
 6341 01cb 00000000 		.4byte	0
 6342              	.LLST9:
 6343 01cf 00000000 		.4byte	.LVL39
 6344 01d3 0C000000 		.4byte	.LVL40
 6345 01d7 0100     		.2byte	0x1
 6346 01d9 51       		.byte	0x51
 6347 01da 0C000000 		.4byte	.LVL40
 6348 01de 80000000 		.4byte	.LFE106
 6349 01e2 0400     		.2byte	0x4
 6350 01e4 F3       		.byte	0xf3
 6351 01e5 01       		.uleb128 0x1
 6352 01e6 51       		.byte	0x51
 6353 01e7 9F       		.byte	0x9f
 6354 01e8 00000000 		.4byte	0
 6355 01ec 00000000 		.4byte	0
 6356              	.LLST10:
 6357 01f0 28000000 		.4byte	.LVL43
 6358 01f4 2A000000 		.4byte	.LVL44
 6359 01f8 0200     		.2byte	0x2
 6360 01fa 30       		.byte	0x30
 6361 01fb 9F       		.byte	0x9f
 6362 01fc 2A000000 		.4byte	.LVL44
 6363 0200 36000000 		.4byte	.LVL45
 6364 0204 0100     		.2byte	0x1
 6365 0206 53       		.byte	0x53
 6366 0207 38000000 		.4byte	.LVL46
 6367 020b 3E000000 		.4byte	.LVL47
 6368 020f 0100     		.2byte	0x1
 6369 0211 53       		.byte	0x53
 6370 0212 00000000 		.4byte	0
 6371 0216 00000000 		.4byte	0
 6372              	.LLST11:
 6373 021a 00000000 		.4byte	.LVL50
 6374 021e 1E000000 		.4byte	.LVL51
 6375 0222 0100     		.2byte	0x1
 6376 0224 50       		.byte	0x50
 6377 0225 1E000000 		.4byte	.LVL51
 6378 0229 24000000 		.4byte	.LFE107
 6379 022d 0400     		.2byte	0x4
 6380 022f F3       		.byte	0xf3
 6381 0230 01       		.uleb128 0x1
 6382 0231 50       		.byte	0x50
 6383 0232 9F       		.byte	0x9f
 6384 0233 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 173


 6385 0237 00000000 		.4byte	0
 6386              	.LLST12:
 6387 023b 00000000 		.4byte	.LVL53
 6388 023f 10000000 		.4byte	.LVL55
 6389 0243 0100     		.2byte	0x1
 6390 0245 50       		.byte	0x50
 6391 0246 10000000 		.4byte	.LVL55
 6392 024a 28000000 		.4byte	.LVL57
 6393 024e 0100     		.2byte	0x1
 6394 0250 55       		.byte	0x55
 6395 0251 28000000 		.4byte	.LVL57
 6396 0255 30000000 		.4byte	.LFE110
 6397 0259 0400     		.2byte	0x4
 6398 025b F3       		.byte	0xf3
 6399 025c 01       		.uleb128 0x1
 6400 025d 50       		.byte	0x50
 6401 025e 9F       		.byte	0x9f
 6402 025f 00000000 		.4byte	0
 6403 0263 00000000 		.4byte	0
 6404              	.LLST13:
 6405 0267 00000000 		.4byte	.LVL53
 6406 026b 0C000000 		.4byte	.LVL54
 6407 026f 0100     		.2byte	0x1
 6408 0271 51       		.byte	0x51
 6409 0272 0C000000 		.4byte	.LVL54
 6410 0276 30000000 		.4byte	.LFE110
 6411 027a 0400     		.2byte	0x4
 6412 027c F3       		.byte	0xf3
 6413 027d 01       		.uleb128 0x1
 6414 027e 51       		.byte	0x51
 6415 027f 9F       		.byte	0x9f
 6416 0280 00000000 		.4byte	0
 6417 0284 00000000 		.4byte	0
 6418              	.LLST14:
 6419 0288 00000000 		.4byte	.LVL58
 6420 028c 1D000000 		.4byte	.LVL59-1
 6421 0290 0100     		.2byte	0x1
 6422 0292 50       		.byte	0x50
 6423 0293 1D000000 		.4byte	.LVL59-1
 6424 0297 32000000 		.4byte	.LVL61
 6425 029b 0100     		.2byte	0x1
 6426 029d 54       		.byte	0x54
 6427 029e 32000000 		.4byte	.LVL61
 6428 02a2 38000000 		.4byte	.LFE109
 6429 02a6 0400     		.2byte	0x4
 6430 02a8 F3       		.byte	0xf3
 6431 02a9 01       		.uleb128 0x1
 6432 02aa 50       		.byte	0x50
 6433 02ab 9F       		.byte	0x9f
 6434 02ac 00000000 		.4byte	0
 6435 02b0 00000000 		.4byte	0
 6436              	.LLST15:
 6437 02b4 00000000 		.4byte	.LVL63
 6438 02b8 25000000 		.4byte	.LVL66-1
 6439 02bc 0100     		.2byte	0x1
 6440 02be 50       		.byte	0x50
 6441 02bf 25000000 		.4byte	.LVL66-1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 174


 6442 02c3 3E000000 		.4byte	.LVL67
 6443 02c7 0100     		.2byte	0x1
 6444 02c9 54       		.byte	0x54
 6445 02ca 3E000000 		.4byte	.LVL67
 6446 02ce 48000000 		.4byte	.LFE108
 6447 02d2 0400     		.2byte	0x4
 6448 02d4 F3       		.byte	0xf3
 6449 02d5 01       		.uleb128 0x1
 6450 02d6 50       		.byte	0x50
 6451 02d7 9F       		.byte	0x9f
 6452 02d8 00000000 		.4byte	0
 6453 02dc 00000000 		.4byte	0
 6454              	.LLST16:
 6455 02e0 06000000 		.4byte	.LVL64
 6456 02e4 12000000 		.4byte	.LVL65
 6457 02e8 0100     		.2byte	0x1
 6458 02ea 56       		.byte	0x56
 6459 02eb 12000000 		.4byte	.LVL65
 6460 02ef 3E000000 		.4byte	.LVL68
 6461 02f3 0100     		.2byte	0x1
 6462 02f5 55       		.byte	0x55
 6463 02f6 3E000000 		.4byte	.LVL68
 6464 02fa 3E000000 		.4byte	.LVL69
 6465 02fe 0900     		.2byte	0x9
 6466 0300 76       		.byte	0x76
 6467 0301 00       		.sleb128 0
 6468 0302 11       		.byte	0x11
 6469 0303 FFFFFF7E 		.sleb128 -2097153
 6470 0307 1A       		.byte	0x1a
 6471 0308 9F       		.byte	0x9f
 6472 0309 3E000000 		.4byte	.LVL69
 6473 030d 48000000 		.4byte	.LFE108
 6474 0311 0300     		.2byte	0x3
 6475 0313 F3       		.byte	0xf3
 6476 0314 01       		.uleb128 0x1
 6477 0315 50       		.byte	0x50
 6478 0316 00000000 		.4byte	0
 6479 031a 00000000 		.4byte	0
 6480              	.LLST17:
 6481 031e 00000000 		.4byte	.LVL70
 6482 0322 1E000000 		.4byte	.LVL72
 6483 0326 0100     		.2byte	0x1
 6484 0328 50       		.byte	0x50
 6485 0329 1E000000 		.4byte	.LVL72
 6486 032d 2C000000 		.4byte	.LVL77
 6487 0331 0100     		.2byte	0x1
 6488 0333 55       		.byte	0x55
 6489 0334 2C000000 		.4byte	.LVL77
 6490 0338 38000000 		.4byte	.LFE112
 6491 033c 0400     		.2byte	0x4
 6492 033e F3       		.byte	0xf3
 6493 033f 01       		.uleb128 0x1
 6494 0340 50       		.byte	0x50
 6495 0341 9F       		.byte	0x9f
 6496 0342 00000000 		.4byte	0
 6497 0346 00000000 		.4byte	0
 6498              	.LLST18:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 175


 6499 034a 00000000 		.4byte	.LVL70
 6500 034e 1A000000 		.4byte	.LVL71
 6501 0352 0100     		.2byte	0x1
 6502 0354 51       		.byte	0x51
 6503 0355 1A000000 		.4byte	.LVL71
 6504 0359 2C000000 		.4byte	.LVL76
 6505 035d 0100     		.2byte	0x1
 6506 035f 54       		.byte	0x54
 6507 0360 2C000000 		.4byte	.LVL76
 6508 0364 38000000 		.4byte	.LFE112
 6509 0368 0400     		.2byte	0x4
 6510 036a F3       		.byte	0xf3
 6511 036b 01       		.uleb128 0x1
 6512 036c 51       		.byte	0x51
 6513 036d 9F       		.byte	0x9f
 6514 036e 00000000 		.4byte	0
 6515 0372 00000000 		.4byte	0
 6516              	.LLST19:
 6517 0376 28000000 		.4byte	.LVL74
 6518 037a 2A000000 		.4byte	.LVL75
 6519 037e 0100     		.2byte	0x1
 6520 0380 51       		.byte	0x51
 6521 0381 00000000 		.4byte	0
 6522 0385 00000000 		.4byte	0
 6523              	.LLST20:
 6524 0389 00000000 		.4byte	.LVL78
 6525 038d 10000000 		.4byte	.LVL80
 6526 0391 0100     		.2byte	0x1
 6527 0393 50       		.byte	0x50
 6528 0394 10000000 		.4byte	.LVL80
 6529 0398 5C000000 		.4byte	.LVL96
 6530 039c 0100     		.2byte	0x1
 6531 039e 54       		.byte	0x54
 6532 039f 5C000000 		.4byte	.LVL96
 6533 03a3 70000000 		.4byte	.LFE113
 6534 03a7 0400     		.2byte	0x4
 6535 03a9 F3       		.byte	0xf3
 6536 03aa 01       		.uleb128 0x1
 6537 03ab 50       		.byte	0x50
 6538 03ac 9F       		.byte	0x9f
 6539 03ad 00000000 		.4byte	0
 6540 03b1 00000000 		.4byte	0
 6541              	.LLST21:
 6542 03b5 00000000 		.4byte	.LVL78
 6543 03b9 0C000000 		.4byte	.LVL79
 6544 03bd 0100     		.2byte	0x1
 6545 03bf 51       		.byte	0x51
 6546 03c0 0C000000 		.4byte	.LVL79
 6547 03c4 70000000 		.4byte	.LFE113
 6548 03c8 0400     		.2byte	0x4
 6549 03ca F3       		.byte	0xf3
 6550 03cb 01       		.uleb128 0x1
 6551 03cc 51       		.byte	0x51
 6552 03cd 9F       		.byte	0x9f
 6553 03ce 00000000 		.4byte	0
 6554 03d2 00000000 		.4byte	0
 6555              	.LLST22:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 176


 6556 03d6 44000000 		.4byte	.LVL91
 6557 03da 52000000 		.4byte	.LVL94
 6558 03de 0200     		.2byte	0x2
 6559 03e0 30       		.byte	0x30
 6560 03e1 9F       		.byte	0x9f
 6561 03e2 5C000000 		.4byte	.LVL95
 6562 03e6 70000000 		.4byte	.LFE113
 6563 03ea 0100     		.2byte	0x1
 6564 03ec 50       		.byte	0x50
 6565 03ed 00000000 		.4byte	0
 6566 03f1 00000000 		.4byte	0
 6567              	.LLST23:
 6568 03f5 1E000000 		.4byte	.LVL82
 6569 03f9 26000000 		.4byte	.LVL84
 6570 03fd 0100     		.2byte	0x1
 6571 03ff 53       		.byte	0x53
 6572 0400 2E000000 		.4byte	.LVL85
 6573 0404 46000000 		.4byte	.LVL92
 6574 0408 0100     		.2byte	0x1
 6575 040a 53       		.byte	0x53
 6576 040b 52000000 		.4byte	.LVL94
 6577 040f 5C000000 		.4byte	.LVL95
 6578 0413 0100     		.2byte	0x1
 6579 0415 53       		.byte	0x53
 6580 0416 00000000 		.4byte	0
 6581 041a 00000000 		.4byte	0
 6582              	.LLST24:
 6583 041e 1E000000 		.4byte	.LVL82
 6584 0422 24000000 		.4byte	.LVL83
 6585 0426 0600     		.2byte	0x6
 6586 0428 0C       		.byte	0xc
 6587 0429 55555501 		.4byte	0x1555555
 6588 042d 9F       		.byte	0x9f
 6589 042e 24000000 		.4byte	.LVL83
 6590 0432 32000000 		.4byte	.LVL87
 6591 0436 0100     		.2byte	0x1
 6592 0438 52       		.byte	0x52
 6593 0439 32000000 		.4byte	.LVL87
 6594 043d 34000000 		.4byte	.LVL88
 6595 0441 0600     		.2byte	0x6
 6596 0443 0C       		.byte	0xc
 6597 0444 55555501 		.4byte	0x1555555
 6598 0448 9F       		.byte	0x9f
 6599 0449 34000000 		.4byte	.LVL88
 6600 044d 3E000000 		.4byte	.LVL89
 6601 0451 0100     		.2byte	0x1
 6602 0453 52       		.byte	0x52
 6603 0454 3E000000 		.4byte	.LVL89
 6604 0458 40000000 		.4byte	.LVL90
 6605 045c 0600     		.2byte	0x6
 6606 045e 0C       		.byte	0xc
 6607 045f 55555501 		.4byte	0x1555555
 6608 0463 9F       		.byte	0x9f
 6609 0464 40000000 		.4byte	.LVL90
 6610 0468 4A000000 		.4byte	.LVL93
 6611 046c 0100     		.2byte	0x1
 6612 046e 52       		.byte	0x52
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 177


 6613 046f 52000000 		.4byte	.LVL94
 6614 0473 5C000000 		.4byte	.LVL95
 6615 0477 0100     		.2byte	0x1
 6616 0479 52       		.byte	0x52
 6617 047a 00000000 		.4byte	0
 6618 047e 00000000 		.4byte	0
 6619              	.LLST25:
 6620 0482 00000000 		.4byte	.LVL97
 6621 0486 10000000 		.4byte	.LVL99
 6622 048a 0100     		.2byte	0x1
 6623 048c 50       		.byte	0x50
 6624 048d 10000000 		.4byte	.LVL99
 6625 0491 2E000000 		.4byte	.LVL106
 6626 0495 0100     		.2byte	0x1
 6627 0497 55       		.byte	0x55
 6628 0498 2E000000 		.4byte	.LVL106
 6629 049c 38000000 		.4byte	.LFE115
 6630 04a0 0400     		.2byte	0x4
 6631 04a2 F3       		.byte	0xf3
 6632 04a3 01       		.uleb128 0x1
 6633 04a4 50       		.byte	0x50
 6634 04a5 9F       		.byte	0x9f
 6635 04a6 00000000 		.4byte	0
 6636 04aa 00000000 		.4byte	0
 6637              	.LLST26:
 6638 04ae 00000000 		.4byte	.LVL97
 6639 04b2 0C000000 		.4byte	.LVL98
 6640 04b6 0100     		.2byte	0x1
 6641 04b8 51       		.byte	0x51
 6642 04b9 0C000000 		.4byte	.LVL98
 6643 04bd 1A000000 		.4byte	.LVL101
 6644 04c1 0100     		.2byte	0x1
 6645 04c3 54       		.byte	0x54
 6646 04c4 1A000000 		.4byte	.LVL101
 6647 04c8 1C000000 		.4byte	.LVL102
 6648 04cc 0300     		.2byte	0x3
 6649 04ce 74       		.byte	0x74
 6650 04cf 60       		.sleb128 -32
 6651 04d0 9F       		.byte	0x9f
 6652 04d1 1C000000 		.4byte	.LVL102
 6653 04d5 28000000 		.4byte	.LVL103
 6654 04d9 0400     		.2byte	0x4
 6655 04db F3       		.byte	0xf3
 6656 04dc 01       		.uleb128 0x1
 6657 04dd 51       		.byte	0x51
 6658 04de 9F       		.byte	0x9f
 6659 04df 28000000 		.4byte	.LVL103
 6660 04e3 2C000000 		.4byte	.LVL104
 6661 04e7 0100     		.2byte	0x1
 6662 04e9 54       		.byte	0x54
 6663 04ea 2C000000 		.4byte	.LVL104
 6664 04ee 38000000 		.4byte	.LFE115
 6665 04f2 0400     		.2byte	0x4
 6666 04f4 F3       		.byte	0xf3
 6667 04f5 01       		.uleb128 0x1
 6668 04f6 51       		.byte	0x51
 6669 04f7 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 178


 6670 04f8 00000000 		.4byte	0
 6671 04fc 00000000 		.4byte	0
 6672              	.LLST27:
 6673 0500 14000000 		.4byte	.LVL100
 6674 0504 2E000000 		.4byte	.LVL105
 6675 0508 0200     		.2byte	0x2
 6676 050a 30       		.byte	0x30
 6677 050b 9F       		.byte	0x9f
 6678 050c 2E000000 		.4byte	.LVL105
 6679 0510 38000000 		.4byte	.LFE115
 6680 0514 0100     		.2byte	0x1
 6681 0516 50       		.byte	0x50
 6682 0517 00000000 		.4byte	0
 6683 051b 00000000 		.4byte	0
 6684              	.LLST28:
 6685 051f 00000000 		.4byte	.LVL107
 6686 0523 0E000000 		.4byte	.LVL109
 6687 0527 0100     		.2byte	0x1
 6688 0529 50       		.byte	0x50
 6689 052a 0E000000 		.4byte	.LVL109
 6690 052e 46000000 		.4byte	.LVL116
 6691 0532 0100     		.2byte	0x1
 6692 0534 55       		.byte	0x55
 6693 0535 46000000 		.4byte	.LVL116
 6694 0539 50000000 		.4byte	.LFE114
 6695 053d 0400     		.2byte	0x4
 6696 053f F3       		.byte	0xf3
 6697 0540 01       		.uleb128 0x1
 6698 0541 50       		.byte	0x50
 6699 0542 9F       		.byte	0x9f
 6700 0543 00000000 		.4byte	0
 6701 0547 00000000 		.4byte	0
 6702              	.LLST29:
 6703 054b 00000000 		.4byte	.LVL107
 6704 054f 0C000000 		.4byte	.LVL108
 6705 0553 0100     		.2byte	0x1
 6706 0555 51       		.byte	0x51
 6707 0556 0C000000 		.4byte	.LVL108
 6708 055a 46000000 		.4byte	.LVL115
 6709 055e 0100     		.2byte	0x1
 6710 0560 54       		.byte	0x54
 6711 0561 46000000 		.4byte	.LVL115
 6712 0565 50000000 		.4byte	.LFE114
 6713 0569 0400     		.2byte	0x4
 6714 056b F3       		.byte	0xf3
 6715 056c 01       		.uleb128 0x1
 6716 056d 51       		.byte	0x51
 6717 056e 9F       		.byte	0x9f
 6718 056f 00000000 		.4byte	0
 6719 0573 00000000 		.4byte	0
 6720              	.LLST30:
 6721 0577 12000000 		.4byte	.LVL110
 6722 057b 46000000 		.4byte	.LVL114
 6723 057f 0200     		.2byte	0x2
 6724 0581 30       		.byte	0x30
 6725 0582 9F       		.byte	0x9f
 6726 0583 46000000 		.4byte	.LVL114
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 179


 6727 0587 50000000 		.4byte	.LFE114
 6728 058b 0100     		.2byte	0x1
 6729 058d 50       		.byte	0x50
 6730 058e 00000000 		.4byte	0
 6731 0592 00000000 		.4byte	0
 6732              	.LLST31:
 6733 0596 16000000 		.4byte	.LVL111
 6734 059a 24000000 		.4byte	.LVL113
 6735 059e 0100     		.2byte	0x1
 6736 05a0 54       		.byte	0x54
 6737 05a1 00000000 		.4byte	0
 6738 05a5 00000000 		.4byte	0
 6739              	.LLST32:
 6740 05a9 16000000 		.4byte	.LVL111
 6741 05ad 24000000 		.4byte	.LVL113
 6742 05b1 0100     		.2byte	0x1
 6743 05b3 55       		.byte	0x55
 6744 05b4 00000000 		.4byte	0
 6745 05b8 00000000 		.4byte	0
 6746              	.LLST33:
 6747 05bc 00000000 		.4byte	.LVL117
 6748 05c0 0E000000 		.4byte	.LVL119
 6749 05c4 0100     		.2byte	0x1
 6750 05c6 50       		.byte	0x50
 6751 05c7 0E000000 		.4byte	.LVL119
 6752 05cb 26000000 		.4byte	.LVL127
 6753 05cf 0100     		.2byte	0x1
 6754 05d1 55       		.byte	0x55
 6755 05d2 26000000 		.4byte	.LVL127
 6756 05d6 30000000 		.4byte	.LFE116
 6757 05da 0400     		.2byte	0x4
 6758 05dc F3       		.byte	0xf3
 6759 05dd 01       		.uleb128 0x1
 6760 05de 50       		.byte	0x50
 6761 05df 9F       		.byte	0x9f
 6762 05e0 00000000 		.4byte	0
 6763 05e4 00000000 		.4byte	0
 6764              	.LLST34:
 6765 05e8 00000000 		.4byte	.LVL117
 6766 05ec 0C000000 		.4byte	.LVL118
 6767 05f0 0100     		.2byte	0x1
 6768 05f2 51       		.byte	0x51
 6769 05f3 0C000000 		.4byte	.LVL118
 6770 05f7 18000000 		.4byte	.LVL121
 6771 05fb 0100     		.2byte	0x1
 6772 05fd 54       		.byte	0x54
 6773 05fe 18000000 		.4byte	.LVL121
 6774 0602 1A000000 		.4byte	.LVL122
 6775 0606 0400     		.2byte	0x4
 6776 0608 74       		.byte	0x74
 6777 0609 A07F     		.sleb128 -96
 6778 060b 9F       		.byte	0x9f
 6779 060c 1A000000 		.4byte	.LVL122
 6780 0610 22000000 		.4byte	.LVL124
 6781 0614 0400     		.2byte	0x4
 6782 0616 F3       		.byte	0xf3
 6783 0617 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 180


 6784 0618 51       		.byte	0x51
 6785 0619 9F       		.byte	0x9f
 6786 061a 22000000 		.4byte	.LVL124
 6787 061e 24000000 		.4byte	.LVL125
 6788 0622 0100     		.2byte	0x1
 6789 0624 54       		.byte	0x54
 6790 0625 24000000 		.4byte	.LVL125
 6791 0629 30000000 		.4byte	.LFE116
 6792 062d 0400     		.2byte	0x4
 6793 062f F3       		.byte	0xf3
 6794 0630 01       		.uleb128 0x1
 6795 0631 51       		.byte	0x51
 6796 0632 9F       		.byte	0x9f
 6797 0633 00000000 		.4byte	0
 6798 0637 00000000 		.4byte	0
 6799              	.LLST35:
 6800 063b 12000000 		.4byte	.LVL120
 6801 063f 20000000 		.4byte	.LVL123
 6802 0643 0200     		.2byte	0x2
 6803 0645 30       		.byte	0x30
 6804 0646 9F       		.byte	0x9f
 6805 0647 20000000 		.4byte	.LVL123
 6806 064b 22000000 		.4byte	.LVL124
 6807 064f 0100     		.2byte	0x1
 6808 0651 50       		.byte	0x50
 6809 0652 22000000 		.4byte	.LVL124
 6810 0656 24000000 		.4byte	.LVL125
 6811 065a 0200     		.2byte	0x2
 6812 065c 30       		.byte	0x30
 6813 065d 9F       		.byte	0x9f
 6814 065e 24000000 		.4byte	.LVL125
 6815 0662 26000000 		.4byte	.LVL126
 6816 0666 0100     		.2byte	0x1
 6817 0668 50       		.byte	0x50
 6818 0669 00000000 		.4byte	0
 6819 066d 00000000 		.4byte	0
 6820              	.LLST36:
 6821 0671 00000000 		.4byte	.LVL128
 6822 0675 10000000 		.4byte	.LVL130
 6823 0679 0100     		.2byte	0x1
 6824 067b 50       		.byte	0x50
 6825 067c 10000000 		.4byte	.LVL130
 6826 0680 3A000000 		.4byte	.LVL141
 6827 0684 0100     		.2byte	0x1
 6828 0686 55       		.byte	0x55
 6829 0687 3A000000 		.4byte	.LVL141
 6830 068b 40000000 		.4byte	.LFE117
 6831 068f 0400     		.2byte	0x4
 6832 0691 F3       		.byte	0xf3
 6833 0692 01       		.uleb128 0x1
 6834 0693 50       		.byte	0x50
 6835 0694 9F       		.byte	0x9f
 6836 0695 00000000 		.4byte	0
 6837 0699 00000000 		.4byte	0
 6838              	.LLST37:
 6839 069d 00000000 		.4byte	.LVL128
 6840 06a1 0C000000 		.4byte	.LVL129
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 181


 6841 06a5 0100     		.2byte	0x1
 6842 06a7 51       		.byte	0x51
 6843 06a8 0C000000 		.4byte	.LVL129
 6844 06ac 3A000000 		.4byte	.LVL142
 6845 06b0 0100     		.2byte	0x1
 6846 06b2 56       		.byte	0x56
 6847 06b3 3A000000 		.4byte	.LVL142
 6848 06b7 40000000 		.4byte	.LFE117
 6849 06bb 0400     		.2byte	0x4
 6850 06bd F3       		.byte	0xf3
 6851 06be 01       		.uleb128 0x1
 6852 06bf 51       		.byte	0x51
 6853 06c0 9F       		.byte	0x9f
 6854 06c1 00000000 		.4byte	0
 6855 06c5 00000000 		.4byte	0
 6856              	.LLST38:
 6857 06c9 14000000 		.4byte	.LVL131
 6858 06cd 24000000 		.4byte	.LVL132
 6859 06d1 0200     		.2byte	0x2
 6860 06d3 30       		.byte	0x30
 6861 06d4 9F       		.byte	0x9f
 6862 06d5 24000000 		.4byte	.LVL132
 6863 06d9 26000000 		.4byte	.LVL133
 6864 06dd 0100     		.2byte	0x1
 6865 06df 54       		.byte	0x54
 6866 06e0 26000000 		.4byte	.LVL133
 6867 06e4 28000000 		.4byte	.LVL134
 6868 06e8 0200     		.2byte	0x2
 6869 06ea 30       		.byte	0x30
 6870 06eb 9F       		.byte	0x9f
 6871 06ec 28000000 		.4byte	.LVL134
 6872 06f0 3A000000 		.4byte	.LVL140
 6873 06f4 0100     		.2byte	0x1
 6874 06f6 54       		.byte	0x54
 6875 06f7 00000000 		.4byte	0
 6876 06fb 00000000 		.4byte	0
 6877              	.LLST39:
 6878 06ff 34000000 		.4byte	.LVL136
 6879 0703 38000000 		.4byte	.LVL138
 6880 0707 0100     		.2byte	0x1
 6881 0709 54       		.byte	0x54
 6882 070a 00000000 		.4byte	0
 6883 070e 00000000 		.4byte	0
 6884              	.LLST40:
 6885 0712 36000000 		.4byte	.LVL137
 6886 0716 38000000 		.4byte	.LVL138
 6887 071a 0100     		.2byte	0x1
 6888 071c 50       		.byte	0x50
 6889 071d 3A000000 		.4byte	.LVL139
 6890 0721 40000000 		.4byte	.LFE117
 6891 0725 0100     		.2byte	0x1
 6892 0727 50       		.byte	0x50
 6893 0728 00000000 		.4byte	0
 6894 072c 00000000 		.4byte	0
 6895              	.LLST41:
 6896 0730 00000000 		.4byte	.LVL143
 6897 0734 10000000 		.4byte	.LVL145
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 182


 6898 0738 0100     		.2byte	0x1
 6899 073a 50       		.byte	0x50
 6900 073b 10000000 		.4byte	.LVL145
 6901 073f 22000000 		.4byte	.LVL151
 6902 0743 0100     		.2byte	0x1
 6903 0745 55       		.byte	0x55
 6904 0746 22000000 		.4byte	.LVL151
 6905 074a 30000000 		.4byte	.LFE118
 6906 074e 0400     		.2byte	0x4
 6907 0750 F3       		.byte	0xf3
 6908 0751 01       		.uleb128 0x1
 6909 0752 50       		.byte	0x50
 6910 0753 9F       		.byte	0x9f
 6911 0754 00000000 		.4byte	0
 6912 0758 00000000 		.4byte	0
 6913              	.LLST42:
 6914 075c 00000000 		.4byte	.LVL143
 6915 0760 0E000000 		.4byte	.LVL144
 6916 0764 0100     		.2byte	0x1
 6917 0766 51       		.byte	0x51
 6918 0767 0E000000 		.4byte	.LVL144
 6919 076b 1C000000 		.4byte	.LVL148
 6920 076f 0100     		.2byte	0x1
 6921 0771 54       		.byte	0x54
 6922 0772 1C000000 		.4byte	.LVL148
 6923 0776 30000000 		.4byte	.LFE118
 6924 077a 0400     		.2byte	0x4
 6925 077c F3       		.byte	0xf3
 6926 077d 01       		.uleb128 0x1
 6927 077e 51       		.byte	0x51
 6928 077f 9F       		.byte	0x9f
 6929 0780 00000000 		.4byte	0
 6930 0784 00000000 		.4byte	0
 6931              	.LLST43:
 6932 0788 1A000000 		.4byte	.LVL147
 6933 078c 20000000 		.4byte	.LVL149
 6934 0790 0100     		.2byte	0x1
 6935 0792 53       		.byte	0x53
 6936 0793 20000000 		.4byte	.LVL149
 6937 0797 22000000 		.4byte	.LVL150
 6938 079b 0100     		.2byte	0x1
 6939 079d 54       		.byte	0x54
 6940 079e 22000000 		.4byte	.LVL150
 6941 07a2 22000000 		.4byte	.LVL151
 6942 07a6 0200     		.2byte	0x2
 6943 07a8 75       		.byte	0x75
 6944 07a9 18       		.sleb128 24
 6945 07aa 22000000 		.4byte	.LVL151
 6946 07ae 30000000 		.4byte	.LFE118
 6947 07b2 0500     		.2byte	0x5
 6948 07b4 F3       		.byte	0xf3
 6949 07b5 01       		.uleb128 0x1
 6950 07b6 50       		.byte	0x50
 6951 07b7 23       		.byte	0x23
 6952 07b8 18       		.uleb128 0x18
 6953 07b9 00000000 		.4byte	0
 6954 07bd 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 183


 6955              	.LLST44:
 6956 07c1 00000000 		.4byte	.LVL152
 6957 07c5 12000000 		.4byte	.LVL154
 6958 07c9 0100     		.2byte	0x1
 6959 07cb 50       		.byte	0x50
 6960 07cc 12000000 		.4byte	.LVL154
 6961 07d0 22000000 		.4byte	.LVL160
 6962 07d4 0100     		.2byte	0x1
 6963 07d6 55       		.byte	0x55
 6964 07d7 22000000 		.4byte	.LVL160
 6965 07db 2C000000 		.4byte	.LFE119
 6966 07df 0400     		.2byte	0x4
 6967 07e1 F3       		.byte	0xf3
 6968 07e2 01       		.uleb128 0x1
 6969 07e3 50       		.byte	0x50
 6970 07e4 9F       		.byte	0x9f
 6971 07e5 00000000 		.4byte	0
 6972 07e9 00000000 		.4byte	0
 6973              	.LLST45:
 6974 07ed 00000000 		.4byte	.LVL152
 6975 07f1 0E000000 		.4byte	.LVL153
 6976 07f5 0100     		.2byte	0x1
 6977 07f7 51       		.byte	0x51
 6978 07f8 0E000000 		.4byte	.LVL153
 6979 07fc 1E000000 		.4byte	.LVL157
 6980 0800 0100     		.2byte	0x1
 6981 0802 54       		.byte	0x54
 6982 0803 1E000000 		.4byte	.LVL157
 6983 0807 2C000000 		.4byte	.LFE119
 6984 080b 0400     		.2byte	0x4
 6985 080d F3       		.byte	0xf3
 6986 080e 01       		.uleb128 0x1
 6987 080f 51       		.byte	0x51
 6988 0810 9F       		.byte	0x9f
 6989 0811 00000000 		.4byte	0
 6990 0815 00000000 		.4byte	0
 6991              	.LLST46:
 6992 0819 1C000000 		.4byte	.LVL156
 6993 081d 20000000 		.4byte	.LVL158
 6994 0821 0100     		.2byte	0x1
 6995 0823 53       		.byte	0x53
 6996 0824 20000000 		.4byte	.LVL158
 6997 0828 22000000 		.4byte	.LVL159
 6998 082c 0100     		.2byte	0x1
 6999 082e 54       		.byte	0x54
 7000 082f 22000000 		.4byte	.LVL159
 7001 0833 22000000 		.4byte	.LVL160
 7002 0837 0200     		.2byte	0x2
 7003 0839 75       		.byte	0x75
 7004 083a 18       		.sleb128 24
 7005 083b 22000000 		.4byte	.LVL160
 7006 083f 2C000000 		.4byte	.LFE119
 7007 0843 0500     		.2byte	0x5
 7008 0845 F3       		.byte	0xf3
 7009 0846 01       		.uleb128 0x1
 7010 0847 50       		.byte	0x50
 7011 0848 23       		.byte	0x23
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 184


 7012 0849 18       		.uleb128 0x18
 7013 084a 00000000 		.4byte	0
 7014 084e 00000000 		.4byte	0
 7015              	.LLST47:
 7016 0852 00000000 		.4byte	.LVL161
 7017 0856 0E000000 		.4byte	.LVL163
 7018 085a 0100     		.2byte	0x1
 7019 085c 50       		.byte	0x50
 7020 085d 0E000000 		.4byte	.LVL163
 7021 0861 18000000 		.4byte	.LVL165
 7022 0865 0100     		.2byte	0x1
 7023 0867 54       		.byte	0x54
 7024 0868 18000000 		.4byte	.LVL165
 7025 086c 20000000 		.4byte	.LVL167
 7026 0870 0400     		.2byte	0x4
 7027 0872 F3       		.byte	0xf3
 7028 0873 01       		.uleb128 0x1
 7029 0874 50       		.byte	0x50
 7030 0875 9F       		.byte	0x9f
 7031 0876 20000000 		.4byte	.LVL167
 7032 087a 22000000 		.4byte	.LVL168
 7033 087e 0100     		.2byte	0x1
 7034 0880 54       		.byte	0x54
 7035 0881 22000000 		.4byte	.LVL168
 7036 0885 34000000 		.4byte	.LFE120
 7037 0889 0400     		.2byte	0x4
 7038 088b F3       		.byte	0xf3
 7039 088c 01       		.uleb128 0x1
 7040 088d 50       		.byte	0x50
 7041 088e 9F       		.byte	0x9f
 7042 088f 00000000 		.4byte	0
 7043 0893 00000000 		.4byte	0
 7044              	.LLST48:
 7045 0897 00000000 		.4byte	.LVL161
 7046 089b 0C000000 		.4byte	.LVL162
 7047 089f 0100     		.2byte	0x1
 7048 08a1 51       		.byte	0x51
 7049 08a2 0C000000 		.4byte	.LVL162
 7050 08a6 34000000 		.4byte	.LFE120
 7051 08aa 0400     		.2byte	0x4
 7052 08ac F3       		.byte	0xf3
 7053 08ad 01       		.uleb128 0x1
 7054 08ae 51       		.byte	0x51
 7055 08af 9F       		.byte	0x9f
 7056 08b0 00000000 		.4byte	0
 7057 08b4 00000000 		.4byte	0
 7058              	.LLST49:
 7059 08b8 12000000 		.4byte	.LVL164
 7060 08bc 1C000000 		.4byte	.LVL166
 7061 08c0 0600     		.2byte	0x6
 7062 08c2 0C       		.byte	0xc
 7063 08c3 01000600 		.4byte	0x60001
 7064 08c7 9F       		.byte	0x9f
 7065 08c8 1C000000 		.4byte	.LVL166
 7066 08cc 20000000 		.4byte	.LVL167
 7067 08d0 0200     		.2byte	0x2
 7068 08d2 30       		.byte	0x30
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 185


 7069 08d3 9F       		.byte	0x9f
 7070 08d4 20000000 		.4byte	.LVL167
 7071 08d8 22000000 		.4byte	.LVL168
 7072 08dc 0600     		.2byte	0x6
 7073 08de 0C       		.byte	0xc
 7074 08df 01000600 		.4byte	0x60001
 7075 08e3 9F       		.byte	0x9f
 7076 08e4 22000000 		.4byte	.LVL168
 7077 08e8 34000000 		.4byte	.LFE120
 7078 08ec 0100     		.2byte	0x1
 7079 08ee 50       		.byte	0x50
 7080 08ef 00000000 		.4byte	0
 7081 08f3 00000000 		.4byte	0
 7082              	.LLST50:
 7083 08f7 00000000 		.4byte	.LVL169
 7084 08fb 10000000 		.4byte	.LVL171
 7085 08ff 0100     		.2byte	0x1
 7086 0901 50       		.byte	0x50
 7087 0902 10000000 		.4byte	.LVL171
 7088 0906 1A000000 		.4byte	.LVL173
 7089 090a 0100     		.2byte	0x1
 7090 090c 54       		.byte	0x54
 7091 090d 1A000000 		.4byte	.LVL173
 7092 0911 22000000 		.4byte	.LVL175
 7093 0915 0400     		.2byte	0x4
 7094 0917 F3       		.byte	0xf3
 7095 0918 01       		.uleb128 0x1
 7096 0919 50       		.byte	0x50
 7097 091a 9F       		.byte	0x9f
 7098 091b 22000000 		.4byte	.LVL175
 7099 091f 24000000 		.4byte	.LVL176
 7100 0923 0100     		.2byte	0x1
 7101 0925 54       		.byte	0x54
 7102 0926 24000000 		.4byte	.LVL176
 7103 092a 34000000 		.4byte	.LFE121
 7104 092e 0400     		.2byte	0x4
 7105 0930 F3       		.byte	0xf3
 7106 0931 01       		.uleb128 0x1
 7107 0932 50       		.byte	0x50
 7108 0933 9F       		.byte	0x9f
 7109 0934 00000000 		.4byte	0
 7110 0938 00000000 		.4byte	0
 7111              	.LLST51:
 7112 093c 00000000 		.4byte	.LVL169
 7113 0940 0C000000 		.4byte	.LVL170
 7114 0944 0100     		.2byte	0x1
 7115 0946 51       		.byte	0x51
 7116 0947 0C000000 		.4byte	.LVL170
 7117 094b 24000000 		.4byte	.LVL177
 7118 094f 0100     		.2byte	0x1
 7119 0951 55       		.byte	0x55
 7120 0952 24000000 		.4byte	.LVL177
 7121 0956 34000000 		.4byte	.LFE121
 7122 095a 0400     		.2byte	0x4
 7123 095c F3       		.byte	0xf3
 7124 095d 01       		.uleb128 0x1
 7125 095e 51       		.byte	0x51
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 186


 7126 095f 9F       		.byte	0x9f
 7127 0960 00000000 		.4byte	0
 7128 0964 00000000 		.4byte	0
 7129              	.LLST52:
 7130 0968 14000000 		.4byte	.LVL172
 7131 096c 1E000000 		.4byte	.LVL174
 7132 0970 0600     		.2byte	0x6
 7133 0972 0C       		.byte	0xc
 7134 0973 01000600 		.4byte	0x60001
 7135 0977 9F       		.byte	0x9f
 7136 0978 1E000000 		.4byte	.LVL174
 7137 097c 22000000 		.4byte	.LVL175
 7138 0980 0200     		.2byte	0x2
 7139 0982 30       		.byte	0x30
 7140 0983 9F       		.byte	0x9f
 7141 0984 22000000 		.4byte	.LVL175
 7142 0988 24000000 		.4byte	.LVL176
 7143 098c 0600     		.2byte	0x6
 7144 098e 0C       		.byte	0xc
 7145 098f 01000600 		.4byte	0x60001
 7146 0993 9F       		.byte	0x9f
 7147 0994 24000000 		.4byte	.LVL176
 7148 0998 34000000 		.4byte	.LFE121
 7149 099c 0100     		.2byte	0x1
 7150 099e 50       		.byte	0x50
 7151 099f 00000000 		.4byte	0
 7152 09a3 00000000 		.4byte	0
 7153              	.LLST53:
 7154 09a7 00000000 		.4byte	.LVL178
 7155 09ab 10000000 		.4byte	.LVL180
 7156 09af 0100     		.2byte	0x1
 7157 09b1 50       		.byte	0x50
 7158 09b2 10000000 		.4byte	.LVL180
 7159 09b6 74000000 		.4byte	.LVL196
 7160 09ba 0100     		.2byte	0x1
 7161 09bc 56       		.byte	0x56
 7162 09bd 74000000 		.4byte	.LVL196
 7163 09c1 84000000 		.4byte	.LFE122
 7164 09c5 0400     		.2byte	0x4
 7165 09c7 F3       		.byte	0xf3
 7166 09c8 01       		.uleb128 0x1
 7167 09c9 50       		.byte	0x50
 7168 09ca 9F       		.byte	0x9f
 7169 09cb 00000000 		.4byte	0
 7170 09cf 00000000 		.4byte	0
 7171              	.LLST54:
 7172 09d3 00000000 		.4byte	.LVL178
 7173 09d7 0E000000 		.4byte	.LVL179
 7174 09db 0100     		.2byte	0x1
 7175 09dd 51       		.byte	0x51
 7176 09de 0E000000 		.4byte	.LVL179
 7177 09e2 68000000 		.4byte	.LVL192
 7178 09e6 0100     		.2byte	0x1
 7179 09e8 54       		.byte	0x54
 7180 09e9 68000000 		.4byte	.LVL192
 7181 09ed 84000000 		.4byte	.LFE122
 7182 09f1 0400     		.2byte	0x4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 187


 7183 09f3 F3       		.byte	0xf3
 7184 09f4 01       		.uleb128 0x1
 7185 09f5 51       		.byte	0x51
 7186 09f6 9F       		.byte	0x9f
 7187 09f7 00000000 		.4byte	0
 7188 09fb 00000000 		.4byte	0
 7189              	.LLST55:
 7190 09ff 00000000 		.4byte	.LVL178
 7191 0a03 13000000 		.4byte	.LVL181-1
 7192 0a07 0100     		.2byte	0x1
 7193 0a09 52       		.byte	0x52
 7194 0a0a 13000000 		.4byte	.LVL181-1
 7195 0a0e 5A000000 		.4byte	.LVL188
 7196 0a12 0400     		.2byte	0x4
 7197 0a14 F3       		.byte	0xf3
 7198 0a15 01       		.uleb128 0x1
 7199 0a16 52       		.byte	0x52
 7200 0a17 9F       		.byte	0x9f
 7201 0a18 5A000000 		.4byte	.LVL188
 7202 0a1c 5C000000 		.4byte	.LVL189
 7203 0a20 0100     		.2byte	0x1
 7204 0a22 55       		.byte	0x55
 7205 0a23 5C000000 		.4byte	.LVL189
 7206 0a27 66000000 		.4byte	.LVL191
 7207 0a2b 0400     		.2byte	0x4
 7208 0a2d F3       		.byte	0xf3
 7209 0a2e 01       		.uleb128 0x1
 7210 0a2f 52       		.byte	0x52
 7211 0a30 9F       		.byte	0x9f
 7212 0a31 66000000 		.4byte	.LVL191
 7213 0a35 70000000 		.4byte	.LVL193
 7214 0a39 0100     		.2byte	0x1
 7215 0a3b 55       		.byte	0x55
 7216 0a3c 72000000 		.4byte	.LVL194
 7217 0a40 74000000 		.4byte	.LVL195
 7218 0a44 0100     		.2byte	0x1
 7219 0a46 55       		.byte	0x55
 7220 0a47 00000000 		.4byte	0
 7221 0a4b 00000000 		.4byte	0
 7222              	.LLST56:
 7223 0a4f 58000000 		.4byte	.LVL187
 7224 0a53 5C000000 		.4byte	.LVL189
 7225 0a57 0100     		.2byte	0x1
 7226 0a59 50       		.byte	0x50
 7227 0a5a 00000000 		.4byte	0
 7228 0a5e 00000000 		.4byte	0
 7229              	.LLST57:
 7230 0a62 32000000 		.4byte	.LVL182
 7231 0a66 34000000 		.4byte	.LVL183
 7232 0a6a 0100     		.2byte	0x1
 7233 0a6c 53       		.byte	0x53
 7234 0a6d 34000000 		.4byte	.LVL183
 7235 0a71 38000000 		.4byte	.LVL184
 7236 0a75 0300     		.2byte	0x3
 7237 0a77 73       		.byte	0x73
 7238 0a78 7F       		.sleb128 -1
 7239 0a79 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 188


 7240 0a7a 38000000 		.4byte	.LVL184
 7241 0a7e 66000000 		.4byte	.LVL191
 7242 0a82 0100     		.2byte	0x1
 7243 0a84 57       		.byte	0x57
 7244 0a85 00000000 		.4byte	0
 7245 0a89 00000000 		.4byte	0
 7246              	.LLST58:
 7247 0a8d 00000000 		.4byte	.LVL197
 7248 0a91 12000000 		.4byte	.LVL199
 7249 0a95 0100     		.2byte	0x1
 7250 0a97 50       		.byte	0x50
 7251 0a98 12000000 		.4byte	.LVL199
 7252 0a9c 36000000 		.4byte	.LVL204
 7253 0aa0 0100     		.2byte	0x1
 7254 0aa2 55       		.byte	0x55
 7255 0aa3 36000000 		.4byte	.LVL204
 7256 0aa7 4A000000 		.4byte	.LVL209
 7257 0aab 0400     		.2byte	0x4
 7258 0aad F3       		.byte	0xf3
 7259 0aae 01       		.uleb128 0x1
 7260 0aaf 50       		.byte	0x50
 7261 0ab0 9F       		.byte	0x9f
 7262 0ab1 4A000000 		.4byte	.LVL209
 7263 0ab5 50000000 		.4byte	.LVL210
 7264 0ab9 0100     		.2byte	0x1
 7265 0abb 55       		.byte	0x55
 7266 0abc 50000000 		.4byte	.LVL210
 7267 0ac0 60000000 		.4byte	.LFE123
 7268 0ac4 0400     		.2byte	0x4
 7269 0ac6 F3       		.byte	0xf3
 7270 0ac7 01       		.uleb128 0x1
 7271 0ac8 50       		.byte	0x50
 7272 0ac9 9F       		.byte	0x9f
 7273 0aca 00000000 		.4byte	0
 7274 0ace 00000000 		.4byte	0
 7275              	.LLST59:
 7276 0ad2 00000000 		.4byte	.LVL197
 7277 0ad6 0E000000 		.4byte	.LVL198
 7278 0ada 0100     		.2byte	0x1
 7279 0adc 51       		.byte	0x51
 7280 0add 0E000000 		.4byte	.LVL198
 7281 0ae1 38000000 		.4byte	.LVL205
 7282 0ae5 0100     		.2byte	0x1
 7283 0ae7 54       		.byte	0x54
 7284 0ae8 38000000 		.4byte	.LVL205
 7285 0aec 4A000000 		.4byte	.LVL209
 7286 0af0 0400     		.2byte	0x4
 7287 0af2 F3       		.byte	0xf3
 7288 0af3 01       		.uleb128 0x1
 7289 0af4 51       		.byte	0x51
 7290 0af5 9F       		.byte	0x9f
 7291 0af6 4A000000 		.4byte	.LVL209
 7292 0afa 50000000 		.4byte	.LVL210
 7293 0afe 0100     		.2byte	0x1
 7294 0b00 54       		.byte	0x54
 7295 0b01 50000000 		.4byte	.LVL210
 7296 0b05 60000000 		.4byte	.LFE123
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 189


 7297 0b09 0400     		.2byte	0x4
 7298 0b0b F3       		.byte	0xf3
 7299 0b0c 01       		.uleb128 0x1
 7300 0b0d 51       		.byte	0x51
 7301 0b0e 9F       		.byte	0x9f
 7302 0b0f 00000000 		.4byte	0
 7303 0b13 00000000 		.4byte	0
 7304              	.LLST60:
 7305 0b17 00000000 		.4byte	.LVL197
 7306 0b1b 15000000 		.4byte	.LVL200-1
 7307 0b1f 0100     		.2byte	0x1
 7308 0b21 52       		.byte	0x52
 7309 0b22 15000000 		.4byte	.LVL200-1
 7310 0b26 2A000000 		.4byte	.LVL201
 7311 0b2a 0400     		.2byte	0x4
 7312 0b2c F3       		.byte	0xf3
 7313 0b2d 01       		.uleb128 0x1
 7314 0b2e 52       		.byte	0x52
 7315 0b2f 9F       		.byte	0x9f
 7316 0b30 2A000000 		.4byte	.LVL201
 7317 0b34 2D000000 		.4byte	.LVL202-1
 7318 0b38 0100     		.2byte	0x1
 7319 0b3a 50       		.byte	0x50
 7320 0b3b 4A000000 		.4byte	.LVL209
 7321 0b3f 50000000 		.4byte	.LVL210
 7322 0b43 0400     		.2byte	0x4
 7323 0b45 F3       		.byte	0xf3
 7324 0b46 01       		.uleb128 0x1
 7325 0b47 52       		.byte	0x52
 7326 0b48 9F       		.byte	0x9f
 7327 0b49 00000000 		.4byte	0
 7328 0b4d 00000000 		.4byte	0
 7329              	.LLST61:
 7330 0b51 16000000 		.4byte	.LVL200
 7331 0b55 36000000 		.4byte	.LVL204
 7332 0b59 0600     		.2byte	0x6
 7333 0b5b 9E       		.byte	0x9e
 7334 0b5c 04       		.uleb128 0x4
 7335 0b5d 00000000 		.4byte	0
 7336 0b61 36000000 		.4byte	.LVL204
 7337 0b65 3C000000 		.4byte	.LVL206
 7338 0b69 0100     		.2byte	0x1
 7339 0b6b 50       		.byte	0x50
 7340 0b6c 3C000000 		.4byte	.LVL206
 7341 0b70 48000000 		.4byte	.LVL208
 7342 0b74 0100     		.2byte	0x1
 7343 0b76 55       		.byte	0x55
 7344 0b77 48000000 		.4byte	.LVL208
 7345 0b7b 4A000000 		.4byte	.LVL209
 7346 0b7f 0100     		.2byte	0x1
 7347 0b81 50       		.byte	0x50
 7348 0b82 4A000000 		.4byte	.LVL209
 7349 0b86 50000000 		.4byte	.LVL210
 7350 0b8a 0600     		.2byte	0x6
 7351 0b8c 9E       		.byte	0x9e
 7352 0b8d 04       		.uleb128 0x4
 7353 0b8e 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 190


 7354 0b92 50000000 		.4byte	.LVL210
 7355 0b96 60000000 		.4byte	.LFE123
 7356 0b9a 0100     		.2byte	0x1
 7357 0b9c 50       		.byte	0x50
 7358 0b9d 00000000 		.4byte	0
 7359 0ba1 00000000 		.4byte	0
 7360              	.LLST62:
 7361 0ba5 00000000 		.4byte	.LVL211
 7362 0ba9 10000000 		.4byte	.LVL213
 7363 0bad 0100     		.2byte	0x1
 7364 0baf 50       		.byte	0x50
 7365 0bb0 10000000 		.4byte	.LVL213
 7366 0bb4 62000000 		.4byte	.LVL227
 7367 0bb8 0100     		.2byte	0x1
 7368 0bba 55       		.byte	0x55
 7369 0bbb 62000000 		.4byte	.LVL227
 7370 0bbf 74000000 		.4byte	.LFE124
 7371 0bc3 0400     		.2byte	0x4
 7372 0bc5 F3       		.byte	0xf3
 7373 0bc6 01       		.uleb128 0x1
 7374 0bc7 50       		.byte	0x50
 7375 0bc8 9F       		.byte	0x9f
 7376 0bc9 00000000 		.4byte	0
 7377 0bcd 00000000 		.4byte	0
 7378              	.LLST63:
 7379 0bd1 00000000 		.4byte	.LVL211
 7380 0bd5 0E000000 		.4byte	.LVL212
 7381 0bd9 0100     		.2byte	0x1
 7382 0bdb 51       		.byte	0x51
 7383 0bdc 0E000000 		.4byte	.LVL212
 7384 0be0 50000000 		.4byte	.LVL222
 7385 0be4 0100     		.2byte	0x1
 7386 0be6 54       		.byte	0x54
 7387 0be7 50000000 		.4byte	.LVL222
 7388 0beb 5A000000 		.4byte	.LVL224
 7389 0bef 0400     		.2byte	0x4
 7390 0bf1 F3       		.byte	0xf3
 7391 0bf2 01       		.uleb128 0x1
 7392 0bf3 51       		.byte	0x51
 7393 0bf4 9F       		.byte	0x9f
 7394 0bf5 5A000000 		.4byte	.LVL224
 7395 0bf9 60000000 		.4byte	.LVL225
 7396 0bfd 0100     		.2byte	0x1
 7397 0bff 54       		.byte	0x54
 7398 0c00 60000000 		.4byte	.LVL225
 7399 0c04 74000000 		.4byte	.LFE124
 7400 0c08 0400     		.2byte	0x4
 7401 0c0a F3       		.byte	0xf3
 7402 0c0b 01       		.uleb128 0x1
 7403 0c0c 51       		.byte	0x51
 7404 0c0d 9F       		.byte	0x9f
 7405 0c0e 00000000 		.4byte	0
 7406 0c12 00000000 		.4byte	0
 7407              	.LLST64:
 7408 0c16 00000000 		.4byte	.LVL211
 7409 0c1a 13000000 		.4byte	.LVL214-1
 7410 0c1e 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 191


 7411 0c20 52       		.byte	0x52
 7412 0c21 13000000 		.4byte	.LVL214-1
 7413 0c25 28000000 		.4byte	.LVL215
 7414 0c29 0400     		.2byte	0x4
 7415 0c2b F3       		.byte	0xf3
 7416 0c2c 01       		.uleb128 0x1
 7417 0c2d 52       		.byte	0x52
 7418 0c2e 9F       		.byte	0x9f
 7419 0c2f 28000000 		.4byte	.LVL215
 7420 0c33 38000000 		.4byte	.LVL217
 7421 0c37 0100     		.2byte	0x1
 7422 0c39 50       		.byte	0x50
 7423 0c3a 40000000 		.4byte	.LVL219
 7424 0c3e 48000000 		.4byte	.LVL220
 7425 0c42 0100     		.2byte	0x1
 7426 0c44 50       		.byte	0x50
 7427 0c45 5A000000 		.4byte	.LVL224
 7428 0c49 60000000 		.4byte	.LVL225
 7429 0c4d 0400     		.2byte	0x4
 7430 0c4f F3       		.byte	0xf3
 7431 0c50 01       		.uleb128 0x1
 7432 0c51 52       		.byte	0x52
 7433 0c52 9F       		.byte	0x9f
 7434 0c53 00000000 		.4byte	0
 7435 0c57 00000000 		.4byte	0
 7436              	.LLST65:
 7437 0c5b 14000000 		.4byte	.LVL214
 7438 0c5f 2C000000 		.4byte	.LVL216
 7439 0c63 0200     		.2byte	0x2
 7440 0c65 30       		.byte	0x30
 7441 0c66 9F       		.byte	0x9f
 7442 0c67 2C000000 		.4byte	.LVL216
 7443 0c6b 3E000000 		.4byte	.LVL218
 7444 0c6f 0100     		.2byte	0x1
 7445 0c71 52       		.byte	0x52
 7446 0c72 3E000000 		.4byte	.LVL218
 7447 0c76 40000000 		.4byte	.LVL219
 7448 0c7a 0100     		.2byte	0x1
 7449 0c7c 50       		.byte	0x50
 7450 0c7d 40000000 		.4byte	.LVL219
 7451 0c81 4E000000 		.4byte	.LVL221
 7452 0c85 0100     		.2byte	0x1
 7453 0c87 52       		.byte	0x52
 7454 0c88 4E000000 		.4byte	.LVL221
 7455 0c8c 57000000 		.4byte	.LVL223-1
 7456 0c90 0100     		.2byte	0x1
 7457 0c92 50       		.byte	0x50
 7458 0c93 58000000 		.4byte	.LVL223
 7459 0c97 5A000000 		.4byte	.LVL224
 7460 0c9b 0100     		.2byte	0x1
 7461 0c9d 50       		.byte	0x50
 7462 0c9e 5A000000 		.4byte	.LVL224
 7463 0ca2 60000000 		.4byte	.LVL225
 7464 0ca6 0200     		.2byte	0x2
 7465 0ca8 30       		.byte	0x30
 7466 0ca9 9F       		.byte	0x9f
 7467 0caa 60000000 		.4byte	.LVL225
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 192


 7468 0cae 62000000 		.4byte	.LVL226
 7469 0cb2 0100     		.2byte	0x1
 7470 0cb4 50       		.byte	0x50
 7471 0cb5 00000000 		.4byte	0
 7472 0cb9 00000000 		.4byte	0
 7473              	.LLST66:
 7474 0cbd 00000000 		.4byte	.LVL228
 7475 0cc1 10000000 		.4byte	.LVL230
 7476 0cc5 0100     		.2byte	0x1
 7477 0cc7 50       		.byte	0x50
 7478 0cc8 10000000 		.4byte	.LVL230
 7479 0ccc 46000000 		.4byte	.LVL238
 7480 0cd0 0100     		.2byte	0x1
 7481 0cd2 55       		.byte	0x55
 7482 0cd3 46000000 		.4byte	.LVL238
 7483 0cd7 58000000 		.4byte	.LFE125
 7484 0cdb 0400     		.2byte	0x4
 7485 0cdd F3       		.byte	0xf3
 7486 0cde 01       		.uleb128 0x1
 7487 0cdf 50       		.byte	0x50
 7488 0ce0 9F       		.byte	0x9f
 7489 0ce1 00000000 		.4byte	0
 7490 0ce5 00000000 		.4byte	0
 7491              	.LLST67:
 7492 0ce9 00000000 		.4byte	.LVL228
 7493 0ced 0E000000 		.4byte	.LVL229
 7494 0cf1 0100     		.2byte	0x1
 7495 0cf3 51       		.byte	0x51
 7496 0cf4 0E000000 		.4byte	.LVL229
 7497 0cf8 34000000 		.4byte	.LVL234
 7498 0cfc 0100     		.2byte	0x1
 7499 0cfe 54       		.byte	0x54
 7500 0cff 34000000 		.4byte	.LVL234
 7501 0d03 40000000 		.4byte	.LVL236
 7502 0d07 0400     		.2byte	0x4
 7503 0d09 F3       		.byte	0xf3
 7504 0d0a 01       		.uleb128 0x1
 7505 0d0b 51       		.byte	0x51
 7506 0d0c 9F       		.byte	0x9f
 7507 0d0d 40000000 		.4byte	.LVL236
 7508 0d11 46000000 		.4byte	.LVL237
 7509 0d15 0100     		.2byte	0x1
 7510 0d17 54       		.byte	0x54
 7511 0d18 46000000 		.4byte	.LVL237
 7512 0d1c 58000000 		.4byte	.LFE125
 7513 0d20 0400     		.2byte	0x4
 7514 0d22 F3       		.byte	0xf3
 7515 0d23 01       		.uleb128 0x1
 7516 0d24 51       		.byte	0x51
 7517 0d25 9F       		.byte	0x9f
 7518 0d26 00000000 		.4byte	0
 7519 0d2a 00000000 		.4byte	0
 7520              	.LLST68:
 7521 0d2e 00000000 		.4byte	.LVL228
 7522 0d32 13000000 		.4byte	.LVL231-1
 7523 0d36 0100     		.2byte	0x1
 7524 0d38 52       		.byte	0x52
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 193


 7525 0d39 13000000 		.4byte	.LVL231-1
 7526 0d3d 28000000 		.4byte	.LVL232
 7527 0d41 0400     		.2byte	0x4
 7528 0d43 F3       		.byte	0xf3
 7529 0d44 01       		.uleb128 0x1
 7530 0d45 52       		.byte	0x52
 7531 0d46 9F       		.byte	0x9f
 7532 0d47 28000000 		.4byte	.LVL232
 7533 0d4b 31000000 		.4byte	.LVL233-1
 7534 0d4f 0100     		.2byte	0x1
 7535 0d51 50       		.byte	0x50
 7536 0d52 40000000 		.4byte	.LVL236
 7537 0d56 46000000 		.4byte	.LVL237
 7538 0d5a 0400     		.2byte	0x4
 7539 0d5c F3       		.byte	0xf3
 7540 0d5d 01       		.uleb128 0x1
 7541 0d5e 52       		.byte	0x52
 7542 0d5f 9F       		.byte	0x9f
 7543 0d60 00000000 		.4byte	0
 7544 0d64 00000000 		.4byte	0
 7545              	.LLST69:
 7546 0d68 14000000 		.4byte	.LVL231
 7547 0d6c 32000000 		.4byte	.LVL233
 7548 0d70 0A00     		.2byte	0xa
 7549 0d72 9E       		.byte	0x9e
 7550 0d73 08       		.uleb128 0x8
 7551 0d74 00000000 		.8byte	0
 7551      00000000 
 7552 0d7c 32000000 		.4byte	.LVL233
 7553 0d80 3D000000 		.4byte	.LVL235-1
 7554 0d84 0600     		.2byte	0x6
 7555 0d86 50       		.byte	0x50
 7556 0d87 93       		.byte	0x93
 7557 0d88 04       		.uleb128 0x4
 7558 0d89 51       		.byte	0x51
 7559 0d8a 93       		.byte	0x93
 7560 0d8b 04       		.uleb128 0x4
 7561 0d8c 40000000 		.4byte	.LVL236
 7562 0d90 46000000 		.4byte	.LVL237
 7563 0d94 0A00     		.2byte	0xa
 7564 0d96 9E       		.byte	0x9e
 7565 0d97 08       		.uleb128 0x8
 7566 0d98 00000000 		.8byte	0
 7566      00000000 
 7567 0da0 00000000 		.4byte	0
 7568 0da4 00000000 		.4byte	0
 7569              	.LLST70:
 7570 0da8 00000000 		.4byte	.LVL239
 7571 0dac 10000000 		.4byte	.LVL241
 7572 0db0 0100     		.2byte	0x1
 7573 0db2 50       		.byte	0x50
 7574 0db3 10000000 		.4byte	.LVL241
 7575 0db7 46000000 		.4byte	.LVL248
 7576 0dbb 0100     		.2byte	0x1
 7577 0dbd 56       		.byte	0x56
 7578 0dbe 46000000 		.4byte	.LVL248
 7579 0dc2 58000000 		.4byte	.LFE126
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 194


 7580 0dc6 0400     		.2byte	0x4
 7581 0dc8 F3       		.byte	0xf3
 7582 0dc9 01       		.uleb128 0x1
 7583 0dca 50       		.byte	0x50
 7584 0dcb 9F       		.byte	0x9f
 7585 0dcc 00000000 		.4byte	0
 7586 0dd0 00000000 		.4byte	0
 7587              	.LLST71:
 7588 0dd4 00000000 		.4byte	.LVL239
 7589 0dd8 0E000000 		.4byte	.LVL240
 7590 0ddc 0100     		.2byte	0x1
 7591 0dde 51       		.byte	0x51
 7592 0ddf 0E000000 		.4byte	.LVL240
 7593 0de3 58000000 		.4byte	.LFE126
 7594 0de7 0400     		.2byte	0x4
 7595 0de9 F3       		.byte	0xf3
 7596 0dea 01       		.uleb128 0x1
 7597 0deb 51       		.byte	0x51
 7598 0dec 9F       		.byte	0x9f
 7599 0ded 00000000 		.4byte	0
 7600 0df1 00000000 		.4byte	0
 7601              	.LLST72:
 7602 0df5 00000000 		.4byte	.LVL239
 7603 0df9 13000000 		.4byte	.LVL242-1
 7604 0dfd 0100     		.2byte	0x1
 7605 0dff 52       		.byte	0x52
 7606 0e00 13000000 		.4byte	.LVL242-1
 7607 0e04 3C000000 		.4byte	.LVL245
 7608 0e08 0100     		.2byte	0x1
 7609 0e0a 54       		.byte	0x54
 7610 0e0b 3C000000 		.4byte	.LVL245
 7611 0e0f 40000000 		.4byte	.LVL246
 7612 0e13 0400     		.2byte	0x4
 7613 0e15 F3       		.byte	0xf3
 7614 0e16 01       		.uleb128 0x1
 7615 0e17 52       		.byte	0x52
 7616 0e18 9F       		.byte	0x9f
 7617 0e19 40000000 		.4byte	.LVL246
 7618 0e1d 46000000 		.4byte	.LVL247
 7619 0e21 0100     		.2byte	0x1
 7620 0e23 54       		.byte	0x54
 7621 0e24 46000000 		.4byte	.LVL247
 7622 0e28 58000000 		.4byte	.LFE126
 7623 0e2c 0400     		.2byte	0x4
 7624 0e2e F3       		.byte	0xf3
 7625 0e2f 01       		.uleb128 0x1
 7626 0e30 52       		.byte	0x52
 7627 0e31 9F       		.byte	0x9f
 7628 0e32 00000000 		.4byte	0
 7629 0e36 00000000 		.4byte	0
 7630              	.LLST73:
 7631 0e3a 00000000 		.4byte	.LVL239
 7632 0e3e 13000000 		.4byte	.LVL242-1
 7633 0e42 0100     		.2byte	0x1
 7634 0e44 53       		.byte	0x53
 7635 0e45 13000000 		.4byte	.LVL242-1
 7636 0e49 58000000 		.4byte	.LFE126
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 195


 7637 0e4d 0400     		.2byte	0x4
 7638 0e4f F3       		.byte	0xf3
 7639 0e50 01       		.uleb128 0x1
 7640 0e51 53       		.byte	0x53
 7641 0e52 9F       		.byte	0x9f
 7642 0e53 00000000 		.4byte	0
 7643 0e57 00000000 		.4byte	0
 7644              	.LLST74:
 7645 0e5b 30000000 		.4byte	.LVL244
 7646 0e5f 46000000 		.4byte	.LVL248
 7647 0e63 0400     		.2byte	0x4
 7648 0e65 76       		.byte	0x76
 7649 0e66 8006     		.sleb128 768
 7650 0e68 9F       		.byte	0x9f
 7651 0e69 46000000 		.4byte	.LVL248
 7652 0e6d 58000000 		.4byte	.LFE126
 7653 0e71 0700     		.2byte	0x7
 7654 0e73 F3       		.byte	0xf3
 7655 0e74 01       		.uleb128 0x1
 7656 0e75 50       		.byte	0x50
 7657 0e76 23       		.byte	0x23
 7658 0e77 8006     		.uleb128 0x300
 7659 0e79 9F       		.byte	0x9f
 7660 0e7a 00000000 		.4byte	0
 7661 0e7e 00000000 		.4byte	0
 7662              	.LLST75:
 7663 0e82 30000000 		.4byte	.LVL244
 7664 0e86 46000000 		.4byte	.LVL248
 7665 0e8a 0400     		.2byte	0x4
 7666 0e8c 76       		.byte	0x76
 7667 0e8d 8406     		.sleb128 772
 7668 0e8f 9F       		.byte	0x9f
 7669 0e90 46000000 		.4byte	.LVL248
 7670 0e94 58000000 		.4byte	.LFE126
 7671 0e98 0700     		.2byte	0x7
 7672 0e9a F3       		.byte	0xf3
 7673 0e9b 01       		.uleb128 0x1
 7674 0e9c 50       		.byte	0x50
 7675 0e9d 23       		.byte	0x23
 7676 0e9e 8406     		.uleb128 0x304
 7677 0ea0 9F       		.byte	0x9f
 7678 0ea1 00000000 		.4byte	0
 7679 0ea5 00000000 		.4byte	0
 7680              	.LLST76:
 7681 0ea9 00000000 		.4byte	.LVL249
 7682 0ead 0C000000 		.4byte	.LVL251
 7683 0eb1 0100     		.2byte	0x1
 7684 0eb3 50       		.byte	0x50
 7685 0eb4 0C000000 		.4byte	.LVL251
 7686 0eb8 16000000 		.4byte	.LVL253
 7687 0ebc 0100     		.2byte	0x1
 7688 0ebe 54       		.byte	0x54
 7689 0ebf 16000000 		.4byte	.LVL253
 7690 0ec3 20000000 		.4byte	.LFE127
 7691 0ec7 0400     		.2byte	0x4
 7692 0ec9 F3       		.byte	0xf3
 7693 0eca 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 196


 7694 0ecb 50       		.byte	0x50
 7695 0ecc 9F       		.byte	0x9f
 7696 0ecd 00000000 		.4byte	0
 7697 0ed1 00000000 		.4byte	0
 7698              	.LLST77:
 7699 0ed5 00000000 		.4byte	.LVL249
 7700 0ed9 0A000000 		.4byte	.LVL250
 7701 0edd 0100     		.2byte	0x1
 7702 0edf 51       		.byte	0x51
 7703 0ee0 0A000000 		.4byte	.LVL250
 7704 0ee4 20000000 		.4byte	.LFE127
 7705 0ee8 0400     		.2byte	0x4
 7706 0eea F3       		.byte	0xf3
 7707 0eeb 01       		.uleb128 0x1
 7708 0eec 51       		.byte	0x51
 7709 0eed 9F       		.byte	0x9f
 7710 0eee 00000000 		.4byte	0
 7711 0ef2 00000000 		.4byte	0
 7712              	.LLST78:
 7713 0ef6 00000000 		.4byte	.LVL254
 7714 0efa 12000000 		.4byte	.LVL256
 7715 0efe 0100     		.2byte	0x1
 7716 0f00 50       		.byte	0x50
 7717 0f01 12000000 		.4byte	.LVL256
 7718 0f05 3C000000 		.4byte	.LVL262
 7719 0f09 0100     		.2byte	0x1
 7720 0f0b 54       		.byte	0x54
 7721 0f0c 3C000000 		.4byte	.LVL262
 7722 0f10 50000000 		.4byte	.LFE128
 7723 0f14 0400     		.2byte	0x4
 7724 0f16 F3       		.byte	0xf3
 7725 0f17 01       		.uleb128 0x1
 7726 0f18 50       		.byte	0x50
 7727 0f19 9F       		.byte	0x9f
 7728 0f1a 00000000 		.4byte	0
 7729 0f1e 00000000 		.4byte	0
 7730              	.LLST79:
 7731 0f22 00000000 		.4byte	.LVL254
 7732 0f26 10000000 		.4byte	.LVL255
 7733 0f2a 0100     		.2byte	0x1
 7734 0f2c 51       		.byte	0x51
 7735 0f2d 10000000 		.4byte	.LVL255
 7736 0f31 2E000000 		.4byte	.LVL259
 7737 0f35 0100     		.2byte	0x1
 7738 0f37 55       		.byte	0x55
 7739 0f38 2E000000 		.4byte	.LVL259
 7740 0f3c 32000000 		.4byte	.LVL260
 7741 0f40 0400     		.2byte	0x4
 7742 0f42 F3       		.byte	0xf3
 7743 0f43 01       		.uleb128 0x1
 7744 0f44 51       		.byte	0x51
 7745 0f45 9F       		.byte	0x9f
 7746 0f46 32000000 		.4byte	.LVL260
 7747 0f4a 3C000000 		.4byte	.LVL261
 7748 0f4e 0100     		.2byte	0x1
 7749 0f50 55       		.byte	0x55
 7750 0f51 3C000000 		.4byte	.LVL261
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 197


 7751 0f55 50000000 		.4byte	.LFE128
 7752 0f59 0400     		.2byte	0x4
 7753 0f5b F3       		.byte	0xf3
 7754 0f5c 01       		.uleb128 0x1
 7755 0f5d 51       		.byte	0x51
 7756 0f5e 9F       		.byte	0x9f
 7757 0f5f 00000000 		.4byte	0
 7758 0f63 00000000 		.4byte	0
 7759              	.LLST80:
 7760 0f67 00000000 		.4byte	.LVL254
 7761 0f6b 15000000 		.4byte	.LVL257-1
 7762 0f6f 0100     		.2byte	0x1
 7763 0f71 52       		.byte	0x52
 7764 0f72 15000000 		.4byte	.LVL257-1
 7765 0f76 50000000 		.4byte	.LFE128
 7766 0f7a 0400     		.2byte	0x4
 7767 0f7c F3       		.byte	0xf3
 7768 0f7d 01       		.uleb128 0x1
 7769 0f7e 52       		.byte	0x52
 7770 0f7f 9F       		.byte	0x9f
 7771 0f80 00000000 		.4byte	0
 7772 0f84 00000000 		.4byte	0
 7773              	.LLST81:
 7774 0f88 00000000 		.4byte	.LVL263
 7775 0f8c 08000000 		.4byte	.LVL265
 7776 0f90 0100     		.2byte	0x1
 7777 0f92 50       		.byte	0x50
 7778 0f93 08000000 		.4byte	.LVL265
 7779 0f97 0E000000 		.4byte	.LVL267
 7780 0f9b 0400     		.2byte	0x4
 7781 0f9d F3       		.byte	0xf3
 7782 0f9e 01       		.uleb128 0x1
 7783 0f9f 50       		.byte	0x50
 7784 0fa0 9F       		.byte	0x9f
 7785 0fa1 0E000000 		.4byte	.LVL267
 7786 0fa5 14000000 		.4byte	.LVL268
 7787 0fa9 0100     		.2byte	0x1
 7788 0fab 50       		.byte	0x50
 7789 0fac 14000000 		.4byte	.LVL268
 7790 0fb0 1C000000 		.4byte	.LFE129
 7791 0fb4 0400     		.2byte	0x4
 7792 0fb6 F3       		.byte	0xf3
 7793 0fb7 01       		.uleb128 0x1
 7794 0fb8 50       		.byte	0x50
 7795 0fb9 9F       		.byte	0x9f
 7796 0fba 00000000 		.4byte	0
 7797 0fbe 00000000 		.4byte	0
 7798              	.LLST82:
 7799 0fc2 00000000 		.4byte	.LVL263
 7800 0fc6 0B000000 		.4byte	.LVL266-1
 7801 0fca 0100     		.2byte	0x1
 7802 0fcc 51       		.byte	0x51
 7803 0fcd 0B000000 		.4byte	.LVL266-1
 7804 0fd1 0E000000 		.4byte	.LVL267
 7805 0fd5 0400     		.2byte	0x4
 7806 0fd7 F3       		.byte	0xf3
 7807 0fd8 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 198


 7808 0fd9 51       		.byte	0x51
 7809 0fda 9F       		.byte	0x9f
 7810 0fdb 0E000000 		.4byte	.LVL267
 7811 0fdf 17000000 		.4byte	.LVL269-1
 7812 0fe3 0100     		.2byte	0x1
 7813 0fe5 51       		.byte	0x51
 7814 0fe6 17000000 		.4byte	.LVL269-1
 7815 0fea 1C000000 		.4byte	.LFE129
 7816 0fee 0400     		.2byte	0x4
 7817 0ff0 F3       		.byte	0xf3
 7818 0ff1 01       		.uleb128 0x1
 7819 0ff2 51       		.byte	0x51
 7820 0ff3 9F       		.byte	0x9f
 7821 0ff4 00000000 		.4byte	0
 7822 0ff8 00000000 		.4byte	0
 7823              		.section	.debug_aranges,"",%progbits
 7824 0000 DC000000 		.4byte	0xdc
 7825 0004 0200     		.2byte	0x2
 7826 0006 00000000 		.4byte	.Ldebug_info0
 7827 000a 04       		.byte	0x4
 7828 000b 00       		.byte	0
 7829 000c 0000     		.2byte	0
 7830 000e 0000     		.2byte	0
 7831 0010 00000000 		.4byte	.LFB105
 7832 0014 34020000 		.4byte	.LFE105-.LFB105
 7833 0018 00000000 		.4byte	.LFB106
 7834 001c 80000000 		.4byte	.LFE106-.LFB106
 7835 0020 00000000 		.4byte	.LFB107
 7836 0024 24000000 		.4byte	.LFE107-.LFB107
 7837 0028 00000000 		.4byte	.LFB110
 7838 002c 30000000 		.4byte	.LFE110-.LFB110
 7839 0030 00000000 		.4byte	.LFB109
 7840 0034 38000000 		.4byte	.LFE109-.LFB109
 7841 0038 00000000 		.4byte	.LFB111
 7842 003c 14000000 		.4byte	.LFE111-.LFB111
 7843 0040 00000000 		.4byte	.LFB108
 7844 0044 48000000 		.4byte	.LFE108-.LFB108
 7845 0048 00000000 		.4byte	.LFB112
 7846 004c 38000000 		.4byte	.LFE112-.LFB112
 7847 0050 00000000 		.4byte	.LFB113
 7848 0054 70000000 		.4byte	.LFE113-.LFB113
 7849 0058 00000000 		.4byte	.LFB115
 7850 005c 38000000 		.4byte	.LFE115-.LFB115
 7851 0060 00000000 		.4byte	.LFB114
 7852 0064 50000000 		.4byte	.LFE114-.LFB114
 7853 0068 00000000 		.4byte	.LFB116
 7854 006c 30000000 		.4byte	.LFE116-.LFB116
 7855 0070 00000000 		.4byte	.LFB117
 7856 0074 40000000 		.4byte	.LFE117-.LFB117
 7857 0078 00000000 		.4byte	.LFB118
 7858 007c 30000000 		.4byte	.LFE118-.LFB118
 7859 0080 00000000 		.4byte	.LFB119
 7860 0084 2C000000 		.4byte	.LFE119-.LFB119
 7861 0088 00000000 		.4byte	.LFB120
 7862 008c 34000000 		.4byte	.LFE120-.LFB120
 7863 0090 00000000 		.4byte	.LFB121
 7864 0094 34000000 		.4byte	.LFE121-.LFB121
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 199


 7865 0098 00000000 		.4byte	.LFB122
 7866 009c 84000000 		.4byte	.LFE122-.LFB122
 7867 00a0 00000000 		.4byte	.LFB123
 7868 00a4 60000000 		.4byte	.LFE123-.LFB123
 7869 00a8 00000000 		.4byte	.LFB124
 7870 00ac 74000000 		.4byte	.LFE124-.LFB124
 7871 00b0 00000000 		.4byte	.LFB125
 7872 00b4 58000000 		.4byte	.LFE125-.LFB125
 7873 00b8 00000000 		.4byte	.LFB126
 7874 00bc 58000000 		.4byte	.LFE126-.LFB126
 7875 00c0 00000000 		.4byte	.LFB127
 7876 00c4 20000000 		.4byte	.LFE127-.LFB127
 7877 00c8 00000000 		.4byte	.LFB128
 7878 00cc 50000000 		.4byte	.LFE128-.LFB128
 7879 00d0 00000000 		.4byte	.LFB129
 7880 00d4 1C000000 		.4byte	.LFE129-.LFB129
 7881 00d8 00000000 		.4byte	0
 7882 00dc 00000000 		.4byte	0
 7883              		.section	.debug_ranges,"",%progbits
 7884              	.Ldebug_ranges0:
 7885 0000 00000000 		.4byte	.LFB105
 7886 0004 34020000 		.4byte	.LFE105
 7887 0008 00000000 		.4byte	.LFB106
 7888 000c 80000000 		.4byte	.LFE106
 7889 0010 00000000 		.4byte	.LFB107
 7890 0014 24000000 		.4byte	.LFE107
 7891 0018 00000000 		.4byte	.LFB110
 7892 001c 30000000 		.4byte	.LFE110
 7893 0020 00000000 		.4byte	.LFB109
 7894 0024 38000000 		.4byte	.LFE109
 7895 0028 00000000 		.4byte	.LFB111
 7896 002c 14000000 		.4byte	.LFE111
 7897 0030 00000000 		.4byte	.LFB108
 7898 0034 48000000 		.4byte	.LFE108
 7899 0038 00000000 		.4byte	.LFB112
 7900 003c 38000000 		.4byte	.LFE112
 7901 0040 00000000 		.4byte	.LFB113
 7902 0044 70000000 		.4byte	.LFE113
 7903 0048 00000000 		.4byte	.LFB115
 7904 004c 38000000 		.4byte	.LFE115
 7905 0050 00000000 		.4byte	.LFB114
 7906 0054 50000000 		.4byte	.LFE114
 7907 0058 00000000 		.4byte	.LFB116
 7908 005c 30000000 		.4byte	.LFE116
 7909 0060 00000000 		.4byte	.LFB117
 7910 0064 40000000 		.4byte	.LFE117
 7911 0068 00000000 		.4byte	.LFB118
 7912 006c 30000000 		.4byte	.LFE118
 7913 0070 00000000 		.4byte	.LFB119
 7914 0074 2C000000 		.4byte	.LFE119
 7915 0078 00000000 		.4byte	.LFB120
 7916 007c 34000000 		.4byte	.LFE120
 7917 0080 00000000 		.4byte	.LFB121
 7918 0084 34000000 		.4byte	.LFE121
 7919 0088 00000000 		.4byte	.LFB122
 7920 008c 84000000 		.4byte	.LFE122
 7921 0090 00000000 		.4byte	.LFB123
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 200


 7922 0094 60000000 		.4byte	.LFE123
 7923 0098 00000000 		.4byte	.LFB124
 7924 009c 74000000 		.4byte	.LFE124
 7925 00a0 00000000 		.4byte	.LFB125
 7926 00a4 58000000 		.4byte	.LFE125
 7927 00a8 00000000 		.4byte	.LFB126
 7928 00ac 58000000 		.4byte	.LFE126
 7929 00b0 00000000 		.4byte	.LFB127
 7930 00b4 20000000 		.4byte	.LFE127
 7931 00b8 00000000 		.4byte	.LFB128
 7932 00bc 50000000 		.4byte	.LFE128
 7933 00c0 00000000 		.4byte	.LFB129
 7934 00c4 1C000000 		.4byte	.LFE129
 7935 00c8 00000000 		.4byte	0
 7936 00cc 00000000 		.4byte	0
 7937              		.section	.debug_line,"",%progbits
 7938              	.Ldebug_line0:
 7939 0000 C0060000 		.section	.debug_str,"MS",%progbits,1
 7939      0200B402 
 7939      00000201 
 7939      FB0E0D00 
 7939      01010101 
 7940              	.LASF118:
 7941 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 7941      6843746C 
 7941      4D61696E 
 7941      57733146 
 7941      72657100 
 7942              	.LASF276:
 7943 0014 72616E67 		.ascii	"rangeThresReg\000"
 7943      65546872 
 7943      65735265 
 7943      6700
 7944              	.LASF275:
 7945 0022 6C6F774C 		.ascii	"lowLimit\000"
 7945      696D6974 
 7945      00
 7946              	.LASF25:
 7947 002b 52455345 		.ascii	"RESERVED\000"
 7947      52564544 
 7947      00
 7948              	.LASF54:
 7949 0034 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 7949      455F494E 
 7949      54525F4D 
 7949      41534B45 
 7949      4400
 7950              	.LASF39:
 7951 0046 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 7951      5F574F52 
 7951      4B5F5550 
 7951      44415445 
 7951      4400
 7952              	.LASF182:
 7953 0058 63795F73 		.ascii	"cy_stc_syspm_callback_params_t\000"
 7953      74635F73 
 7953      7973706D 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 201


 7953      5F63616C 
 7953      6C626163 
 7954              	.LASF305:
 7955 0077 63795F64 		.ascii	"cy_device\000"
 7955      65766963 
 7955      6500
 7956              	.LASF242:
 7957 0081 6368616E 		.ascii	"chan\000"
 7957      00
 7958              	.LASF273:
 7959 0086 66696E61 		.ascii	"finalResult\000"
 7959      6C526573 
 7959      756C7400 
 7960              	.LASF208:
 7961 0092 43595F53 		.ascii	"CY_SAR_NEG_SEL_VREF\000"
 7961      41525F4E 
 7961      45475F53 
 7961      454C5F56 
 7961      52454600 
 7962              	.LASF104:
 7963 00a6 70657269 		.ascii	"periClockNr\000"
 7963      436C6F63 
 7963      6B4E7200 
 7964              	.LASF163:
 7965 00b2 63686172 		.ascii	"char\000"
 7965      00
 7966              	.LASF78:
 7967 00b7 75646242 		.ascii	"udbBase\000"
 7967      61736500 
 7968              	.LASF30:
 7969 00bf 4348414E 		.ascii	"CHAN_EN\000"
 7969      5F454E00 
 7970              	.LASF174:
 7971 00c7 63795F65 		.ascii	"cy_en_syspm_status_t\000"
 7971      6E5F7379 
 7971      73706D5F 
 7971      73746174 
 7971      75735F74 
 7972              	.LASF77:
 7973 00dc 70657269 		.ascii	"periBase\000"
 7973      42617365 
 7973      00
 7974              	.LASF294:
 7975 00e5 73776974 		.ascii	"switchSelect\000"
 7975      63685365 
 7975      6C656374 
 7975      00
 7976              	.LASF153:
 7977 00f2 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 7977      73436D30 
 7977      4E6D6943 
 7977      746C4F66 
 7977      66736574 
 7978              	.LASF123:
 7979 0107 64774368 		.ascii	"dwChSize\000"
 7979      53697A65 
 7979      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 202


 7980              	.LASF284:
 7981 0110 61646343 		.ascii	"adcCounts\000"
 7981      6F756E74 
 7981      7300
 7982              	.LASF247:
 7983 011a 73696E67 		.ascii	"singleEndedSigned\000"
 7983      6C65456E 
 7983      64656453 
 7983      69676E65 
 7983      6400
 7984              	.LASF14:
 7985 012c 756E7369 		.ascii	"unsigned int\000"
 7985      676E6564 
 7985      20696E74 
 7985      00
 7986              	.LASF55:
 7987 0139 494E5452 		.ascii	"INTR_CAUSE\000"
 7987      5F434155 
 7987      534500
 7988              	.LASF105:
 7989 0144 736D6966 		.ascii	"smifDeviceNr\000"
 7989      44657669 
 7989      63654E72 
 7989      00
 7990              	.LASF216:
 7991 0151 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 7991      41525F52 
 7991      414E4745 
 7991      5F434F4E 
 7991      445F4F55 
 7992              	.LASF282:
 7993 016b 61646347 		.ascii	"adcGain\000"
 7993      61696E00 
 7994              	.LASF97:
 7995 0173 63707573 		.ascii	"cpussFlashPaSize\000"
 7995      73466C61 
 7995      73685061 
 7995      53697A65 
 7995      00
 7996              	.LASF196:
 7997 0184 63795F65 		.ascii	"cy_en_sar_switch_state_t\000"
 7997      6E5F7361 
 7997      725F7377 
 7997      69746368 
 7997      5F737461 
 7998              	.LASF7:
 7999 019d 5F5F696E 		.ascii	"__int32_t\000"
 7999      7433325F 
 7999      7400
 8000              	.LASF41:
 8001 01a7 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 8001      5F574F52 
 8001      4B5F4E45 
 8001      5756414C 
 8001      554500
 8002              	.LASF203:
 8003 01ba 43595F53 		.ascii	"CY_SAR_NEG_SEL_P1\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 203


 8003      41525F4E 
 8003      45475F53 
 8003      454C5F50 
 8003      3100
 8004              	.LASF75:
 8005 01cc 63707573 		.ascii	"cpussBase\000"
 8005      73426173 
 8005      6500
 8006              	.LASF205:
 8007 01d6 43595F53 		.ascii	"CY_SAR_NEG_SEL_P5\000"
 8007      41525F4E 
 8007      45475F53 
 8007      454C5F50 
 8007      3500
 8008              	.LASF206:
 8009 01e8 43595F53 		.ascii	"CY_SAR_NEG_SEL_P7\000"
 8009      41525F4E 
 8009      45475F53 
 8009      454C5F50 
 8009      3700
 8010              	.LASF99:
 8011 01fa 63707573 		.ascii	"cpussFmIrq\000"
 8011      73466D49 
 8011      727100
 8012              	.LASF186:
 8013 0205 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 8013      41525F43 
 8013      4F4E5645 
 8013      5253494F 
 8013      4E5F4E4F 
 8014              	.LASF100:
 8015 0224 63707573 		.ascii	"cpussNotConnectedIrq\000"
 8015      734E6F74 
 8015      436F6E6E 
 8015      65637465 
 8015      64497271 
 8016              	.LASF4:
 8017 0239 73686F72 		.ascii	"short int\000"
 8017      7420696E 
 8017      7400
 8018              	.LASF47:
 8019 0243 53415455 		.ascii	"SATURATE_INTR\000"
 8019      52415445 
 8019      5F494E54 
 8019      5200
 8020              	.LASF26:
 8021 0251 53414D50 		.ascii	"SAMPLE_TIME01\000"
 8021      4C455F54 
 8021      494D4530 
 8021      3100
 8022              	.LASF192:
 8023 025f 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 8023      41525F57 
 8023      4149545F 
 8023      464F525F 
 8023      52455355 
 8024              	.LASF59:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 204


 8025 0276 494E4A5F 		.ascii	"INJ_RESULT\000"
 8025      52455355 
 8025      4C5400
 8026              	.LASF134:
 8027 0281 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 8027      44697643 
 8027      6D645061 
 8027      44697653 
 8027      656C506F 
 8028              	.LASF298:
 8029 0297 73776974 		.ascii	"switchClearReg\000"
 8029      6368436C 
 8029      65617252 
 8029      656700
 8030              	.LASF44:
 8031 02a6 494E5452 		.ascii	"INTR_SET\000"
 8031      5F534554 
 8031      00
 8032              	.LASF111:
 8033 02af 63727970 		.ascii	"cryptoMemSize\000"
 8033      746F4D65 
 8033      6D53697A 
 8033      6500
 8034              	.LASF255:
 8035 02bd 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 8035      41525F57 
 8035      616B6575 
 8035      7000
 8036              	.LASF231:
 8037 02cb 73617449 		.ascii	"satIntrMask\000"
 8037      6E74724D 
 8037      61736B00 
 8038              	.LASF190:
 8039 02d7 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 8039      6E5F7361 
 8039      725F7374 
 8039      6172745F 
 8039      636F6E76 
 8040              	.LASF131:
 8041 02f5 70657269 		.ascii	"periTrGrSize\000"
 8041      54724772 
 8041      53697A65 
 8041      00
 8042              	.LASF159:
 8043 0302 69706353 		.ascii	"ipcStructSize\000"
 8043      74727563 
 8043      7453697A 
 8043      6500
 8044              	.LASF274:
 8045 0310 43795F53 		.ascii	"Cy_SAR_SetLowLimit\000"
 8045      41525F53 
 8045      65744C6F 
 8045      774C696D 
 8045      697400
 8046              	.LASF93:
 8047 0323 70726F74 		.ascii	"protVersion\000"
 8047      56657273 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 205


 8047      696F6E00 
 8048              	.LASF213:
 8049 032f 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 8049      41525F52 
 8049      414E4745 
 8049      5F434F4E 
 8049      445F4245 
 8050              	.LASF268:
 8051 0347 69735369 		.ascii	"isSigned\000"
 8051      676E6564 
 8051      00
 8052              	.LASF74:
 8053 0350 5341525F 		.ascii	"SAR_Type\000"
 8053      54797065 
 8053      00
 8054              	.LASF272:
 8055 0359 61646352 		.ascii	"adcResult16\000"
 8055      6573756C 
 8055      74313600 
 8056              	.LASF265:
 8057 0365 43795F53 		.ascii	"Cy_SAR_IsChannelSingleEnded\000"
 8057      41525F49 
 8057      73436861 
 8057      6E6E656C 
 8057      53696E67 
 8058              	.LASF133:
 8059 0381 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 8059      44697643 
 8059      6D645479 
 8059      70655365 
 8059      6C506F73 
 8060              	.LASF204:
 8061 0396 43595F53 		.ascii	"CY_SAR_NEG_SEL_P3\000"
 8061      41525F4E 
 8061      45475F53 
 8061      454C5F50 
 8061      3300
 8062              	.LASF150:
 8063 03a8 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 8063      73547269 
 8063      6D52616D 
 8063      43746C4F 
 8063      66667365 
 8064              	.LASF301:
 8065 03be 43795F53 		.ascii	"Cy_SAR_DeepSleepCallback\000"
 8065      41525F44 
 8065      65657053 
 8065      6C656570 
 8065      43616C6C 
 8066              	.LASF176:
 8067 03d7 43595F53 		.ascii	"CY_SYSPM_CHECK_FAIL\000"
 8067      5953504D 
 8067      5F434845 
 8067      434B5F46 
 8067      41494C00 
 8068              	.LASF161:
 8069 03eb 63795F73 		.ascii	"cy_stc_device_t\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 206


 8069      74635F64 
 8069      65766963 
 8069      655F7400 
 8070              	.LASF19:
 8071 03fb 75696E74 		.ascii	"uint32_t\000"
 8071      33325F74 
 8071      00
 8072              	.LASF143:
 8073 0404 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 8073      50727443 
 8073      66674F75 
 8073      744F6666 
 8073      73657400 
 8074              	.LASF43:
 8075 0418 494E5452 		.ascii	"INTR\000"
 8075      00
 8076              	.LASF165:
 8077 041d 666C6F61 		.ascii	"float\000"
 8077      7400
 8078              	.LASF86:
 8079 0423 63727970 		.ascii	"cryptoVersion\000"
 8079      746F5665 
 8079      7273696F 
 8079      6E00
 8080              	.LASF115:
 8081 0431 666C6173 		.ascii	"flashProgramDelay\000"
 8081      6850726F 
 8081      6772616D 
 8081      44656C61 
 8081      7900
 8082              	.LASF180:
 8083 0443 62617365 		.ascii	"base\000"
 8083      00
 8084              	.LASF76:
 8085 0448 666C6173 		.ascii	"flashcBase\000"
 8085      68634261 
 8085      736500
 8086              	.LASF16:
 8087 0453 696E7431 		.ascii	"int16_t\000"
 8087      365F7400 
 8088              	.LASF142:
 8089 045b 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 8089      50727443 
 8089      6667496E 
 8089      4F666673 
 8089      657400
 8090              	.LASF244:
 8091 046e 72657375 		.ascii	"result\000"
 8091      6C7400
 8092              	.LASF13:
 8093 0475 6C6F6E67 		.ascii	"long long unsigned int\000"
 8093      206C6F6E 
 8093      6720756E 
 8093      7369676E 
 8093      65642069 
 8094              	.LASF248:
 8095 048c 6368616E 		.ascii	"chanSingleEnded\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 207


 8095      53696E67 
 8095      6C65456E 
 8095      64656400 
 8096              	.LASF144:
 8097 049c 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 8097      50727443 
 8097      66675369 
 8097      6F4F6666 
 8097      73657400 
 8098              	.LASF280:
 8099 04b0 6F666673 		.ascii	"offset\000"
 8099      657400
 8100              	.LASF135:
 8101 04b7 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 8101      44697643 
 8101      6D645061 
 8101      54797065 
 8101      53656C50 
 8102              	.LASF291:
 8103 04ce 43795F53 		.ascii	"Cy_SAR_CountsTo_uVolts\000"
 8103      41525F43 
 8103      6F756E74 
 8103      73546F5F 
 8103      75566F6C 
 8104              	.LASF27:
 8105 04e5 53414D50 		.ascii	"SAMPLE_TIME23\000"
 8105      4C455F54 
 8105      494D4532 
 8105      3300
 8106              	.LASF226:
 8107 04f3 72616E67 		.ascii	"rangeThres\000"
 8107      65546872 
 8107      657300
 8108              	.LASF5:
 8109 04fe 5F5F7569 		.ascii	"__uint16_t\000"
 8109      6E743136 
 8109      5F7400
 8110              	.LASF267:
 8111 0509 43795F53 		.ascii	"Cy_SAR_IsChannelSigned\000"
 8111      41525F49 
 8111      73436861 
 8111      6E6E656C 
 8111      5369676E 
 8112              	.LASF164:
 8113 0520 666C6F61 		.ascii	"float32_t\000"
 8113      7433325F 
 8113      7400
 8114              	.LASF238:
 8115 052a 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 8115      74635F73 
 8115      61725F63 
 8115      6F6E6669 
 8115      675F7400 
 8116              	.LASF222:
 8117 053e 6374726C 		.ascii	"ctrl\000"
 8117      00
 8118              	.LASF254:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 208


 8119 0543 73746172 		.ascii	"startSelect\000"
 8119      7453656C 
 8119      65637400 
 8120              	.LASF266:
 8121 054f 69735369 		.ascii	"isSingleEnded\000"
 8121      6E676C65 
 8121      456E6465 
 8121      6400
 8122              	.LASF214:
 8123 055d 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 8123      41525F52 
 8123      414E4745 
 8123      5F434F4E 
 8123      445F494E 
 8124              	.LASF168:
 8125 0576 43595F53 		.ascii	"CY_SYSPM_SUCCESS\000"
 8125      5953504D 
 8125      5F535543 
 8125      43455353 
 8125      00
 8126              	.LASF120:
 8127 0587 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 8127      6843746C 
 8127      4D61696E 
 8127      57733346 
 8127      72657100 
 8128              	.LASF102:
 8129 059b 73727373 		.ascii	"srssNumPll\000"
 8129      4E756D50 
 8129      6C6C00
 8130              	.LASF200:
 8131 05a6 43595F53 		.ascii	"CY_SAR_MUX_SWITCH0\000"
 8131      41525F4D 
 8131      55585F53 
 8131      57495443 
 8131      483000
 8132              	.LASF250:
 8133 05b9 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 8133      41525F44 
 8133      65496E69 
 8133      7400
 8134              	.LASF20:
 8135 05c7 696E7436 		.ascii	"int64_t\000"
 8135      345F7400 
 8136              	.LASF113:
 8137 05cf 666C6173 		.ascii	"flashPipeRequired\000"
 8137      68506970 
 8137      65526571 
 8137      75697265 
 8137      6400
 8138              	.LASF53:
 8139 05e1 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 8139      455F494E 
 8139      54525F4D 
 8139      41534B00 
 8140              	.LASF166:
 8141 05f1 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 209


 8141      6C6500
 8142              	.LASF288:
 8143 05f8 72657375 		.ascii	"result_Volts\000"
 8143      6C745F56 
 8143      6F6C7473 
 8143      00
 8144              	.LASF237:
 8145 0605 5F426F6F 		.ascii	"_Bool\000"
 8145      6C00
 8146              	.LASF29:
 8147 060b 52414E47 		.ascii	"RANGE_COND\000"
 8147      455F434F 
 8147      4E4400
 8148              	.LASF117:
 8149 0616 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 8149      6843746C 
 8149      4D61696E 
 8149      57733046 
 8149      72657100 
 8150              	.LASF67:
 8151 062a 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 8151      53574954 
 8151      43485F44 
 8151      535F4354 
 8151      524C00
 8152              	.LASF219:
 8153 063d 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 8153      41525F49 
 8153      4E54525F 
 8153      454F535F 
 8153      4D41534B 
 8154              	.LASF81:
 8155 0652 6770696F 		.ascii	"gpioBase\000"
 8155      42617365 
 8155      00
 8156              	.LASF184:
 8157 065b 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 8157      41525F42 
 8157      41445F50 
 8157      4152414D 
 8157      00
 8158              	.LASF289:
 8159 066c 43795F53 		.ascii	"Cy_SAR_CountsTo_mVolts\000"
 8159      41525F43 
 8159      6F756E74 
 8159      73546F5F 
 8159      6D566F6C 
 8160              	.LASF152:
 8161 0683 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 8161      73537973 
 8161      5469636B 
 8161      43746C4F 
 8161      66667365 
 8162              	.LASF108:
 8163 0699 75646250 		.ascii	"udbPresent\000"
 8163      72657365 
 8163      6E7400
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 210


 8164              	.LASF300:
 8165 06a4 43795F53 		.ascii	"Cy_SAR_SetSwitchSarSeqCtrl\000"
 8165      41525F53 
 8165      65745377 
 8165      69746368 
 8165      53617253 
 8166              	.LASF126:
 8167 06bf 64775374 		.ascii	"dwStatusChIdxPos\000"
 8167      61747573 
 8167      43684964 
 8167      78506F73 
 8167      00
 8168              	.LASF239:
 8169 06d0 6877456E 		.ascii	"hwEnabled\000"
 8169      61626C65 
 8169      6400
 8170              	.LASF73:
 8171 06da 5341525F 		.ascii	"SAR_V1_Type\000"
 8171      56315F54 
 8171      79706500 
 8172              	.LASF170:
 8173 06e6 43595F53 		.ascii	"CY_SYSPM_TIMEOUT\000"
 8173      5953504D 
 8173      5F54494D 
 8173      454F5554 
 8173      00
 8174              	.LASF236:
 8175 06f7 76726566 		.ascii	"vrefMvValue\000"
 8175      4D765661 
 8175      6C756500 
 8176              	.LASF171:
 8177 0703 43595F53 		.ascii	"CY_SYSPM_INVALID_STATE\000"
 8177      5953504D 
 8177      5F494E56 
 8177      414C4944 
 8177      5F535441 
 8178              	.LASF50:
 8179 071a 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 8179      52415445 
 8179      5F494E54 
 8179      525F4D41 
 8179      534B4544 
 8180              	.LASF172:
 8181 072f 43595F53 		.ascii	"CY_SYSPM_CANCELED\000"
 8181      5953504D 
 8181      5F43414E 
 8181      43454C45 
 8181      4400
 8182              	.LASF48:
 8183 0741 53415455 		.ascii	"SATURATE_INTR_SET\000"
 8183      52415445 
 8183      5F494E54 
 8183      525F5345 
 8183      5400
 8184              	.LASF215:
 8185 0753 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 8185      41525F52 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 211


 8185      414E4745 
 8185      5F434F4E 
 8185      445F4142 
 8186              	.LASF199:
 8187 076b 63795F65 		.ascii	"cy_en_sar_switch_sar_seq_ctrl_t\000"
 8187      6E5F7361 
 8187      725F7377 
 8187      69746368 
 8187      5F736172 
 8188              	.LASF308:
 8189 078b 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 8189      79734C69 
 8189      625F4173 
 8189      73657274 
 8189      4661696C 
 8190              	.LASF277:
 8191 07a2 43795F53 		.ascii	"Cy_SAR_SetHighLimit\000"
 8191      41525F53 
 8191      65744869 
 8191      67684C69 
 8191      6D697400 
 8192              	.LASF228:
 8193 07b6 6368616E 		.ascii	"chanEn\000"
 8193      456E00
 8194              	.LASF138:
 8195 07bd 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 8195      44697631 
 8195      365F3543 
 8195      746C4F66 
 8195      66736574 
 8196              	.LASF109:
 8197 07d2 73797350 		.ascii	"sysPmSimoPresent\000"
 8197      6D53696D 
 8197      6F507265 
 8197      73656E74 
 8197      00
 8198              	.LASF42:
 8199 07e3 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 8199      5F524553 
 8199      554C545F 
 8199      4E455756 
 8199      414C5545 
 8200              	.LASF57:
 8201 07f8 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 8201      4348414E 
 8201      5F434F4E 
 8201      46494700 
 8202              	.LASF299:
 8203 0808 43795F53 		.ascii	"Cy_SAR_GetAnalogSwitch\000"
 8203      41525F47 
 8203      6574416E 
 8203      616C6F67 
 8203      53776974 
 8204              	.LASF62:
 8205 081f 4156475F 		.ascii	"AVG_STAT\000"
 8205      53544154 
 8205      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 212


 8206              	.LASF127:
 8207 0828 64775374 		.ascii	"dwStatusChIdxMsk\000"
 8207      61747573 
 8207      43684964 
 8207      784D736B 
 8207      00
 8208              	.LASF15:
 8209 0839 75696E74 		.ascii	"uint8_t\000"
 8209      385F7400 
 8210              	.LASF211:
 8211 0841 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL\000"
 8211      41525F54 
 8211      52494747 
 8211      45525F4D 
 8211      4F44455F 
 8212              	.LASF292:
 8213 0864 72657375 		.ascii	"result_uVolts\000"
 8213      6C745F75 
 8213      566F6C74 
 8213      7300
 8214              	.LASF187:
 8215 0872 63795F65 		.ascii	"cy_en_sar_status_t\000"
 8215      6E5F7361 
 8215      725F7374 
 8215      61747573 
 8215      5F7400
 8216              	.LASF259:
 8217 0885 43795F53 		.ascii	"Cy_SAR_SetConvertMode\000"
 8217      41525F53 
 8217      6574436F 
 8217      6E766572 
 8217      744D6F64 
 8218              	.LASF132:
 8219 089b 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 8219      44697643 
 8219      6D644469 
 8219      7653656C 
 8219      4D736B00 
 8220              	.LASF283:
 8221 08af 43795F53 		.ascii	"Cy_SAR_RawCounts2Counts\000"
 8221      41525F52 
 8221      6177436F 
 8221      756E7473 
 8221      32436F75 
 8222              	.LASF183:
 8223 08c7 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 8223      41525F53 
 8223      55434345 
 8223      535300
 8224              	.LASF52:
 8225 08d6 52414E47 		.ascii	"RANGE_INTR_SET\000"
 8225      455F494E 
 8225      54525F53 
 8225      455400
 8226              	.LASF234:
 8227 08e5 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 8227      77697463 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 213


 8227      68537143 
 8227      74726C00 
 8228              	.LASF227:
 8229 08f5 72616E67 		.ascii	"rangeCond\000"
 8229      65436F6E 
 8229      6400
 8230              	.LASF156:
 8231 08ff 63707573 		.ascii	"cpussRam0Ctl0\000"
 8231      7352616D 
 8231      3043746C 
 8231      3000
 8232              	.LASF12:
 8233 090d 6C6F6E67 		.ascii	"long long int\000"
 8233      206C6F6E 
 8233      6720696E 
 8233      7400
 8234              	.LASF83:
 8235 091b 69706342 		.ascii	"ipcBase\000"
 8235      61736500 
 8236              	.LASF124:
 8237 0923 64774368 		.ascii	"dwChCtlPrioPos\000"
 8237      43746C50 
 8237      72696F50 
 8237      6F7300
 8238              	.LASF84:
 8239 0932 63727970 		.ascii	"cryptoBase\000"
 8239      746F4261 
 8239      736500
 8240              	.LASF220:
 8241 093d 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 8241      41525F49 
 8241      4E54525F 
 8241      4F564552 
 8241      464C4F57 
 8242              	.LASF306:
 8243 0957 43795F53 		.ascii	"Cy_SAR_offset\000"
 8243      41525F6F 
 8243      66667365 
 8243      7400
 8244              	.LASF139:
 8245 0965 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 8245      44697632 
 8245      345F3543 
 8245      746C4F66 
 8245      66736574 
 8246              	.LASF221:
 8247 097a 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 8247      41525F49 
 8247      4E54525F 
 8247      46575F43 
 8247      4F4C4C49 
 8248              	.LASF114:
 8249 0998 666C6173 		.ascii	"flashWriteDelay\000"
 8249      68577269 
 8249      74654465 
 8249      6C617900 
 8250              	.LASF210:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 214


 8251 09a8 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE\000"
 8251      41525F54 
 8251      52494747 
 8251      45525F4D 
 8251      4F44455F 
 8252              	.LASF310:
 8253 09ca 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8253      43313120 
 8253      352E342E 
 8253      31203230 
 8253      31363036 
 8254 09fd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 8254      20726576 
 8254      6973696F 
 8254      6E203233 
 8254      37373135 
 8255 0a30 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 8255      67202D66 
 8255      66756E63 
 8255      74696F6E 
 8255      2D736563 
 8256              	.LASF181:
 8257 0a5c 636F6E74 		.ascii	"context\000"
 8257      65787400 
 8258              	.LASF3:
 8259 0a64 5F5F696E 		.ascii	"__int16_t\000"
 8259      7431365F 
 8259      7400
 8260              	.LASF80:
 8261 0a6e 6873696F 		.ascii	"hsiomBase\000"
 8261      6D426173 
 8261      6500
 8262              	.LASF253:
 8263 0a78 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 8263      41525F53 
 8263      74617274 
 8263      436F6E76 
 8263      65727400 
 8264              	.LASF37:
 8265 0a8c 4348414E 		.ascii	"CHAN_RESULT\000"
 8265      5F524553 
 8265      554C5400 
 8266              	.LASF157:
 8267 0a98 63707573 		.ascii	"cpussRam1Ctl0\000"
 8267      7352616D 
 8267      3143746C 
 8267      3000
 8268              	.LASF130:
 8269 0aa6 70657269 		.ascii	"periTrGrOffset\000"
 8269      54724772 
 8269      4F666673 
 8269      657400
 8270              	.LASF167:
 8271 0ab5 75696E74 		.ascii	"uint16\000"
 8271      313600
 8272              	.LASF51:
 8273 0abc 52414E47 		.ascii	"RANGE_INTR\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 215


 8273      455F494E 
 8273      545200
 8274              	.LASF96:
 8275 0ac7 63707573 		.ascii	"cpussDwChNr\000"
 8275      73447743 
 8275      684E7200 
 8276              	.LASF45:
 8277 0ad3 494E5452 		.ascii	"INTR_MASK\000"
 8277      5F4D4153 
 8277      4B00
 8278              	.LASF24:
 8279 0add 53414D50 		.ascii	"SAMPLE_CTRL\000"
 8279      4C455F43 
 8279      54524C00 
 8280              	.LASF297:
 8281 0ae9 73776974 		.ascii	"switchReg\000"
 8281      63685265 
 8281      6700
 8282              	.LASF94:
 8283 0af3 63707573 		.ascii	"cpussIpcNr\000"
 8283      73497063 
 8283      4E7200
 8284              	.LASF65:
 8285 0afe 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 8285      53574954 
 8285      43485F43 
 8285      4C454152 
 8285      3000
 8286              	.LASF106:
 8287 0b10 70617373 		.ascii	"passSarChannels\000"
 8287      53617243 
 8287      68616E6E 
 8287      656C7300 
 8288              	.LASF158:
 8289 0b20 63707573 		.ascii	"cpussRam2Ctl0\000"
 8289      7352616D 
 8289      3243746C 
 8289      3000
 8290              	.LASF307:
 8291 0b2e 43795F53 		.ascii	"Cy_SAR_countsPer10Volt\000"
 8291      41525F63 
 8291      6F756E74 
 8291      73506572 
 8291      3130566F 
 8292              	.LASF188:
 8293 0b45 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 8293      41525F53 
 8293      54415254 
 8293      5F434F4E 
 8293      56455254 
 8294              	.LASF303:
 8295 0b66 72657475 		.ascii	"returnValue\000"
 8295      726E5661 
 8295      6C756500 
 8296              	.LASF31:
 8297 0b72 53544152 		.ascii	"START_CTRL\000"
 8297      545F4354 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 216


 8297      524C00
 8298              	.LASF185:
 8299 0b7d 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 8299      41525F54 
 8299      494D454F 
 8299      555400
 8300              	.LASF245:
 8301 0b8c 636F756E 		.ascii	"counts\000"
 8301      747300
 8302              	.LASF137:
 8303 0b93 70657269 		.ascii	"periDiv16CtlOffset\000"
 8303      44697631 
 8303      3643746C 
 8303      4F666673 
 8303      657400
 8304              	.LASF207:
 8305 0ba6 43595F53 		.ascii	"CY_SAR_NEG_SEL_ACORE\000"
 8305      41525F4E 
 8305      45475F53 
 8305      454C5F41 
 8305      434F5245 
 8306              	.LASF11:
 8307 0bbb 5F5F696E 		.ascii	"__int64_t\000"
 8307      7436345F 
 8307      7400
 8308              	.LASF233:
 8309 0bc5 6D757853 		.ascii	"muxSwitch\000"
 8309      77697463 
 8309      6800
 8310              	.LASF6:
 8311 0bcf 73686F72 		.ascii	"short unsigned int\000"
 8311      7420756E 
 8311      7369676E 
 8311      65642069 
 8311      6E7400
 8312              	.LASF21:
 8313 0be2 6C6F6E67 		.ascii	"long double\000"
 8313      20646F75 
 8313      626C6500 
 8314              	.LASF17:
 8315 0bee 75696E74 		.ascii	"uint16_t\000"
 8315      31365F74 
 8315      00
 8316              	.LASF79:
 8317 0bf7 70726F74 		.ascii	"protBase\000"
 8317      42617365 
 8317      00
 8318              	.LASF129:
 8319 0c00 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 8319      5472436D 
 8319      64477253 
 8319      656C4D73 
 8319      6B00
 8320              	.LASF224:
 8321 0c12 73616D70 		.ascii	"sampleTime01\000"
 8321      6C655469 
 8321      6D653031 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 217


 8321      00
 8322              	.LASF103:
 8323 0c1f 73727373 		.ascii	"srssNumHfroot\000"
 8323      4E756D48 
 8323      66726F6F 
 8323      7400
 8324              	.LASF87:
 8325 0c2d 64775665 		.ascii	"dwVersion\000"
 8325      7273696F 
 8325      6E00
 8326              	.LASF119:
 8327 0c37 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 8327      6843746C 
 8327      4D61696E 
 8327      57733246 
 8327      72657100 
 8328              	.LASF1:
 8329 0c4b 756E7369 		.ascii	"unsigned char\000"
 8329      676E6564 
 8329      20636861 
 8329      7200
 8330              	.LASF243:
 8331 0c59 636F6E66 		.ascii	"config\000"
 8331      696700
 8332              	.LASF313:
 8333 0c60 43795F53 		.ascii	"Cy_SAR_IsChannelDifferential\000"
 8333      41525F49 
 8333      73436861 
 8333      6E6E656C 
 8333      44696666 
 8334              	.LASF198:
 8335 0c7d 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 8335      41525F53 
 8335      57495443 
 8335      485F5345 
 8335      515F4354 
 8336              	.LASF22:
 8337 0c9b 73697A65 		.ascii	"sizetype\000"
 8337      74797065 
 8337      00
 8338              	.LASF191:
 8339 0ca4 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 8339      41525F52 
 8339      45545552 
 8339      4E5F5354 
 8339      41545553 
 8340              	.LASF290:
 8341 0cb9 72657375 		.ascii	"result_mVolts\000"
 8341      6C745F6D 
 8341      566F6C74 
 8341      7300
 8342              	.LASF148:
 8343 0cc7 63707573 		.ascii	"cpussCm0StatusOffset\000"
 8343      73436D30 
 8343      53746174 
 8343      75734F66 
 8343      66736574 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 218


 8344              	.LASF136:
 8345 0cdc 70657269 		.ascii	"periDiv8CtlOffset\000"
 8345      44697638 
 8345      43746C4F 
 8345      66667365 
 8345      7400
 8346              	.LASF34:
 8347 0cee 52455345 		.ascii	"RESERVED2\000"
 8347      52564544 
 8347      3200
 8348              	.LASF36:
 8349 0cf8 52455345 		.ascii	"RESERVED3\000"
 8349      52564544 
 8349      3300
 8350              	.LASF38:
 8351 0d02 52455345 		.ascii	"RESERVED4\000"
 8351      52564544 
 8351      3400
 8352              	.LASF56:
 8353 0d0c 52455345 		.ascii	"RESERVED5\000"
 8353      52564544 
 8353      3500
 8354              	.LASF58:
 8355 0d16 52455345 		.ascii	"RESERVED6\000"
 8355      52564544 
 8355      3600
 8356              	.LASF60:
 8357 0d20 52455345 		.ascii	"RESERVED7\000"
 8357      52564544 
 8357      3700
 8358              	.LASF63:
 8359 0d2a 52455345 		.ascii	"RESERVED8\000"
 8359      52564544 
 8359      3800
 8360              	.LASF66:
 8361 0d34 52455345 		.ascii	"RESERVED9\000"
 8361      52564544 
 8361      3900
 8362              	.LASF179:
 8363 0d3e 63795F65 		.ascii	"cy_en_syspm_callback_mode_t\000"
 8363      6E5F7379 
 8363      73706D5F 
 8363      63616C6C 
 8363      6261636B 
 8364              	.LASF68:
 8365 0d5a 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 8365      53574954 
 8365      43485F53 
 8365      515F4354 
 8365      524C00
 8366              	.LASF8:
 8367 0d6d 6C6F6E67 		.ascii	"long int\000"
 8367      20696E74 
 8367      00
 8368              	.LASF241:
 8369 0d76 63795F73 		.ascii	"cy_stc_sar_state_backup_t\000"
 8369      74635F73 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 219


 8369      61725F73 
 8369      74617465 
 8369      5F626163 
 8370              	.LASF85:
 8371 0d90 63707573 		.ascii	"cpussVersion\000"
 8371      73566572 
 8371      73696F6E 
 8371      00
 8372              	.LASF98:
 8373 0d9d 63707573 		.ascii	"cpussIpc0Irq\000"
 8373      73497063 
 8373      30497271 
 8373      00
 8374              	.LASF258:
 8375 0daa 6374726C 		.ascii	"ctrlReg\000"
 8375      52656700 
 8376              	.LASF89:
 8377 0db2 6770696F 		.ascii	"gpioVersion\000"
 8377      56657273 
 8377      696F6E00 
 8378              	.LASF88:
 8379 0dbe 666C6173 		.ascii	"flashcVersion\000"
 8379      68635665 
 8379      7273696F 
 8379      6E00
 8380              	.LASF312:
 8381 0dcc 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 8381      635C4461 
 8381      74615C56 
 8381      53636F64 
 8381      655C4749 
 8382 0df9 65735C45 		.ascii	"es\\Example_DevKitLightSensor\\Onethinx_Creator.cyd"
 8382      78616D70 
 8382      6C655F44 
 8382      65764B69 
 8382      744C6967 
 8383 0e2a 736E00   		.ascii	"sn\000"
 8384              	.LASF212:
 8385 0e2d 63795F65 		.ascii	"cy_en_sar_sample_ctrl_trigger_mode_t\000"
 8385      6E5F7361 
 8385      725F7361 
 8385      6D706C65 
 8385      5F637472 
 8386              	.LASF285:
 8387 0e52 74656D70 		.ascii	"temp\000"
 8387      00
 8388              	.LASF28:
 8389 0e57 52414E47 		.ascii	"RANGE_THRES\000"
 8389      455F5448 
 8389      52455300 
 8390              	.LASF295:
 8391 0e63 73776974 		.ascii	"switchMask\000"
 8391      63684D61 
 8391      736B00
 8392              	.LASF162:
 8393 0e6e 63686172 		.ascii	"char_t\000"
 8393      5F7400
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 220


 8394              	.LASF286:
 8395 0e75 61766572 		.ascii	"averageAdcSamplesDiv\000"
 8395      61676541 
 8395      64635361 
 8395      6D706C65 
 8395      73446976 
 8396              	.LASF209:
 8397 0e8a 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_ONLY\000"
 8397      41525F54 
 8397      52494747 
 8397      45525F4D 
 8397      4F44455F 
 8398              	.LASF35:
 8399 0ea6 4348414E 		.ascii	"CHAN_WORK\000"
 8399      5F574F52 
 8399      4B00
 8400              	.LASF201:
 8401 0eb0 63795F65 		.ascii	"cy_en_sar_switch_register_sel_t\000"
 8401      6E5F7361 
 8401      725F7377 
 8401      69746368 
 8401      5F726567 
 8402              	.LASF260:
 8403 0ed0 6D6F6465 		.ascii	"mode\000"
 8403      00
 8404              	.LASF257:
 8405 0ed5 43795F53 		.ascii	"Cy_SAR_DeepSleep\000"
 8405      41525F44 
 8405      65657053 
 8405      6C656570 
 8405      00
 8406              	.LASF278:
 8407 0ee6 68696768 		.ascii	"highLimit\000"
 8407      4C696D69 
 8407      7400
 8408              	.LASF240:
 8409 0ef0 636F6E74 		.ascii	"continuous\000"
 8409      696E756F 
 8409      757300
 8410              	.LASF149:
 8411 0efb 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 8411      73436D34 
 8411      50777243 
 8411      746C4F66 
 8411      66736574 
 8412              	.LASF2:
 8413 0f10 5F5F7569 		.ascii	"__uint8_t\000"
 8413      6E74385F 
 8413      7400
 8414              	.LASF311:
 8415 0f1a 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 8415      72617465 
 8415      645F536F 
 8415      75726365 
 8415      5C50536F 
 8416 0f48 7361725C 		.ascii	"sar\\cy_sar.c\000"
 8416      63795F73 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 221


 8416      61722E63 
 8416      00
 8417              	.LASF281:
 8418 0f55 43795F53 		.ascii	"Cy_SAR_SetGain\000"
 8418      41525F53 
 8418      65744761 
 8418      696E00
 8419              	.LASF140:
 8420 0f64 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 8420      50727449 
 8420      6E747243 
 8420      66674F66 
 8420      66736574 
 8421              	.LASF146:
 8422 0f79 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 8422      73436D34 
 8422      436C6F63 
 8422      6B43746C 
 8422      4F666673 
 8423              	.LASF46:
 8424 0f90 494E5452 		.ascii	"INTR_MASKED\000"
 8424      5F4D4153 
 8424      4B454400 
 8425              	.LASF151:
 8426 0f9c 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 8426      73547269 
 8426      6D526F6D 
 8426      43746C4F 
 8426      66667365 
 8427              	.LASF225:
 8428 0fb2 73616D70 		.ascii	"sampleTime23\000"
 8428      6C655469 
 8428      6D653233 
 8428      00
 8429              	.LASF252:
 8430 0fbf 43795F53 		.ascii	"Cy_SAR_Enable\000"
 8430      41525F45 
 8430      6E61626C 
 8430      6500
 8431              	.LASF90:
 8432 0fcd 6873696F 		.ascii	"hsiomVersion\000"
 8432      6D566572 
 8432      73696F6E 
 8432      00
 8433              	.LASF10:
 8434 0fda 6C6F6E67 		.ascii	"long unsigned int\000"
 8434      20756E73 
 8434      69676E65 
 8434      6420696E 
 8434      7400
 8435              	.LASF155:
 8436 0fec 63707573 		.ascii	"cpussRomCtl\000"
 8436      73526F6D 
 8436      43746C00 
 8437              	.LASF269:
 8438 0ff8 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 8438      41525F47 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 222


 8438      65745265 
 8438      73756C74 
 8438      313600
 8439              	.LASF18:
 8440 100b 696E7433 		.ascii	"int32_t\000"
 8440      325F7400 
 8441              	.LASF64:
 8442 1013 4D55585F 		.ascii	"MUX_SWITCH0\000"
 8442      53574954 
 8442      43483000 
 8443              	.LASF40:
 8444 101f 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 8444      5F524553 
 8444      554C545F 
 8444      55504441 
 8444      54454400 
 8445              	.LASF193:
 8446 1033 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 8446      6E5F7361 
 8446      725F7265 
 8446      7475726E 
 8446      5F6D6F64 
 8447              	.LASF270:
 8448 104b 61646352 		.ascii	"adcResult\000"
 8448      6573756C 
 8448      7400
 8449              	.LASF202:
 8450 1055 43595F53 		.ascii	"CY_SAR_NEG_SEL_VSSA_KELVIN\000"
 8450      41525F4E 
 8450      45475F53 
 8450      454C5F56 
 8450      5353415F 
 8451              	.LASF33:
 8452 1070 4348414E 		.ascii	"CHAN_CONFIG\000"
 8452      5F434F4E 
 8452      46494700 
 8453              	.LASF309:
 8454 107c 43795F53 		.ascii	"Cy_SysLib_DelayUs\000"
 8454      79734C69 
 8454      625F4465 
 8454      6C617955 
 8454      7300
 8455              	.LASF223:
 8456 108e 73616D70 		.ascii	"sampleCtrl\000"
 8456      6C654374 
 8456      726C00
 8457              	.LASF246:
 8458 1099 76726566 		.ascii	"vrefNegSelect\000"
 8458      4E656753 
 8458      656C6563 
 8458      7400
 8459              	.LASF218:
 8460 10a7 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 8460      41525F49 
 8460      4E54525F 
 8460      4D41534B 
 8460      5F4E4F4E 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 223


 8461              	.LASF71:
 8462 10bd 414E415F 		.ascii	"ANA_TRIM0\000"
 8462      5452494D 
 8462      3000
 8463              	.LASF72:
 8464 10c7 414E415F 		.ascii	"ANA_TRIM1\000"
 8464      5452494D 
 8464      3100
 8465              	.LASF9:
 8466 10d1 5F5F7569 		.ascii	"__uint32_t\000"
 8466      6E743332 
 8466      5F7400
 8467              	.LASF287:
 8468 10dc 43795F53 		.ascii	"Cy_SAR_CountsTo_Volts\000"
 8468      41525F43 
 8468      6F756E74 
 8468      73546F5F 
 8468      566F6C74 
 8469              	.LASF160:
 8470 10f2 6970634C 		.ascii	"ipcLockStatusOffset\000"
 8470      6F636B53 
 8470      74617475 
 8470      734F6666 
 8470      73657400 
 8471              	.LASF194:
 8472 1106 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 8472      41525F53 
 8472      57495443 
 8472      485F4F50 
 8472      454E00
 8473              	.LASF154:
 8474 1119 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 8474      73436D34 
 8474      4E6D6943 
 8474      746C4F66 
 8474      66736574 
 8475              	.LASF49:
 8476 112e 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 8476      52415445 
 8476      5F494E54 
 8476      525F4D41 
 8476      534B00
 8477              	.LASF263:
 8478 1141 7265744D 		.ascii	"retMode\000"
 8478      6F646500 
 8479              	.LASF70:
 8480 1149 52455345 		.ascii	"RESERVED10\000"
 8480      52564544 
 8480      313000
 8481              	.LASF173:
 8482 1154 43595F53 		.ascii	"CY_SYSPM_FAIL\000"
 8482      5953504D 
 8482      5F464149 
 8482      4C00
 8483              	.LASF116:
 8484 1162 666C6173 		.ascii	"flashEraseDelay\000"
 8484      68457261 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 224


 8484      73654465 
 8484      6C617900 
 8485              	.LASF293:
 8486 1172 43795F53 		.ascii	"Cy_SAR_SetAnalogSwitch\000"
 8486      41525F53 
 8486      6574416E 
 8486      616C6F67 
 8486      53776974 
 8487              	.LASF296:
 8488 1189 73746174 		.ascii	"state\000"
 8488      6500
 8489              	.LASF264:
 8490 118f 656E644F 		.ascii	"endOfConversion\000"
 8490      66436F6E 
 8490      76657273 
 8490      696F6E00 
 8491              	.LASF197:
 8492 119f 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 8492      41525F53 
 8492      57495443 
 8492      485F5345 
 8492      515F4354 
 8493              	.LASF145:
 8494 11be 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 8494      73436D30 
 8494      436C6F63 
 8494      6B43746C 
 8494      4F666673 
 8495              	.LASF249:
 8496 11d5 43795F53 		.ascii	"Cy_SAR_Init\000"
 8496      41525F49 
 8496      6E697400 
 8497              	.LASF110:
 8498 11e1 70726F74 		.ascii	"protBusMasterMask\000"
 8498      4275734D 
 8498      61737465 
 8498      724D6173 
 8498      6B00
 8499              	.LASF112:
 8500 11f3 666C6173 		.ascii	"flashRwwRequired\000"
 8500      68527777 
 8500      52657175 
 8500      69726564 
 8500      00
 8501              	.LASF141:
 8502 1204 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 8502      50727443 
 8502      66674F66 
 8502      66736574 
 8502      00
 8503              	.LASF107:
 8504 1215 65704D6F 		.ascii	"epMonitorNr\000"
 8504      6E69746F 
 8504      724E7200 
 8505              	.LASF169:
 8506 1221 43595F53 		.ascii	"CY_SYSPM_BAD_PARAM\000"
 8506      5953504D 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 225


 8506      5F424144 
 8506      5F504152 
 8506      414D00
 8507              	.LASF302:
 8508 1234 63616C6C 		.ascii	"callbackParams\000"
 8508      6261636B 
 8508      50617261 
 8508      6D7300
 8509              	.LASF0:
 8510 1243 7369676E 		.ascii	"signed char\000"
 8510      65642063 
 8510      68617200 
 8511              	.LASF122:
 8512 124f 64774368 		.ascii	"dwChOffset\000"
 8512      4F666673 
 8512      657400
 8513              	.LASF95:
 8514 125a 63707573 		.ascii	"cpussIpcIrqNr\000"
 8514      73497063 
 8514      4972714E 
 8514      7200
 8515              	.LASF125:
 8516 1268 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 8516      43746C50 
 8516      7265656D 
 8516      70746162 
 8516      6C65506F 
 8517              	.LASF271:
 8518 127e 43795F53 		.ascii	"Cy_SAR_GetResult32\000"
 8518      41525F47 
 8518      65745265 
 8518      73756C74 
 8518      333200
 8519              	.LASF147:
 8520 1291 63707573 		.ascii	"cpussCm4StatusOffset\000"
 8520      73436D34 
 8520      53746174 
 8520      75734F66 
 8520      66736574 
 8521              	.LASF229:
 8522 12a6 6368616E 		.ascii	"chanConfig\000"
 8522      436F6E66 
 8522      696700
 8523              	.LASF69:
 8524 12b1 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 8524      53574954 
 8524      43485F53 
 8524      54415455 
 8524      5300
 8525              	.LASF92:
 8526 12c3 70657269 		.ascii	"periVersion\000"
 8526      56657273 
 8526      696F6E00 
 8527              	.LASF261:
 8528 12cf 73616D70 		.ascii	"sampleCtrlReg\000"
 8528      6C654374 
 8528      726C5265 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 226


 8528      6700
 8529              	.LASF251:
 8530 12dd 6465496E 		.ascii	"deInitRouting\000"
 8530      6974526F 
 8530      7574696E 
 8530      6700
 8531              	.LASF235:
 8532 12eb 636F6E66 		.ascii	"configRouting\000"
 8532      6967526F 
 8532      7574696E 
 8532      6700
 8533              	.LASF82:
 8534 12f9 70617373 		.ascii	"passBase\000"
 8534      42617365 
 8534      00
 8535              	.LASF32:
 8536 1302 52455345 		.ascii	"RESERVED1\000"
 8536      52564544 
 8536      3100
 8537              	.LASF101:
 8538 130c 73727373 		.ascii	"srssNumClkpath\000"
 8538      4E756D43 
 8538      6C6B7061 
 8538      746800
 8539              	.LASF61:
 8540 131b 53544154 		.ascii	"STATUS\000"
 8540      555300
 8541              	.LASF279:
 8542 1322 43795F53 		.ascii	"Cy_SAR_SetOffset\000"
 8542      41525F53 
 8542      65744F66 
 8542      66736574 
 8542      00
 8543              	.LASF121:
 8544 1333 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 8544      6843746C 
 8544      4D61696E 
 8544      57733446 
 8544      72657100 
 8545              	.LASF232:
 8546 1347 72616E67 		.ascii	"rangeIntrMask\000"
 8546      65496E74 
 8546      724D6173 
 8546      6B00
 8547              	.LASF195:
 8548 1355 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 8548      41525F53 
 8548      57495443 
 8548      485F434C 
 8548      4F534500 
 8549              	.LASF217:
 8550 1369 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 8550      6E5F7361 
 8550      725F7261 
 8550      6E67655F 
 8550      64657465 
 8551              	.LASF256:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 227


 8552 138c 43795F53 		.ascii	"Cy_SAR_StopConvert\000"
 8552      41525F53 
 8552      746F7043 
 8552      6F6E7665 
 8552      727400
 8553              	.LASF189:
 8554 139f 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 8554      41525F53 
 8554      54415254 
 8554      5F434F4E 
 8554      56455254 
 8555              	.LASF304:
 8556 13bf 656E6162 		.ascii	"enabledBeforeSleep\000"
 8556      6C656442 
 8556      65666F72 
 8556      65536C65 
 8556      657000
 8557              	.LASF91:
 8558 13d2 69706356 		.ascii	"ipcVersion\000"
 8558      65727369 
 8558      6F6E00
 8559              	.LASF230:
 8560 13dd 696E7472 		.ascii	"intrMask\000"
 8560      4D61736B 
 8560      00
 8561              	.LASF128:
 8562 13e6 70657269 		.ascii	"periTrCmdOffset\000"
 8562      5472436D 
 8562      644F6666 
 8562      73657400 
 8563              	.LASF262:
 8564 13f6 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 8564      41525F49 
 8564      73456E64 
 8564      436F6E76 
 8564      65727369 
 8565              	.LASF23:
 8566 140d 4354524C 		.ascii	"CTRL\000"
 8566      00
 8567              	.LASF177:
 8568 1412 43595F53 		.ascii	"CY_SYSPM_BEFORE_TRANSITION\000"
 8568      5953504D 
 8568      5F424546 
 8568      4F52455F 
 8568      5452414E 
 8569              	.LASF178:
 8570 142d 43595F53 		.ascii	"CY_SYSPM_AFTER_TRANSITION\000"
 8570      5953504D 
 8570      5F414654 
 8570      45525F54 
 8570      52414E53 
 8571              	.LASF175:
 8572 1447 43595F53 		.ascii	"CY_SYSPM_CHECK_READY\000"
 8572      5953504D 
 8572      5F434845 
 8572      434B5F52 
 8572      45414459 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\cc4tlliX.s 			page 228


 8573              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
