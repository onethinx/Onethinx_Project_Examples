ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"cy_efuse.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.ProcessOpcode,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	ProcessOpcode, %function
  25              	ProcessOpcode:
  26              	.LFB154:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\efuse\\cy_efuse.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \file cy_efuse.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \brief
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Provides API implementation of the eFuse driver.
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ********************************************************************************
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \copyright
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #include "cy_efuse.h"
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #include "cy_ipc_drv.h"
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /** \cond INTERNAL */
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_SUCCESS             (0xA0000000UL)    /**< The command completed with no er
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_STS_Msk             (0xF0000000UL)    /**< The status mask of the SROM API 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_INV_PROT            (0xF0000001UL)    /**< The API is not available in the 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_INV_ADDR            (0xF0000002UL)    /**< An attempt to read byte from the
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_READ_FUSE_BYTE      (0x03000000UL)    /**< The SROM API opcode for Read fus
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_OFFSET_Pos          (8UL)             /**< A fuse byte offset position in a
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_DATA_Msk            (0xFFUL)          /**< The mask for extracting data fro
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_IPC_STRUCT                 (Cy_IPC_Drv_GetIpcBaseAddress(CY_IPC_CHAN_SYSCALL)) /**
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_IPC_NOTIFY_STRUCT0         (0x1UL << CY_IPC_INTR_SYSCALL1) /**< IPC notify bit for
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /** \endcond */
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** static volatile uint32_t opcode;
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** static cy_en_efuse_status_t ProcessOpcode(void);
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: Cy_EFUSE_GetEfuseBit
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Reports the current state of a given eFuse bit-number. Consult the device TRM
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * to determine the target fuse bit number.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \note An attempt to read an eFuse data from a protected memory region
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * will generate a HardFault.
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param bitNum
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The number of the bit to read. The valid range of the bit number is
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * from 0 to EFUSE_EFUSE_NR * 32 * 8 - 1 where:
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - EFUSE_EFUSE_NR is number of efuse macros in the selected device series,
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - 32 is a number of fuse bytes in one efuse macro,
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - 8 is a number of fuse bits in the byte.
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The EFUSE_EFUSE_NR macro is defined in the series-specific header file, e.g
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \e \<PDL_DIR\>/devices/psoc6/include/psoc6_01_config.\e h
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * 
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param bitVal 
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The pointer to the location to store the bit value.
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return 
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \ref cy_en_efuse_status_t
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \funcusage
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The example below shows how to read device life-cycle register bits in
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * PSoC 6:
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \snippet eFuse_v1_0_sut_00.cydsn/main_cm0p.c SNIPPET_EFUSE_READ_BIT
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** cy_en_efuse_status_t Cy_EFUSE_GetEfuseBit(uint32_t bitNum, bool *bitVal)
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     if (bitVal != NULL)
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         uint32_t offset = bitNum / CY_EFUSE_BITS_PER_BYTE;
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         uint8_t byteVal;
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         *bitVal = false;
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         /* Read the eFuse byte */
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         result = Cy_EFUSE_GetEfuseByte(offset, &byteVal);
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         if (result == CY_EFUSE_SUCCESS)
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             uint32_t bitPos = bitNum % CY_EFUSE_BITS_PER_BYTE;
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* Extract the bit from the byte */
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             *bitVal = (((byteVal >> bitPos) & 0x01U) != 0U);
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     }
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (result);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 3


  88:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: Cy_EFUSE_GetEfuseByte
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Reports the current state of the eFuse byte.
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * If the offset parameter is beyond the available quantities,
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * zeroes will be stored to the byteVal parameter. Consult the device TRM
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * to determine the target fuse byte offset.
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \note An attempt to read an eFuse data from a protected memory region
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * will generate a HardFault.
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param offset
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The offset of the byte to read. The valid range of the byte offset is
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * from 0 to EFUSE_EFUSE_NR * 32 - 1 where:
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - EFUSE_EFUSE_NR is a number of efuse macros in the selected device series,
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - 32 is a number of fuse bytes in one efuse macro.
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The EFUSE_EFUSE_NR macro is defined in the series-specific header file, e.g
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \e \<PDL_DIR\>/devices/psoc6/include/psoc6_01_config.\e h
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param byteVal
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The pointer to the location to store eFuse data.
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return 
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \ref cy_en_efuse_status_t
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \funcusage
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The example below shows how to read a device life-cycle stage register in
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * PSoC 6:
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \snippet eFuse_v1_0_sut_00.cydsn/main_cm0p.c SNIPPET_EFUSE_READ_LIFECYCLE
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** cy_en_efuse_status_t Cy_EFUSE_GetEfuseByte(uint32_t offset, uint8_t *byteVal)
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     if (byteVal != NULL)
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         /* Prepare opcode before calling the SROM API */
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         opcode = CY_EFUSE_OPCODE_READ_FUSE_BYTE | (offset << CY_EFUSE_OPCODE_OFFSET_Pos);
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         /* Send the IPC message */
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         if (Cy_IPC_Drv_SendMsgPtr(CY_EFUSE_IPC_STRUCT, CY_EFUSE_IPC_NOTIFY_STRUCT0, (void*)&opcode)
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {           
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* Wait until the IPC structure is locked */
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             while(Cy_IPC_Drv_IsLockAcquired(CY_EFUSE_IPC_STRUCT) != false)
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* The result of the SROM API call is returned to the opcode variable */
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             if ((opcode & CY_EFUSE_OPCODE_STS_Msk) == CY_EFUSE_OPCODE_SUCCESS)
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 *byteVal = (uint8_t)(opcode & CY_EFUSE_OPCODE_DATA_Msk);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 4


 145:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 result = CY_EFUSE_SUCCESS;
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             else
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 result = ProcessOpcode();
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 *byteVal = 0U;
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         else
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_IPC_BUSY;
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     }
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (result);
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: Cy_EFUSE_GetExternalStatus
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * This function handles the case where a module such as a security image captures
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * a system call from this driver and reports its own status or error code,
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * for example, protection violation. In that case, a function from this
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * driver returns an unknown error (see \ref cy_en_efuse_status_t). After receipt
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * of an unknown error, the user may call this function to get the status
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * of the capturing module.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The user is responsible for parsing the content of the returned value
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * and casting it to the appropriate enumeration.
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The error code of the previous efuse operation.
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** uint32_t Cy_EFUSE_GetExternalStatus(void)
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (opcode);
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: ProcessOpcode
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Converts System Call returns to the eFuse driver return defines. If 
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * an unknown error was returned, the error code can be accessed via the
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Cy_EFUSE_GetExternalStatus() function.
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param opcode The value returned by a System Call.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \ref cy_en_efuse_status_t
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** static cy_en_efuse_status_t ProcessOpcode(void)
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 5


  28              		.loc 1 201 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result;
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     switch(opcode)
  33              		.loc 1 204 0
  34 0000 074B     		ldr	r3, .L7
  35 0002 1B68     		ldr	r3, [r3]
  36 0004 074A     		ldr	r2, .L7+4
  37 0006 9342     		cmp	r3, r2
  38 0008 03D0     		beq	.L3
  39 000a 0132     		adds	r2, r2, #1
  40 000c 9342     		cmp	r3, r2
  41 000e 04D0     		beq	.L5
  42 0010 01E0     		b	.L6
  43              	.L3:
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         case CY_EFUSE_OPCODE_INV_PROT :
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_INVALID_PROTECTION;
  44              		.loc 1 208 0
  45 0012 0548     		ldr	r0, .L7+8
  46 0014 7047     		bx	lr
  47              	.L6:
  48              	.LVL0:
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         case CY_EFUSE_OPCODE_INV_ADDR :
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_INVALID_FUSE_ADDR;
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         default :
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_ERR_UNC;
  49              		.loc 1 218 0
  50 0016 0548     		ldr	r0, .L7+12
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
  51              		.loc 1 219 0
  52 0018 7047     		bx	lr
  53              	.LVL1:
  54              	.L5:
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
  55              		.loc 1 213 0
  56 001a 0548     		ldr	r0, .L7+16
  57              	.LVL2:
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     }
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (result);
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
  58              		.loc 1 224 0
  59 001c 7047     		bx	lr
  60              	.L8:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 6


  61 001e 00BF     		.align	2
  62              	.L7:
  63 0020 00000000 		.word	.LANCHOR0
  64 0024 010000F0 		.word	-268435455
  65 0028 01006A00 		.word	6946817
  66 002c FF006A00 		.word	6947071
  67 0030 02006A00 		.word	6946818
  68              		.cfi_endproc
  69              	.LFE154:
  70              		.size	ProcessOpcode, .-ProcessOpcode
  71              		.section	.text.Cy_EFUSE_GetEfuseByte,"ax",%progbits
  72              		.align	2
  73              		.global	Cy_EFUSE_GetEfuseByte
  74              		.thumb
  75              		.thumb_func
  76              		.type	Cy_EFUSE_GetEfuseByte, %function
  77              	Cy_EFUSE_GetEfuseByte:
  78              	.LFB152:
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
  79              		.loc 1 125 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL3:
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
  84              		.loc 1 128 0
  85 0000 0029     		cmp	r1, #0
  86 0002 43D0     		beq	.L15
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
  87              		.loc 1 125 0
  88 0004 10B5     		push	{r4, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
  92 0006 0C46     		mov	r4, r1
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
  93              		.loc 1 131 0
  94 0008 0002     		lsls	r0, r0, #8
  95              	.LVL4:
  96 000a 40F04070 		orr	r0, r0, #50331648
  97 000e 214B     		ldr	r3, .L18
  98 0010 1860     		str	r0, [r3]
  99              	.LVL5:
 100              	.LBB14:
 101              	.LBB15:
 102              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/ipc/cy_ipc_drv.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \file cy_ipc_drv.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Provides an API declaration of the IPC driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 7


  12:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #ifndef CY_IPC_DRV_H
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_H
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The inter-processor communication (IPC) driver provides a safe and reliable
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * method to transfer data between CPUs. Hardware locking ensures that only one
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * device can acquire and transfer data at a time so no data is lost or
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * overwritten by asynchronous processes or CPUs.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Include either cy_ipc_pipe.h or cy_ipc_sema.h. Alternatively include cy_pdl.h 
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * There are three parts to the API:
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     - Driver-level (DRV) API - used internally by Semaphore and Pipe levels
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     - Pipe-level (PIPE) API - establishes a communication channel between
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       processors
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     - Semaphore-level (SEMA) API - enables users to set and clear flags to
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       synchronize operations.
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Firmware does not need to use the DRV API. It can implement IPC functionality
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * entirely with the PIPE and SEMA APIs.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_background Background
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC is implemented in hardware as a collection of individual communication
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * channels, each with a set of 32-bit registers. The IPC design implements a set
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of interrupts that enable each processor to notify the other that data is
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * available, or has been processed. There is also a locking mechanism that
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * allows only one CPU to gain access at a time.
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The Driver-level API manages each channel's registers to implement IPC
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * functionality. For information on the IPC registers, see the IPC chapter of
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the Technical Reference Manual (TRM).
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * At the hardware level, communication is a five-step process.
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The sending processor acquires a channel
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  It puts data into the channel
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The sender generates a notify event (interrupt)
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The receiving processor identifies the sender and retrieves the data
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The receiving processor generates a release event (interrupt)
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \image html ipc_driver.png
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * These transactions are handled transparently by the DRV-level API. Use the
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * PIPE and SEMA layers of the API to implement communication in your application.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The data transferred is limited to a single 32-bit value. As implemented by
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the PIPE API, that value is a pointer to a data structure of arbitrary size
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and complexity.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_overview Overview
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 8


  69:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The Pipe is the key element in the PDL design. A pipe is typically a
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * full-duplex communication channel between CPU cores. A pipe allows a single
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * conduit to transfer messages or data to and from multiple processes or CPUs.
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A pipe has two endpoints, one on each core. Each endpoint contains a dedicated
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC channel and an interrupt. IPC channels 0-7 and IPC interrupts 0-7 are
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * reserved for system use.
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The pipe also contains the number of clients it supports, and for each client
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * a callback function. So the pipe can service a number of clients, each with a
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * separate callback function, on either endpoint. The number of clients a pipe
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * supports is the sum of each endpoint's clients.
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This design enables any number of processes on the sending core to put
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * arbitrary data into a single pipe. The first element of that data is the
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * client ID of the client that should handle the data.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An interrupt notifies the receiving core that data is available. The receiving
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * core parses the data to identify the client, and then dispatches the event to
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the appropriate client via the client callback function. An interrupt notifies
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the sending core that the receiver is finished. In this way a single pipe can
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * manage arbitrary data transfers between cores with data flowing in either
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * direction.
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \image html ipc_ints.png
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The application can use semaphores to control access to shared resources, as
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * required by the application's logic.
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The PDL provides specific files that set up default IPC functionality.
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * They are system_psoc6.h, system_psoc6_cm0plus.c and system_psoc6_cm4.c. You 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * can modify these files based on the requirements of your design. 
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * If you use PSoC Creator as a development environment, it will not overwrite 
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * your changes when you generate the application or build your code.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_pipe_layer PIPE layer
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A pipe is a communication channel between two endpoints. PSoC 6 devices support
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * 16 IPC channels, and 16 IPC interrupts, each numbered 0-15. IPC Channels 0-7
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and IPC interrupts 0-7 are reserved for system use. Channels 8-15 and
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * interrupts 8-15 are available for application use.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A full duplex pipe uses two IPC channels, one per endpoint. Each endpoint
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * specifies all the information required to process a message (either sent or
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * received). Each endpoint is configured to use an IPC channel, and an IPC
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * interrupt. Common practice is to use the interrupt with the same number as
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the IPC channel. However, IPC Interrupts are not directly associated with the
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC channels, so any channel can use any interrupt.  Any IPC channel can
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * trigger 0, 1 or all the IPC interrupts at once, depending on the Notify or
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Release masks used.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * It is also possible to set up a one-directional pipe, using a single IPC
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * channel. In this design one processor is always the sender, and the other is
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * always the receiver. However, there are still two endpoints.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A pipe supports an arbitrary number of clients with an array of callback
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * functions, one per client. The client ID is the index number into the array
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 9


 126:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * for the client. After a pipe is configured and initialized, the application
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * calls Cy_IPC_Pipe_RegisterCallback() once per client to register each client's
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * callback function. Multiple clients can use the same callback function. The
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * endpoints in a pipe share the callback array.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Use Cy_IPC_Pipe_SendMessage() to send data. You specify both the "to" and
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * "from" endpoints, and a callback function to be used when the data transfer is
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * complete. The data is a 32-bit void pointer. The data pointed to is arbitrary,
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and can be an array, a structure, or a location in memory. The only limitation
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * is that the first element of the data must be a 32-bit unsigned word containing
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * a client ID number. The ID number is the index into the callback array.
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * When a message is sent, the receiving endpoint's interrupt handler is called.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The ISR can perform any task required by the design. However, as part of its
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * function it calls \ref Cy_IPC_Pipe_ExecCallback. This function retrieves the
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * client ID from the data and calls the associated callback function.
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The user-supplied callback function handles the data in whatever way is
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * appropriate based on the application logic.
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * After the callback function is returned by the receiver, it invokes the release
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * callback function defined by the sender of the message.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_sema_layer SEMA Layer
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A semaphore is a flag the application uses to control access to a shared
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * resource. The SEMA-level API uses an IPC channel to implement
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * semaphores. Startup code sets up a default semaphore system. The
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * default system creates an array of 128 semaphores (four 32-bit values).
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Semaphores 0-15 are reserved for system use. See
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Configuration Considerations - SEMA.
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Functions are available to initialize the semaphore system, to set or
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * clear a semaphore, or to get the semaphore's current status. Application
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * logic uses SEMA functions to relate a particular semaphore to a particular
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * shared resource, and set, clear, or check the flag when accessing the
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * shared resource.
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_cypipe Configuration Considerations - CYPIPE
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * There are none. The startup files set up the required CYPIPE for system
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * use. Do not modify the CYPIPE. It uses IPC channels 5 and 6 to implement full
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * duplex communication between cores. See System Interrupt (SysInt) for background.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * To create your own pipe (<b>USRPIPE</b>) you should edit startup files
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and take 4 steps:
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Define a pipe callbacks processing interrupt handler
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *      (similar to <b>Cy_SysIpcPipeIsrCm0</b> or <b>Cy_SysIpcPipeIsrCm4</b>)
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Define a callbacks array (similar to <b>systemIpcPipeSysCbArray</b>)
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Define your pipe configuration with a cy_stc_ipc_pipe_config_t type structure
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *      (similar to <b>systemIpcPipeConfigCm0</b> and <b>systemIpcPipeConfigCm4</b>)
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Call Cy_IPC_Pipe_Init() from each core to initialize your pipe (similar
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *      to call in the <b>SystemInit</b>)
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_sema Configuration Considerations - SEMA
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Startup code calls Cy_IPC_Sema_Init() with default values to set up semaphore 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * functionality. By default the semaphore system uses IPC channel 4, and 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 10


 183:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * creates 128 semaphores. Do <b>not</b> change the IPC channel. 
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * You can change the number of semaphores.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * To change the number of semaphores, modify this line of code in system_psoc6.h.
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \code
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * #define CY_IPC_SEMA_COUNT               (uint32_t)(128u)
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \endcode
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Startup also declares array ipcSemaArray to hold the semaphore
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * flags based on the size defined for this symbol. Use increments of 32. You
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * must have at least 32 semaphores. Semaphores 0-15 are reserved for
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * system use. Your application can use semaphores greater than 15.
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_more_information More Information
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * If the default startup file is not used, or SystemInit() is not called in your 
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * project, call the following three functions prior to executing any flash or 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * EmEEPROM write or erase operation:
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Sema_Init()
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Config()
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Init()
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_Flash_Init()
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * See the technical reference manual(TRM) for more information on the IPC.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_MISRA MISRA-C Compliance
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * <table class="doxtable">
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th>MISRA Rule</th>
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th>Rule Class (Required/Advisory)</th>
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th>Rule Description</th>
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th style="width: 50%;">Description of Deviation(s)</th>
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>10.3</td>
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>R</td>
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>The value of a complex expression of integer type shall be cast
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         only to a type of the same signedness that is no wider than the underlying
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         type of the expression.</td>
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>The cast from integer to enumeration value is used to calculate
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         the interrupt vector source from the integer number of the IPC interrupt
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         structure, so there is no way to avoid this cast.</td>
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>11.4</td>
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>A</td>
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>A cast should not be performed between a pointer to the void to a
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         pointer to the object type.</td>
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>The cast from the void to pointer and vice versa is used to transmit
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         data via the \ref group_ipc channel by exchanging the pointer. We
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         exchange only one pointer, so there is no way to avoid this cast.</td>
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * </table>
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_changelog Changelog
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 11


 240:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * <table class="doxtable">
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td rowspan="3">1.30</td>
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Driver library directory-structure simplification.</td>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Moved the Cy_IPC_SystemSemaInit(), Cy_IPC_SystemPipeInit() functions implementation from 
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Changed IPC driver configuration method from compile time to run time.</td>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Added register access layer. Use register access macros instead
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         of direct register access using dereferenced pointers.</td>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Makes register access device-independent, so that the PDL does 
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         not need to be recompiled for each supported part number.</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.20</td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Added \ref Cy_IPC_Pipe_ExecuteCallback function.
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         Updated documentation about user pipe initialization.
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     </td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Interface improvement, documentation update</td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.10.1</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Updated description of the \ref Cy_IPC_Pipe_Init,
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         \ref Cy_IPC_Pipe_EndpointInit, \ref Cy_IPC_Sema_Set functions.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         Added / updated code snippets.
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Documentation update and clarification</td>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.10</td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Added support for more IPC structures</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>New device support</td>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.0</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Initial version</td>
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td></td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * </table>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \defgroup group_ipc_drv IPC driver layer (IPC_DRV)
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The functions of this layer are used in the higher IPC levels
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   (Semaphores and Pipes).
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Users are not expected to call any of these IPC functions directly (cy_ipc_drv.h). 
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Instead include either of cy_ipc_sema.h or cy_ipc_pipe.h. 
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Alternatively include cy_pdl.h to get access to all functions and declarations in the PDL.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_macros Macros
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Macro definitions are used in the driver
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_functions Functions
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 12


 297:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Functions are used in the driver
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_data_structures Data Structures
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Data structures are used in the driver
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_enums Enumerated Types
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Enumerations are used in the driver
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \}
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \defgroup group_ipc_sema IPC semaphores layer (IPC_SEMA)
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \defgroup group_ipc_pipe IPC pipes layer (IPC_PIPE)
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /******************************************************************************/
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /* Include files                                                              */
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /******************************************************************************/
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include "cy_device.h"
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include "cy_device_headers.h"
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include "cy_syslib.h"
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include <stddef.h>
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_macros
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Driver major version */
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MAJOR       1
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Driver minor version */
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MINOR       30
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Defines a value to indicate that no notification events are needed */
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_NO_NOTIFICATION         (uint32_t)(0x00000000ul)
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /* Error Code constants */
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID CY_PDL_DRV_ID(0x22u)  /**< Software PDL driver ID for IPC */
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function status codes */
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID_INFO    (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_INFO )
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function warning return values */
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID_WARNING (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_WARNING)
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function error return values */
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID_ERROR   (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_ERROR)
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Converts the IPC interrupt channel number to interrupt vector */
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_INTR_NUM_TO_VECT(x)         ((int32_t) cy_device->cpussIpc0Irq + (x))
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc_macros */
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /* end of definition in device.h */
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 13


 354:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #if (CY_CPU_CORTEX_M0P)
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM0
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #else
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM4
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #endif  /* (CY_CPU_CORTEX_M0P) */
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \endcond */
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_enums
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a list of ENUMs used for function return status.
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** typedef enum
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     /** Function was successfully executed */
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_IPC_DRV_SUCCESS      = (0x00u),
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     /** Function was not executed due to an error.
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****         Typical conditions for the error explained
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****         in the function description */
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_IPC_DRV_ERROR        = ( CY_IPC_ID_ERROR + 1ul),
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** } cy_en_ipcdrv_status_t;
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc_enums */
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #ifdef __cplusplus
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** extern "C" {
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #endif
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue);
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base);
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask);
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask);
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \endcond */
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_functions
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type*       Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex);
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type*  Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex);
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base);
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type * base, uint32_t releaseEventIntr)
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE bool     Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base);
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 14


 411:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type * base, uint32_t notifyEventIntr, 
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message);
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_SendMsgPtr (IPC_STRUCT_Type* base, uint32_t notify
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void ** 
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type * base,
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask (IPC_INTR_STRUCT_Type const * base);
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base);
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus (IPC_INTR_STRUCT_Type const * base);
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterrupt (IPC_INTR_STRUCT_Type * base,
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ClearInterrupt (IPC_INTR_STRUCT_Type * base,
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIpcBaseAddress
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function takes an IPC channel index as a parameter and returns the base
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * address the IPC registers corresponding to the IPC channel.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIndex does not exceed the
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * limits.
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcIndex
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Represents the number of IPC structure. This is converted to the base address of
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the IPC channel registers.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC registers.
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type* Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex)
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_CHANNELS > ipcIndex);
 103              		.loc 2 451 0
 104 0012 214B     		ldr	r3, .L18+4
 105 0014 1B68     		ldr	r3, [r3]
 106 0016 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 107 001a 012B     		cmp	r3, #1
 108 001c 04D8     		bhi	.L11
 109 001e 40F2C311 		movw	r1, #451
 110              	.LVL6:
 111 0022 1E48     		ldr	r0, .L18+8
 112 0024 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 113              	.LVL7:
 114              	.L11:
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 115              		.loc 2 452 0
 116 0028 1B4B     		ldr	r3, .L18+4
 117 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 15


 118 002c 186A     		ldr	r0, [r3, #32]
 119 002e B3F8B030 		ldrh	r3, [r3, #176]
 120              	.LVL8:
 121              	.LBE15:
 122              	.LBE14:
 123              	.LBB16:
 124              	.LBB17:
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIntrBaseAddr
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function takes an IPC interrupt structure index and returns the base
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * address of the IPC interrupt registers corresponding to the IPC Interrupt.
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIntrIndex does not exceed the
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * limits.
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcIntrIndex
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Represents the number of IPC interrupt structure. This is converted to the
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * base address of the IPC interrupt registers.
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC interrupt registers.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type* Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_INTERRUPTS > ipcIntrIndex);
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_INTR_STRUCT_Type*) &(((IPC_Type *)cy_device->ipcBase)->INTR_STRUCT[ipcIntrIndex])
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterruptMask
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to set the interrupt mask for an IPC Interrupt.
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The mask sets release or acquire notification events for all IPC channels.
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * release event.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * notify event.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 16


 503:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type* base,
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                               uint32_t ipcReleaseMask, uint32_t ipcAcquireMask)
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_MASK(base) = _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_NOTIFY,  ipcAcquireMa
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_RELEASE, ipcReleaseMask);
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptMask
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to read the interrupt mask.
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask(IPC_INTR_STRUCT_Type const * base)
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASK(base);
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatusMasked
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to read the active unmasked interrupt. This function
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * can be used in the interrupt service routine to find which source triggered
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the interrupt.
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <table>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 17


 560:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </table>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base)
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASKED(base);
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatus
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to read the pending interrupts. Note that this read is
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * an unmasked read of the interrupt status. Interrupt sources read as active by
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * this function would generate interrupts only if they were not masked.
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <table>
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </table>
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus(IPC_INTR_STRUCT_Type const * base)
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR(base);
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterrupt
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to set the interrupt source. This function can be used
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * to activate interrupts through software.
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \note That interrupt sources set using this interrupt would generate interrupts
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * only if they are not masked.
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 18


 617:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * release event.
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * notify event.
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SetInterrupt
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask, 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_SET(base) =  _VAL2FLD( IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask ) 
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask );
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ClearInterrupt
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to clear the interrupt source. Use this function to clear
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * a pending interrupt source in the interrupt status.
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * release event.
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * notify event.
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ClearInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR(base) =  _VAL2FLD(IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask) |
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                   _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask);
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     (void)REG_IPC_INTR_STRUCT_INTR(base);  /* Read the register to flush the cache */
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc_functions */
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 19


 674:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_AcquireNotify
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function generates a acquire notification event by IPC interrupt structure.
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt structures that are triggered
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * by a notification. Bit number correspond to number of the IPC interrupt
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * structure.
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_NOTIFY(base) = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReleaseNotify
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function generates a release notification event by IPC interrupt structure.
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_INTR_STRUCT_INTR_RELEASE_Msk)));
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_RELEASE(base) = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 20


 731:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_WriteDataValue
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function writes a value to the DATA register of the IPC channel.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param dataValue
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Value to be written.
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue)
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_DATA(base) = dataValue;
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadDataValue
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function reads a value from the DATA register of the IPC channel.
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Value from DATA register.
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base)
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_DATA(base);
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_IsLockAcquired
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function is used to test the status of an IPC channel. The function
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * tells the reader if the IPC channel was in the locked or released state.
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 21


 788:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Status for the function:
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   true:  The IPC channel is in the Locked state.
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   false: The IPC channel is in the Released state.
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE bool Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base)
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( 0u != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_LOCK_STATUS(base)) );
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetLockStatus
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function is used to get the status of an IPC channel.
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Value from LOCK_STATUS register.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetLockStatus
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base)
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_LOCK_STATUS(base);
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractAcquireMask
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function extracts an Acquire mask part from full interrupt mask value.
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param intMask
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 22


 845:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Acquire mask value.
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask)
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_NOTIFY, intMask);
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractReleaseMask
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function extracts a Release mask part from full interrupt mask value.
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param intMask
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Release mask value.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask)
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_RELEASE, intMask);
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SendMsgPtr
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to send a message pointer through an IPC channel.
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The message structure may hold a generic pointer that may contain the address
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of any user data type or structure. This parameter could be a pointer to a 32-bit
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * integer, an array, or even a data structure defined in the user code. This
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * function acts as a transfer engine for sending the pointer. Any memory
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * management of the pointer allocation and deallocation is up to the application
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * code.
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function also has an associated notification field that will let the
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * message notify one or multiple interrupts.
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered during the release
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * action.
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param msgPtr
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 23


 902:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The message pointer that is being sent over the IPC channel.
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return   Status of the operation:
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC channel is unavailable because
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *                               it is already locked.
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgPtr
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgPtr(IPC_STRUCT_Type* base, uint32_t notify
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_SendMsgWord(base, notifyEventIntr, (uint32_t)msgPtr);
 125              		.loc 2 916 0
 126 0032 184A     		ldr	r2, .L18
 127 0034 0121     		movs	r1, #1
 128 0036 1844     		add	r0, r0, r3
 129 0038 FFF7FEFF 		bl	Cy_IPC_Drv_SendMsgWord
 130              	.LVL9:
 131              	.LBE17:
 132              	.LBE16:
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {           
 133              		.loc 1 134 0
 134 003c 40BB     		cbnz	r0, .L16
 135              	.L13:
 136              	.LVL10:
 137              	.LBB18:
 138              	.LBB19:
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 139              		.loc 2 451 0 discriminator 1
 140 003e 164B     		ldr	r3, .L18+4
 141 0040 1B68     		ldr	r3, [r3]
 142 0042 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 143 0046 012B     		cmp	r3, #1
 144 0048 04D8     		bhi	.L12
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 145              		.loc 2 451 0 is_stmt 0
 146 004a 40F2C311 		movw	r1, #451
 147 004e 1348     		ldr	r0, .L18+8
 148 0050 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 149              	.LVL11:
 150              	.L12:
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 151              		.loc 2 452 0 is_stmt 1
 152 0054 104B     		ldr	r3, .L18+4
 153 0056 1A68     		ldr	r2, [r3]
 154 0058 116A     		ldr	r1, [r2, #32]
 155 005a B2F8B030 		ldrh	r3, [r2, #176]
 156 005e 0B44     		add	r3, r3, r1
 157              	.LVL12:
 158              	.LBE19:
 159              	.LBE18:
 160              	.LBB20:
 161              	.LBB21:
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 24


 162              		.loc 2 804 0
 163 0060 D2F8B420 		ldr	r2, [r2, #180]
 164 0064 D358     		ldr	r3, [r2, r3]
 165              	.LBE21:
 166              	.LBE20:
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 167              		.loc 1 137 0
 168 0066 002B     		cmp	r3, #0
 169 0068 E9DB     		blt	.L13
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 170              		.loc 1 142 0
 171 006a 0A4B     		ldr	r3, .L18
 172 006c 1B68     		ldr	r3, [r3]
 173 006e 03F07043 		and	r3, r3, #-268435456
 174 0072 B3F1204F 		cmp	r3, #-1610612736
 175 0076 04D1     		bne	.L14
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 result = CY_EFUSE_SUCCESS;
 176              		.loc 1 144 0
 177 0078 064B     		ldr	r3, .L18
 178 007a 1B68     		ldr	r3, [r3]
 179 007c 2370     		strb	r3, [r4]
 180              	.LVL13:
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 181              		.loc 1 145 0
 182 007e 0020     		movs	r0, #0
 183 0080 10BD     		pop	{r4, pc}
 184              	.LVL14:
 185              	.L14:
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 *byteVal = 0U;
 186              		.loc 1 149 0
 187 0082 FFF7FEFF 		bl	ProcessOpcode
 188              	.LVL15:
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 189              		.loc 1 150 0
 190 0086 0023     		movs	r3, #0
 191 0088 2370     		strb	r3, [r4]
 192 008a 10BD     		pop	{r4, pc}
 193              	.LVL16:
 194              	.L15:
 195              		.cfi_def_cfa_offset 0
 196              		.cfi_restore 4
 197              		.cfi_restore 14
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
 198              		.loc 1 126 0
 199 008c 0448     		ldr	r0, .L18+12
 200              	.LVL17:
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 201              		.loc 1 159 0
 202 008e 7047     		bx	lr
 203              	.LVL18:
 204              	.L16:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 208              		.loc 1 155 0
 209 0090 0448     		ldr	r0, .L18+16
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 25


 210              	.LVL19:
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 211              		.loc 1 159 0
 212 0092 10BD     		pop	{r4, pc}
 213              	.LVL20:
 214              	.L19:
 215              		.align	2
 216              	.L18:
 217 0094 00000000 		.word	.LANCHOR0
 218 0098 00000000 		.word	cy_device
 219 009c 00000000 		.word	.LC0
 220 00a0 03006A00 		.word	6946819
 221 00a4 04006A00 		.word	6946820
 222              		.cfi_endproc
 223              	.LFE152:
 224              		.size	Cy_EFUSE_GetEfuseByte, .-Cy_EFUSE_GetEfuseByte
 225              		.section	.text.Cy_EFUSE_GetEfuseBit,"ax",%progbits
 226              		.align	2
 227              		.global	Cy_EFUSE_GetEfuseBit
 228              		.thumb
 229              		.thumb_func
 230              		.type	Cy_EFUSE_GetEfuseBit, %function
 231              	Cy_EFUSE_GetEfuseBit:
 232              	.LFB151:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
 233              		.loc 1 68 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL21:
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
 238              		.loc 1 71 0
 239 0000 B1B1     		cbz	r1, .L23
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
 240              		.loc 1 68 0
 241 0002 30B5     		push	{r4, r5, lr}
 242              		.cfi_def_cfa_offset 12
 243              		.cfi_offset 4, -12
 244              		.cfi_offset 5, -8
 245              		.cfi_offset 14, -4
 246 0004 83B0     		sub	sp, sp, #12
 247              		.cfi_def_cfa_offset 24
 248 0006 0D46     		mov	r5, r1
 249 0008 0446     		mov	r4, r0
 250              	.LVL22:
 251              	.LBB22:
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
 252              		.loc 1 75 0
 253 000a 0023     		movs	r3, #0
 254 000c 0B70     		strb	r3, [r1]
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
 255              		.loc 1 78 0
 256 000e 0DF10701 		add	r1, sp, #7
 257              	.LVL23:
 258 0012 C008     		lsrs	r0, r0, #3
 259              	.LVL24:
 260 0014 FFF7FEFF 		bl	Cy_EFUSE_GetEfuseByte
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 26


 261              	.LVL25:
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 262              		.loc 1 80 0
 263 0018 0346     		mov	r3, r0
 264 001a 60B9     		cbnz	r0, .L21
 265              	.LBB23:
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* Extract the bit from the byte */
 266              		.loc 1 82 0
 267 001c 04F00700 		and	r0, r4, #7
 268              	.LVL26:
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 269              		.loc 1 84 0
 270 0020 9DF80740 		ldrb	r4, [sp, #7]	@ zero_extendqisi2
 271              	.LVL27:
 272 0024 44FA00F0 		asr	r0, r4, r0
 273              	.LVL28:
 274 0028 00F00100 		and	r0, r0, #1
 275 002c 2870     		strb	r0, [r5]
 276 002e 02E0     		b	.L21
 277              	.LVL29:
 278              	.L23:
 279              		.cfi_def_cfa_offset 0
 280              		.cfi_restore 4
 281              		.cfi_restore 5
 282              		.cfi_restore 14
 283              	.LBE23:
 284              	.LBE22:
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
 285              		.loc 1 69 0
 286 0030 024B     		ldr	r3, .L26
 287              	.LVL30:
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 288              		.loc 1 88 0
 289 0032 1846     		mov	r0, r3
 290              	.LVL31:
 291 0034 7047     		bx	lr
 292              	.LVL32:
 293              	.L21:
 294              		.cfi_def_cfa_offset 24
 295              		.cfi_offset 4, -12
 296              		.cfi_offset 5, -8
 297              		.cfi_offset 14, -4
 298 0036 1846     		mov	r0, r3
 299 0038 03B0     		add	sp, sp, #12
 300              		.cfi_def_cfa_offset 12
 301              		@ sp needed
 302 003a 30BD     		pop	{r4, r5, pc}
 303              	.LVL33:
 304              	.L27:
 305              		.align	2
 306              	.L26:
 307 003c 03006A00 		.word	6946819
 308              		.cfi_endproc
 309              	.LFE151:
 310              		.size	Cy_EFUSE_GetEfuseBit, .-Cy_EFUSE_GetEfuseBit
 311              		.section	.text.Cy_EFUSE_GetExternalStatus,"ax",%progbits
 312              		.align	2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 27


 313              		.global	Cy_EFUSE_GetExternalStatus
 314              		.thumb
 315              		.thumb_func
 316              		.type	Cy_EFUSE_GetExternalStatus, %function
 317              	Cy_EFUSE_GetExternalStatus:
 318              	.LFB153:
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (opcode);
 319              		.loc 1 181 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
 324              		.loc 1 182 0
 325 0000 014B     		ldr	r3, .L29
 326 0002 1868     		ldr	r0, [r3]
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 327              		.loc 1 183 0
 328 0004 7047     		bx	lr
 329              	.L30:
 330 0006 00BF     		.align	2
 331              	.L29:
 332 0008 00000000 		.word	.LANCHOR0
 333              		.cfi_endproc
 334              	.LFE153:
 335              		.size	Cy_EFUSE_GetExternalStatus, .-Cy_EFUSE_GetExternalStatus
 336              		.section	.rodata.str1.4,"aMS",%progbits,1
 337              		.align	2
 338              	.LC0:
 339 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/ip"
 339      72617465 
 339      645F536F 
 339      75726365 
 339      5C50536F 
 340 0030 632F6379 		.ascii	"c/cy_ipc_drv.h\000"
 340      5F697063 
 340      5F647276 
 340      2E6800
 341              		.bss
 342              		.align	2
 343              		.set	.LANCHOR0,. + 0
 344              		.type	opcode, %object
 345              		.size	opcode, 4
 346              	opcode:
 347 0000 00000000 		.space	4
 348              		.text
 349              	.Letext0:
 350              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 351              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 352              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_ipc.h"
 353              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 354              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 355              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 356              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\efuse\\cy_efuse.h"
 357              		.file 10 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 358              		.section	.debug_info,"",%progbits
 359              	.Ldebug_info0:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 28


 360 0000 09090000 		.4byte	0x909
 361 0004 0400     		.2byte	0x4
 362 0006 00000000 		.4byte	.Ldebug_abbrev0
 363 000a 04       		.byte	0x4
 364 000b 01       		.uleb128 0x1
 365 000c C9050000 		.4byte	.LASF151
 366 0010 0C       		.byte	0xc
 367 0011 94000000 		.4byte	.LASF152
 368 0015 0D030000 		.4byte	.LASF153
 369 0019 00000000 		.4byte	.Ldebug_ranges0+0
 370 001d 00000000 		.4byte	0
 371 0021 00000000 		.4byte	.Ldebug_line0
 372 0025 02       		.uleb128 0x2
 373 0026 02       		.byte	0x2
 374 0027 05       		.byte	0x5
 375 0028 60070000 		.4byte	.LASF0
 376 002c 02       		.uleb128 0x2
 377 002d 01       		.byte	0x1
 378 002e 06       		.byte	0x6
 379 002f 05090000 		.4byte	.LASF1
 380 0033 03       		.uleb128 0x3
 381 0034 8A000000 		.4byte	.LASF3
 382 0038 03       		.byte	0x3
 383 0039 1D       		.byte	0x1d
 384 003a 3E000000 		.4byte	0x3e
 385 003e 02       		.uleb128 0x2
 386 003f 01       		.byte	0x1
 387 0040 08       		.byte	0x8
 388 0041 2D070000 		.4byte	.LASF2
 389 0045 03       		.uleb128 0x3
 390 0046 03030000 		.4byte	.LASF4
 391 004a 03       		.byte	0x3
 392 004b 29       		.byte	0x29
 393 004c 25000000 		.4byte	0x25
 394 0050 03       		.uleb128 0x3
 395 0051 15080000 		.4byte	.LASF5
 396 0055 03       		.byte	0x3
 397 0056 2B       		.byte	0x2b
 398 0057 5B000000 		.4byte	0x5b
 399 005b 02       		.uleb128 0x2
 400 005c 02       		.byte	0x2
 401 005d 07       		.byte	0x7
 402 005e AA020000 		.4byte	.LASF6
 403 0062 03       		.uleb128 0x3
 404 0063 62080000 		.4byte	.LASF7
 405 0067 03       		.byte	0x3
 406 0068 3F       		.byte	0x3f
 407 0069 6D000000 		.4byte	0x6d
 408 006d 02       		.uleb128 0x2
 409 006e 04       		.byte	0x4
 410 006f 05       		.byte	0x5
 411 0070 35020000 		.4byte	.LASF8
 412 0074 03       		.uleb128 0x3
 413 0075 DC020000 		.4byte	.LASF9
 414 0079 03       		.byte	0x3
 415 007a 41       		.byte	0x41
 416 007b 7F000000 		.4byte	0x7f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 29


 417 007f 02       		.uleb128 0x2
 418 0080 04       		.byte	0x4
 419 0081 07       		.byte	0x7
 420 0082 E5030000 		.4byte	.LASF10
 421 0086 02       		.uleb128 0x2
 422 0087 08       		.byte	0x8
 423 0088 05       		.byte	0x5
 424 0089 B3010000 		.4byte	.LASF11
 425 008d 02       		.uleb128 0x2
 426 008e 08       		.byte	0x8
 427 008f 07       		.byte	0x7
 428 0090 33010000 		.4byte	.LASF12
 429 0094 04       		.uleb128 0x4
 430 0095 04       		.byte	0x4
 431 0096 05       		.byte	0x5
 432 0097 696E7400 		.ascii	"int\000"
 433 009b 02       		.uleb128 0x2
 434 009c 04       		.byte	0x4
 435 009d 07       		.byte	0x7
 436 009e B6030000 		.4byte	.LASF13
 437 00a2 03       		.uleb128 0x3
 438 00a3 4C090000 		.4byte	.LASF14
 439 00a7 04       		.byte	0x4
 440 00a8 18       		.byte	0x18
 441 00a9 33000000 		.4byte	0x33
 442 00ad 03       		.uleb128 0x3
 443 00ae AB010000 		.4byte	.LASF15
 444 00b2 04       		.byte	0x4
 445 00b3 20       		.byte	0x20
 446 00b4 45000000 		.4byte	0x45
 447 00b8 03       		.uleb128 0x3
 448 00b9 C3030000 		.4byte	.LASF16
 449 00bd 04       		.byte	0x4
 450 00be 24       		.byte	0x24
 451 00bf 50000000 		.4byte	0x50
 452 00c3 03       		.uleb128 0x3
 453 00c4 25070000 		.4byte	.LASF17
 454 00c8 04       		.byte	0x4
 455 00c9 2C       		.byte	0x2c
 456 00ca 62000000 		.4byte	0x62
 457 00ce 03       		.uleb128 0x3
 458 00cf B8070000 		.4byte	.LASF18
 459 00d3 04       		.byte	0x4
 460 00d4 30       		.byte	0x30
 461 00d5 74000000 		.4byte	0x74
 462 00d9 02       		.uleb128 0x2
 463 00da 04       		.byte	0x4
 464 00db 07       		.byte	0x7
 465 00dc 18050000 		.4byte	.LASF19
 466 00e0 05       		.uleb128 0x5
 467 00e1 CE000000 		.4byte	0xce
 468 00e5 06       		.uleb128 0x6
 469 00e6 E0000000 		.4byte	0xe0
 470 00ea 07       		.uleb128 0x7
 471 00eb E5000000 		.4byte	0xe5
 472 00ef FA000000 		.4byte	0xfa
 473 00f3 08       		.uleb128 0x8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 30


 474 00f4 D9000000 		.4byte	0xd9
 475 00f8 02       		.byte	0x2
 476 00f9 00       		.byte	0
 477 00fa 09       		.uleb128 0x9
 478 00fb 20       		.byte	0x20
 479 00fc 05       		.byte	0x5
 480 00fd 23       		.byte	0x23
 481 00fe 4B010000 		.4byte	0x14b
 482 0102 0A       		.uleb128 0xa
 483 0103 DD010000 		.4byte	.LASF20
 484 0107 05       		.byte	0x5
 485 0108 24       		.byte	0x24
 486 0109 E5000000 		.4byte	0xe5
 487 010d 00       		.byte	0
 488 010e 0A       		.uleb128 0xa
 489 010f FF000000 		.4byte	.LASF21
 490 0113 05       		.byte	0x5
 491 0114 25       		.byte	0x25
 492 0115 E0000000 		.4byte	0xe0
 493 0119 04       		.byte	0x4
 494 011a 0A       		.uleb128 0xa
 495 011b 9B040000 		.4byte	.LASF22
 496 011f 05       		.byte	0x5
 497 0120 26       		.byte	0x26
 498 0121 E0000000 		.4byte	0xe0
 499 0125 08       		.byte	0x8
 500 0126 0A       		.uleb128 0xa
 501 0127 57040000 		.4byte	.LASF23
 502 012b 05       		.byte	0x5
 503 012c 27       		.byte	0x27
 504 012d E0000000 		.4byte	0xe0
 505 0131 0C       		.byte	0xc
 506 0132 0A       		.uleb128 0xa
 507 0133 F7020000 		.4byte	.LASF24
 508 0137 05       		.byte	0x5
 509 0138 28       		.byte	0x28
 510 0139 E5000000 		.4byte	0xe5
 511 013d 10       		.byte	0x10
 512 013e 0A       		.uleb128 0xa
 513 013f 7D070000 		.4byte	.LASF25
 514 0143 05       		.byte	0x5
 515 0144 29       		.byte	0x29
 516 0145 50010000 		.4byte	0x150
 517 0149 14       		.byte	0x14
 518 014a 00       		.byte	0
 519 014b 05       		.uleb128 0x5
 520 014c EA000000 		.4byte	0xea
 521 0150 06       		.uleb128 0x6
 522 0151 4B010000 		.4byte	0x14b
 523 0155 03       		.uleb128 0x3
 524 0156 6A070000 		.4byte	.LASF26
 525 015a 05       		.byte	0x5
 526 015b 2A       		.byte	0x2a
 527 015c FA000000 		.4byte	0xfa
 528 0160 0B       		.uleb128 0xb
 529 0161 B1090000 		.4byte	.LASF27
 530 0165 06       		.byte	0x6
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 31


 531 0166 1D06     		.2byte	0x61d
 532 0168 55010000 		.4byte	0x155
 533 016c 02       		.uleb128 0x2
 534 016d 08       		.byte	0x8
 535 016e 04       		.byte	0x4
 536 016f D3070000 		.4byte	.LASF28
 537 0173 09       		.uleb128 0x9
 538 0174 B8       		.byte	0xb8
 539 0175 07       		.byte	0x7
 540 0176 34       		.byte	0x34
 541 0177 84050000 		.4byte	0x584
 542 017b 0A       		.uleb128 0xa
 543 017c 0E010000 		.4byte	.LASF29
 544 0180 07       		.byte	0x7
 545 0181 37       		.byte	0x37
 546 0182 CE000000 		.4byte	0xce
 547 0186 00       		.byte	0
 548 0187 0A       		.uleb128 0xa
 549 0188 D1020000 		.4byte	.LASF30
 550 018c 07       		.byte	0x7
 551 018d 38       		.byte	0x38
 552 018e CE000000 		.4byte	0xce
 553 0192 04       		.byte	0x4
 554 0193 0A       		.uleb128 0xa
 555 0194 4C020000 		.4byte	.LASF31
 556 0198 07       		.byte	0x7
 557 0199 39       		.byte	0x39
 558 019a CE000000 		.4byte	0xce
 559 019e 08       		.byte	0x8
 560 019f 0A       		.uleb128 0xa
 561 01a0 8F010000 		.4byte	.LASF32
 562 01a4 07       		.byte	0x7
 563 01a5 3A       		.byte	0x3a
 564 01a6 CE000000 		.4byte	0xce
 565 01aa 0C       		.byte	0xc
 566 01ab 0A       		.uleb128 0xa
 567 01ac 97050000 		.4byte	.LASF33
 568 01b0 07       		.byte	0x7
 569 01b1 3B       		.byte	0x3b
 570 01b2 CE000000 		.4byte	0xce
 571 01b6 10       		.byte	0x10
 572 01b7 0A       		.uleb128 0xa
 573 01b8 2B020000 		.4byte	.LASF34
 574 01bc 07       		.byte	0x7
 575 01bd 3C       		.byte	0x3c
 576 01be CE000000 		.4byte	0xce
 577 01c2 14       		.byte	0x14
 578 01c3 0A       		.uleb128 0xa
 579 01c4 1D040000 		.4byte	.LASF35
 580 01c8 07       		.byte	0x7
 581 01c9 3D       		.byte	0x3d
 582 01ca CE000000 		.4byte	0xce
 583 01ce 18       		.byte	0x18
 584 01cf 0A       		.uleb128 0xa
 585 01d0 73000000 		.4byte	.LASF36
 586 01d4 07       		.byte	0x7
 587 01d5 3E       		.byte	0x3e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 32


 588 01d6 CE000000 		.4byte	0xce
 589 01da 1C       		.byte	0x1c
 590 01db 0A       		.uleb128 0xa
 591 01dc DA090000 		.4byte	.LASF37
 592 01e0 07       		.byte	0x7
 593 01e1 3F       		.byte	0x3f
 594 01e2 CE000000 		.4byte	0xce
 595 01e6 20       		.byte	0x20
 596 01e7 0A       		.uleb128 0xa
 597 01e8 E7040000 		.4byte	.LASF38
 598 01ec 07       		.byte	0x7
 599 01ed 40       		.byte	0x40
 600 01ee CE000000 		.4byte	0xce
 601 01f2 24       		.byte	0x24
 602 01f3 0A       		.uleb128 0xa
 603 01f4 C3040000 		.4byte	.LASF39
 604 01f8 07       		.byte	0x7
 605 01f9 43       		.byte	0x43
 606 01fa A2000000 		.4byte	0xa2
 607 01fe 28       		.byte	0x28
 608 01ff 0A       		.uleb128 0xa
 609 0200 54000000 		.4byte	.LASF40
 610 0204 07       		.byte	0x7
 611 0205 44       		.byte	0x44
 612 0206 A2000000 		.4byte	0xa2
 613 020a 29       		.byte	0x29
 614 020b 0A       		.uleb128 0xa
 615 020c D0090000 		.4byte	.LASF41
 616 0210 07       		.byte	0x7
 617 0211 45       		.byte	0x45
 618 0212 A2000000 		.4byte	0xa2
 619 0216 2A       		.byte	0x2a
 620 0217 0A       		.uleb128 0xa
 621 0218 A0050000 		.4byte	.LASF42
 622 021c 07       		.byte	0x7
 623 021d 46       		.byte	0x46
 624 021e A2000000 		.4byte	0xa2
 625 0222 2B       		.byte	0x2b
 626 0223 0A       		.uleb128 0xa
 627 0224 7F040000 		.4byte	.LASF43
 628 0228 07       		.byte	0x7
 629 0229 47       		.byte	0x47
 630 022a A2000000 		.4byte	0xa2
 631 022e 2C       		.byte	0x2c
 632 022f 0A       		.uleb128 0xa
 633 0230 6C080000 		.4byte	.LASF44
 634 0234 07       		.byte	0x7
 635 0235 48       		.byte	0x48
 636 0236 A2000000 		.4byte	0xa2
 637 023a 2D       		.byte	0x2d
 638 023b 0A       		.uleb128 0xa
 639 023c FB010000 		.4byte	.LASF45
 640 0240 07       		.byte	0x7
 641 0241 49       		.byte	0x49
 642 0242 A2000000 		.4byte	0xa2
 643 0246 2E       		.byte	0x2e
 644 0247 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 33


 645 0248 F7040000 		.4byte	.LASF46
 646 024c 07       		.byte	0x7
 647 024d 4A       		.byte	0x4a
 648 024e A2000000 		.4byte	0xa2
 649 0252 2F       		.byte	0x2f
 650 0253 0A       		.uleb128 0xa
 651 0254 E4070000 		.4byte	.LASF47
 652 0258 07       		.byte	0x7
 653 0259 4B       		.byte	0x4b
 654 025a A2000000 		.4byte	0xa2
 655 025e 30       		.byte	0x30
 656 025f 0A       		.uleb128 0xa
 657 0260 12040000 		.4byte	.LASF48
 658 0264 07       		.byte	0x7
 659 0265 4E       		.byte	0x4e
 660 0266 A2000000 		.4byte	0xa2
 661 026a 31       		.byte	0x31
 662 026b 0A       		.uleb128 0xa
 663 026c 7C000000 		.4byte	.LASF49
 664 0270 07       		.byte	0x7
 665 0271 4F       		.byte	0x4f
 666 0272 A2000000 		.4byte	0xa2
 667 0276 32       		.byte	0x32
 668 0277 0A       		.uleb128 0xa
 669 0278 AA030000 		.4byte	.LASF50
 670 027c 07       		.byte	0x7
 671 027d 50       		.byte	0x50
 672 027e A2000000 		.4byte	0xa2
 673 0282 33       		.byte	0x33
 674 0283 0A       		.uleb128 0xa
 675 0284 2C050000 		.4byte	.LASF51
 676 0288 07       		.byte	0x7
 677 0289 51       		.byte	0x51
 678 028a A2000000 		.4byte	0xa2
 679 028e 34       		.byte	0x34
 680 028f 0A       		.uleb128 0xa
 681 0290 D2080000 		.4byte	.LASF52
 682 0294 07       		.byte	0x7
 683 0295 52       		.byte	0x52
 684 0296 AD000000 		.4byte	0xad
 685 029a 36       		.byte	0x36
 686 029b 0A       		.uleb128 0xa
 687 029c 66020000 		.4byte	.LASF53
 688 02a0 07       		.byte	0x7
 689 02a1 53       		.byte	0x53
 690 02a2 AD000000 		.4byte	0xad
 691 02a6 38       		.byte	0x38
 692 02a7 0A       		.uleb128 0xa
 693 02a8 11090000 		.4byte	.LASF54
 694 02ac 07       		.byte	0x7
 695 02ad 54       		.byte	0x54
 696 02ae AD000000 		.4byte	0xad
 697 02b2 3A       		.byte	0x3a
 698 02b3 0A       		.uleb128 0xa
 699 02b4 C1090000 		.4byte	.LASF55
 700 02b8 07       		.byte	0x7
 701 02b9 55       		.byte	0x55
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 34


 702 02ba A2000000 		.4byte	0xa2
 703 02be 3C       		.byte	0x3c
 704 02bf 0A       		.uleb128 0xa
 705 02c0 8D020000 		.4byte	.LASF56
 706 02c4 07       		.byte	0x7
 707 02c5 56       		.byte	0x56
 708 02c6 A2000000 		.4byte	0xa2
 709 02ca 3D       		.byte	0x3d
 710 02cb 0A       		.uleb128 0xa
 711 02cc 9A070000 		.4byte	.LASF57
 712 02d0 07       		.byte	0x7
 713 02d1 57       		.byte	0x57
 714 02d2 A2000000 		.4byte	0xa2
 715 02d6 3E       		.byte	0x3e
 716 02d7 0A       		.uleb128 0xa
 717 02d8 27010000 		.4byte	.LASF58
 718 02dc 07       		.byte	0x7
 719 02dd 58       		.byte	0x58
 720 02de A2000000 		.4byte	0xa2
 721 02e2 3F       		.byte	0x3f
 722 02e3 0A       		.uleb128 0xa
 723 02e4 AE050000 		.4byte	.LASF59
 724 02e8 07       		.byte	0x7
 725 02e9 59       		.byte	0x59
 726 02ea A2000000 		.4byte	0xa2
 727 02ee 40       		.byte	0x40
 728 02ef 0A       		.uleb128 0xa
 729 02f0 E7020000 		.4byte	.LASF60
 730 02f4 07       		.byte	0x7
 731 02f5 5A       		.byte	0x5a
 732 02f6 A2000000 		.4byte	0xa2
 733 02fa 41       		.byte	0x41
 734 02fb 0A       		.uleb128 0xa
 735 02fc A2040000 		.4byte	.LASF61
 736 0300 07       		.byte	0x7
 737 0301 5B       		.byte	0x5b
 738 0302 A2000000 		.4byte	0xa2
 739 0306 42       		.byte	0x42
 740 0307 0A       		.uleb128 0xa
 741 0308 8C050000 		.4byte	.LASF62
 742 030c 07       		.byte	0x7
 743 030d 5C       		.byte	0x5c
 744 030e A2000000 		.4byte	0xa2
 745 0312 43       		.byte	0x43
 746 0313 0A       		.uleb128 0xa
 747 0314 55020000 		.4byte	.LASF63
 748 0318 07       		.byte	0x7
 749 0319 5D       		.byte	0x5d
 750 031a A2000000 		.4byte	0xa2
 751 031e 44       		.byte	0x44
 752 031f 0A       		.uleb128 0xa
 753 0320 00000000 		.4byte	.LASF64
 754 0324 07       		.byte	0x7
 755 0325 5E       		.byte	0x5e
 756 0326 CE000000 		.4byte	0xce
 757 032a 48       		.byte	0x48
 758 032b 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 35


 759 032c 3E020000 		.4byte	.LASF65
 760 0330 07       		.byte	0x7
 761 0331 5F       		.byte	0x5f
 762 0332 CE000000 		.4byte	0xce
 763 0336 4C       		.byte	0x4c
 764 0337 0A       		.uleb128 0xa
 765 0338 110A0000 		.4byte	.LASF66
 766 033c 07       		.byte	0x7
 767 033d 60       		.byte	0x60
 768 033e A2000000 		.4byte	0xa2
 769 0342 50       		.byte	0x50
 770 0343 0A       		.uleb128 0xa
 771 0344 7D010000 		.4byte	.LASF67
 772 0348 07       		.byte	0x7
 773 0349 61       		.byte	0x61
 774 034a A2000000 		.4byte	0xa2
 775 034e 51       		.byte	0x51
 776 034f 0A       		.uleb128 0xa
 777 0350 26090000 		.4byte	.LASF68
 778 0354 07       		.byte	0x7
 779 0355 62       		.byte	0x62
 780 0356 A2000000 		.4byte	0xa2
 781 035a 52       		.byte	0x52
 782 035b 0A       		.uleb128 0xa
 783 035c F8090000 		.4byte	.LASF69
 784 0360 07       		.byte	0x7
 785 0361 63       		.byte	0x63
 786 0362 A2000000 		.4byte	0xa2
 787 0366 53       		.byte	0x53
 788 0367 0A       		.uleb128 0xa
 789 0368 A8070000 		.4byte	.LASF70
 790 036c 07       		.byte	0x7
 791 036d 64       		.byte	0x64
 792 036e A2000000 		.4byte	0xa2
 793 0372 54       		.byte	0x54
 794 0373 0A       		.uleb128 0xa
 795 0374 97010000 		.4byte	.LASF71
 796 0378 07       		.byte	0x7
 797 0379 65       		.byte	0x65
 798 037a A2000000 		.4byte	0xa2
 799 037e 55       		.byte	0x55
 800 037f 0A       		.uleb128 0xa
 801 0380 89080000 		.4byte	.LASF72
 802 0384 07       		.byte	0x7
 803 0385 66       		.byte	0x66
 804 0386 A2000000 		.4byte	0xa2
 805 038a 56       		.byte	0x56
 806 038b 0A       		.uleb128 0xa
 807 038c 26040000 		.4byte	.LASF73
 808 0390 07       		.byte	0x7
 809 0391 67       		.byte	0x67
 810 0392 A2000000 		.4byte	0xa2
 811 0396 57       		.byte	0x57
 812 0397 0A       		.uleb128 0xa
 813 0398 19000000 		.4byte	.LASF74
 814 039c 07       		.byte	0x7
 815 039d 68       		.byte	0x68
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 36


 816 039e A2000000 		.4byte	0xa2
 817 03a2 58       		.byte	0x58
 818 03a3 0A       		.uleb128 0xa
 819 03a4 4C070000 		.4byte	.LASF75
 820 03a8 07       		.byte	0x7
 821 03a9 69       		.byte	0x69
 822 03aa A2000000 		.4byte	0xa2
 823 03ae 59       		.byte	0x59
 824 03af 0A       		.uleb128 0xa
 825 03b0 21050000 		.4byte	.LASF76
 826 03b4 07       		.byte	0x7
 827 03b5 6E       		.byte	0x6e
 828 03b6 B8000000 		.4byte	0xb8
 829 03ba 5A       		.byte	0x5a
 830 03bb 0A       		.uleb128 0xa
 831 03bc B4080000 		.4byte	.LASF77
 832 03c0 07       		.byte	0x7
 833 03c1 6F       		.byte	0x6f
 834 03c2 B8000000 		.4byte	0xb8
 835 03c6 5C       		.byte	0x5c
 836 03c7 0A       		.uleb128 0xa
 837 03c8 18010000 		.4byte	.LASF78
 838 03cc 07       		.byte	0x7
 839 03cd 70       		.byte	0x70
 840 03ce A2000000 		.4byte	0xa2
 841 03d2 5E       		.byte	0x5e
 842 03d3 0A       		.uleb128 0xa
 843 03d4 D2060000 		.4byte	.LASF79
 844 03d8 07       		.byte	0x7
 845 03d9 71       		.byte	0x71
 846 03da A2000000 		.4byte	0xa2
 847 03de 5F       		.byte	0x5f
 848 03df 0A       		.uleb128 0xa
 849 03e0 7B050000 		.4byte	.LASF80
 850 03e4 07       		.byte	0x7
 851 03e5 72       		.byte	0x72
 852 03e6 A2000000 		.4byte	0xa2
 853 03ea 60       		.byte	0x60
 854 03eb 0A       		.uleb128 0xa
 855 03ec 9D060000 		.4byte	.LASF81
 856 03f0 07       		.byte	0x7
 857 03f1 73       		.byte	0x73
 858 03f2 CE000000 		.4byte	0xce
 859 03f6 64       		.byte	0x64
 860 03f7 0A       		.uleb128 0xa
 861 03f8 4A010000 		.4byte	.LASF82
 862 03fc 07       		.byte	0x7
 863 03fd 76       		.byte	0x76
 864 03fe B8000000 		.4byte	0xb8
 865 0402 68       		.byte	0x68
 866 0403 0A       		.uleb128 0xa
 867 0404 D3030000 		.4byte	.LASF83
 868 0408 07       		.byte	0x7
 869 0409 77       		.byte	0x77
 870 040a B8000000 		.4byte	0xb8
 871 040e 6A       		.byte	0x6a
 872 040f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 37


 873 0410 3A040000 		.4byte	.LASF84
 874 0414 07       		.byte	0x7
 875 0415 78       		.byte	0x78
 876 0416 B8000000 		.4byte	0xb8
 877 041a 6C       		.byte	0x6c
 878 041b 0A       		.uleb128 0xa
 879 041c 72040000 		.4byte	.LASF85
 880 0420 07       		.byte	0x7
 881 0421 79       		.byte	0x79
 882 0422 B8000000 		.4byte	0xb8
 883 0426 6E       		.byte	0x6e
 884 0427 0A       		.uleb128 0xa
 885 0428 86070000 		.4byte	.LASF86
 886 042c 07       		.byte	0x7
 887 042d 7B       		.byte	0x7b
 888 042e A2000000 		.4byte	0xa2
 889 0432 70       		.byte	0x70
 890 0433 0A       		.uleb128 0xa
 891 0434 C8010000 		.4byte	.LASF87
 892 0438 07       		.byte	0x7
 893 0439 7C       		.byte	0x7c
 894 043a A2000000 		.4byte	0xa2
 895 043e 71       		.byte	0x71
 896 043f 0A       		.uleb128 0xa
 897 0440 E2090000 		.4byte	.LASF88
 898 0444 07       		.byte	0x7
 899 0445 7D       		.byte	0x7d
 900 0446 A2000000 		.4byte	0xa2
 901 044a 72       		.byte	0x72
 902 044b 0A       		.uleb128 0xa
 903 044c 45050000 		.4byte	.LASF89
 904 0450 07       		.byte	0x7
 905 0451 7E       		.byte	0x7e
 906 0452 A2000000 		.4byte	0xa2
 907 0456 73       		.byte	0x73
 908 0457 0A       		.uleb128 0xa
 909 0458 98020000 		.4byte	.LASF90
 910 045c 07       		.byte	0x7
 911 045d 80       		.byte	0x80
 912 045e B8000000 		.4byte	0xb8
 913 0462 74       		.byte	0x74
 914 0463 0A       		.uleb128 0xa
 915 0464 33080000 		.4byte	.LASF91
 916 0468 07       		.byte	0x7
 917 0469 81       		.byte	0x81
 918 046a B8000000 		.4byte	0xb8
 919 046e 76       		.byte	0x76
 920 046f 0A       		.uleb128 0xa
 921 0470 78020000 		.4byte	.LASF92
 922 0474 07       		.byte	0x7
 923 0475 82       		.byte	0x82
 924 0476 B8000000 		.4byte	0xb8
 925 047a 78       		.byte	0x78
 926 047b 0A       		.uleb128 0xa
 927 047c D3000000 		.4byte	.LASF93
 928 0480 07       		.byte	0x7
 929 0481 83       		.byte	0x83
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 38


 930 0482 B8000000 		.4byte	0xb8
 931 0486 7A       		.byte	0x7a
 932 0487 0A       		.uleb128 0xa
 933 0488 69090000 		.4byte	.LASF94
 934 048c 07       		.byte	0x7
 935 048d 86       		.byte	0x86
 936 048e A2000000 		.4byte	0xa2
 937 0492 7C       		.byte	0x7c
 938 0493 0A       		.uleb128 0xa
 939 0494 F4080000 		.4byte	.LASF95
 940 0498 07       		.byte	0x7
 941 0499 87       		.byte	0x87
 942 049a A2000000 		.4byte	0xa2
 943 049e 7D       		.byte	0x7d
 944 049f 0A       		.uleb128 0xa
 945 04a0 2D000000 		.4byte	.LASF96
 946 04a4 07       		.byte	0x7
 947 04a5 88       		.byte	0x88
 948 04a6 A2000000 		.4byte	0xa2
 949 04aa 7E       		.byte	0x7e
 950 04ab 0A       		.uleb128 0xa
 951 04ac BD020000 		.4byte	.LASF97
 952 04b0 07       		.byte	0x7
 953 04b1 89       		.byte	0x89
 954 04b2 A2000000 		.4byte	0xa2
 955 04b6 7F       		.byte	0x7f
 956 04b7 0A       		.uleb128 0xa
 957 04b8 96030000 		.4byte	.LASF98
 958 04bc 07       		.byte	0x7
 959 04bd 8A       		.byte	0x8a
 960 04be A2000000 		.4byte	0xa2
 961 04c2 80       		.byte	0x80
 962 04c3 0A       		.uleb128 0xa
 963 04c4 D0040000 		.4byte	.LASF99
 964 04c8 07       		.byte	0x7
 965 04c9 8D       		.byte	0x8d
 966 04ca CE000000 		.4byte	0xce
 967 04ce 84       		.byte	0x84
 968 04cf 0A       		.uleb128 0xa
 969 04d0 E8000000 		.4byte	.LASF100
 970 04d4 07       		.byte	0x7
 971 04d5 8E       		.byte	0x8e
 972 04d6 CE000000 		.4byte	0xce
 973 04da 88       		.byte	0x88
 974 04db 0A       		.uleb128 0xa
 975 04dc 54090000 		.4byte	.LASF101
 976 04e0 07       		.byte	0x7
 977 04e1 8F       		.byte	0x8f
 978 04e2 CE000000 		.4byte	0xce
 979 04e6 8C       		.byte	0x8c
 980 04e7 0A       		.uleb128 0xa
 981 04e8 03050000 		.4byte	.LASF102
 982 04ec 07       		.byte	0x7
 983 04ed 90       		.byte	0x90
 984 04ee CE000000 		.4byte	0xce
 985 04f2 90       		.byte	0x90
 986 04f3 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 39


 987 04f4 81030000 		.4byte	.LASF103
 988 04f8 07       		.byte	0x7
 989 04f9 91       		.byte	0x91
 990 04fa CE000000 		.4byte	0xce
 991 04fe 94       		.byte	0x94
 992 04ff 0A       		.uleb128 0xa
 993 0500 E5010000 		.4byte	.LASF104
 994 0504 07       		.byte	0x7
 995 0505 92       		.byte	0x92
 996 0506 CE000000 		.4byte	0xce
 997 050a 98       		.byte	0x98
 998 050b 0A       		.uleb128 0xa
 999 050c 9B090000 		.4byte	.LASF105
 1000 0510 07       		.byte	0x7
 1001 0511 93       		.byte	0x93
 1002 0512 CE000000 		.4byte	0xce
 1003 0516 9C       		.byte	0x9c
 1004 0517 0A       		.uleb128 0xa
 1005 0518 5A010000 		.4byte	.LASF106
 1006 051c 07       		.byte	0x7
 1007 051d 94       		.byte	0x94
 1008 051e CE000000 		.4byte	0xce
 1009 0522 A0       		.byte	0xa0
 1010 0523 0A       		.uleb128 0xa
 1011 0524 06020000 		.4byte	.LASF107
 1012 0528 07       		.byte	0x7
 1013 0529 95       		.byte	0x95
 1014 052a B8000000 		.4byte	0xb8
 1015 052e A4       		.byte	0xa4
 1016 052f 0A       		.uleb128 0xa
 1017 0530 AE040000 		.4byte	.LASF108
 1018 0534 07       		.byte	0x7
 1019 0535 96       		.byte	0x96
 1020 0536 B8000000 		.4byte	0xb8
 1021 053a A6       		.byte	0xa6
 1022 053b 0A       		.uleb128 0xa
 1023 053c B8060000 		.4byte	.LASF109
 1024 0540 07       		.byte	0x7
 1025 0541 97       		.byte	0x97
 1026 0542 B8000000 		.4byte	0xb8
 1027 0546 A8       		.byte	0xa8
 1028 0547 0A       		.uleb128 0xa
 1029 0548 F0070000 		.4byte	.LASF110
 1030 054c 07       		.byte	0x7
 1031 054d 98       		.byte	0x98
 1032 054e B8000000 		.4byte	0xb8
 1033 0552 AA       		.byte	0xaa
 1034 0553 0A       		.uleb128 0xa
 1035 0554 49040000 		.4byte	.LASF111
 1036 0558 07       		.byte	0x7
 1037 0559 99       		.byte	0x99
 1038 055a B8000000 		.4byte	0xb8
 1039 055e AC       		.byte	0xac
 1040 055f 0A       		.uleb128 0xa
 1041 0560 5C050000 		.4byte	.LASF112
 1042 0564 07       		.byte	0x7
 1043 0565 9A       		.byte	0x9a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 40


 1044 0566 B8000000 		.4byte	0xb8
 1045 056a AE       		.byte	0xae
 1046 056b 0A       		.uleb128 0xa
 1047 056c BB050000 		.4byte	.LASF113
 1048 0570 07       		.byte	0x7
 1049 0571 9D       		.byte	0x9d
 1050 0572 B8000000 		.4byte	0xb8
 1051 0576 B0       		.byte	0xb0
 1052 0577 0A       		.uleb128 0xa
 1053 0578 40000000 		.4byte	.LASF114
 1054 057c 07       		.byte	0x7
 1055 057d 9E       		.byte	0x9e
 1056 057e CE000000 		.4byte	0xce
 1057 0582 B4       		.byte	0xb4
 1058 0583 00       		.byte	0
 1059 0584 03       		.uleb128 0x3
 1060 0585 8B040000 		.4byte	.LASF115
 1061 0589 07       		.byte	0x7
 1062 058a 9F       		.byte	0x9f
 1063 058b 73010000 		.4byte	0x173
 1064 058f 0B       		.uleb128 0xb
 1065 0590 CC030000 		.4byte	.LASF116
 1066 0594 08       		.byte	0x8
 1067 0595 F601     		.2byte	0x1f6
 1068 0597 9B050000 		.4byte	0x59b
 1069 059b 02       		.uleb128 0x2
 1070 059c 01       		.byte	0x1
 1071 059d 08       		.byte	0x8
 1072 059e DF070000 		.4byte	.LASF117
 1073 05a2 02       		.uleb128 0x2
 1074 05a3 04       		.byte	0x4
 1075 05a4 04       		.byte	0x4
 1076 05a5 97060000 		.4byte	.LASF118
 1077 05a9 02       		.uleb128 0x2
 1078 05aa 08       		.byte	0x8
 1079 05ab 04       		.byte	0x4
 1080 05ac 71020000 		.4byte	.LASF119
 1081 05b0 0C       		.uleb128 0xc
 1082 05b1 04       		.byte	0x4
 1083 05b2 9B000000 		.4byte	0x9b
 1084 05b6 09       		.byte	0x9
 1085 05b7 7F       		.byte	0x7f
 1086 05b8 F0050000 		.4byte	0x5f0
 1087 05bc 0D       		.uleb128 0xd
 1088 05bd 3B070000 		.4byte	.LASF120
 1089 05c1 00       		.byte	0
 1090 05c2 0E       		.uleb128 0xe
 1091 05c3 46080000 		.4byte	.LASF121
 1092 05c7 01006A00 		.4byte	0x6a0001
 1093 05cb 0E       		.uleb128 0xe
 1094 05cc F7030000 		.4byte	.LASF122
 1095 05d0 02006A00 		.4byte	0x6a0002
 1096 05d4 0E       		.uleb128 0xe
 1097 05d5 20080000 		.4byte	.LASF123
 1098 05d9 03006A00 		.4byte	0x6a0003
 1099 05dd 0E       		.uleb128 0xe
 1100 05de C1070000 		.4byte	.LASF124
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 41


 1101 05e2 04006A00 		.4byte	0x6a0004
 1102 05e6 0E       		.uleb128 0xe
 1103 05e7 6A050000 		.4byte	.LASF125
 1104 05eb FF006A00 		.4byte	0x6a00ff
 1105 05ef 00       		.byte	0
 1106 05f0 03       		.uleb128 0x3
 1107 05f1 BD080000 		.4byte	.LASF126
 1108 05f5 09       		.byte	0x9
 1109 05f6 86       		.byte	0x86
 1110 05f7 B0050000 		.4byte	0x5b0
 1111 05fb 0F       		.uleb128 0xf
 1112 05fc 04       		.byte	0x4
 1113 05fd 9B000000 		.4byte	0x9b
 1114 0601 02       		.byte	0x2
 1115 0602 7201     		.2byte	0x172
 1116 0604 18060000 		.4byte	0x618
 1117 0608 0D       		.uleb128 0xd
 1118 0609 6E030000 		.4byte	.LASF127
 1119 060d 00       		.byte	0
 1120 060e 0E       		.uleb128 0xe
 1121 060f 62000000 		.4byte	.LASF128
 1122 0613 01008A00 		.4byte	0x8a0001
 1123 0617 00       		.byte	0
 1124 0618 0B       		.uleb128 0xb
 1125 0619 5C040000 		.4byte	.LASF129
 1126 061d 02       		.byte	0x2
 1127 061e 7901     		.2byte	0x179
 1128 0620 FB050000 		.4byte	0x5fb
 1129 0624 10       		.uleb128 0x10
 1130 0625 EF060000 		.4byte	.LASF133
 1131 0629 02       		.byte	0x2
 1132 062a 9103     		.2byte	0x391
 1133 062c 18060000 		.4byte	0x618
 1134 0630 03       		.byte	0x3
 1135 0631 5A060000 		.4byte	0x65a
 1136 0635 11       		.uleb128 0x11
 1137 0636 F2040000 		.4byte	.LASF130
 1138 063a 02       		.byte	0x2
 1139 063b 9103     		.2byte	0x391
 1140 063d 5A060000 		.4byte	0x65a
 1141 0641 11       		.uleb128 0x11
 1142 0642 1B020000 		.4byte	.LASF131
 1143 0646 02       		.byte	0x2
 1144 0647 9103     		.2byte	0x391
 1145 0649 CE000000 		.4byte	0xce
 1146 064d 11       		.uleb128 0x11
 1147 064e E8060000 		.4byte	.LASF132
 1148 0652 02       		.byte	0x2
 1149 0653 9103     		.2byte	0x391
 1150 0655 60060000 		.4byte	0x660
 1151 0659 00       		.byte	0
 1152 065a 12       		.uleb128 0x12
 1153 065b 04       		.byte	0x4
 1154 065c 60010000 		.4byte	0x160
 1155 0660 12       		.uleb128 0x12
 1156 0661 04       		.byte	0x4
 1157 0662 66060000 		.4byte	0x666
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 42


 1158 0666 13       		.uleb128 0x13
 1159 0667 10       		.uleb128 0x10
 1160 0668 05070000 		.4byte	.LASF134
 1161 066c 02       		.byte	0x2
 1162 066d 2203     		.2byte	0x322
 1163 066f 85060000 		.4byte	0x685
 1164 0673 03       		.byte	0x3
 1165 0674 85060000 		.4byte	0x685
 1166 0678 11       		.uleb128 0x11
 1167 0679 F2040000 		.4byte	.LASF130
 1168 067d 02       		.byte	0x2
 1169 067e 2203     		.2byte	0x322
 1170 0680 8C060000 		.4byte	0x68c
 1171 0684 00       		.byte	0
 1172 0685 02       		.uleb128 0x2
 1173 0686 01       		.byte	0x1
 1174 0687 02       		.byte	0x2
 1175 0688 1F070000 		.4byte	.LASF135
 1176 068c 12       		.uleb128 0x12
 1177 068d 04       		.byte	0x4
 1178 068e 92060000 		.4byte	0x692
 1179 0692 06       		.uleb128 0x6
 1180 0693 60010000 		.4byte	0x160
 1181 0697 14       		.uleb128 0x14
 1182 0698 C4060000 		.4byte	.LASF154
 1183 069c 01       		.byte	0x1
 1184 069d C8       		.byte	0xc8
 1185 069e F0050000 		.4byte	0x5f0
 1186 06a2 00000000 		.4byte	.LFB154
 1187 06a6 34000000 		.4byte	.LFE154-.LFB154
 1188 06aa 01       		.uleb128 0x1
 1189 06ab 9C       		.byte	0x9c
 1190 06ac C0060000 		.4byte	0x6c0
 1191 06b0 15       		.uleb128 0x15
 1192 06b1 0A0A0000 		.4byte	.LASF140
 1193 06b5 01       		.byte	0x1
 1194 06b6 CA       		.byte	0xca
 1195 06b7 F0050000 		.4byte	0x5f0
 1196 06bb 00000000 		.4byte	.LLST0
 1197 06bf 00       		.byte	0
 1198 06c0 10       		.uleb128 0x10
 1199 06c1 7E090000 		.4byte	.LASF136
 1200 06c5 02       		.byte	0x2
 1201 06c6 C101     		.2byte	0x1c1
 1202 06c8 5A060000 		.4byte	0x65a
 1203 06cc 03       		.byte	0x3
 1204 06cd DE060000 		.4byte	0x6de
 1205 06d1 11       		.uleb128 0x11
 1206 06d2 79080000 		.4byte	.LASF137
 1207 06d6 02       		.byte	0x2
 1208 06d7 C101     		.2byte	0x1c1
 1209 06d9 CE000000 		.4byte	0xce
 1210 06dd 00       		.byte	0
 1211 06de 16       		.uleb128 0x16
 1212 06df 36090000 		.4byte	.LASF141
 1213 06e3 01       		.byte	0x1
 1214 06e4 7C       		.byte	0x7c
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 43


 1215 06e5 F0050000 		.4byte	0x5f0
 1216 06e9 00000000 		.4byte	.LFB152
 1217 06ed A8000000 		.4byte	.LFE152-.LFB152
 1218 06f1 01       		.uleb128 0x1
 1219 06f2 9C       		.byte	0x9c
 1220 06f3 F8070000 		.4byte	0x7f8
 1221 06f7 17       		.uleb128 0x17
 1222 06f8 82080000 		.4byte	.LASF138
 1223 06fc 01       		.byte	0x1
 1224 06fd 7C       		.byte	0x7c
 1225 06fe CE000000 		.4byte	0xce
 1226 0702 23000000 		.4byte	.LLST1
 1227 0706 17       		.uleb128 0x17
 1228 0707 3D050000 		.4byte	.LASF139
 1229 070b 01       		.byte	0x1
 1230 070c 7C       		.byte	0x7c
 1231 070d F8070000 		.4byte	0x7f8
 1232 0711 5D000000 		.4byte	.LLST2
 1233 0715 15       		.uleb128 0x15
 1234 0716 0A0A0000 		.4byte	.LASF140
 1235 071a 01       		.byte	0x1
 1236 071b 7E       		.byte	0x7e
 1237 071c F0050000 		.4byte	0x5f0
 1238 0720 9F000000 		.4byte	.LLST3
 1239 0724 18       		.uleb128 0x18
 1240 0725 C0060000 		.4byte	0x6c0
 1241 0729 12000000 		.4byte	.LBB14
 1242 072d 20000000 		.4byte	.LBE14-.LBB14
 1243 0731 01       		.byte	0x1
 1244 0732 86       		.byte	0x86
 1245 0733 5B070000 		.4byte	0x75b
 1246 0737 19       		.uleb128 0x19
 1247 0738 D1060000 		.4byte	0x6d1
 1248 073c 14010000 		.4byte	.LLST4
 1249 0740 1A       		.uleb128 0x1a
 1250 0741 28000000 		.4byte	.LVL7
 1251 0745 F4080000 		.4byte	0x8f4
 1252 0749 1B       		.uleb128 0x1b
 1253 074a 01       		.uleb128 0x1
 1254 074b 50       		.byte	0x50
 1255 074c 05       		.uleb128 0x5
 1256 074d 03       		.byte	0x3
 1257 074e 00000000 		.4byte	.LC0
 1258 0752 1B       		.uleb128 0x1b
 1259 0753 01       		.uleb128 0x1
 1260 0754 51       		.byte	0x51
 1261 0755 03       		.uleb128 0x3
 1262 0756 0A       		.byte	0xa
 1263 0757 C301     		.2byte	0x1c3
 1264 0759 00       		.byte	0
 1265 075a 00       		.byte	0
 1266 075b 18       		.uleb128 0x18
 1267 075c 24060000 		.4byte	0x624
 1268 0760 32000000 		.4byte	.LBB16
 1269 0764 0A000000 		.4byte	.LBE16-.LBB16
 1270 0768 01       		.byte	0x1
 1271 0769 86       		.byte	0x86
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 44


 1272 076a 9E070000 		.4byte	0x79e
 1273 076e 19       		.uleb128 0x19
 1274 076f 4D060000 		.4byte	0x64d
 1275 0773 28010000 		.4byte	.LLST5
 1276 0777 19       		.uleb128 0x19
 1277 0778 41060000 		.4byte	0x641
 1278 077c 40010000 		.4byte	.LLST6
 1279 0780 1C       		.uleb128 0x1c
 1280 0781 35060000 		.4byte	0x635
 1281 0785 1A       		.uleb128 0x1a
 1282 0786 3C000000 		.4byte	.LVL9
 1283 078a 00090000 		.4byte	0x900
 1284 078e 1B       		.uleb128 0x1b
 1285 078f 01       		.uleb128 0x1
 1286 0790 51       		.byte	0x51
 1287 0791 01       		.uleb128 0x1
 1288 0792 31       		.byte	0x31
 1289 0793 1B       		.uleb128 0x1b
 1290 0794 01       		.uleb128 0x1
 1291 0795 52       		.byte	0x52
 1292 0796 05       		.uleb128 0x5
 1293 0797 03       		.byte	0x3
 1294 0798 00000000 		.4byte	.LANCHOR0
 1295 079c 00       		.byte	0
 1296 079d 00       		.byte	0
 1297 079e 18       		.uleb128 0x18
 1298 079f C0060000 		.4byte	0x6c0
 1299 07a3 3E000000 		.4byte	.LBB18
 1300 07a7 22000000 		.4byte	.LBE18-.LBB18
 1301 07ab 01       		.byte	0x1
 1302 07ac 89       		.byte	0x89
 1303 07ad D5070000 		.4byte	0x7d5
 1304 07b1 19       		.uleb128 0x19
 1305 07b2 D1060000 		.4byte	0x6d1
 1306 07b6 54010000 		.4byte	.LLST7
 1307 07ba 1A       		.uleb128 0x1a
 1308 07bb 54000000 		.4byte	.LVL11
 1309 07bf F4080000 		.4byte	0x8f4
 1310 07c3 1B       		.uleb128 0x1b
 1311 07c4 01       		.uleb128 0x1
 1312 07c5 50       		.byte	0x50
 1313 07c6 05       		.uleb128 0x5
 1314 07c7 03       		.byte	0x3
 1315 07c8 00000000 		.4byte	.LC0
 1316 07cc 1B       		.uleb128 0x1b
 1317 07cd 01       		.uleb128 0x1
 1318 07ce 51       		.byte	0x51
 1319 07cf 03       		.uleb128 0x3
 1320 07d0 0A       		.byte	0xa
 1321 07d1 C301     		.2byte	0x1c3
 1322 07d3 00       		.byte	0
 1323 07d4 00       		.byte	0
 1324 07d5 18       		.uleb128 0x18
 1325 07d6 67060000 		.4byte	0x667
 1326 07da 60000000 		.4byte	.LBB20
 1327 07de 06000000 		.4byte	.LBE20-.LBB20
 1328 07e2 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 45


 1329 07e3 89       		.byte	0x89
 1330 07e4 EE070000 		.4byte	0x7ee
 1331 07e8 1C       		.uleb128 0x1c
 1332 07e9 78060000 		.4byte	0x678
 1333 07ed 00       		.byte	0
 1334 07ee 1D       		.uleb128 0x1d
 1335 07ef 86000000 		.4byte	.LVL15
 1336 07f3 97060000 		.4byte	0x697
 1337 07f7 00       		.byte	0
 1338 07f8 12       		.uleb128 0x12
 1339 07f9 04       		.byte	0x4
 1340 07fa A2000000 		.4byte	0xa2
 1341 07fe 16       		.uleb128 0x16
 1342 07ff DF080000 		.4byte	.LASF142
 1343 0803 01       		.byte	0x1
 1344 0804 43       		.byte	0x43
 1345 0805 F0050000 		.4byte	0x5f0
 1346 0809 00000000 		.4byte	.LFB151
 1347 080d 40000000 		.4byte	.LFE151-.LFB151
 1348 0811 01       		.uleb128 0x1
 1349 0812 9C       		.byte	0x9c
 1350 0813 A1080000 		.4byte	0x8a1
 1351 0817 17       		.uleb128 0x17
 1352 0818 C1010000 		.4byte	.LASF143
 1353 081c 01       		.byte	0x1
 1354 081d 43       		.byte	0x43
 1355 081e CE000000 		.4byte	0xce
 1356 0822 68010000 		.4byte	.LLST8
 1357 0826 17       		.uleb128 0x17
 1358 0827 07010000 		.4byte	.LASF144
 1359 082b 01       		.byte	0x1
 1360 082c 43       		.byte	0x43
 1361 082d A1080000 		.4byte	0x8a1
 1362 0831 AD010000 		.4byte	.LLST9
 1363 0835 15       		.uleb128 0x15
 1364 0836 0A0A0000 		.4byte	.LASF140
 1365 083a 01       		.byte	0x1
 1366 083b 45       		.byte	0x45
 1367 083c F0050000 		.4byte	0x5f0
 1368 0840 EF010000 		.4byte	.LLST10
 1369 0844 1E       		.uleb128 0x1e
 1370 0845 0A000000 		.4byte	.LBB22
 1371 0849 26000000 		.4byte	.LBE22-.LBB22
 1372 084d 15       		.uleb128 0x15
 1373 084e 82080000 		.4byte	.LASF138
 1374 0852 01       		.byte	0x1
 1375 0853 49       		.byte	0x49
 1376 0854 CE000000 		.4byte	0xce
 1377 0858 38020000 		.4byte	.LLST11
 1378 085c 1F       		.uleb128 0x1f
 1379 085d 3D050000 		.4byte	.LASF139
 1380 0861 01       		.byte	0x1
 1381 0862 4A       		.byte	0x4a
 1382 0863 A2000000 		.4byte	0xa2
 1383 0867 02       		.uleb128 0x2
 1384 0868 91       		.byte	0x91
 1385 0869 6F       		.sleb128 -17
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 46


 1386 086a 20       		.uleb128 0x20
 1387 086b 1C000000 		.4byte	.LBB23
 1388 086f 14000000 		.4byte	.LBE23-.LBB23
 1389 0873 87080000 		.4byte	0x887
 1390 0877 15       		.uleb128 0x15
 1391 0878 12000000 		.4byte	.LASF145
 1392 087c 01       		.byte	0x1
 1393 087d 52       		.byte	0x52
 1394 087e CE000000 		.4byte	0xce
 1395 0882 89020000 		.4byte	.LLST12
 1396 0886 00       		.byte	0
 1397 0887 1A       		.uleb128 0x1a
 1398 0888 18000000 		.4byte	.LVL25
 1399 088c DE060000 		.4byte	0x6de
 1400 0890 1B       		.uleb128 0x1b
 1401 0891 01       		.uleb128 0x1
 1402 0892 50       		.byte	0x50
 1403 0893 04       		.uleb128 0x4
 1404 0894 74       		.byte	0x74
 1405 0895 00       		.sleb128 0
 1406 0896 33       		.byte	0x33
 1407 0897 25       		.byte	0x25
 1408 0898 1B       		.uleb128 0x1b
 1409 0899 01       		.uleb128 0x1
 1410 089a 51       		.byte	0x51
 1411 089b 02       		.uleb128 0x2
 1412 089c 91       		.byte	0x91
 1413 089d 6F       		.sleb128 -17
 1414 089e 00       		.byte	0
 1415 089f 00       		.byte	0
 1416 08a0 00       		.byte	0
 1417 08a1 12       		.uleb128 0x12
 1418 08a2 04       		.byte	0x4
 1419 08a3 85060000 		.4byte	0x685
 1420 08a7 21       		.uleb128 0x21
 1421 08a8 7C060000 		.4byte	.LASF155
 1422 08ac 01       		.byte	0x1
 1423 08ad B4       		.byte	0xb4
 1424 08ae CE000000 		.4byte	0xce
 1425 08b2 00000000 		.4byte	.LFB153
 1426 08b6 0C000000 		.4byte	.LFE153-.LFB153
 1427 08ba 01       		.uleb128 0x1
 1428 08bb 9C       		.byte	0x9c
 1429 08bc 1F       		.uleb128 0x1f
 1430 08bd 220A0000 		.4byte	.LASF146
 1431 08c1 01       		.byte	0x1
 1432 08c2 1F       		.byte	0x1f
 1433 08c3 E0000000 		.4byte	0xe0
 1434 08c7 05       		.uleb128 0x5
 1435 08c8 03       		.byte	0x3
 1436 08c9 00000000 		.4byte	opcode
 1437 08cd 22       		.uleb128 0x22
 1438 08ce 70010000 		.4byte	.LASF147
 1439 08d2 0A       		.byte	0xa
 1440 08d3 F907     		.2byte	0x7f9
 1441 08d5 D9080000 		.4byte	0x8d9
 1442 08d9 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 47


 1443 08da C3000000 		.4byte	0xc3
 1444 08de 23       		.uleb128 0x23
 1445 08df AE060000 		.4byte	.LASF148
 1446 08e3 07       		.byte	0x7
 1447 08e4 A7       		.byte	0xa7
 1448 08e5 E9080000 		.4byte	0x8e9
 1449 08e9 12       		.uleb128 0x12
 1450 08ea 04       		.byte	0x4
 1451 08eb EF080000 		.4byte	0x8ef
 1452 08ef 06       		.uleb128 0x6
 1453 08f0 84050000 		.4byte	0x584
 1454 08f4 24       		.uleb128 0x24
 1455 08f5 9D080000 		.4byte	.LASF149
 1456 08f9 9D080000 		.4byte	.LASF149
 1457 08fd 08       		.byte	0x8
 1458 08fe 9203     		.2byte	0x392
 1459 0900 24       		.uleb128 0x24
 1460 0901 FE070000 		.4byte	.LASF150
 1461 0905 FE070000 		.4byte	.LASF150
 1462 0909 02       		.byte	0x2
 1463 090a 9C01     		.2byte	0x19c
 1464 090c 00       		.byte	0
 1465              		.section	.debug_abbrev,"",%progbits
 1466              	.Ldebug_abbrev0:
 1467 0000 01       		.uleb128 0x1
 1468 0001 11       		.uleb128 0x11
 1469 0002 01       		.byte	0x1
 1470 0003 25       		.uleb128 0x25
 1471 0004 0E       		.uleb128 0xe
 1472 0005 13       		.uleb128 0x13
 1473 0006 0B       		.uleb128 0xb
 1474 0007 03       		.uleb128 0x3
 1475 0008 0E       		.uleb128 0xe
 1476 0009 1B       		.uleb128 0x1b
 1477 000a 0E       		.uleb128 0xe
 1478 000b 55       		.uleb128 0x55
 1479 000c 17       		.uleb128 0x17
 1480 000d 11       		.uleb128 0x11
 1481 000e 01       		.uleb128 0x1
 1482 000f 10       		.uleb128 0x10
 1483 0010 17       		.uleb128 0x17
 1484 0011 00       		.byte	0
 1485 0012 00       		.byte	0
 1486 0013 02       		.uleb128 0x2
 1487 0014 24       		.uleb128 0x24
 1488 0015 00       		.byte	0
 1489 0016 0B       		.uleb128 0xb
 1490 0017 0B       		.uleb128 0xb
 1491 0018 3E       		.uleb128 0x3e
 1492 0019 0B       		.uleb128 0xb
 1493 001a 03       		.uleb128 0x3
 1494 001b 0E       		.uleb128 0xe
 1495 001c 00       		.byte	0
 1496 001d 00       		.byte	0
 1497 001e 03       		.uleb128 0x3
 1498 001f 16       		.uleb128 0x16
 1499 0020 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 48


 1500 0021 03       		.uleb128 0x3
 1501 0022 0E       		.uleb128 0xe
 1502 0023 3A       		.uleb128 0x3a
 1503 0024 0B       		.uleb128 0xb
 1504 0025 3B       		.uleb128 0x3b
 1505 0026 0B       		.uleb128 0xb
 1506 0027 49       		.uleb128 0x49
 1507 0028 13       		.uleb128 0x13
 1508 0029 00       		.byte	0
 1509 002a 00       		.byte	0
 1510 002b 04       		.uleb128 0x4
 1511 002c 24       		.uleb128 0x24
 1512 002d 00       		.byte	0
 1513 002e 0B       		.uleb128 0xb
 1514 002f 0B       		.uleb128 0xb
 1515 0030 3E       		.uleb128 0x3e
 1516 0031 0B       		.uleb128 0xb
 1517 0032 03       		.uleb128 0x3
 1518 0033 08       		.uleb128 0x8
 1519 0034 00       		.byte	0
 1520 0035 00       		.byte	0
 1521 0036 05       		.uleb128 0x5
 1522 0037 35       		.uleb128 0x35
 1523 0038 00       		.byte	0
 1524 0039 49       		.uleb128 0x49
 1525 003a 13       		.uleb128 0x13
 1526 003b 00       		.byte	0
 1527 003c 00       		.byte	0
 1528 003d 06       		.uleb128 0x6
 1529 003e 26       		.uleb128 0x26
 1530 003f 00       		.byte	0
 1531 0040 49       		.uleb128 0x49
 1532 0041 13       		.uleb128 0x13
 1533 0042 00       		.byte	0
 1534 0043 00       		.byte	0
 1535 0044 07       		.uleb128 0x7
 1536 0045 01       		.uleb128 0x1
 1537 0046 01       		.byte	0x1
 1538 0047 49       		.uleb128 0x49
 1539 0048 13       		.uleb128 0x13
 1540 0049 01       		.uleb128 0x1
 1541 004a 13       		.uleb128 0x13
 1542 004b 00       		.byte	0
 1543 004c 00       		.byte	0
 1544 004d 08       		.uleb128 0x8
 1545 004e 21       		.uleb128 0x21
 1546 004f 00       		.byte	0
 1547 0050 49       		.uleb128 0x49
 1548 0051 13       		.uleb128 0x13
 1549 0052 2F       		.uleb128 0x2f
 1550 0053 0B       		.uleb128 0xb
 1551 0054 00       		.byte	0
 1552 0055 00       		.byte	0
 1553 0056 09       		.uleb128 0x9
 1554 0057 13       		.uleb128 0x13
 1555 0058 01       		.byte	0x1
 1556 0059 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 49


 1557 005a 0B       		.uleb128 0xb
 1558 005b 3A       		.uleb128 0x3a
 1559 005c 0B       		.uleb128 0xb
 1560 005d 3B       		.uleb128 0x3b
 1561 005e 0B       		.uleb128 0xb
 1562 005f 01       		.uleb128 0x1
 1563 0060 13       		.uleb128 0x13
 1564 0061 00       		.byte	0
 1565 0062 00       		.byte	0
 1566 0063 0A       		.uleb128 0xa
 1567 0064 0D       		.uleb128 0xd
 1568 0065 00       		.byte	0
 1569 0066 03       		.uleb128 0x3
 1570 0067 0E       		.uleb128 0xe
 1571 0068 3A       		.uleb128 0x3a
 1572 0069 0B       		.uleb128 0xb
 1573 006a 3B       		.uleb128 0x3b
 1574 006b 0B       		.uleb128 0xb
 1575 006c 49       		.uleb128 0x49
 1576 006d 13       		.uleb128 0x13
 1577 006e 38       		.uleb128 0x38
 1578 006f 0B       		.uleb128 0xb
 1579 0070 00       		.byte	0
 1580 0071 00       		.byte	0
 1581 0072 0B       		.uleb128 0xb
 1582 0073 16       		.uleb128 0x16
 1583 0074 00       		.byte	0
 1584 0075 03       		.uleb128 0x3
 1585 0076 0E       		.uleb128 0xe
 1586 0077 3A       		.uleb128 0x3a
 1587 0078 0B       		.uleb128 0xb
 1588 0079 3B       		.uleb128 0x3b
 1589 007a 05       		.uleb128 0x5
 1590 007b 49       		.uleb128 0x49
 1591 007c 13       		.uleb128 0x13
 1592 007d 00       		.byte	0
 1593 007e 00       		.byte	0
 1594 007f 0C       		.uleb128 0xc
 1595 0080 04       		.uleb128 0x4
 1596 0081 01       		.byte	0x1
 1597 0082 0B       		.uleb128 0xb
 1598 0083 0B       		.uleb128 0xb
 1599 0084 49       		.uleb128 0x49
 1600 0085 13       		.uleb128 0x13
 1601 0086 3A       		.uleb128 0x3a
 1602 0087 0B       		.uleb128 0xb
 1603 0088 3B       		.uleb128 0x3b
 1604 0089 0B       		.uleb128 0xb
 1605 008a 01       		.uleb128 0x1
 1606 008b 13       		.uleb128 0x13
 1607 008c 00       		.byte	0
 1608 008d 00       		.byte	0
 1609 008e 0D       		.uleb128 0xd
 1610 008f 28       		.uleb128 0x28
 1611 0090 00       		.byte	0
 1612 0091 03       		.uleb128 0x3
 1613 0092 0E       		.uleb128 0xe
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 50


 1614 0093 1C       		.uleb128 0x1c
 1615 0094 0B       		.uleb128 0xb
 1616 0095 00       		.byte	0
 1617 0096 00       		.byte	0
 1618 0097 0E       		.uleb128 0xe
 1619 0098 28       		.uleb128 0x28
 1620 0099 00       		.byte	0
 1621 009a 03       		.uleb128 0x3
 1622 009b 0E       		.uleb128 0xe
 1623 009c 1C       		.uleb128 0x1c
 1624 009d 06       		.uleb128 0x6
 1625 009e 00       		.byte	0
 1626 009f 00       		.byte	0
 1627 00a0 0F       		.uleb128 0xf
 1628 00a1 04       		.uleb128 0x4
 1629 00a2 01       		.byte	0x1
 1630 00a3 0B       		.uleb128 0xb
 1631 00a4 0B       		.uleb128 0xb
 1632 00a5 49       		.uleb128 0x49
 1633 00a6 13       		.uleb128 0x13
 1634 00a7 3A       		.uleb128 0x3a
 1635 00a8 0B       		.uleb128 0xb
 1636 00a9 3B       		.uleb128 0x3b
 1637 00aa 05       		.uleb128 0x5
 1638 00ab 01       		.uleb128 0x1
 1639 00ac 13       		.uleb128 0x13
 1640 00ad 00       		.byte	0
 1641 00ae 00       		.byte	0
 1642 00af 10       		.uleb128 0x10
 1643 00b0 2E       		.uleb128 0x2e
 1644 00b1 01       		.byte	0x1
 1645 00b2 03       		.uleb128 0x3
 1646 00b3 0E       		.uleb128 0xe
 1647 00b4 3A       		.uleb128 0x3a
 1648 00b5 0B       		.uleb128 0xb
 1649 00b6 3B       		.uleb128 0x3b
 1650 00b7 05       		.uleb128 0x5
 1651 00b8 27       		.uleb128 0x27
 1652 00b9 19       		.uleb128 0x19
 1653 00ba 49       		.uleb128 0x49
 1654 00bb 13       		.uleb128 0x13
 1655 00bc 20       		.uleb128 0x20
 1656 00bd 0B       		.uleb128 0xb
 1657 00be 01       		.uleb128 0x1
 1658 00bf 13       		.uleb128 0x13
 1659 00c0 00       		.byte	0
 1660 00c1 00       		.byte	0
 1661 00c2 11       		.uleb128 0x11
 1662 00c3 05       		.uleb128 0x5
 1663 00c4 00       		.byte	0
 1664 00c5 03       		.uleb128 0x3
 1665 00c6 0E       		.uleb128 0xe
 1666 00c7 3A       		.uleb128 0x3a
 1667 00c8 0B       		.uleb128 0xb
 1668 00c9 3B       		.uleb128 0x3b
 1669 00ca 05       		.uleb128 0x5
 1670 00cb 49       		.uleb128 0x49
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 51


 1671 00cc 13       		.uleb128 0x13
 1672 00cd 00       		.byte	0
 1673 00ce 00       		.byte	0
 1674 00cf 12       		.uleb128 0x12
 1675 00d0 0F       		.uleb128 0xf
 1676 00d1 00       		.byte	0
 1677 00d2 0B       		.uleb128 0xb
 1678 00d3 0B       		.uleb128 0xb
 1679 00d4 49       		.uleb128 0x49
 1680 00d5 13       		.uleb128 0x13
 1681 00d6 00       		.byte	0
 1682 00d7 00       		.byte	0
 1683 00d8 13       		.uleb128 0x13
 1684 00d9 26       		.uleb128 0x26
 1685 00da 00       		.byte	0
 1686 00db 00       		.byte	0
 1687 00dc 00       		.byte	0
 1688 00dd 14       		.uleb128 0x14
 1689 00de 2E       		.uleb128 0x2e
 1690 00df 01       		.byte	0x1
 1691 00e0 03       		.uleb128 0x3
 1692 00e1 0E       		.uleb128 0xe
 1693 00e2 3A       		.uleb128 0x3a
 1694 00e3 0B       		.uleb128 0xb
 1695 00e4 3B       		.uleb128 0x3b
 1696 00e5 0B       		.uleb128 0xb
 1697 00e6 27       		.uleb128 0x27
 1698 00e7 19       		.uleb128 0x19
 1699 00e8 49       		.uleb128 0x49
 1700 00e9 13       		.uleb128 0x13
 1701 00ea 11       		.uleb128 0x11
 1702 00eb 01       		.uleb128 0x1
 1703 00ec 12       		.uleb128 0x12
 1704 00ed 06       		.uleb128 0x6
 1705 00ee 40       		.uleb128 0x40
 1706 00ef 18       		.uleb128 0x18
 1707 00f0 9742     		.uleb128 0x2117
 1708 00f2 19       		.uleb128 0x19
 1709 00f3 01       		.uleb128 0x1
 1710 00f4 13       		.uleb128 0x13
 1711 00f5 00       		.byte	0
 1712 00f6 00       		.byte	0
 1713 00f7 15       		.uleb128 0x15
 1714 00f8 34       		.uleb128 0x34
 1715 00f9 00       		.byte	0
 1716 00fa 03       		.uleb128 0x3
 1717 00fb 0E       		.uleb128 0xe
 1718 00fc 3A       		.uleb128 0x3a
 1719 00fd 0B       		.uleb128 0xb
 1720 00fe 3B       		.uleb128 0x3b
 1721 00ff 0B       		.uleb128 0xb
 1722 0100 49       		.uleb128 0x49
 1723 0101 13       		.uleb128 0x13
 1724 0102 02       		.uleb128 0x2
 1725 0103 17       		.uleb128 0x17
 1726 0104 00       		.byte	0
 1727 0105 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 52


 1728 0106 16       		.uleb128 0x16
 1729 0107 2E       		.uleb128 0x2e
 1730 0108 01       		.byte	0x1
 1731 0109 3F       		.uleb128 0x3f
 1732 010a 19       		.uleb128 0x19
 1733 010b 03       		.uleb128 0x3
 1734 010c 0E       		.uleb128 0xe
 1735 010d 3A       		.uleb128 0x3a
 1736 010e 0B       		.uleb128 0xb
 1737 010f 3B       		.uleb128 0x3b
 1738 0110 0B       		.uleb128 0xb
 1739 0111 27       		.uleb128 0x27
 1740 0112 19       		.uleb128 0x19
 1741 0113 49       		.uleb128 0x49
 1742 0114 13       		.uleb128 0x13
 1743 0115 11       		.uleb128 0x11
 1744 0116 01       		.uleb128 0x1
 1745 0117 12       		.uleb128 0x12
 1746 0118 06       		.uleb128 0x6
 1747 0119 40       		.uleb128 0x40
 1748 011a 18       		.uleb128 0x18
 1749 011b 9742     		.uleb128 0x2117
 1750 011d 19       		.uleb128 0x19
 1751 011e 01       		.uleb128 0x1
 1752 011f 13       		.uleb128 0x13
 1753 0120 00       		.byte	0
 1754 0121 00       		.byte	0
 1755 0122 17       		.uleb128 0x17
 1756 0123 05       		.uleb128 0x5
 1757 0124 00       		.byte	0
 1758 0125 03       		.uleb128 0x3
 1759 0126 0E       		.uleb128 0xe
 1760 0127 3A       		.uleb128 0x3a
 1761 0128 0B       		.uleb128 0xb
 1762 0129 3B       		.uleb128 0x3b
 1763 012a 0B       		.uleb128 0xb
 1764 012b 49       		.uleb128 0x49
 1765 012c 13       		.uleb128 0x13
 1766 012d 02       		.uleb128 0x2
 1767 012e 17       		.uleb128 0x17
 1768 012f 00       		.byte	0
 1769 0130 00       		.byte	0
 1770 0131 18       		.uleb128 0x18
 1771 0132 1D       		.uleb128 0x1d
 1772 0133 01       		.byte	0x1
 1773 0134 31       		.uleb128 0x31
 1774 0135 13       		.uleb128 0x13
 1775 0136 11       		.uleb128 0x11
 1776 0137 01       		.uleb128 0x1
 1777 0138 12       		.uleb128 0x12
 1778 0139 06       		.uleb128 0x6
 1779 013a 58       		.uleb128 0x58
 1780 013b 0B       		.uleb128 0xb
 1781 013c 59       		.uleb128 0x59
 1782 013d 0B       		.uleb128 0xb
 1783 013e 01       		.uleb128 0x1
 1784 013f 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 53


 1785 0140 00       		.byte	0
 1786 0141 00       		.byte	0
 1787 0142 19       		.uleb128 0x19
 1788 0143 05       		.uleb128 0x5
 1789 0144 00       		.byte	0
 1790 0145 31       		.uleb128 0x31
 1791 0146 13       		.uleb128 0x13
 1792 0147 02       		.uleb128 0x2
 1793 0148 17       		.uleb128 0x17
 1794 0149 00       		.byte	0
 1795 014a 00       		.byte	0
 1796 014b 1A       		.uleb128 0x1a
 1797 014c 898201   		.uleb128 0x4109
 1798 014f 01       		.byte	0x1
 1799 0150 11       		.uleb128 0x11
 1800 0151 01       		.uleb128 0x1
 1801 0152 31       		.uleb128 0x31
 1802 0153 13       		.uleb128 0x13
 1803 0154 00       		.byte	0
 1804 0155 00       		.byte	0
 1805 0156 1B       		.uleb128 0x1b
 1806 0157 8A8201   		.uleb128 0x410a
 1807 015a 00       		.byte	0
 1808 015b 02       		.uleb128 0x2
 1809 015c 18       		.uleb128 0x18
 1810 015d 9142     		.uleb128 0x2111
 1811 015f 18       		.uleb128 0x18
 1812 0160 00       		.byte	0
 1813 0161 00       		.byte	0
 1814 0162 1C       		.uleb128 0x1c
 1815 0163 05       		.uleb128 0x5
 1816 0164 00       		.byte	0
 1817 0165 31       		.uleb128 0x31
 1818 0166 13       		.uleb128 0x13
 1819 0167 00       		.byte	0
 1820 0168 00       		.byte	0
 1821 0169 1D       		.uleb128 0x1d
 1822 016a 898201   		.uleb128 0x4109
 1823 016d 00       		.byte	0
 1824 016e 11       		.uleb128 0x11
 1825 016f 01       		.uleb128 0x1
 1826 0170 31       		.uleb128 0x31
 1827 0171 13       		.uleb128 0x13
 1828 0172 00       		.byte	0
 1829 0173 00       		.byte	0
 1830 0174 1E       		.uleb128 0x1e
 1831 0175 0B       		.uleb128 0xb
 1832 0176 01       		.byte	0x1
 1833 0177 11       		.uleb128 0x11
 1834 0178 01       		.uleb128 0x1
 1835 0179 12       		.uleb128 0x12
 1836 017a 06       		.uleb128 0x6
 1837 017b 00       		.byte	0
 1838 017c 00       		.byte	0
 1839 017d 1F       		.uleb128 0x1f
 1840 017e 34       		.uleb128 0x34
 1841 017f 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 54


 1842 0180 03       		.uleb128 0x3
 1843 0181 0E       		.uleb128 0xe
 1844 0182 3A       		.uleb128 0x3a
 1845 0183 0B       		.uleb128 0xb
 1846 0184 3B       		.uleb128 0x3b
 1847 0185 0B       		.uleb128 0xb
 1848 0186 49       		.uleb128 0x49
 1849 0187 13       		.uleb128 0x13
 1850 0188 02       		.uleb128 0x2
 1851 0189 18       		.uleb128 0x18
 1852 018a 00       		.byte	0
 1853 018b 00       		.byte	0
 1854 018c 20       		.uleb128 0x20
 1855 018d 0B       		.uleb128 0xb
 1856 018e 01       		.byte	0x1
 1857 018f 11       		.uleb128 0x11
 1858 0190 01       		.uleb128 0x1
 1859 0191 12       		.uleb128 0x12
 1860 0192 06       		.uleb128 0x6
 1861 0193 01       		.uleb128 0x1
 1862 0194 13       		.uleb128 0x13
 1863 0195 00       		.byte	0
 1864 0196 00       		.byte	0
 1865 0197 21       		.uleb128 0x21
 1866 0198 2E       		.uleb128 0x2e
 1867 0199 00       		.byte	0
 1868 019a 3F       		.uleb128 0x3f
 1869 019b 19       		.uleb128 0x19
 1870 019c 03       		.uleb128 0x3
 1871 019d 0E       		.uleb128 0xe
 1872 019e 3A       		.uleb128 0x3a
 1873 019f 0B       		.uleb128 0xb
 1874 01a0 3B       		.uleb128 0x3b
 1875 01a1 0B       		.uleb128 0xb
 1876 01a2 27       		.uleb128 0x27
 1877 01a3 19       		.uleb128 0x19
 1878 01a4 49       		.uleb128 0x49
 1879 01a5 13       		.uleb128 0x13
 1880 01a6 11       		.uleb128 0x11
 1881 01a7 01       		.uleb128 0x1
 1882 01a8 12       		.uleb128 0x12
 1883 01a9 06       		.uleb128 0x6
 1884 01aa 40       		.uleb128 0x40
 1885 01ab 18       		.uleb128 0x18
 1886 01ac 9742     		.uleb128 0x2117
 1887 01ae 19       		.uleb128 0x19
 1888 01af 00       		.byte	0
 1889 01b0 00       		.byte	0
 1890 01b1 22       		.uleb128 0x22
 1891 01b2 34       		.uleb128 0x34
 1892 01b3 00       		.byte	0
 1893 01b4 03       		.uleb128 0x3
 1894 01b5 0E       		.uleb128 0xe
 1895 01b6 3A       		.uleb128 0x3a
 1896 01b7 0B       		.uleb128 0xb
 1897 01b8 3B       		.uleb128 0x3b
 1898 01b9 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 55


 1899 01ba 49       		.uleb128 0x49
 1900 01bb 13       		.uleb128 0x13
 1901 01bc 3F       		.uleb128 0x3f
 1902 01bd 19       		.uleb128 0x19
 1903 01be 3C       		.uleb128 0x3c
 1904 01bf 19       		.uleb128 0x19
 1905 01c0 00       		.byte	0
 1906 01c1 00       		.byte	0
 1907 01c2 23       		.uleb128 0x23
 1908 01c3 34       		.uleb128 0x34
 1909 01c4 00       		.byte	0
 1910 01c5 03       		.uleb128 0x3
 1911 01c6 0E       		.uleb128 0xe
 1912 01c7 3A       		.uleb128 0x3a
 1913 01c8 0B       		.uleb128 0xb
 1914 01c9 3B       		.uleb128 0x3b
 1915 01ca 0B       		.uleb128 0xb
 1916 01cb 49       		.uleb128 0x49
 1917 01cc 13       		.uleb128 0x13
 1918 01cd 3F       		.uleb128 0x3f
 1919 01ce 19       		.uleb128 0x19
 1920 01cf 3C       		.uleb128 0x3c
 1921 01d0 19       		.uleb128 0x19
 1922 01d1 00       		.byte	0
 1923 01d2 00       		.byte	0
 1924 01d3 24       		.uleb128 0x24
 1925 01d4 2E       		.uleb128 0x2e
 1926 01d5 00       		.byte	0
 1927 01d6 3F       		.uleb128 0x3f
 1928 01d7 19       		.uleb128 0x19
 1929 01d8 3C       		.uleb128 0x3c
 1930 01d9 19       		.uleb128 0x19
 1931 01da 6E       		.uleb128 0x6e
 1932 01db 0E       		.uleb128 0xe
 1933 01dc 03       		.uleb128 0x3
 1934 01dd 0E       		.uleb128 0xe
 1935 01de 3A       		.uleb128 0x3a
 1936 01df 0B       		.uleb128 0xb
 1937 01e0 3B       		.uleb128 0x3b
 1938 01e1 05       		.uleb128 0x5
 1939 01e2 00       		.byte	0
 1940 01e3 00       		.byte	0
 1941 01e4 00       		.byte	0
 1942              		.section	.debug_loc,"",%progbits
 1943              	.Ldebug_loc0:
 1944              	.LLST0:
 1945 0000 16000000 		.4byte	.LVL0
 1946 0004 1A000000 		.4byte	.LVL1
 1947 0008 0600     		.2byte	0x6
 1948 000a 0C       		.byte	0xc
 1949 000b FF006A00 		.4byte	0x6a00ff
 1950 000f 9F       		.byte	0x9f
 1951 0010 1C000000 		.4byte	.LVL2
 1952 0014 34000000 		.4byte	.LFE154
 1953 0018 0100     		.2byte	0x1
 1954 001a 50       		.byte	0x50
 1955 001b 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 56


 1956 001f 00000000 		.4byte	0
 1957              	.LLST1:
 1958 0023 00000000 		.4byte	.LVL3
 1959 0027 0A000000 		.4byte	.LVL4
 1960 002b 0100     		.2byte	0x1
 1961 002d 50       		.byte	0x50
 1962 002e 0A000000 		.4byte	.LVL4
 1963 0032 8C000000 		.4byte	.LVL16
 1964 0036 0400     		.2byte	0x4
 1965 0038 F3       		.byte	0xf3
 1966 0039 01       		.uleb128 0x1
 1967 003a 50       		.byte	0x50
 1968 003b 9F       		.byte	0x9f
 1969 003c 8C000000 		.4byte	.LVL16
 1970 0040 8E000000 		.4byte	.LVL17
 1971 0044 0100     		.2byte	0x1
 1972 0046 50       		.byte	0x50
 1973 0047 8E000000 		.4byte	.LVL17
 1974 004b A8000000 		.4byte	.LFE152
 1975 004f 0400     		.2byte	0x4
 1976 0051 F3       		.byte	0xf3
 1977 0052 01       		.uleb128 0x1
 1978 0053 50       		.byte	0x50
 1979 0054 9F       		.byte	0x9f
 1980 0055 00000000 		.4byte	0
 1981 0059 00000000 		.4byte	0
 1982              	.LLST2:
 1983 005d 00000000 		.4byte	.LVL3
 1984 0061 22000000 		.4byte	.LVL6
 1985 0065 0100     		.2byte	0x1
 1986 0067 51       		.byte	0x51
 1987 0068 22000000 		.4byte	.LVL6
 1988 006c 8C000000 		.4byte	.LVL16
 1989 0070 0100     		.2byte	0x1
 1990 0072 54       		.byte	0x54
 1991 0073 8C000000 		.4byte	.LVL16
 1992 0077 90000000 		.4byte	.LVL18
 1993 007b 0100     		.2byte	0x1
 1994 007d 51       		.byte	0x51
 1995 007e 90000000 		.4byte	.LVL18
 1996 0082 94000000 		.4byte	.LVL20
 1997 0086 0100     		.2byte	0x1
 1998 0088 54       		.byte	0x54
 1999 0089 94000000 		.4byte	.LVL20
 2000 008d A8000000 		.4byte	.LFE152
 2001 0091 0400     		.2byte	0x4
 2002 0093 F3       		.byte	0xf3
 2003 0094 01       		.uleb128 0x1
 2004 0095 51       		.byte	0x51
 2005 0096 9F       		.byte	0x9f
 2006 0097 00000000 		.4byte	0
 2007 009b 00000000 		.4byte	0
 2008              	.LLST3:
 2009 009f 00000000 		.4byte	.LVL3
 2010 00a3 7E000000 		.4byte	.LVL13
 2011 00a7 0600     		.2byte	0x6
 2012 00a9 0C       		.byte	0xc
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 57


 2013 00aa 03006A00 		.4byte	0x6a0003
 2014 00ae 9F       		.byte	0x9f
 2015 00af 7E000000 		.4byte	.LVL13
 2016 00b3 82000000 		.4byte	.LVL14
 2017 00b7 0200     		.2byte	0x2
 2018 00b9 30       		.byte	0x30
 2019 00ba 9F       		.byte	0x9f
 2020 00bb 82000000 		.4byte	.LVL14
 2021 00bf 86000000 		.4byte	.LVL15
 2022 00c3 0600     		.2byte	0x6
 2023 00c5 0C       		.byte	0xc
 2024 00c6 03006A00 		.4byte	0x6a0003
 2025 00ca 9F       		.byte	0x9f
 2026 00cb 86000000 		.4byte	.LVL15
 2027 00cf 8C000000 		.4byte	.LVL16
 2028 00d3 0100     		.2byte	0x1
 2029 00d5 50       		.byte	0x50
 2030 00d6 8C000000 		.4byte	.LVL16
 2031 00da 8E000000 		.4byte	.LVL17
 2032 00de 0600     		.2byte	0x6
 2033 00e0 0C       		.byte	0xc
 2034 00e1 03006A00 		.4byte	0x6a0003
 2035 00e5 9F       		.byte	0x9f
 2036 00e6 8E000000 		.4byte	.LVL17
 2037 00ea 90000000 		.4byte	.LVL18
 2038 00ee 0100     		.2byte	0x1
 2039 00f0 50       		.byte	0x50
 2040 00f1 90000000 		.4byte	.LVL18
 2041 00f5 92000000 		.4byte	.LVL19
 2042 00f9 0600     		.2byte	0x6
 2043 00fb 0C       		.byte	0xc
 2044 00fc 03006A00 		.4byte	0x6a0003
 2045 0100 9F       		.byte	0x9f
 2046 0101 92000000 		.4byte	.LVL19
 2047 0105 A8000000 		.4byte	.LFE152
 2048 0109 0100     		.2byte	0x1
 2049 010b 50       		.byte	0x50
 2050 010c 00000000 		.4byte	0
 2051 0110 00000000 		.4byte	0
 2052              	.LLST4:
 2053 0114 12000000 		.4byte	.LVL5
 2054 0118 32000000 		.4byte	.LVL8
 2055 011c 0200     		.2byte	0x2
 2056 011e 31       		.byte	0x31
 2057 011f 9F       		.byte	0x9f
 2058 0120 00000000 		.4byte	0
 2059 0124 00000000 		.4byte	0
 2060              	.LLST5:
 2061 0128 32000000 		.4byte	.LVL8
 2062 012c 3C000000 		.4byte	.LVL9
 2063 0130 0600     		.2byte	0x6
 2064 0132 03       		.byte	0x3
 2065 0133 00000000 		.4byte	opcode
 2066 0137 9F       		.byte	0x9f
 2067 0138 00000000 		.4byte	0
 2068 013c 00000000 		.4byte	0
 2069              	.LLST6:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 58


 2070 0140 32000000 		.4byte	.LVL8
 2071 0144 3C000000 		.4byte	.LVL9
 2072 0148 0200     		.2byte	0x2
 2073 014a 31       		.byte	0x31
 2074 014b 9F       		.byte	0x9f
 2075 014c 00000000 		.4byte	0
 2076 0150 00000000 		.4byte	0
 2077              	.LLST7:
 2078 0154 3E000000 		.4byte	.LVL10
 2079 0158 60000000 		.4byte	.LVL12
 2080 015c 0200     		.2byte	0x2
 2081 015e 31       		.byte	0x31
 2082 015f 9F       		.byte	0x9f
 2083 0160 00000000 		.4byte	0
 2084 0164 00000000 		.4byte	0
 2085              	.LLST8:
 2086 0168 00000000 		.4byte	.LVL21
 2087 016c 14000000 		.4byte	.LVL24
 2088 0170 0100     		.2byte	0x1
 2089 0172 50       		.byte	0x50
 2090 0173 14000000 		.4byte	.LVL24
 2091 0177 24000000 		.4byte	.LVL27
 2092 017b 0100     		.2byte	0x1
 2093 017d 54       		.byte	0x54
 2094 017e 24000000 		.4byte	.LVL27
 2095 0182 30000000 		.4byte	.LVL29
 2096 0186 0400     		.2byte	0x4
 2097 0188 F3       		.byte	0xf3
 2098 0189 01       		.uleb128 0x1
 2099 018a 50       		.byte	0x50
 2100 018b 9F       		.byte	0x9f
 2101 018c 30000000 		.4byte	.LVL29
 2102 0190 34000000 		.4byte	.LVL31
 2103 0194 0100     		.2byte	0x1
 2104 0196 50       		.byte	0x50
 2105 0197 34000000 		.4byte	.LVL31
 2106 019b 40000000 		.4byte	.LFE151
 2107 019f 0400     		.2byte	0x4
 2108 01a1 F3       		.byte	0xf3
 2109 01a2 01       		.uleb128 0x1
 2110 01a3 50       		.byte	0x50
 2111 01a4 9F       		.byte	0x9f
 2112 01a5 00000000 		.4byte	0
 2113 01a9 00000000 		.4byte	0
 2114              	.LLST9:
 2115 01ad 00000000 		.4byte	.LVL21
 2116 01b1 12000000 		.4byte	.LVL23
 2117 01b5 0100     		.2byte	0x1
 2118 01b7 51       		.byte	0x51
 2119 01b8 12000000 		.4byte	.LVL23
 2120 01bc 30000000 		.4byte	.LVL29
 2121 01c0 0100     		.2byte	0x1
 2122 01c2 55       		.byte	0x55
 2123 01c3 30000000 		.4byte	.LVL29
 2124 01c7 36000000 		.4byte	.LVL32
 2125 01cb 0100     		.2byte	0x1
 2126 01cd 51       		.byte	0x51
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 59


 2127 01ce 36000000 		.4byte	.LVL32
 2128 01d2 3C000000 		.4byte	.LVL33
 2129 01d6 0100     		.2byte	0x1
 2130 01d8 55       		.byte	0x55
 2131 01d9 3C000000 		.4byte	.LVL33
 2132 01dd 40000000 		.4byte	.LFE151
 2133 01e1 0400     		.2byte	0x4
 2134 01e3 F3       		.byte	0xf3
 2135 01e4 01       		.uleb128 0x1
 2136 01e5 51       		.byte	0x51
 2137 01e6 9F       		.byte	0x9f
 2138 01e7 00000000 		.4byte	0
 2139 01eb 00000000 		.4byte	0
 2140              	.LLST10:
 2141 01ef 00000000 		.4byte	.LVL21
 2142 01f3 18000000 		.4byte	.LVL25
 2143 01f7 0600     		.2byte	0x6
 2144 01f9 0C       		.byte	0xc
 2145 01fa 03006A00 		.4byte	0x6a0003
 2146 01fe 9F       		.byte	0x9f
 2147 01ff 18000000 		.4byte	.LVL25
 2148 0203 20000000 		.4byte	.LVL26
 2149 0207 0100     		.2byte	0x1
 2150 0209 50       		.byte	0x50
 2151 020a 20000000 		.4byte	.LVL26
 2152 020e 30000000 		.4byte	.LVL29
 2153 0212 0100     		.2byte	0x1
 2154 0214 53       		.byte	0x53
 2155 0215 30000000 		.4byte	.LVL29
 2156 0219 32000000 		.4byte	.LVL30
 2157 021d 0600     		.2byte	0x6
 2158 021f 0C       		.byte	0xc
 2159 0220 03006A00 		.4byte	0x6a0003
 2160 0224 9F       		.byte	0x9f
 2161 0225 32000000 		.4byte	.LVL30
 2162 0229 40000000 		.4byte	.LFE151
 2163 022d 0100     		.2byte	0x1
 2164 022f 53       		.byte	0x53
 2165 0230 00000000 		.4byte	0
 2166 0234 00000000 		.4byte	0
 2167              	.LLST11:
 2168 0238 0A000000 		.4byte	.LVL22
 2169 023c 14000000 		.4byte	.LVL24
 2170 0240 0500     		.2byte	0x5
 2171 0242 70       		.byte	0x70
 2172 0243 00       		.sleb128 0
 2173 0244 33       		.byte	0x33
 2174 0245 25       		.byte	0x25
 2175 0246 9F       		.byte	0x9f
 2176 0247 14000000 		.4byte	.LVL24
 2177 024b 17000000 		.4byte	.LVL25-1
 2178 024f 0100     		.2byte	0x1
 2179 0251 50       		.byte	0x50
 2180 0252 17000000 		.4byte	.LVL25-1
 2181 0256 24000000 		.4byte	.LVL27
 2182 025a 0500     		.2byte	0x5
 2183 025c 74       		.byte	0x74
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 60


 2184 025d 00       		.sleb128 0
 2185 025e 33       		.byte	0x33
 2186 025f 25       		.byte	0x25
 2187 0260 9F       		.byte	0x9f
 2188 0261 24000000 		.4byte	.LVL27
 2189 0265 30000000 		.4byte	.LVL29
 2190 0269 0600     		.2byte	0x6
 2191 026b F3       		.byte	0xf3
 2192 026c 01       		.uleb128 0x1
 2193 026d 50       		.byte	0x50
 2194 026e 33       		.byte	0x33
 2195 026f 25       		.byte	0x25
 2196 0270 9F       		.byte	0x9f
 2197 0271 36000000 		.4byte	.LVL32
 2198 0275 40000000 		.4byte	.LFE151
 2199 0279 0600     		.2byte	0x6
 2200 027b F3       		.byte	0xf3
 2201 027c 01       		.uleb128 0x1
 2202 027d 50       		.byte	0x50
 2203 027e 33       		.byte	0x33
 2204 027f 25       		.byte	0x25
 2205 0280 9F       		.byte	0x9f
 2206 0281 00000000 		.4byte	0
 2207 0285 00000000 		.4byte	0
 2208              	.LLST12:
 2209 0289 20000000 		.4byte	.LVL26
 2210 028d 28000000 		.4byte	.LVL28
 2211 0291 0100     		.2byte	0x1
 2212 0293 50       		.byte	0x50
 2213 0294 28000000 		.4byte	.LVL28
 2214 0298 30000000 		.4byte	.LVL29
 2215 029c 0600     		.2byte	0x6
 2216 029e F3       		.byte	0xf3
 2217 029f 01       		.uleb128 0x1
 2218 02a0 50       		.byte	0x50
 2219 02a1 37       		.byte	0x37
 2220 02a2 1A       		.byte	0x1a
 2221 02a3 9F       		.byte	0x9f
 2222 02a4 00000000 		.4byte	0
 2223 02a8 00000000 		.4byte	0
 2224              		.section	.debug_aranges,"",%progbits
 2225 0000 34000000 		.4byte	0x34
 2226 0004 0200     		.2byte	0x2
 2227 0006 00000000 		.4byte	.Ldebug_info0
 2228 000a 04       		.byte	0x4
 2229 000b 00       		.byte	0
 2230 000c 0000     		.2byte	0
 2231 000e 0000     		.2byte	0
 2232 0010 00000000 		.4byte	.LFB154
 2233 0014 34000000 		.4byte	.LFE154-.LFB154
 2234 0018 00000000 		.4byte	.LFB152
 2235 001c A8000000 		.4byte	.LFE152-.LFB152
 2236 0020 00000000 		.4byte	.LFB151
 2237 0024 40000000 		.4byte	.LFE151-.LFB151
 2238 0028 00000000 		.4byte	.LFB153
 2239 002c 0C000000 		.4byte	.LFE153-.LFB153
 2240 0030 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 61


 2241 0034 00000000 		.4byte	0
 2242              		.section	.debug_ranges,"",%progbits
 2243              	.Ldebug_ranges0:
 2244 0000 00000000 		.4byte	.LFB154
 2245 0004 34000000 		.4byte	.LFE154
 2246 0008 00000000 		.4byte	.LFB152
 2247 000c A8000000 		.4byte	.LFE152
 2248 0010 00000000 		.4byte	.LFB151
 2249 0014 40000000 		.4byte	.LFE151
 2250 0018 00000000 		.4byte	.LFB153
 2251 001c 0C000000 		.4byte	.LFE153
 2252 0020 00000000 		.4byte	0
 2253 0024 00000000 		.4byte	0
 2254              		.section	.debug_line,"",%progbits
 2255              	.Ldebug_line0:
 2256 0000 8B030000 		.section	.debug_str,"MS",%progbits,1
 2256      0200F102 
 2256      00000201 
 2256      FB0E0D00 
 2256      01010101 
 2257              	.LASF64:
 2258 0000 70726F74 		.ascii	"protBusMasterMask\000"
 2258      4275734D 
 2258      61737465 
 2258      724D6173 
 2258      6B00
 2259              	.LASF145:
 2260 0012 62697450 		.ascii	"bitPos\000"
 2260      6F7300
 2261              	.LASF74:
 2262 0019 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 2262      6843746C 
 2262      4D61696E 
 2262      57733346 
 2262      72657100 
 2263              	.LASF96:
 2264 002d 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 2264      50727443 
 2264      6667496E 
 2264      4F666673 
 2264      657400
 2265              	.LASF114:
 2266 0040 6970634C 		.ascii	"ipcLockStatusOffset\000"
 2266      6F636B53 
 2266      74617475 
 2266      734F6666 
 2266      73657400 
 2267              	.LASF40:
 2268 0054 63727970 		.ascii	"cryptoVersion\000"
 2268      746F5665 
 2268      7273696F 
 2268      6E00
 2269              	.LASF128:
 2270 0062 43595F49 		.ascii	"CY_IPC_DRV_ERROR\000"
 2270      50435F44 
 2270      52565F45 
 2270      52524F52 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 62


 2270      00
 2271              	.LASF36:
 2272 0073 70617373 		.ascii	"passBase\000"
 2272      42617365 
 2272      00
 2273              	.LASF49:
 2274 007c 63707573 		.ascii	"cpussIpcIrqNr\000"
 2274      73497063 
 2274      4972714E 
 2274      7200
 2275              	.LASF3:
 2276 008a 5F5F7569 		.ascii	"__uint8_t\000"
 2276      6E74385F 
 2276      7400
 2277              	.LASF152:
 2278 0094 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 2278      72617465 
 2278      645F536F 
 2278      75726365 
 2278      5C50536F 
 2279 00c2 65667573 		.ascii	"efuse\\cy_efuse.c\000"
 2279      655C6379 
 2279      5F656675 
 2279      73652E63 
 2279      00
 2280              	.LASF93:
 2281 00d3 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 2281      44697632 
 2281      345F3543 
 2281      746C4F66 
 2281      66736574 
 2282              	.LASF100:
 2283 00e8 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 2283      73436D34 
 2283      436C6F63 
 2283      6B43746C 
 2283      4F666673 
 2284              	.LASF21:
 2285 00ff 52454C45 		.ascii	"RELEASE\000"
 2285      41534500 
 2286              	.LASF144:
 2287 0107 62697456 		.ascii	"bitVal\000"
 2287      616C00
 2288              	.LASF29:
 2289 010e 63707573 		.ascii	"cpussBase\000"
 2289      73426173 
 2289      6500
 2290              	.LASF78:
 2291 0118 64774368 		.ascii	"dwChCtlPrioPos\000"
 2291      43746C50 
 2291      72696F50 
 2291      6F7300
 2292              	.LASF58:
 2293 0127 70657269 		.ascii	"periClockNr\000"
 2293      436C6F63 
 2293      6B4E7200 
 2294              	.LASF12:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 63


 2295 0133 6C6F6E67 		.ascii	"long long unsigned int\000"
 2295      206C6F6E 
 2295      6720756E 
 2295      7369676E 
 2295      65642069 
 2296              	.LASF82:
 2297 014a 70657269 		.ascii	"periTrCmdOffset\000"
 2297      5472436D 
 2297      644F6666 
 2297      73657400 
 2298              	.LASF106:
 2299 015a 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2299      73537973 
 2299      5469636B 
 2299      43746C4F 
 2299      66667365 
 2300              	.LASF147:
 2301 0170 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2301      52784275 
 2301      66666572 
 2301      00
 2302              	.LASF67:
 2303 017d 666C6173 		.ascii	"flashPipeRequired\000"
 2303      68506970 
 2303      65526571 
 2303      75697265 
 2303      6400
 2304              	.LASF32:
 2305 018f 75646242 		.ascii	"udbBase\000"
 2305      61736500 
 2306              	.LASF71:
 2307 0197 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2307      6843746C 
 2307      4D61696E 
 2307      57733046 
 2307      72657100 
 2308              	.LASF15:
 2309 01ab 696E7431 		.ascii	"int16_t\000"
 2309      365F7400 
 2310              	.LASF11:
 2311 01b3 6C6F6E67 		.ascii	"long long int\000"
 2311      206C6F6E 
 2311      6720696E 
 2311      7400
 2312              	.LASF143:
 2313 01c1 6269744E 		.ascii	"bitNum\000"
 2313      756D00
 2314              	.LASF87:
 2315 01c8 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2315      44697643 
 2315      6D645479 
 2315      70655365 
 2315      6C506F73 
 2316              	.LASF20:
 2317 01dd 41435155 		.ascii	"ACQUIRE\000"
 2317      49524500 
 2318              	.LASF104:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 64


 2319 01e5 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2319      73547269 
 2319      6D52616D 
 2319      43746C4F 
 2319      66667365 
 2320              	.LASF45:
 2321 01fb 69706356 		.ascii	"ipcVersion\000"
 2321      65727369 
 2321      6F6E00
 2322              	.LASF107:
 2323 0206 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2323      73436D30 
 2323      4E6D6943 
 2323      746C4F66 
 2323      66736574 
 2324              	.LASF131:
 2325 021b 6E6F7469 		.ascii	"notifyEventIntr\000"
 2325      66794576 
 2325      656E7449 
 2325      6E747200 
 2326              	.LASF34:
 2327 022b 6873696F 		.ascii	"hsiomBase\000"
 2327      6D426173 
 2327      6500
 2328              	.LASF8:
 2329 0235 6C6F6E67 		.ascii	"long int\000"
 2329      20696E74 
 2329      00
 2330              	.LASF65:
 2331 023e 63727970 		.ascii	"cryptoMemSize\000"
 2331      746F4D65 
 2331      6D53697A 
 2331      6500
 2332              	.LASF31:
 2333 024c 70657269 		.ascii	"periBase\000"
 2333      42617365 
 2333      00
 2334              	.LASF63:
 2335 0255 73797350 		.ascii	"sysPmSimoPresent\000"
 2335      6D53696D 
 2335      6F507265 
 2335      73656E74 
 2335      00
 2336              	.LASF53:
 2337 0266 63707573 		.ascii	"cpussFmIrq\000"
 2337      73466D49 
 2337      727100
 2338              	.LASF119:
 2339 0271 646F7562 		.ascii	"double\000"
 2339      6C6500
 2340              	.LASF92:
 2341 0278 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2341      44697631 
 2341      365F3543 
 2341      746C4F66 
 2341      66736574 
 2342              	.LASF56:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 65


 2343 028d 73727373 		.ascii	"srssNumPll\000"
 2343      4E756D50 
 2343      6C6C00
 2344              	.LASF90:
 2345 0298 70657269 		.ascii	"periDiv8CtlOffset\000"
 2345      44697638 
 2345      43746C4F 
 2345      66667365 
 2345      7400
 2346              	.LASF6:
 2347 02aa 73686F72 		.ascii	"short unsigned int\000"
 2347      7420756E 
 2347      7369676E 
 2347      65642069 
 2347      6E7400
 2348              	.LASF97:
 2349 02bd 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2349      50727443 
 2349      66674F75 
 2349      744F6666 
 2349      73657400 
 2350              	.LASF30:
 2351 02d1 666C6173 		.ascii	"flashcBase\000"
 2351      68634261 
 2351      736500
 2352              	.LASF9:
 2353 02dc 5F5F7569 		.ascii	"__uint32_t\000"
 2353      6E743332 
 2353      5F7400
 2354              	.LASF60:
 2355 02e7 70617373 		.ascii	"passSarChannels\000"
 2355      53617243 
 2355      68616E6E 
 2355      656C7300 
 2356              	.LASF24:
 2357 02f7 4C4F434B 		.ascii	"LOCK_STATUS\000"
 2357      5F535441 
 2357      54555300 
 2358              	.LASF4:
 2359 0303 5F5F696E 		.ascii	"__int16_t\000"
 2359      7431365F 
 2359      7400
 2360              	.LASF153:
 2361 030d 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 2361      635C4461 
 2361      74615C56 
 2361      53636F64 
 2361      655C4749 
 2362 033a 65735C45 		.ascii	"es\\Example_DevKitLightSensor\\Onethinx_Creator.cyd"
 2362      78616D70 
 2362      6C655F44 
 2362      65764B69 
 2362      744C6967 
 2363 036b 736E00   		.ascii	"sn\000"
 2364              	.LASF127:
 2365 036e 43595F49 		.ascii	"CY_IPC_DRV_SUCCESS\000"
 2365      50435F44 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 66


 2365      52565F53 
 2365      55434345 
 2365      535300
 2366              	.LASF103:
 2367 0381 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2367      73436D34 
 2367      50777243 
 2367      746C4F66 
 2367      66736574 
 2368              	.LASF98:
 2369 0396 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2369      50727443 
 2369      66675369 
 2369      6F4F6666 
 2369      73657400 
 2370              	.LASF50:
 2371 03aa 63707573 		.ascii	"cpussDwChNr\000"
 2371      73447743 
 2371      684E7200 
 2372              	.LASF13:
 2373 03b6 756E7369 		.ascii	"unsigned int\000"
 2373      676E6564 
 2373      20696E74 
 2373      00
 2374              	.LASF16:
 2375 03c3 75696E74 		.ascii	"uint16_t\000"
 2375      31365F74 
 2375      00
 2376              	.LASF116:
 2377 03cc 63686172 		.ascii	"char_t\000"
 2377      5F7400
 2378              	.LASF83:
 2379 03d3 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2379      5472436D 
 2379      64477253 
 2379      656C4D73 
 2379      6B00
 2380              	.LASF10:
 2381 03e5 6C6F6E67 		.ascii	"long unsigned int\000"
 2381      20756E73 
 2381      69676E65 
 2381      6420696E 
 2381      7400
 2382              	.LASF122:
 2383 03f7 43595F45 		.ascii	"CY_EFUSE_INVALID_FUSE_ADDR\000"
 2383      46555345 
 2383      5F494E56 
 2383      414C4944 
 2383      5F465553 
 2384              	.LASF48:
 2385 0412 63707573 		.ascii	"cpussIpcNr\000"
 2385      73497063 
 2385      4E7200
 2386              	.LASF35:
 2387 041d 6770696F 		.ascii	"gpioBase\000"
 2387      42617365 
 2387      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 67


 2388              	.LASF73:
 2389 0426 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2389      6843746C 
 2389      4D61696E 
 2389      57733246 
 2389      72657100 
 2390              	.LASF84:
 2391 043a 70657269 		.ascii	"periTrGrOffset\000"
 2391      54724772 
 2391      4F666673 
 2391      657400
 2392              	.LASF111:
 2393 0449 63707573 		.ascii	"cpussRam1Ctl0\000"
 2393      7352616D 
 2393      3143746C 
 2393      3000
 2394              	.LASF23:
 2395 0457 44415441 		.ascii	"DATA\000"
 2395      00
 2396              	.LASF129:
 2397 045c 63795F65 		.ascii	"cy_en_ipcdrv_status_t\000"
 2397      6E5F6970 
 2397      63647276 
 2397      5F737461 
 2397      7475735F 
 2398              	.LASF85:
 2399 0472 70657269 		.ascii	"periTrGrSize\000"
 2399      54724772 
 2399      53697A65 
 2399      00
 2400              	.LASF43:
 2401 047f 6770696F 		.ascii	"gpioVersion\000"
 2401      56657273 
 2401      696F6E00 
 2402              	.LASF115:
 2403 048b 63795F73 		.ascii	"cy_stc_device_t\000"
 2403      74635F64 
 2403      65766963 
 2403      655F7400 
 2404              	.LASF22:
 2405 049b 4E4F5449 		.ascii	"NOTIFY\000"
 2405      465900
 2406              	.LASF61:
 2407 04a2 65704D6F 		.ascii	"epMonitorNr\000"
 2407      6E69746F 
 2407      724E7200 
 2408              	.LASF108:
 2409 04ae 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2409      73436D34 
 2409      4E6D6943 
 2409      746C4F66 
 2409      66736574 
 2410              	.LASF39:
 2411 04c3 63707573 		.ascii	"cpussVersion\000"
 2411      73566572 
 2411      73696F6E 
 2411      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 68


 2412              	.LASF99:
 2413 04d0 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2413      73436D30 
 2413      436C6F63 
 2413      6B43746C 
 2413      4F666673 
 2414              	.LASF38:
 2415 04e7 63727970 		.ascii	"cryptoBase\000"
 2415      746F4261 
 2415      736500
 2416              	.LASF130:
 2417 04f2 62617365 		.ascii	"base\000"
 2417      00
 2418              	.LASF46:
 2419 04f7 70657269 		.ascii	"periVersion\000"
 2419      56657273 
 2419      696F6E00 
 2420              	.LASF102:
 2421 0503 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2421      73436D30 
 2421      53746174 
 2421      75734F66 
 2421      66736574 
 2422              	.LASF19:
 2423 0518 73697A65 		.ascii	"sizetype\000"
 2423      74797065 
 2423      00
 2424              	.LASF76:
 2425 0521 64774368 		.ascii	"dwChOffset\000"
 2425      4F666673 
 2425      657400
 2426              	.LASF51:
 2427 052c 63707573 		.ascii	"cpussFlashPaSize\000"
 2427      73466C61 
 2427      73685061 
 2427      53697A65 
 2427      00
 2428              	.LASF139:
 2429 053d 62797465 		.ascii	"byteVal\000"
 2429      56616C00 
 2430              	.LASF89:
 2431 0545 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2431      44697643 
 2431      6D645061 
 2431      54797065 
 2431      53656C50 
 2432              	.LASF112:
 2433 055c 63707573 		.ascii	"cpussRam2Ctl0\000"
 2433      7352616D 
 2433      3243746C 
 2433      3000
 2434              	.LASF125:
 2435 056a 43595F45 		.ascii	"CY_EFUSE_ERR_UNC\000"
 2435      46555345 
 2435      5F455252 
 2435      5F554E43 
 2435      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 69


 2436              	.LASF80:
 2437 057b 64775374 		.ascii	"dwStatusChIdxPos\000"
 2437      61747573 
 2437      43684964 
 2437      78506F73 
 2437      00
 2438              	.LASF62:
 2439 058c 75646250 		.ascii	"udbPresent\000"
 2439      72657365 
 2439      6E7400
 2440              	.LASF33:
 2441 0597 70726F74 		.ascii	"protBase\000"
 2441      42617365 
 2441      00
 2442              	.LASF42:
 2443 05a0 666C6173 		.ascii	"flashcVersion\000"
 2443      68635665 
 2443      7273696F 
 2443      6E00
 2444              	.LASF59:
 2445 05ae 736D6966 		.ascii	"smifDeviceNr\000"
 2445      44657669 
 2445      63654E72 
 2445      00
 2446              	.LASF113:
 2447 05bb 69706353 		.ascii	"ipcStructSize\000"
 2447      74727563 
 2447      7453697A 
 2447      6500
 2448              	.LASF151:
 2449 05c9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2449      43313120 
 2449      352E342E 
 2449      31203230 
 2449      31363036 
 2450 05fc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2450      20726576 
 2450      6973696F 
 2450      6E203233 
 2450      37373135 
 2451 062f 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 2451      70202D6D 
 2451      6670753D 
 2451      66707634 
 2451      2D73702D 
 2452 0662 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2452      6F6E7320 
 2452      2D666661 
 2452      742D6C74 
 2452      6F2D6F62 
 2453              	.LASF155:
 2454 067c 43795F45 		.ascii	"Cy_EFUSE_GetExternalStatus\000"
 2454      46555345 
 2454      5F476574 
 2454      45787465 
 2454      726E616C 
 2455              	.LASF118:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 70


 2456 0697 666C6F61 		.ascii	"float\000"
 2456      7400
 2457              	.LASF81:
 2458 069d 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2458      61747573 
 2458      43684964 
 2458      784D736B 
 2458      00
 2459              	.LASF148:
 2460 06ae 63795F64 		.ascii	"cy_device\000"
 2460      65766963 
 2460      6500
 2461              	.LASF109:
 2462 06b8 63707573 		.ascii	"cpussRomCtl\000"
 2462      73526F6D 
 2462      43746C00 
 2463              	.LASF154:
 2464 06c4 50726F63 		.ascii	"ProcessOpcode\000"
 2464      6573734F 
 2464      70636F64 
 2464      6500
 2465              	.LASF79:
 2466 06d2 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2466      43746C50 
 2466      7265656D 
 2466      70746162 
 2466      6C65506F 
 2467              	.LASF132:
 2468 06e8 6D736750 		.ascii	"msgPtr\000"
 2468      747200
 2469              	.LASF133:
 2470 06ef 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgPtr\000"
 2470      50435F44 
 2470      72765F53 
 2470      656E644D 
 2470      73675074 
 2471              	.LASF134:
 2472 0705 43795F49 		.ascii	"Cy_IPC_Drv_IsLockAcquired\000"
 2472      50435F44 
 2472      72765F49 
 2472      734C6F63 
 2472      6B416371 
 2473              	.LASF135:
 2474 071f 5F426F6F 		.ascii	"_Bool\000"
 2474      6C00
 2475              	.LASF17:
 2476 0725 696E7433 		.ascii	"int32_t\000"
 2476      325F7400 
 2477              	.LASF2:
 2478 072d 756E7369 		.ascii	"unsigned char\000"
 2478      676E6564 
 2478      20636861 
 2478      7200
 2479              	.LASF120:
 2480 073b 43595F45 		.ascii	"CY_EFUSE_SUCCESS\000"
 2480      46555345 
 2480      5F535543 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 71


 2480      43455353 
 2480      00
 2481              	.LASF75:
 2482 074c 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2482      6843746C 
 2482      4D61696E 
 2482      57733446 
 2482      72657100 
 2483              	.LASF0:
 2484 0760 73686F72 		.ascii	"short int\000"
 2484      7420696E 
 2484      7400
 2485              	.LASF26:
 2486 076a 4950435F 		.ascii	"IPC_STRUCT_V1_Type\000"
 2486      53545255 
 2486      43545F56 
 2486      315F5479 
 2486      706500
 2487              	.LASF25:
 2488 077d 52455345 		.ascii	"RESERVED\000"
 2488      52564544 
 2488      00
 2489              	.LASF86:
 2490 0786 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2490      44697643 
 2490      6D644469 
 2490      7653656C 
 2490      4D736B00 
 2491              	.LASF57:
 2492 079a 73727373 		.ascii	"srssNumHfroot\000"
 2492      4E756D48 
 2492      66726F6F 
 2492      7400
 2493              	.LASF70:
 2494 07a8 666C6173 		.ascii	"flashEraseDelay\000"
 2494      68457261 
 2494      73654465 
 2494      6C617900 
 2495              	.LASF18:
 2496 07b8 75696E74 		.ascii	"uint32_t\000"
 2496      33325F74 
 2496      00
 2497              	.LASF124:
 2498 07c1 43595F45 		.ascii	"CY_EFUSE_IPC_BUSY\000"
 2498      46555345 
 2498      5F495043 
 2498      5F425553 
 2498      5900
 2499              	.LASF28:
 2500 07d3 6C6F6E67 		.ascii	"long double\000"
 2500      20646F75 
 2500      626C6500 
 2501              	.LASF117:
 2502 07df 63686172 		.ascii	"char\000"
 2502      00
 2503              	.LASF47:
 2504 07e4 70726F74 		.ascii	"protVersion\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 72


 2504      56657273 
 2504      696F6E00 
 2505              	.LASF110:
 2506 07f0 63707573 		.ascii	"cpussRam0Ctl0\000"
 2506      7352616D 
 2506      3043746C 
 2506      3000
 2507              	.LASF150:
 2508 07fe 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgWord\000"
 2508      50435F44 
 2508      72765F53 
 2508      656E644D 
 2508      7367576F 
 2509              	.LASF5:
 2510 0815 5F5F7569 		.ascii	"__uint16_t\000"
 2510      6E743136 
 2510      5F7400
 2511              	.LASF123:
 2512 0820 43595F45 		.ascii	"CY_EFUSE_BAD_PARAM\000"
 2512      46555345 
 2512      5F424144 
 2512      5F504152 
 2512      414D00
 2513              	.LASF91:
 2514 0833 70657269 		.ascii	"periDiv16CtlOffset\000"
 2514      44697631 
 2514      3643746C 
 2514      4F666673 
 2514      657400
 2515              	.LASF121:
 2516 0846 43595F45 		.ascii	"CY_EFUSE_INVALID_PROTECTION\000"
 2516      46555345 
 2516      5F494E56 
 2516      414C4944 
 2516      5F50524F 
 2517              	.LASF7:
 2518 0862 5F5F696E 		.ascii	"__int32_t\000"
 2518      7433325F 
 2518      7400
 2519              	.LASF44:
 2520 086c 6873696F 		.ascii	"hsiomVersion\000"
 2520      6D566572 
 2520      73696F6E 
 2520      00
 2521              	.LASF137:
 2522 0879 69706349 		.ascii	"ipcIndex\000"
 2522      6E646578 
 2522      00
 2523              	.LASF138:
 2524 0882 6F666673 		.ascii	"offset\000"
 2524      657400
 2525              	.LASF72:
 2526 0889 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2526      6843746C 
 2526      4D61696E 
 2526      57733146 
 2526      72657100 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 73


 2527              	.LASF149:
 2528 089d 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 2528      79734C69 
 2528      625F4173 
 2528      73657274 
 2528      4661696C 
 2529              	.LASF77:
 2530 08b4 64774368 		.ascii	"dwChSize\000"
 2530      53697A65 
 2530      00
 2531              	.LASF126:
 2532 08bd 63795F65 		.ascii	"cy_en_efuse_status_t\000"
 2532      6E5F6566 
 2532      7573655F 
 2532      73746174 
 2532      75735F74 
 2533              	.LASF52:
 2534 08d2 63707573 		.ascii	"cpussIpc0Irq\000"
 2534      73497063 
 2534      30497271 
 2534      00
 2535              	.LASF142:
 2536 08df 43795F45 		.ascii	"Cy_EFUSE_GetEfuseBit\000"
 2536      46555345 
 2536      5F476574 
 2536      45667573 
 2536      65426974 
 2537              	.LASF95:
 2538 08f4 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2538      50727443 
 2538      66674F66 
 2538      66736574 
 2538      00
 2539              	.LASF1:
 2540 0905 7369676E 		.ascii	"signed char\000"
 2540      65642063 
 2540      68617200 
 2541              	.LASF54:
 2542 0911 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2542      734E6F74 
 2542      436F6E6E 
 2542      65637465 
 2542      64497271 
 2543              	.LASF68:
 2544 0926 666C6173 		.ascii	"flashWriteDelay\000"
 2544      68577269 
 2544      74654465 
 2544      6C617900 
 2545              	.LASF141:
 2546 0936 43795F45 		.ascii	"Cy_EFUSE_GetEfuseByte\000"
 2546      46555345 
 2546      5F476574 
 2546      45667573 
 2546      65427974 
 2547              	.LASF14:
 2548 094c 75696E74 		.ascii	"uint8_t\000"
 2548      385F7400 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 74


 2549              	.LASF101:
 2550 0954 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2550      73436D34 
 2550      53746174 
 2550      75734F66 
 2550      66736574 
 2551              	.LASF94:
 2552 0969 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2552      50727449 
 2552      6E747243 
 2552      66674F66 
 2552      66736574 
 2553              	.LASF136:
 2554 097e 43795F49 		.ascii	"Cy_IPC_Drv_GetIpcBaseAddress\000"
 2554      50435F44 
 2554      72765F47 
 2554      65744970 
 2554      63426173 
 2555              	.LASF105:
 2556 099b 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2556      73547269 
 2556      6D526F6D 
 2556      43746C4F 
 2556      66667365 
 2557              	.LASF27:
 2558 09b1 4950435F 		.ascii	"IPC_STRUCT_Type\000"
 2558      53545255 
 2558      43545F54 
 2558      79706500 
 2559              	.LASF55:
 2560 09c1 73727373 		.ascii	"srssNumClkpath\000"
 2560      4E756D43 
 2560      6C6B7061 
 2560      746800
 2561              	.LASF41:
 2562 09d0 64775665 		.ascii	"dwVersion\000"
 2562      7273696F 
 2562      6E00
 2563              	.LASF37:
 2564 09da 69706342 		.ascii	"ipcBase\000"
 2564      61736500 
 2565              	.LASF88:
 2566 09e2 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2566      44697643 
 2566      6D645061 
 2566      44697653 
 2566      656C506F 
 2567              	.LASF69:
 2568 09f8 666C6173 		.ascii	"flashProgramDelay\000"
 2568      6850726F 
 2568      6772616D 
 2568      44656C61 
 2568      7900
 2569              	.LASF140:
 2570 0a0a 72657375 		.ascii	"result\000"
 2570      6C7400
 2571              	.LASF66:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccLor7W1.s 			page 75


 2572 0a11 666C6173 		.ascii	"flashRwwRequired\000"
 2572      68527777 
 2572      52657175 
 2572      69726564 
 2572      00
 2573              	.LASF146:
 2574 0a22 6F70636F 		.ascii	"opcode\000"
 2574      646500
 2575              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
