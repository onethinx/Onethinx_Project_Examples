ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"cy_sar.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.Cy_SAR_Init,"ax",%progbits
  21              		.align	2
  22              		.global	Cy_SAR_Init
  23              		.thumb
  24              		.thumb_func
  25              		.type	Cy_SAR_Init, %function
  26              	Cy_SAR_Init:
  27              	.LFB192:
  28              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \file cy_sar.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provides the public functions for the API for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #include "cy_sar.h"
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #ifdef CY_IP_MXS40PASS_SAR
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #if defined(__cplusplus)
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** extern "C" {
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #endif
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** static cy_stc_sar_state_backup_t enabledBeforeSleep =
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL,
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** };
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 2


  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Init
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Initialize all SAR configuration registers.
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If routing is to be configured, all switches will be cleared before
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * being initialized.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param config
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure containing configuration data. See \ref cy_stc_sar_config_t
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and guidance in the \ref group_sar_initialization section.
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : initialization complete
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, initialization incomplete
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INIT_CUSTOM
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config)
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  29              		.loc 1 57 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 3, -32
  37              		.cfi_offset 4, -28
  38              		.cfi_offset 5, -24
  39              		.cfi_offset 6, -20
  40              		.cfi_offset 7, -16
  41              		.cfi_offset 8, -12
  42              		.cfi_offset 9, -8
  43              		.cfi_offset 14, -4
  44 0004 0E46     		mov	r6, r1
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
  45              		.loc 1 58 0
  46 0006 0746     		mov	r7, r0
  47 0008 18B9     		cbnz	r0, .L2
  48              		.loc 1 58 0 is_stmt 0 discriminator 1
  49 000a 3A21     		movs	r1, #58
  50              	.LVL1:
  51 000c 7548     		ldr	r0, .L27
  52              	.LVL2:
  53 000e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  54              	.LVL3:
  55              	.L2:
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != config);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 3


  56              		.loc 1 59 0 is_stmt 1
  57 0012 1EB9     		cbnz	r6, .L3
  58              		.loc 1 59 0 is_stmt 0 discriminator 1
  59 0014 3B21     		movs	r1, #59
  60 0016 7348     		ldr	r0, .L27
  61 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  62              	.LVL4:
  63              	.L3:
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t counts;
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool vrefNegSelect;
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool singleEndedSigned;
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool chanSingleEnded;
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if ((NULL == base) || (NULL == config))
  64              		.loc 1 68 0 is_stmt 1
  65 001c 002F     		cmp	r7, #0
  66 001e 00F0DA80 		beq	.L24
  67              		.loc 1 68 0 is_stmt 0 discriminator 1
  68 0022 002E     		cmp	r6, #0
  69 0024 00F0DA80 		beq	.L25
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_BAD_PARAM;
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CTRL(config->ctrl));
  70              		.loc 1 74 0 is_stmt 1
  71 0028 3268     		ldr	r2, [r6]
  72 002a 6F4B     		ldr	r3, .L27+4
  73 002c 1340     		ands	r3, r3, r2
  74 002e 1BB1     		cbz	r3, .L5
  75              		.loc 1 74 0 is_stmt 0 discriminator 1
  76 0030 4A21     		movs	r1, #74
  77 0032 6C48     		ldr	r0, .L27
  78 0034 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  79              	.LVL5:
  80              	.L5:
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_CTRL(config->sampleCtrl));
  81              		.loc 1 75 0 is_stmt 1
  82 0038 7268     		ldr	r2, [r6, #4]
  83 003a 6C4B     		ldr	r3, .L27+8
  84 003c 1340     		ands	r3, r3, r2
  85 003e 1BB1     		cbz	r3, .L6
  86              		.loc 1 75 0 is_stmt 0 discriminator 1
  87 0040 4B21     		movs	r1, #75
  88 0042 6848     		ldr	r0, .L27
  89 0044 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  90              	.LVL6:
  91              	.L6:
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime01));
  92              		.loc 1 76 0 is_stmt 1
  93 0048 B368     		ldr	r3, [r6, #8]
  94 004a 13F0FC2F 		tst	r3, #-67044352
  95 004e 03D0     		beq	.L7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 4


  96              		.loc 1 76 0 is_stmt 0 discriminator 1
  97 0050 4C21     		movs	r1, #76
  98 0052 6448     		ldr	r0, .L27
  99 0054 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 100              	.LVL7:
 101              	.L7:
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime23));
 102              		.loc 1 77 0 is_stmt 1
 103 0058 F368     		ldr	r3, [r6, #12]
 104 005a 13F0FC2F 		tst	r3, #-67044352
 105 005e 03D0     		beq	.L8
 106              		.loc 1 77 0 is_stmt 0 discriminator 1
 107 0060 4D21     		movs	r1, #77
 108 0062 6048     		ldr	r0, .L27
 109 0064 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 110              	.LVL8:
 111              	.L8:
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L3(CY_SAR_RANGECOND(config->rangeCond));
 112              		.loc 1 78 0 is_stmt 1
 113 0068 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 114 006a 032B     		cmp	r3, #3
 115 006c 03D9     		bls	.L9
 116              		.loc 1 78 0 is_stmt 0 discriminator 1
 117 006e 4E21     		movs	r1, #78
 118 0070 5C48     		ldr	r0, .L27
 119 0072 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 120              	.LVL9:
 121              	.L9:
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->chanEn));
 122              		.loc 1 79 0 is_stmt 1
 123 0076 B369     		ldr	r3, [r6, #24]
 124 0078 B3F5803F 		cmp	r3, #65536
 125 007c 03D3     		bcc	.L10
 126              		.loc 1 79 0 is_stmt 0 discriminator 1
 127 007e 4F21     		movs	r1, #79
 128 0080 5848     		ldr	r0, .L27
 129 0082 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 130              	.LVL10:
 131              	.L10:
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_INTRMASK(config->intrMask));
 132              		.loc 1 80 0 is_stmt 1
 133 0086 F36D     		ldr	r3, [r6, #92]
 134 0088 072B     		cmp	r3, #7
 135 008a 03D9     		bls	.L11
 136              		.loc 1 80 0 is_stmt 0 discriminator 1
 137 008c 5021     		movs	r1, #80
 138 008e 5548     		ldr	r0, .L27
 139 0090 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 140              	.LVL11:
 141              	.L11:
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->satIntrMask));
 142              		.loc 1 81 0 is_stmt 1
 143 0094 336E     		ldr	r3, [r6, #96]
 144 0096 B3F5803F 		cmp	r3, #65536
 145 009a 03D3     		bcc	.L12
 146              		.loc 1 81 0 is_stmt 0 discriminator 1
 147 009c 5121     		movs	r1, #81
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 5


 148 009e 5148     		ldr	r0, .L27
 149 00a0 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 150              	.LVL12:
 151              	.L12:
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->rangeIntrMask));
 152              		.loc 1 82 0 is_stmt 1
 153 00a4 736E     		ldr	r3, [r6, #100]
 154 00a6 B3F5803F 		cmp	r3, #65536
 155 00aa 03D3     		bcc	.L13
 156              		.loc 1 82 0 is_stmt 0 discriminator 1
 157 00ac 5221     		movs	r1, #82
 158 00ae 4D48     		ldr	r0, .L27
 159 00b0 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 160              	.LVL13:
 161              	.L13:
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the EOS_DSI_OUT_EN bit so the EOS signal can be routed */
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = config->sampleCtrl | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk;
 162              		.loc 1 85 0 is_stmt 1
 163 00b4 7368     		ldr	r3, [r6, #4]
 164 00b6 43F00043 		orr	r3, r3, #-2147483648
 165 00ba 7B60     		str	r3, [r7, #4]
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
 166              		.loc 1 86 0
 167 00bc B368     		ldr	r3, [r6, #8]
 168 00be 3B61     		str	r3, [r7, #16]
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = config->sampleTime23;
 169              		.loc 1 87 0
 170 00c0 F368     		ldr	r3, [r6, #12]
 171 00c2 7B61     		str	r3, [r7, #20]
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = config->rangeThres;
 172              		.loc 1 88 0
 173 00c4 3369     		ldr	r3, [r6, #16]
 174 00c6 BB61     		str	r3, [r7, #24]
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
 175              		.loc 1 89 0
 176 00c8 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 177 00ca 9B07     		lsls	r3, r3, #30
 178 00cc FB61     		str	r3, [r7, #28]
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
 179              		.loc 1 90 0
 180 00ce B369     		ldr	r3, [r6, #24]
 181 00d0 3B62     		str	r3, [r7, #32]
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether NEG_SEL is set for VREF */
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         vrefNegSelect = ((uint32_t)CY_SAR_NEG_SEL_VREF == (config->ctrl & SAR_CTRL_NEG_SEL_Msk))? t
 182              		.loc 1 93 0
 183 00d2 3368     		ldr	r3, [r6]
 184 00d4 03F46068 		and	r8, r3, #3584
 185              	.LVL14:
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether single ended channels are set to signed */
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         singleEndedSigned = (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (config->sampleCtrl & SAR_S
 186              		.loc 1 95 0
 187 00d8 7368     		ldr	r3, [r6, #4]
 188 00da 03F00409 		and	r9, r3, #4
 189              	.LVL15:
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 6


  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 190              		.loc 1 97 0
 191 00de 0024     		movs	r4, #0
 192 00e0 35E0     		b	.L14
 193              	.LVL16:
 194              	.L18:
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_CHAN_CONFIG(config->chanConfig[chan]));
 195              		.loc 1 99 0
 196 00e2 2546     		mov	r5, r4
 197 00e4 A31D     		adds	r3, r4, #6
 198 00e6 06EB8303 		add	r3, r6, r3, lsl #2
 199 00ea 5A68     		ldr	r2, [r3, #4]
 200 00ec 404B     		ldr	r3, .L27+12
 201 00ee 1340     		ands	r3, r3, r2
 202 00f0 1BB1     		cbz	r3, .L15
 203              		.loc 1 99 0 is_stmt 0 discriminator 1
 204 00f2 6321     		movs	r1, #99
 205 00f4 3B48     		ldr	r0, .L27
 206 00f6 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 207              	.LVL17:
 208              	.L15:
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = config->chanConfig[chan];
 209              		.loc 1 101 0 is_stmt 1
 210 00fa AB1D     		adds	r3, r5, #6
 211 00fc 06EB8303 		add	r3, r6, r3, lsl #2
 212 0100 5968     		ldr	r1, [r3, #4]
 213 0102 05F12002 		add	r2, r5, #32
 214 0106 47F82210 		str	r1, [r7, r2, lsl #2]
 215              	.LVL18:
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             counts = (int32_t) CY_SAR_WRK_MAX_12BIT;
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* For signed single ended channels with NEG_SEL set to VREF,
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****              * set the offset to minus half scale to convert results to unsigned format */
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             chanSingleEnded = (0uL == (config->chanConfig[chan] & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_
 216              		.loc 1 107 0
 217 010a 5B68     		ldr	r3, [r3, #4]
 218              	.LVL19:
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (chanSingleEnded && vrefNegSelect && singleEndedSigned)
 219              		.loc 1 108 0
 220 010c 13F0012F 		tst	r3, #16777472
 221 0110 0BD1     		bne	.L16
 222              		.loc 1 108 0 is_stmt 0 discriminator 1
 223 0112 B8F5606F 		cmp	r8, #3584
 224 0116 08D1     		bne	.L16
 225              		.loc 1 108 0 discriminator 2
 226 0118 B9F1000F 		cmp	r9, #0
 227 011c 05D0     		beq	.L16
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = (int16_t) (counts / -2);
 228              		.loc 1 110 0 is_stmt 1
 229 011e 4FF47842 		mov	r2, #63488
 230 0122 344B     		ldr	r3, .L27+16
 231              	.LVL20:
 232 0124 23F81520 		strh	r2, [r3, r5, lsl #1]	@ movhi
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 7


 233              	.LVL21:
 234 0128 03E0     		b	.L17
 235              	.LVL22:
 236              	.L16:
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = 0;
 237              		.loc 1 114 0
 238 012a 0022     		movs	r2, #0
 239 012c 314B     		ldr	r3, .L27+16
 240              	.LVL23:
 241 012e 23F81520 		strh	r2, [r3, r5, lsl #1]	@ movhi
 242              	.LVL24:
 243              	.L17:
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Calculate gain in counts per 10 volts with rounding */
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_countsPer10Volt[chan] = (int16_t)(((counts * CY_SAR_10MV_COUNTS) + (int32_t)conf
 244              		.loc 1 118 0 discriminator 2
 245 0132 726F     		ldr	r2, [r6, #116]
 246 0134 02F11C73 		add	r3, r2, #40894464
 247 0138 03F58033 		add	r3, r3, #65536
 248 013c 5200     		lsls	r2, r2, #1
 249 013e 93FBF2F3 		sdiv	r3, r3, r2
 250 0142 1BB2     		sxth	r3, r3
 251 0144 2C4A     		ldr	r2, .L27+20
 252 0146 42F82530 		str	r3, [r2, r5, lsl #2]
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 253              		.loc 1 97 0 discriminator 2
 254 014a 0134     		adds	r4, r4, #1
 255              	.LVL25:
 256 014c E4B2     		uxtb	r4, r4
 257              	.LVL26:
 258              	.L14:
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 259              		.loc 1 97 0 is_stmt 0 discriminator 1
 260 014e 0F2C     		cmp	r4, #15
 261 0150 C7D9     		bls	.L18
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = config->intrMask;
 262              		.loc 1 120 0 is_stmt 1
 263 0152 F36D     		ldr	r3, [r6, #92]
 264 0154 C7F81832 		str	r3, [r7, #536]
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = config->intrMask;
 265              		.loc 1 121 0
 266 0158 F36D     		ldr	r3, [r6, #92]
 267 015a C7F81032 		str	r3, [r7, #528]
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = config->satIntrMask;
 268              		.loc 1 122 0
 269 015e 336E     		ldr	r3, [r6, #96]
 270 0160 C7F82832 		str	r3, [r7, #552]
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR(base) = config->satIntrMask;
 271              		.loc 1 123 0
 272 0164 336E     		ldr	r3, [r6, #96]
 273 0166 C7F82032 		str	r3, [r7, #544]
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = config->rangeIntrMask;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 8


 274              		.loc 1 124 0
 275 016a 736E     		ldr	r3, [r6, #100]
 276 016c C7F83832 		str	r3, [r7, #568]
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR(base) = config->rangeIntrMask;
 277              		.loc 1 125 0
 278 0170 736E     		ldr	r3, [r6, #100]
 279 0172 C7F83032 		str	r3, [r7, #560]
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set routing related registers if enabled */
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == config->configRouting)
 280              		.loc 1 128 0
 281 0176 96F87030 		ldrb	r3, [r6, #112]	@ zero_extendqisi2
 282 017a DBB1     		cbz	r3, .L19
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SWITCHMASK(config->muxSwitch));
 283              		.loc 1 130 0
 284 017c B36E     		ldr	r3, [r6, #104]
 285 017e B3F1804F 		cmp	r3, #1073741824
 286 0182 03D3     		bcc	.L20
 287              		.loc 1 130 0 is_stmt 0 discriminator 1
 288 0184 8221     		movs	r1, #130
 289 0186 1748     		ldr	r0, .L27
 290 0188 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 291              	.LVL27:
 292              	.L20:
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SQMASK(config->muxSwitchSqCtrl));
 293              		.loc 1 131 0 is_stmt 1
 294 018c F36E     		ldr	r3, [r6, #108]
 295 018e 23F44F03 		bic	r3, r3, #13565952
 296 0192 23F0FF03 		bic	r3, r3, #255
 297 0196 1BB1     		cbz	r3, .L21
 298              		.loc 1 131 0 is_stmt 0 discriminator 1
 299 0198 8321     		movs	r1, #131
 300 019a 1248     		ldr	r0, .L27
 301 019c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 302              	.LVL28:
 303              	.L21:
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Clear out all the switches so that only the desired switches in the config structure
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 304              		.loc 1 134 0 is_stmt 1
 305 01a0 6FF04043 		mvn	r3, #-1073741824
 306 01a4 C7F80433 		str	r3, [r7, #772]
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH0(base) = config->muxSwitch;
 307              		.loc 1 136 0
 308 01a8 B36E     		ldr	r3, [r6, #104]
 309 01aa C7F80033 		str	r3, [r7, #768]
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = config->muxSwitchSqCtrl;
 310              		.loc 1 137 0
 311 01ae F36E     		ldr	r3, [r6, #108]
 312 01b0 C7F84433 		str	r3, [r7, #836]
 313              	.L19:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the Cap trim if it was trimmed out of range from sflash */
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if ((CY_SAR_CAP_TRIM_MAX == SAR_ANA_TRIM0(base)) || (CY_SAR_CAP_TRIM_MIN == SAR_ANA_TRIM0(b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 9


 314              		.loc 1 141 0
 315 01b4 D7F8003F 		ldr	r3, [r7, #3840]
 316 01b8 3F2B     		cmp	r3, #63
 317 01ba 02D0     		beq	.L22
 318              		.loc 1 141 0 is_stmt 0 discriminator 1
 319 01bc D7F8003F 		ldr	r3, [r7, #3840]
 320 01c0 13B9     		cbnz	r3, .L23
 321              	.L22:
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_ANA_TRIM0(base) = CY_SAR_CAP_TRIM;
 322              		.loc 1 143 0 is_stmt 1
 323 01c2 0B23     		movs	r3, #11
 324 01c4 C7F8003F 		str	r3, [r7, #3840]
 325              	.L23:
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the REFBUF_EN bit as this is required for proper operation. */
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = config->ctrl | SAR_CTRL_REFBUF_EN_Msk;
 326              		.loc 1 147 0
 327 01c8 3368     		ldr	r3, [r6]
 328 01ca 43F40013 		orr	r3, r3, #2097152
 329 01ce 3B60     		str	r3, [r7]
 330              	.LVL29:
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 331              		.loc 1 149 0
 332 01d0 0020     		movs	r0, #0
 333 01d2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 334              	.LVL30:
 335              	.L24:
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 336              		.loc 1 70 0
 337 01d6 0948     		ldr	r0, .L27+24
 338 01d8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 339              	.LVL31:
 340              	.L25:
 341 01dc 0748     		ldr	r0, .L27+24
 342              	.LVL32:
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 343              		.loc 1 153 0
 344 01de BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 345              	.LVL33:
 346              	.L28:
 347 01e2 00BF     		.align	2
 348              	.L27:
 349 01e4 00000000 		.word	.LC0
 350 01e8 0811DF00 		.word	14618888
 351 01ec 01FE3020 		.word	540081665
 352 01f0 88CA887E 		.word	2122893960
 353 01f4 00000000 		.word	Cy_SAR_offset
 354 01f8 00000000 		.word	Cy_SAR_countsPer10Volt
 355 01fc 01000600 		.word	393217
 356              		.cfi_endproc
 357              	.LFE192:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 10


 358              		.size	Cy_SAR_Init, .-Cy_SAR_Init
 359              		.section	.text.Cy_SAR_DeInit,"ax",%progbits
 360              		.align	2
 361              		.global	Cy_SAR_DeInit
 362              		.thumb
 363              		.thumb_func
 364              		.type	Cy_SAR_DeInit, %function
 365              	Cy_SAR_DeInit:
 366              	.LFB193:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeInit
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Reset SAR registers back to power on reset defaults.
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The \ref Cy_SAR_offset and \ref Cy_SAR_countsPer10Volt arrays are NOT reset.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param deInitRouting
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If true, all SARMUX switches are opened and switch control registers are reset
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * to zero. If false, switch registers are untouched.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : de-initialization complete
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, de-initialization incomplete
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEINIT
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting)
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 367              		.loc 1 180 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL34:
 372 0000 38B5     		push	{r3, r4, r5, lr}
 373              		.cfi_def_cfa_offset 16
 374              		.cfi_offset 3, -16
 375              		.cfi_offset 4, -12
 376              		.cfi_offset 5, -8
 377              		.cfi_offset 14, -4
 378 0002 0D46     		mov	r5, r1
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
 379              		.loc 1 181 0
 380 0004 0446     		mov	r4, r0
 381 0006 18B9     		cbnz	r0, .L30
 382              		.loc 1 181 0 is_stmt 0 discriminator 1
 383 0008 B521     		movs	r1, #181
 384              	.LVL35:
 385 000a 1748     		ldr	r0, .L37
 386              	.LVL36:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 11


 387 000c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 388              	.LVL37:
 389              	.L30:
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (NULL == base)
 390              		.loc 1 186 0 is_stmt 1
 391 0010 2CB3     		cbz	r4, .L34
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****        result = CY_SAR_BAD_PARAM;
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = CY_SAR_DEINIT;
 392              		.loc 1 192 0
 393 0012 0023     		movs	r3, #0
 394 0014 2360     		str	r3, [r4]
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 395              		.loc 1 193 0
 396 0016 6360     		str	r3, [r4, #4]
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 397              		.loc 1 194 0
 398 0018 4FF00312 		mov	r2, #196611
 399 001c 2261     		str	r2, [r4, #16]
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 400              		.loc 1 195 0
 401 001e 6261     		str	r2, [r4, #20]
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = CY_SAR_DEINIT;
 402              		.loc 1 196 0
 403 0020 A361     		str	r3, [r4, #24]
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = CY_SAR_DEINIT;
 404              		.loc 1 197 0
 405 0022 E361     		str	r3, [r4, #28]
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = CY_SAR_DEINIT;
 406              		.loc 1 198 0
 407 0024 2362     		str	r3, [r4, #32]
 408              	.LVL38:
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 409              		.loc 1 199 0
 410 0026 06E0     		b	.L32
 411              	.LVL39:
 412              	.L33:
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = CY_SAR_DEINIT;
 413              		.loc 1 201 0 discriminator 3
 414 0028 03F12002 		add	r2, r3, #32
 415 002c 0021     		movs	r1, #0
 416 002e 44F82210 		str	r1, [r4, r2, lsl #2]
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 417              		.loc 1 199 0 discriminator 3
 418 0032 0133     		adds	r3, r3, #1
 419              	.LVL40:
 420 0034 DBB2     		uxtb	r3, r3
 421              	.LVL41:
 422              	.L32:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 12


 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 423              		.loc 1 199 0 is_stmt 0 discriminator 1
 424 0036 0F2B     		cmp	r3, #15
 425 0038 F6D9     		bls	.L33
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = CY_SAR_DEINIT;
 426              		.loc 1 203 0 is_stmt 1
 427 003a 0023     		movs	r3, #0
 428              	.LVL42:
 429 003c C4F81832 		str	r3, [r4, #536]
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = CY_SAR_DEINIT;
 430              		.loc 1 204 0
 431 0040 C4F82832 		str	r3, [r4, #552]
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = CY_SAR_DEINIT;
 432              		.loc 1 205 0
 433 0044 C4F83832 		str	r3, [r4, #568]
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == deInitRouting)
 434              		.loc 1 206 0
 435 0048 5DB1     		cbz	r5, .L35
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 436              		.loc 1 208 0
 437 004a 6FF04043 		mvn	r3, #-1073741824
 438 004e C4F80433 		str	r3, [r4, #772]
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_DS_CTRL(base) = CY_SAR_DEINIT;
 439              		.loc 1 209 0
 440 0052 0020     		movs	r0, #0
 441 0054 C4F84003 		str	r0, [r4, #832]
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = CY_SAR_DEINIT;
 442              		.loc 1 210 0
 443 0058 C4F84403 		str	r0, [r4, #836]
 444 005c 38BD     		pop	{r3, r4, r5, pc}
 445              	.LVL43:
 446              	.L34:
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 447              		.loc 1 188 0
 448 005e 0348     		ldr	r0, .L37+4
 449 0060 38BD     		pop	{r3, r4, r5, pc}
 450              	.LVL44:
 451              	.L35:
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 452              		.loc 1 212 0
 453 0062 0020     		movs	r0, #0
 454              	.LVL45:
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 455              		.loc 1 216 0
 456 0064 38BD     		pop	{r3, r4, r5, pc}
 457              	.LVL46:
 458              	.L38:
 459 0066 00BF     		.align	2
 460              	.L37:
 461 0068 00000000 		.word	.LC0
 462 006c 01000600 		.word	393217
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 13


 463              		.cfi_endproc
 464              	.LFE193:
 465              		.size	Cy_SAR_DeInit, .-Cy_SAR_DeInit
 466              		.section	.text.Cy_SAR_Enable,"ax",%progbits
 467              		.align	2
 468              		.global	Cy_SAR_Enable
 469              		.thumb
 470              		.thumb_func
 471              		.type	Cy_SAR_Enable, %function
 472              	Cy_SAR_Enable:
 473              	.LFB194:
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Enable
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Power up the SAR ADC subsystem block. The hardware is ready to use
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * after 2 us, which is included in this function.
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Enable(SAR_Type *base)
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 474              		.loc 1 233 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL47:
 479 0000 08B5     		push	{r3, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (0uL == (SAR_CTRL(base) & SAR_CTRL_ENABLED_Msk))
 483              		.loc 1 234 0
 484 0002 0368     		ldr	r3, [r0]
 485 0004 002B     		cmp	r3, #0
 486 0006 0ADB     		blt	.L39
 487              	.L41:
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 488              		.loc 1 236 0 discriminator 1
 489 0008 D0F8A032 		ldr	r3, [r0, #672]
 490 000c 002B     		cmp	r3, #0
 491 000e FBDB     		blt	.L41
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to go idle to avoid deadlock */
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) |= SAR_CTRL_ENABLED_Msk;
 492              		.loc 1 241 0
 493 0010 0368     		ldr	r3, [r0]
 494 0012 43F00043 		orr	r3, r3, #-2147483648
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 14


 495 0016 0360     		str	r3, [r0]
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* The block is ready to use 2 us after the enable signal is set high. */
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SysLib_DelayUs(CY_SAR_2US_DELAY);
 496              		.loc 1 244 0
 497 0018 0220     		movs	r0, #2
 498              	.LVL48:
 499 001a FFF7FEFF 		bl	Cy_SysLib_DelayUs
 500              	.LVL49:
 501              	.L39:
 502 001e 08BD     		pop	{r3, pc}
 503              		.cfi_endproc
 504              	.LFE194:
 505              		.size	Cy_SAR_Enable, .-Cy_SAR_Enable
 506              		.section	.text.Cy_SAR_StartConvert,"ax",%progbits
 507              		.align	2
 508              		.global	Cy_SAR_StartConvert
 509              		.thumb
 510              		.thumb_func
 511              		.type	Cy_SAR_StartConvert, %function
 512              	Cy_SAR_StartConvert:
 513              	.LFB197:
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleep
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to prepare the hardware for Deep Sleep.
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * It will call \ref Cy_SAR_StopConvert to disable continuous conversions
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and wait for SAR conversions to stop before entering Deep Sleep.
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARMUX is not configured for Deep Sleep operation, the entire SAR hardware
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * block will be turned off.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_DeepSleep(SAR_Type *base)
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     enabledBeforeSleep.hwEnabled = ctrlReg & SAR_CTRL_ENABLED_Msk;
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn off the reference buffer */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     ctrlReg &= ~SAR_CTRL_REFBUF_EN_Msk;
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 15


 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Save state of CONTINUOUS bit so that conversions can be re-started upon wake-up */
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         enabledBeforeSleep.continuous = SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_StopConvert(base);
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to stop conversions before entering low power */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Turn off the entire hardware block only if the SARMUX is not
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****          * enabled for Deep Sleep operation. */
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_CTRL_DEEPSLEEP_ON_Msk != (ctrlReg & SAR_CTRL_DEEPSLEEP_ON_Msk))
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) = ctrlReg;
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Wakeup
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to restore the hardware to the state after calling
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_DeepSleep. Restoring the hardware involves re-enabling the hardware,
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the reference buffer, and continuous scanning if it was previously
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * enabled before entering sleep.
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Calling this function without previously calling \ref Cy_SAR_DeepSleep can lead to
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * unpredictable results.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Wakeup(SAR_Type *base)
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) |= SAR_CTRL_REFBUF_EN_Msk;
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Enable(base);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 16


 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == enabledBeforeSleep.continuous)
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_StartConvert(base, CY_SAR_START_CONVERT_CONTINUOUS);
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StartConvert
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Start a single scan (one shot) of all enabled channels or start scanning
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * continuously. When in continuous mode, all firmware and hardware triggers
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * are ignored. To stop continuous scanning, call \ref Cy_SAR_StopConvert.
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param startSelect
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_start_convert_sel_t
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_START_CONVERT
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect)
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 514              		.loc 1 368 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL50:
 519 0000 38B5     		push	{r3, r4, r5, lr}
 520              		.cfi_def_cfa_offset 16
 521              		.cfi_offset 3, -16
 522              		.cfi_offset 4, -12
 523              		.cfi_offset 5, -8
 524              		.cfi_offset 14, -4
 525 0002 0546     		mov	r5, r0
 526 0004 0C46     		mov	r4, r1
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_STARTCONVERT(startSelect));
 527              		.loc 1 369 0
 528 0006 0129     		cmp	r1, #1
 529 0008 04D9     		bls	.L44
 530              		.loc 1 369 0 is_stmt 0 discriminator 1
 531 000a 40F27111 		movw	r1, #369
 532              	.LVL51:
 533 000e 0648     		ldr	r0, .L50
 534              	.LVL52:
 535 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 536              	.LVL53:
 537              	.L44:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 17


 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(startSelect)
 538              		.loc 1 371 0 is_stmt 1
 539 0014 012C     		cmp	r4, #1
 540 0016 04D1     		bne	.L48
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) |= SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 541              		.loc 1 374 0
 542 0018 6B68     		ldr	r3, [r5, #4]
 543 001a 43F48033 		orr	r3, r3, #65536
 544 001e 6B60     		str	r3, [r5, #4]
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 545              		.loc 1 375 0
 546 0020 38BD     		pop	{r3, r4, r5, pc}
 547              	.LVL54:
 548              	.L48:
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_START_CTRL(base) = SAR_START_CTRL_FW_TRIGGER_Msk;
 549              		.loc 1 378 0
 550 0022 0123     		movs	r3, #1
 551 0024 6B62     		str	r3, [r5, #36]
 552 0026 38BD     		pop	{r3, r4, r5, pc}
 553              	.LVL55:
 554              	.L51:
 555              		.align	2
 556              	.L50:
 557 0028 00000000 		.word	.LC0
 558              		.cfi_endproc
 559              	.LFE197:
 560              		.size	Cy_SAR_StartConvert, .-Cy_SAR_StartConvert
 561              		.section	.text.Cy_SAR_Wakeup,"ax",%progbits
 562              		.align	2
 563              		.global	Cy_SAR_Wakeup
 564              		.thumb
 565              		.thumb_func
 566              		.type	Cy_SAR_Wakeup, %function
 567              	Cy_SAR_Wakeup:
 568              	.LFB196:
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 569              		.loc 1 330 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              	.LVL56:
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 574              		.loc 1 332 0
 575 0000 0368     		ldr	r3, [r0]
 576 0002 43F40013 		orr	r3, r3, #2097152
 577 0006 0360     		str	r3, [r0]
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 578              		.loc 1 334 0
 579 0008 094B     		ldr	r3, .L56
 580 000a 1B68     		ldr	r3, [r3]
 581 000c B3F1004F 		cmp	r3, #-2147483648
 582 0010 0DD1     		bne	.L55
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 18


 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 583              		.loc 1 330 0
 584 0012 10B5     		push	{r4, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 4, -8
 587              		.cfi_offset 14, -4
 588 0014 0446     		mov	r4, r0
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 589              		.loc 1 336 0
 590 0016 FFF7FEFF 		bl	Cy_SAR_Enable
 591              	.LVL57:
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 592              		.loc 1 338 0
 593 001a 054B     		ldr	r3, .L56
 594 001c 5B68     		ldr	r3, [r3, #4]
 595 001e B3F5803F 		cmp	r3, #65536
 596 0022 03D1     		bne	.L52
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 597              		.loc 1 340 0
 598 0024 0121     		movs	r1, #1
 599 0026 2046     		mov	r0, r4
 600 0028 FFF7FEFF 		bl	Cy_SAR_StartConvert
 601              	.LVL58:
 602              	.L52:
 603 002c 10BD     		pop	{r4, pc}
 604              	.LVL59:
 605              	.L55:
 606              		.cfi_def_cfa_offset 0
 607              		.cfi_restore 4
 608              		.cfi_restore 14
 609 002e 7047     		bx	lr
 610              	.L57:
 611              		.align	2
 612              	.L56:
 613 0030 00000000 		.word	.LANCHOR0
 614              		.cfi_endproc
 615              	.LFE196:
 616              		.size	Cy_SAR_Wakeup, .-Cy_SAR_Wakeup
 617              		.section	.text.Cy_SAR_StopConvert,"ax",%progbits
 618              		.align	2
 619              		.global	Cy_SAR_StopConvert
 620              		.thumb
 621              		.thumb_func
 622              		.type	Cy_SAR_StopConvert, %function
 623              	Cy_SAR_StopConvert:
 624              	.LFB198:
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StopConvert
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Stop continuous scanning of enabled channels.
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If a conversion is currently executing, that conversion will complete,
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 19


 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * but no further conversions will occur until the next call to
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_StartConvert or the next hardware trigger, if enabled.
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_STOP_CONVERT
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StopConvert(SAR_Type *base)
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 625              		.loc 1 404 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL60:
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk))
 631              		.loc 1 405 0
 632 0000 4368     		ldr	r3, [r0, #4]
 633 0002 13F4803F 		tst	r3, #65536
 634 0006 03D0     		beq	.L58
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) &= ~SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 635              		.loc 1 407 0
 636 0008 4368     		ldr	r3, [r0, #4]
 637 000a 23F48033 		bic	r3, r3, #65536
 638 000e 4360     		str	r3, [r0, #4]
 639              	.L58:
 640 0010 7047     		bx	lr
 641              		.cfi_endproc
 642              	.LFE198:
 643              		.size	Cy_SAR_StopConvert, .-Cy_SAR_StopConvert
 644 0012 00BF     		.section	.text.Cy_SAR_DeepSleep,"ax",%progbits
 645              		.align	2
 646              		.global	Cy_SAR_DeepSleep
 647              		.thumb
 648              		.thumb_func
 649              		.type	Cy_SAR_DeepSleep, %function
 650              	Cy_SAR_DeepSleep:
 651              	.LFB195:
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 652              		.loc 1 272 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              	.LVL61:
 657 0000 70B5     		push	{r4, r5, r6, lr}
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 4, -16
 660              		.cfi_offset 5, -12
 661              		.cfi_offset 6, -8
 662              		.cfi_offset 14, -4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 20


 663 0002 0446     		mov	r4, r0
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 664              		.loc 1 273 0
 665 0004 0568     		ldr	r5, [r0]
 666              	.LVL62:
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 667              		.loc 1 275 0
 668 0006 05F00043 		and	r3, r5, #-2147483648
 669 000a 0C4A     		ldr	r2, .L64
 670 000c 1360     		str	r3, [r2]
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 671              		.loc 1 278 0
 672 000e 25F40016 		bic	r6, r5, #2097152
 673              	.LVL63:
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 674              		.loc 1 280 0
 675 0012 83B1     		cbz	r3, .L61
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 676              		.loc 1 284 0
 677 0014 4368     		ldr	r3, [r0, #4]
 678 0016 03F48033 		and	r3, r3, #65536
 679 001a 5360     		str	r3, [r2, #4]
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 680              		.loc 1 286 0
 681 001c FFF7FEFF 		bl	Cy_SAR_StopConvert
 682              	.LVL64:
 683              	.L62:
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 684              		.loc 1 288 0 discriminator 1
 685 0020 D4F8A032 		ldr	r3, [r4, #672]
 686 0024 002B     		cmp	r3, #0
 687 0026 FBDB     		blt	.L62
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 688              		.loc 1 295 0
 689 0028 15F0006F 		tst	r5, #134217728
 690 002c 03D1     		bne	.L61
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 691              		.loc 1 297 0
 692 002e 2368     		ldr	r3, [r4]
 693 0030 23F00043 		bic	r3, r3, #-2147483648
 694 0034 2360     		str	r3, [r4]
 695              	.L61:
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 696              		.loc 1 301 0
 697 0036 2660     		str	r6, [r4]
 698 0038 70BD     		pop	{r4, r5, r6, pc}
 699              	.LVL65:
 700              	.L65:
 701 003a 00BF     		.align	2
 702              	.L64:
 703 003c 00000000 		.word	.LANCHOR0
 704              		.cfi_endproc
 705              	.LFE195:
 706              		.size	Cy_SAR_DeepSleep, .-Cy_SAR_DeepSleep
 707              		.section	.text.Cy_SAR_SetConvertMode,"ax",%progbits
 708              		.align	2
 709              		.global	Cy_SAR_SetConvertMode
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 21


 710              		.thumb
 711              		.thumb_func
 712              		.type	Cy_SAR_SetConvertMode, %function
 713              	Cy_SAR_SetConvertMode:
 714              	.LFB199:
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetConvertMode
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the mode in which conversions are triggered. This function does
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not start any conversions; it only configures the mode for subsequent conversions.
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * There are three modes:
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware only; hardware triggering is disabled
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and edge sensitive hardware triggering
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and level sensitive hardware triggering
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Note that firmware triggering is always enabled.
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_sample_ctrl_trigger_mode_t
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_CONVERT_MODE
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode)
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 715              		.loc 1 440 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              	.LVL66:
 720 0000 38B5     		push	{r3, r4, r5, lr}
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 3, -16
 723              		.cfi_offset 4, -12
 724              		.cfi_offset 5, -8
 725              		.cfi_offset 14, -4
 726 0002 0546     		mov	r5, r0
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_TRIGGER(mode));
 727              		.loc 1 441 0
 728 0004 0C46     		mov	r4, r1
 729 0006 51B1     		cbz	r1, .L67
 730              		.loc 1 441 0 is_stmt 0 discriminator 1
 731 0008 B1F5003F 		cmp	r1, #131072
 732 000c 07D0     		beq	.L67
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 22


 733              		.loc 1 441 0 discriminator 2
 734 000e B1F5C02F 		cmp	r1, #393216
 735 0012 04D0     		beq	.L67
 736              		.loc 1 441 0 discriminator 3
 737 0014 40F2B911 		movw	r1, #441
 738              	.LVL67:
 739 0018 0448     		ldr	r0, .L69
 740              	.LVL68:
 741 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 742              	.LVL69:
 743              	.L67:
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the TRIGGER_EN and TRIGGER_LEVEL bits */
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t sampleCtrlReg = SAR_SAMPLE_CTRL(base) & ~(SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAM
 744              		.loc 1 444 0 is_stmt 1
 745 001e 6968     		ldr	r1, [r5, #4]
 746 0020 21F4C021 		bic	r1, r1, #393216
 747              	.LVL70:
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_SAMPLE_CTRL(base) = sampleCtrlReg | mode;
 748              		.loc 1 446 0
 749 0024 2143     		orrs	r1, r1, r4
 750              	.LVL71:
 751 0026 6960     		str	r1, [r5, #4]
 752 0028 38BD     		pop	{r3, r4, r5, pc}
 753              	.LVL72:
 754              	.L70:
 755 002a 00BF     		.align	2
 756              	.L69:
 757 002c 00000000 		.word	.LC0
 758              		.cfi_endproc
 759              	.LFE199:
 760              		.size	Cy_SAR_SetConvertMode, .-Cy_SAR_SetConvertMode
 761              		.section	.text.Cy_SAR_IsEndConversion,"ax",%progbits
 762              		.align	2
 763              		.global	Cy_SAR_IsEndConversion
 764              		.thumb
 765              		.thumb_func
 766              		.type	Cy_SAR_IsEndConversion, %function
 767              	Cy_SAR_IsEndConversion:
 768              	.LFB200:
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsEndConversion
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Immediately return the status of the conversion or does not return (blocking)
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * until the conversion completes, depending on the retMode parameter.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 100 MHz.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param retMode
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 23


 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_return_mode_t
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : the last conversion is complete
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_CONVERSION_NOT_COMPLETE : the conversion has not completed
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_TIMEOUT : the watchdog timer has expired in blocking mode
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function reads the end of conversion status and clears it after.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_END_CONVERSION
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode)
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 769              		.loc 1 479 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              	.LVL73:
 774 0000 38B5     		push	{r3, r4, r5, lr}
 775              		.cfi_def_cfa_offset 16
 776              		.cfi_offset 3, -16
 777              		.cfi_offset 4, -12
 778              		.cfi_offset 5, -8
 779              		.cfi_offset 14, -4
 780 0002 0446     		mov	r4, r0
 781 0004 0D46     		mov	r5, r1
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_RETURN(retMode));
 782              		.loc 1 480 0
 783 0006 0129     		cmp	r1, #1
 784 0008 04D9     		bls	.L72
 785              		.loc 1 480 0 is_stmt 0 discriminator 1
 786 000a 4FF4F071 		mov	r1, #480
 787              	.LVL74:
 788 000e 1148     		ldr	r0, .L83
 789              	.LVL75:
 790 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 791              	.LVL76:
 792              	.L72:
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 793              		.loc 1 484 0 is_stmt 1
 794 0014 D4F81032 		ldr	r3, [r4, #528]
 795 0018 03F00103 		and	r3, r3, #1
 796              	.LVL77:
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t wdt = 0x1555555uL; /* Watchdog timer for blocking while loop */
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(retMode)
 797              		.loc 1 487 0
 798 001c 012D     		cmp	r5, #1
 799 001e 06D0     		beq	.L79
 800 0020 0AE0     		b	.L81
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 24


 801              	.LVL78:
 802              	.L75:
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_WAIT_FOR_RESULT:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while((0uL == endOfConversion) && (0uL != wdt))
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 803              		.loc 1 492 0
 804 0022 D4F81032 		ldr	r3, [r4, #528]
 805              	.LVL79:
 806 0026 03F00103 		and	r3, r3, #1
 807              	.LVL80:
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             wdt--;
 808              		.loc 1 493 0
 809 002a 013A     		subs	r2, r2, #1
 810              	.LVL81:
 811 002c 00E0     		b	.L74
 812              	.LVL82:
 813              	.L79:
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 814              		.loc 1 487 0
 815 002e 0A4A     		ldr	r2, .L83+4
 816              	.LVL83:
 817              	.L74:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 818              		.loc 1 490 0
 819 0030 1BB9     		cbnz	r3, .L73
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 820              		.loc 1 490 0 is_stmt 0 discriminator 1
 821 0032 002A     		cmp	r2, #0
 822 0034 F5D1     		bne	.L75
 823 0036 00E0     		b	.L73
 824              	.LVL84:
 825              	.L81:
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 826              		.loc 1 485 0 is_stmt 1
 827 0038 074A     		ldr	r2, .L83+4
 828              	.LVL85:
 829              	.L73:
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_RETURN_STATUS:
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the EOS bit */
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_INTR_EOS_INTR_Msk == endOfConversion)
 830              		.loc 1 502 0
 831 003a 33B1     		cbz	r3, .L76
 832              	.LVL86:
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 833              		.loc 1 505 0
 834 003c 0123     		movs	r3, #1
 835              	.LVL87:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 25


 836 003e C4F81032 		str	r3, [r4, #528]
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Do a dummy read after write for buffered write */
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         (void) SAR_INTR(base);
 837              		.loc 1 507 0
 838 0042 D4F81032 		ldr	r3, [r4, #528]
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 839              		.loc 1 504 0
 840 0046 0020     		movs	r0, #0
 841 0048 38BD     		pop	{r3, r4, r5, pc}
 842              	.LVL88:
 843              	.L76:
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (0uL == wdt)
 844              		.loc 1 509 0
 845 004a 0AB9     		cbnz	r2, .L80
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_TIMEOUT;
 846              		.loc 1 511 0
 847 004c 0348     		ldr	r0, .L83+8
 848 004e 38BD     		pop	{r3, r4, r5, pc}
 849              	.LVL89:
 850              	.L80:
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_CONVERSION_NOT_COMPLETE;
 851              		.loc 1 515 0
 852 0050 0348     		ldr	r0, .L83+12
 853              	.LVL90:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 854              		.loc 1 519 0
 855 0052 38BD     		pop	{r3, r4, r5, pc}
 856              	.LVL91:
 857              	.L84:
 858              		.align	2
 859              	.L83:
 860 0054 00000000 		.word	.LC0
 861 0058 55555501 		.word	22369621
 862 005c 02000600 		.word	393218
 863 0060 03000600 		.word	393219
 864              		.cfi_endproc
 865              	.LFE200:
 866              		.size	Cy_SAR_IsEndConversion, .-Cy_SAR_IsEndConversion
 867              		.section	.text.Cy_SAR_IsChannelSingleEnded,"ax",%progbits
 868              		.align	2
 869              		.global	Cy_SAR_IsChannelSingleEnded
 870              		.thumb
 871              		.thumb_func
 872              		.type	Cy_SAR_IsChannelSingleEnded, %function
 873              	Cy_SAR_IsChannelSingleEnded:
 874              	.LFB202:
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 26


 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSigned
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel result is configured for signed format, else false.
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The formats for single-ended and differential channels are independent.
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function will first check whether the channel is single-ended or differential.
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SIGNED
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan)
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSigned = false;
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Sign bits are stored separately for differential and single ended channels. */
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == Cy_SAR_IsChannelDifferential(base, chan))
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         else
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Single ended channel */
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSigned;
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSingleEnded
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel is single ended, else false
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 27


 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SE
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan)
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 875              		.loc 1 595 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              	.LVL92:
 880 0000 38B5     		push	{r3, r4, r5, lr}
 881              		.cfi_def_cfa_offset 16
 882              		.cfi_offset 3, -16
 883              		.cfi_offset 4, -12
 884              		.cfi_offset 5, -8
 885              		.cfi_offset 14, -4
 886 0002 0546     		mov	r5, r0
 887 0004 0C46     		mov	r4, r1
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 888              		.loc 1 596 0
 889 0006 0F29     		cmp	r1, #15
 890 0008 04D9     		bls	.L86
 891              		.loc 1 596 0 is_stmt 0 discriminator 1
 892 000a 4FF41571 		mov	r1, #596
 893              	.LVL93:
 894 000e 0848     		ldr	r0, .L91
 895              	.LVL94:
 896 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 897              	.LVL95:
 898              	.L86:
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSingleEnded = false;
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 899              		.loc 1 600 0 is_stmt 1
 900 0014 0F2C     		cmp	r4, #15
 901 0016 07D8     		bhi	.L88
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (0uL == (SAR_CHAN_CONFIG(base, chan) & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk | SAR_CHAN_C
 902              		.loc 1 602 0
 903 0018 2034     		adds	r4, r4, #32
 904              	.LVL96:
 905 001a 55F82430 		ldr	r3, [r5, r4, lsl #2]
 906 001e 13F0012F 		tst	r3, #16777472
 907 0022 03D0     		beq	.L89
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 28


 908              		.loc 1 598 0
 909 0024 0020     		movs	r0, #0
 910 0026 38BD     		pop	{r3, r4, r5, pc}
 911              	.LVL97:
 912              	.L88:
 913 0028 0020     		movs	r0, #0
 914 002a 38BD     		pop	{r3, r4, r5, pc}
 915              	.LVL98:
 916              	.L89:
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             isSingleEnded = true;
 917              		.loc 1 603 0
 918 002c 0120     		movs	r0, #1
 919              	.LVL99:
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSingleEnded;
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 920              		.loc 1 608 0
 921 002e 38BD     		pop	{r3, r4, r5, pc}
 922              	.LVL100:
 923              	.L92:
 924              		.align	2
 925              	.L91:
 926 0030 00000000 		.word	.LC0
 927              		.cfi_endproc
 928              	.LFE202:
 929              		.size	Cy_SAR_IsChannelSingleEnded, .-Cy_SAR_IsChannelSingleEnded
 930              		.section	.text.Cy_SAR_IsChannelSigned,"ax",%progbits
 931              		.align	2
 932              		.global	Cy_SAR_IsChannelSigned
 933              		.thumb
 934              		.thumb_func
 935              		.type	Cy_SAR_IsChannelSigned, %function
 936              	Cy_SAR_IsChannelSigned:
 937              	.LFB201:
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 938              		.loc 1 545 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              	.LVL101:
 943 0000 38B5     		push	{r3, r4, r5, lr}
 944              		.cfi_def_cfa_offset 16
 945              		.cfi_offset 3, -16
 946              		.cfi_offset 4, -12
 947              		.cfi_offset 5, -8
 948              		.cfi_offset 14, -4
 949 0002 0546     		mov	r5, r0
 950 0004 0C46     		mov	r4, r1
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 951              		.loc 1 546 0
 952 0006 0F29     		cmp	r1, #15
 953 0008 04D9     		bls	.L94
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 954              		.loc 1 546 0 is_stmt 0 discriminator 1
 955 000a 40F22221 		movw	r1, #546
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 29


 956              	.LVL102:
 957 000e 1048     		ldr	r0, .L101
 958              	.LVL103:
 959 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 960              	.LVL104:
 961              	.L94:
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 962              		.loc 1 550 0 is_stmt 1
 963 0014 0F2C     		cmp	r4, #15
 964 0016 14D8     		bhi	.L97
 965              	.LVL105:
 966              	.LBB4:
 967              	.LBB5:
 968              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 30


  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 31


 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 32


 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 33


 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 34


 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 35


 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * where N is the total number of channels in the scan.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 36


 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 37


 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 38


 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *          for Deep Sleep operation.                
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 39


 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 40


 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 41


 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 42


 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 43


 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 44


 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 45


 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 46


 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 47


1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 48


1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 49


1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 50


1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 51


1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 52


1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 53


1355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 54


1412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 55


1469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 56


1526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 57


1583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 58


1640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
1650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptMask
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger the CPU interrupt controller
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * as configured by \ref Cy_SAR_SetInterruptMask.
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Interrupt mask. Compare this value with masks in \ref cy_en_sar_intr_mask_t.
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_INTERRUPT_MASK
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base)
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASK(base);
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatusMasked
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the interrupt request and mask registers.
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetInterruptStatus and \ref Cy_SAR_GetInterruptMask.
1683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the interrupt request and mask registers
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base)
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASKED(base);
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 59


1697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatus
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the range interrupt register status.
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), range detection is not enabled for the
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetRangeInterruptMask), or range detection was not
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt status for all channels. Bit 0 is for channel 0, etc.
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RANGE_INTERRUPT_STATUS
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base)
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR(base);
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearRangeInterrupt
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the range interrupt for the specified channel mask.
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the hardware can set subset interrupts and those interrupts can
1731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be forwarded to the interrupt controller, if enabled.
1732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetRangeInterruptStatus.
1739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR(base) = chanMask;
1748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_RANGE_INTR(base);
1751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 60


1754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterrupt
1756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a range interrupt with software for the specific channel mask.
1759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_SET(base) = chanMask;
1774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterruptMask
1779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a range interrupt.
1782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_INTERRUPT_MASK
1794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask)
1797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_MASK(base) = chanMask;
1801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptMask
1806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a range interrupt as configured by
1809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_SetRangeInterruptMask.
1810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 61


1811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt mask
1816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base)
1819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASK(base);
1821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatusMasked
1826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the range interrupt request and mask registers.
1829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetRangeInterruptStatus and \ref Cy_SAR_GetRangeInterruptMask.
1830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND between of range interrupt request and mask
1836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base)
1839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASKED(base);
1841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatus
1846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the saturate interrupt register status.
1849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), saturation detection is not enabled for the
1851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetSatInterruptMask), or saturation detection was not
1852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt status for all channels. Bit 0 is for channel 0, etc.
1859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_STATUS
1863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base)
1866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR(base);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 62


1868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearSatInterrupt
1873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the saturate interrupt for the specified channel mask.
1876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetSatInterruptStatus.
1886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask)
1891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR(base) = chanMask;
1895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_SATURATE_INTR(base);
1898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterrupt
1903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a saturate interrupt with software for the specific channel mask.
1906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask)
1917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_SET(base) = chanMask;
1921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 63


1925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterruptMask
1926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a saturate interrupt.
1929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_MASK
1941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask)
1944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_MASK(base) = chanMask;
1948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptMask
1953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a saturate interrupt as configured
1956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * by \ref Cy_SAR_SetSatInterruptMask.
1957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt mask. Bit 0 is for channel 0, etc.
1963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base)
1966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASK(base);
1968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatusMasked
1972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the saturate interrupt request and mask registers.
1975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetSatInterruptStatus and \ref Cy_SAR_GetSatInterruptMask.
1976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the saturate interrupt request and mask
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 64


1982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base)
1985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASKED(base);
1987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptCause
1992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the cause of the interrupt.
1995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt routine can be called due to one of the following events:
1996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS)
1997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow
1998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Firmware collision
1999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detected on one or more channels
2000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detected on one or more channels
2001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Mask of what caused the interrupt. Compare this value with one of these masks:
2007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_EOS_MASKED_MIR_Msk : EOS caused the interrupt
2008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_OVERFLOW_MASKED_MIR_Msk : Overflow caused the interrupt
2009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_FW_COLLISION_MASKED_MIR_Msk : Firmware collision cause the interrupt
2010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_SATURATE_MASKED_RED_Msk : Saturation detection on one or more channels caused 
2011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_RANGE_MASKED_RED_Msk : Range detection on one or more channels caused the inte
2012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base)
2015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_CAUSE(base);
2017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
2018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
2019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
2021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
2022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
2023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
2026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_IsChannelDifferential
2027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
2028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return true of channel is differential, else false.
2030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chan
2035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel to check, starting at 0.
2036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A false is return if chan is invalid.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 65


2039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
2041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_DIFF
2043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan)
2046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return !Cy_SAR_IsChannelSingleEnded(base, chan);
 969              		.loc 2 2047 0
 970 0018 2146     		mov	r1, r4
 971 001a 2846     		mov	r0, r5
 972 001c FFF7FEFF 		bl	Cy_SAR_IsChannelSingleEnded
 973              	.LVL106:
 974 0020 80F00100 		eor	r0, r0, #1
 975              	.LVL107:
 976              	.LBE5:
 977              	.LBE4:
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 978              		.loc 1 554 0
 979 0024 10F0FF0F 		tst	r0, #255
 980 0028 05D0     		beq	.L96
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 981              		.loc 1 556 0
 982 002a 6B68     		ldr	r3, [r5, #4]
 983 002c 13F0080F 		tst	r3, #8
 984 0030 09D1     		bne	.L98
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 985              		.loc 1 548 0
 986 0032 0020     		movs	r0, #0
 987 0034 38BD     		pop	{r3, r4, r5, pc}
 988              	.LVL108:
 989              	.L96:
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 990              		.loc 1 563 0
 991 0036 6B68     		ldr	r3, [r5, #4]
 992 0038 13F0040F 		tst	r3, #4
 993 003c 05D1     		bne	.L99
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 994              		.loc 1 548 0
 995 003e 0020     		movs	r0, #0
 996 0040 38BD     		pop	{r3, r4, r5, pc}
 997              	.LVL109:
 998              	.L97:
 999 0042 0020     		movs	r0, #0
 1000 0044 38BD     		pop	{r3, r4, r5, pc}
 1001              	.LVL110:
 1002              	.L98:
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 1003              		.loc 1 558 0
 1004 0046 0120     		movs	r0, #1
 1005 0048 38BD     		pop	{r3, r4, r5, pc}
 1006              	.LVL111:
 1007              	.L99:
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 1008              		.loc 1 565 0
 1009 004a 0120     		movs	r0, #1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 66


 1010              	.LVL112:
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1011              		.loc 1 571 0
 1012 004c 38BD     		pop	{r3, r4, r5, pc}
 1013              	.LVL113:
 1014              	.L102:
 1015 004e 00BF     		.align	2
 1016              	.L101:
 1017 0050 00000000 		.word	.LC0
 1018              		.cfi_endproc
 1019              	.LFE201:
 1020              		.size	Cy_SAR_IsChannelSigned, .-Cy_SAR_IsChannelSigned
 1021              		.section	.text.Cy_SAR_GetResult16,"ax",%progbits
 1022              		.align	2
 1023              		.global	Cy_SAR_GetResult16
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	Cy_SAR_GetResult16, %function
 1027              	Cy_SAR_GetResult16:
 1028              	.LFB203:
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult16
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 16-bit integer.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 16-bit integer.
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT16
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan)
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1029              		.loc 1 634 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              	.LVL114:
 1034 0000 38B5     		push	{r3, r4, r5, lr}
 1035              		.cfi_def_cfa_offset 16
 1036              		.cfi_offset 3, -16
 1037              		.cfi_offset 4, -12
 1038              		.cfi_offset 5, -8
 1039              		.cfi_offset 14, -4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 67


 1040 0002 0546     		mov	r5, r0
 1041 0004 0C46     		mov	r4, r1
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1042              		.loc 1 635 0
 1043 0006 0F29     		cmp	r1, #15
 1044 0008 04D9     		bls	.L104
 1045              		.loc 1 635 0 is_stmt 0 discriminator 1
 1046 000a 40F27B21 		movw	r1, #635
 1047              	.LVL115:
 1048 000e 0648     		ldr	r0, .L108
 1049              	.LVL116:
 1050 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1051              	.LVL117:
 1052              	.L104:
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1053              		.loc 1 639 0 is_stmt 1
 1054 0014 0F2C     		cmp	r4, #15
 1055 0016 04D8     		bhi	.L106
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 1056              		.loc 1 641 0
 1057 0018 6034     		adds	r4, r4, #96
 1058              	.LVL118:
 1059 001a 55F82400 		ldr	r0, [r5, r4, lsl #2]
 1060 001e 80B2     		uxth	r0, r0
 1061              	.LVL119:
 1062 0020 00E0     		b	.L105
 1063              	.LVL120:
 1064              	.L106:
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1065              		.loc 1 637 0
 1066 0022 0020     		movs	r0, #0
 1067              	.LVL121:
 1068              	.L105:
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) adcResult;
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1069              		.loc 1 645 0
 1070 0024 00B2     		sxth	r0, r0
 1071              	.LVL122:
 1072 0026 38BD     		pop	{r3, r4, r5, pc}
 1073              	.LVL123:
 1074              	.L109:
 1075              		.align	2
 1076              	.L108:
 1077 0028 00000000 		.word	.LC0
 1078              		.cfi_endproc
 1079              	.LFE203:
 1080              		.size	Cy_SAR_GetResult16, .-Cy_SAR_GetResult16
 1081              		.section	.text.Cy_SAR_GetResult32,"ax",%progbits
 1082              		.align	2
 1083              		.global	Cy_SAR_GetResult32
 1084              		.thumb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 68


 1085              		.thumb_func
 1086              		.type	Cy_SAR_GetResult32, %function
 1087              	Cy_SAR_GetResult32:
 1088              	.LFB204:
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult32
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 32-bit integer.
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 32-bit integer.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT32
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan)
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1089              		.loc 1 671 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              	.LVL124:
 1094 0000 70B5     		push	{r4, r5, r6, lr}
 1095              		.cfi_def_cfa_offset 16
 1096              		.cfi_offset 4, -16
 1097              		.cfi_offset 5, -12
 1098              		.cfi_offset 6, -8
 1099              		.cfi_offset 14, -4
 1100 0002 0646     		mov	r6, r0
 1101 0004 0D46     		mov	r5, r1
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1102              		.loc 1 672 0
 1103 0006 0F29     		cmp	r1, #15
 1104 0008 04D9     		bls	.L111
 1105              		.loc 1 672 0 is_stmt 0 discriminator 1
 1106 000a 4FF42871 		mov	r1, #672
 1107              	.LVL125:
 1108 000e 0A48     		ldr	r0, .L117
 1109              	.LVL126:
 1110 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1111              	.LVL127:
 1112              	.L111:
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 69


 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t finalResult;
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1113              		.loc 1 678 0 is_stmt 1
 1114 0014 0F2D     		cmp	r5, #15
 1115 0016 05D8     		bhi	.L115
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 1116              		.loc 1 680 0
 1117 0018 05F16003 		add	r3, r5, #96
 1118 001c 56F82340 		ldr	r4, [r6, r3, lsl #2]
 1119 0020 A4B2     		uxth	r4, r4
 1120              	.LVL128:
 1121 0022 00E0     		b	.L112
 1122              	.LVL129:
 1123              	.L115:
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 1124              		.loc 1 674 0
 1125 0024 0024     		movs	r4, #0
 1126              	.LVL130:
 1127              	.L112:
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (true == Cy_SAR_IsChannelSigned(base, chan))
 1128              		.loc 1 683 0
 1129 0026 2946     		mov	r1, r5
 1130 0028 3046     		mov	r0, r6
 1131 002a FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 1132              	.LVL131:
 1133 002e 08B1     		cbz	r0, .L113
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult16 = (int16_t) adcResult;
 1134              		.loc 1 685 0
 1135 0030 20B2     		sxth	r0, r4
 1136              	.LVL132:
 1137 0032 70BD     		pop	{r4, r5, r6, pc}
 1138              	.LVL133:
 1139              	.L113:
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult16;
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult;
 1140              		.loc 1 690 0
 1141 0034 2046     		mov	r0, r4
 1142              	.LVL134:
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return finalResult;
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1143              		.loc 1 694 0
 1144 0036 70BD     		pop	{r4, r5, r6, pc}
 1145              	.LVL135:
 1146              	.L118:
 1147              		.align	2
 1148              	.L117:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 70


 1149 0038 00000000 		.word	.LC0
 1150              		.cfi_endproc
 1151              	.LFE204:
 1152              		.size	Cy_SAR_GetResult32, .-Cy_SAR_GetResult32
 1153              		.section	.text.Cy_SAR_SetLowLimit,"ax",%progbits
 1154              		.align	2
 1155              		.global	Cy_SAR_SetLowLimit
 1156              		.thumb
 1157              		.thumb_func
 1158              		.type	Cy_SAR_SetLowLimit, %function
 1159              	Cy_SAR_SetLowLimit:
 1160              	.LFB205:
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetLowLimit
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the low threshold for range detection. The values are interpreted
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param lowLimit
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The low threshold for range detection
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1161              		.loc 1 720 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              	.LVL136:
 1166 0000 38B5     		push	{r3, r4, r5, lr}
 1167              		.cfi_def_cfa_offset 16
 1168              		.cfi_offset 3, -16
 1169              		.cfi_offset 4, -12
 1170              		.cfi_offset 5, -8
 1171              		.cfi_offset 14, -4
 1172 0002 0546     		mov	r5, r0
 1173 0004 0C46     		mov	r4, r1
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(lowLimit));
 1174              		.loc 1 721 0
 1175 0006 B1F5803F 		cmp	r1, #65536
 1176 000a 04D3     		bcc	.L120
 1177              		.loc 1 721 0 is_stmt 0 discriminator 1
 1178 000c 40F2D121 		movw	r1, #721
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 71


 1179              	.LVL137:
 1180 0010 0448     		ldr	r0, .L122
 1181              	.LVL138:
 1182 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1183              	.LVL139:
 1184              	.L120:
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Preserve the RANGE_HIGH field value when changing the RANGE_LOW field value */
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_LOW_Msk;
 1185              		.loc 1 726 0 is_stmt 1
 1186 0016 AB69     		ldr	r3, [r5, #24]
 1187 0018 1B0C     		lsrs	r3, r3, #16
 1188 001a 1B04     		lsls	r3, r3, #16
 1189              	.LVL140:
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= lowLimit  & SAR_RANGE_THRES_RANGE_LOW_Msk;
 1190              		.loc 1 727 0
 1191 001c A4B2     		uxth	r4, r4
 1192              	.LVL141:
 1193 001e 1C43     		orrs	r4, r4, r3
 1194              	.LVL142:
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 1195              		.loc 1 728 0
 1196 0020 AC61     		str	r4, [r5, #24]
 1197 0022 38BD     		pop	{r3, r4, r5, pc}
 1198              	.LVL143:
 1199              	.L123:
 1200              		.align	2
 1201              	.L122:
 1202 0024 00000000 		.word	.LC0
 1203              		.cfi_endproc
 1204              	.LFE205:
 1205              		.size	Cy_SAR_SetLowLimit, .-Cy_SAR_SetLowLimit
 1206              		.section	.text.Cy_SAR_SetHighLimit,"ax",%progbits
 1207              		.align	2
 1208              		.global	Cy_SAR_SetHighLimit
 1209              		.thumb
 1210              		.thumb_func
 1211              		.type	Cy_SAR_SetHighLimit, %function
 1212              	Cy_SAR_SetHighLimit:
 1213              	.LFB206:
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetHighLimit
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the high threshold for range detection. The values are interpreted
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 72


 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param highLimit
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The high threshold for range detection
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit)
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1214              		.loc 1 755 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              	.LVL144:
 1219 0000 38B5     		push	{r3, r4, r5, lr}
 1220              		.cfi_def_cfa_offset 16
 1221              		.cfi_offset 3, -16
 1222              		.cfi_offset 4, -12
 1223              		.cfi_offset 5, -8
 1224              		.cfi_offset 14, -4
 1225 0002 0446     		mov	r4, r0
 1226 0004 0D46     		mov	r5, r1
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(highLimit));
 1227              		.loc 1 756 0
 1228 0006 B1F5803F 		cmp	r1, #65536
 1229 000a 04D3     		bcc	.L125
 1230              		.loc 1 756 0 is_stmt 0 discriminator 1
 1231 000c 4FF43D71 		mov	r1, #756
 1232              	.LVL145:
 1233 0010 0448     		ldr	r0, .L127
 1234              	.LVL146:
 1235 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1236              	.LVL147:
 1237              	.L125:
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_HIGH_Msk;
 1238              		.loc 1 760 0 is_stmt 1
 1239 0016 A169     		ldr	r1, [r4, #24]
 1240 0018 89B2     		uxth	r1, r1
 1241              	.LVL148:
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= (highLimit << SAR_RANGE_THRES_RANGE_HIGH_Pos) & SAR_RANGE_THRES_RANGE_HIGH_Msk
 1242              		.loc 1 761 0
 1243 001a 41EA0541 		orr	r1, r1, r5, lsl #16
 1244              	.LVL149:
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 1245              		.loc 1 762 0
 1246 001e A161     		str	r1, [r4, #24]
 1247 0020 38BD     		pop	{r3, r4, r5, pc}
 1248              	.LVL150:
 1249              	.L128:
 1250 0022 00BF     		.align	2
 1251              	.L127:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 73


 1252 0024 00000000 		.word	.LC0
 1253              		.cfi_endproc
 1254              	.LFE206:
 1255              		.size	Cy_SAR_SetHighLimit, .-Cy_SAR_SetHighLimit
 1256              		.section	.text.Cy_SAR_SetOffset,"ax",%progbits
 1257              		.align	2
 1258              		.global	Cy_SAR_SetOffset
 1259              		.thumb
 1260              		.thumb_func
 1261              		.type	Cy_SAR_SetOffset, %function
 1262              	Cy_SAR_SetOffset:
 1263              	.LFB207:
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetOffset
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the channel offset stored in the \ref Cy_SAR_offset array
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * for the voltage conversion functions.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Offset is applied to counts before unit scaling and gain.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's offset based on a known V_offset_mV, use:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetOffset(0uL, -1 * V_offset_mV * (1uL << Resolution) / (2 * V_ref_mV));
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param offset
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The count value measured when the inputs are shorted or
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * connected to the same input voltage.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : offset was set successfully
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset)
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1264              		.loc 1 793 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              	.LVL151:
 1269 0000 38B5     		push	{r3, r4, r5, lr}
 1270              		.cfi_def_cfa_offset 16
 1271              		.cfi_offset 3, -16
 1272              		.cfi_offset 4, -12
 1273              		.cfi_offset 5, -8
 1274              		.cfi_offset 14, -4
 1275 0002 0446     		mov	r4, r0
 1276 0004 0D46     		mov	r5, r1
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 74


 1277              		.loc 1 794 0
 1278 0006 0F28     		cmp	r0, #15
 1279 0008 04D9     		bls	.L130
 1280              		.loc 1 794 0 is_stmt 0 discriminator 1
 1281 000a 40F21A31 		movw	r1, #794
 1282              	.LVL152:
 1283 000e 0648     		ldr	r0, .L134
 1284              	.LVL153:
 1285 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1286              	.LVL154:
 1287              	.L130:
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1288              		.loc 1 798 0 is_stmt 1
 1289 0014 0F2C     		cmp	r4, #15
 1290 0016 04D8     		bhi	.L132
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_offset[chan] = offset;
 1291              		.loc 1 800 0
 1292 0018 044B     		ldr	r3, .L134+4
 1293 001a 23F81450 		strh	r5, [r3, r4, lsl #1]	@ movhi
 1294              	.LVL155:
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1295              		.loc 1 801 0
 1296 001e 0020     		movs	r0, #0
 1297 0020 38BD     		pop	{r3, r4, r5, pc}
 1298              	.LVL156:
 1299              	.L132:
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1300              		.loc 1 796 0
 1301 0022 0348     		ldr	r0, .L134+8
 1302              	.LVL157:
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1303              		.loc 1 805 0
 1304 0024 38BD     		pop	{r3, r4, r5, pc}
 1305              	.LVL158:
 1306              	.L135:
 1307 0026 00BF     		.align	2
 1308              	.L134:
 1309 0028 00000000 		.word	.LC0
 1310 002c 00000000 		.word	Cy_SAR_offset
 1311 0030 01000600 		.word	393217
 1312              		.cfi_endproc
 1313              	.LFE207:
 1314              		.size	Cy_SAR_SetOffset, .-Cy_SAR_SetOffset
 1315              		.section	.text.Cy_SAR_SetGain,"ax",%progbits
 1316              		.align	2
 1317              		.global	Cy_SAR_SetGain
 1318              		.thumb
 1319              		.thumb_func
 1320              		.type	Cy_SAR_SetGain, %function
 1321              	Cy_SAR_SetGain:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 75


 1322              	.LFB208:
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetGain
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the gain stored in the \ref Cy_SAR_countsPer10Volt array for the voltage conversion func
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain is configured at initialization in \ref Cy_SAR_Init
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * based on the SARADC resolution and voltage reference.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Gain is applied after offset and unit scaling.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's gain based on a known V_ref_mV, use:
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetGain(0uL, 10000 * (1uL << Resolution) / (2 * V_ref_mV));
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcGain
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain in counts per 10 volt.
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : gain was set successfully
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1323              		.loc 1 835 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 1327              	.LVL159:
 1328 0000 38B5     		push	{r3, r4, r5, lr}
 1329              		.cfi_def_cfa_offset 16
 1330              		.cfi_offset 3, -16
 1331              		.cfi_offset 4, -12
 1332              		.cfi_offset 5, -8
 1333              		.cfi_offset 14, -4
 1334 0002 0446     		mov	r4, r0
 1335 0004 0D46     		mov	r5, r1
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1336              		.loc 1 836 0
 1337 0006 0F28     		cmp	r0, #15
 1338 0008 04D9     		bls	.L137
 1339              		.loc 1 836 0 is_stmt 0 discriminator 1
 1340 000a 4FF45171 		mov	r1, #836
 1341              	.LVL160:
 1342 000e 0648     		ldr	r0, .L141
 1343              	.LVL161:
 1344 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1345              	.LVL162:
 1346              	.L137:
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 76


 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1347              		.loc 1 840 0 is_stmt 1
 1348 0014 0F2C     		cmp	r4, #15
 1349 0016 04D8     		bhi	.L139
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_countsPer10Volt[chan] = adcGain;
 1350              		.loc 1 842 0
 1351 0018 044B     		ldr	r3, .L141+4
 1352 001a 43F82450 		str	r5, [r3, r4, lsl #2]
 1353              	.LVL163:
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1354              		.loc 1 843 0
 1355 001e 0020     		movs	r0, #0
 1356 0020 38BD     		pop	{r3, r4, r5, pc}
 1357              	.LVL164:
 1358              	.L139:
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1359              		.loc 1 838 0
 1360 0022 0348     		ldr	r0, .L141+8
 1361              	.LVL165:
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1362              		.loc 1 847 0
 1363 0024 38BD     		pop	{r3, r4, r5, pc}
 1364              	.LVL166:
 1365              	.L142:
 1366 0026 00BF     		.align	2
 1367              	.L141:
 1368 0028 00000000 		.word	.LC0
 1369 002c 00000000 		.word	Cy_SAR_countsPer10Volt
 1370 0030 01000600 		.word	393217
 1371              		.cfi_endproc
 1372              	.LFE208:
 1373              		.size	Cy_SAR_SetGain, .-Cy_SAR_SetGain
 1374              		.section	.text.Cy_SAR_RawCounts2Counts,"ax",%progbits
 1375              		.align	2
 1376              		.global	Cy_SAR_RawCounts2Counts
 1377              		.thumb
 1378              		.thumb_func
 1379              		.type	Cy_SAR_RawCounts2Counts, %function
 1380              	Cy_SAR_RawCounts2Counts:
 1381              	.LFB209:
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_RawCounts2Counts
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the channel result to a consistent result after accounting for
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging and subtracting the offset.
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Counts = (RawCounts/AvgDivider - Offset)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 77


 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * adcCounts after averaging and offset adjustments.
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, adcCounts is returned unmodified.
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used by \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and \ref Cy_SAR_CountsTo_uVolts. Calling this function directly is usually
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not needed.
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1382              		.loc 1 890 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              	.LVL167:
 1387 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1388              		.cfi_def_cfa_offset 24
 1389              		.cfi_offset 3, -24
 1390              		.cfi_offset 4, -20
 1391              		.cfi_offset 5, -16
 1392              		.cfi_offset 6, -12
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 0646     		mov	r6, r0
 1396 0004 0C46     		mov	r4, r1
 1397 0006 1546     		mov	r5, r2
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1398              		.loc 1 891 0
 1399 0008 0F29     		cmp	r1, #15
 1400 000a 04D9     		bls	.L144
 1401              		.loc 1 891 0 is_stmt 0 discriminator 1
 1402 000c 40F27B31 		movw	r1, #891
 1403              	.LVL168:
 1404 0010 1948     		ldr	r0, .L151
 1405              	.LVL169:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 78


 1406 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1407              	.LVL170:
 1408              	.L144:
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t temp;
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t averageAdcSamplesDiv;
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1409              		.loc 1 896 0 is_stmt 1
 1410 0016 0F2C     		cmp	r4, #15
 1411 0018 2BD8     		bhi	.L145
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_AVG_SHIFT_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_SHIFT_Msk
 1412              		.loc 1 900 0
 1413 001a 7368     		ldr	r3, [r6, #4]
 1414 001c 13F0800F 		tst	r3, #128
 1415 0020 22D1     		bne	.L146
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* If Average mode != fixed */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_CHAN_CONFIG_AVG_EN_Msk == (SAR_CHAN_CONFIG(base, chan) & SAR_CHAN_CONFIG_AVG_EN
 1416              		.loc 1 903 0
 1417 0022 04F12003 		add	r3, r4, #32
 1418 0026 56F82330 		ldr	r3, [r6, r3, lsl #2]
 1419 002a 13F4806F 		tst	r3, #1024
 1420 002e 1BD0     		beq	.L146
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             { /* If channel uses averaging */
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* Divide by 2^(AVG_CNT + 1) */
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_CNT_Msk) >> SAR
 1421              		.loc 1 907 0
 1422 0030 7768     		ldr	r7, [r6, #4]
 1423 0032 C7F30217 		ubfx	r7, r7, #4, #3
 1424              	.LVL171:
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1425              		.loc 1 908 0
 1426 0036 0137     		adds	r7, r7, #1
 1427              	.LVL172:
 1428 0038 0123     		movs	r3, #1
 1429 003a 03FA07F7 		lsl	r7, r3, r7
 1430              	.LVL173:
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If averaging mode is ACCUNDUMP (channel will be sampled back to back and average
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 * divider limit is 16 */
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (SAR_SAMPLE_CTRL_AVG_MODE_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_MO
 1431              		.loc 1 912 0
 1432 003e 7368     		ldr	r3, [r6, #4]
 1433 0040 13F4807F 		tst	r3, #256
 1434 0044 02D1     		bne	.L147
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     if (averageAdcSamplesDiv > 16uL)
 1435              		.loc 1 914 0
 1436 0046 102F     		cmp	r7, #16
 1437 0048 00D9     		bls	.L147
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     {
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                         averageAdcSamplesDiv = 16uL;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 79


 1438              		.loc 1 916 0
 1439 004a 1027     		movs	r7, #16
 1440              	.LVL174:
 1441              	.L147:
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     }
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If unsigned format, prevent sign extension */
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (false == Cy_SAR_IsChannelSigned(base, chan))
 1442              		.loc 1 921 0
 1443 004c 2146     		mov	r1, r4
 1444 004e 3046     		mov	r0, r6
 1445 0050 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 1446              	.LVL175:
 1447 0054 20B9     		cbnz	r0, .L148
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1448              		.loc 1 923 0
 1449 0056 ADB2     		uxth	r5, r5
 1450 0058 B5FBF7F5 		udiv	r5, r5, r7
 1451              	.LVL176:
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts = (int16_t) temp;
 1452              		.loc 1 924 0
 1453 005c 2DB2     		sxth	r5, r5
 1454              	.LVL177:
 1455 005e 03E0     		b	.L146
 1456              	.LVL178:
 1457              	.L148:
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 else
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts /= (int16_t) averageAdcSamplesDiv;
 1458              		.loc 1 928 0
 1459 0060 3FB2     		sxth	r7, r7
 1460              	.LVL179:
 1461 0062 95FBF7F5 		sdiv	r5, r5, r7
 1462 0066 2DB2     		sxth	r5, r5
 1463              	.LVL180:
 1464              	.L146:
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Subtract ADC offset */
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcCounts -= Cy_SAR_offset[chan];
 1465              		.loc 1 934 0
 1466 0068 044B     		ldr	r3, .L151+4
 1467 006a 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 1468 006e ED1A     		subs	r5, r5, r3
 1469              	.LVL181:
 1470 0070 2DB2     		sxth	r5, r5
 1471              	.LVL182:
 1472              	.L145:
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return adcCounts;
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 80


 1473              		.loc 1 938 0
 1474 0072 2846     		mov	r0, r5
 1475 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1476              	.LVL183:
 1477              	.L152:
 1478 0076 00BF     		.align	2
 1479              	.L151:
 1480 0078 00000000 		.word	.LC0
 1481 007c 00000000 		.word	Cy_SAR_offset
 1482              		.cfi_endproc
 1483              	.LFE209:
 1484              		.size	Cy_SAR_RawCounts2Counts, .-Cy_SAR_RawCounts2Counts
 1485              		.section	.text.Cy_SAR_CountsTo_Volts,"ax",%progbits
 1486              		.align	2
 1487              		.global	Cy_SAR_CountsTo_Volts
 1488              		.thumb
 1489              		.thumb_func
 1490              		.type	Cy_SAR_CountsTo_Volts, %function
 1491              	Cy_SAR_CountsTo_Volts:
 1492              	.LFB210:
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_Volts
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to Volts as a float32. For example, if the ADC
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 0.534.
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 81


 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in Volts.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_VOLTS
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1493              		.loc 1 987 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              	.LVL184:
 1498 0000 70B5     		push	{r4, r5, r6, lr}
 1499              		.cfi_def_cfa_offset 16
 1500              		.cfi_offset 4, -16
 1501              		.cfi_offset 5, -12
 1502              		.cfi_offset 6, -8
 1503              		.cfi_offset 14, -4
 1504 0002 0546     		mov	r5, r0
 1505 0004 0C46     		mov	r4, r1
 1506 0006 1646     		mov	r6, r2
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1507              		.loc 1 988 0
 1508 0008 0F29     		cmp	r1, #15
 1509 000a 04D9     		bls	.L154
 1510              		.loc 1 988 0 is_stmt 0 discriminator 1
 1511 000c 4FF47771 		mov	r1, #988
 1512              	.LVL185:
 1513 0010 1348     		ldr	r0, .L159
 1514              	.LVL186:
 1515 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1516              	.LVL187:
 1517              	.L154:
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     float32_t result_Volts = 0.0f;
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1518              		.loc 1 992 0 is_stmt 1
 1519 0016 0F2C     		cmp	r4, #15
 1520 0018 1AD8     		bhi	.L156
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1521              		.loc 1 994 0
 1522 001a 6B68     		ldr	r3, [r5, #4]
 1523 001c 13F0020F 		tst	r3, #2
 1524 0020 19D1     		bne	.L157
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1525              		.loc 1 996 0
 1526 0022 3246     		mov	r2, r6
 1527 0024 2146     		mov	r1, r4
 1528 0026 2846     		mov	r0, r5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 82


 1529 0028 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1530              	.LVL188:
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts = (float32_t)adcCounts * CY_SAR_10V_COUNTS;
 1531              		.loc 1 998 0
 1532 002c 07EE900A 		vmov	s15, r0	@ int
 1533 0030 F8EEE77A 		vcvt.f32.s32	s15, s15
 1534 0034 F2EE046A 		vmov.f32	s13, #1.0e+1
 1535 0038 67EEA66A 		vmul.f32	s13, s15, s13
 1536              	.LVL189:
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1537              		.loc 1 999 0
 1538 003c 094B     		ldr	r3, .L159+4
 1539 003e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1540 0042 07EE103A 		vmov	s14, r3	@ int
 1541 0046 B8EEC77A 		vcvt.f32.s32	s14, s14
 1542 004a C6EE877A 		vdiv.f32	s15, s13, s14
 1543              	.LVL190:
 1544 004e 04E0     		b	.L155
 1545              	.LVL191:
 1546              	.L156:
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1547              		.loc 1 990 0
 1548 0050 DFED057A 		vldr.32	s15, .L159+8
 1549 0054 01E0     		b	.L155
 1550              	.L157:
 1551 0056 DFED047A 		vldr.32	s15, .L159+8
 1552              	.LVL192:
 1553              	.L155:
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result_Volts;
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1554              		.loc 1 1004 0
 1555 005a 17EE900A 		vmov	r0, s15
 1556 005e 70BD     		pop	{r4, r5, r6, pc}
 1557              	.LVL193:
 1558              	.L160:
 1559              		.align	2
 1560              	.L159:
 1561 0060 00000000 		.word	.LC0
 1562 0064 00000000 		.word	Cy_SAR_countsPer10Volt
 1563 0068 00000000 		.word	0
 1564              		.cfi_endproc
 1565              	.LFE210:
 1566              		.size	Cy_SAR_CountsTo_Volts, .-Cy_SAR_CountsTo_Volts
 1567              		.section	.text.Cy_SAR_CountsTo_mVolts,"ax",%progbits
 1568              		.align	2
 1569              		.global	Cy_SAR_CountsTo_mVolts
 1570              		.thumb
 1571              		.thumb_func
 1572              		.type	Cy_SAR_CountsTo_mVolts, %function
 1573              	Cy_SAR_CountsTo_mVolts:
 1574              	.LFB211:
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 83


1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_mVolts
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to millivolts as an int16. For example, if the ADC
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534.
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     mV = V * 1000
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in millivolts.
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_MVOLTS
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1575              		.loc 1 1054 0
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 0
 1578              		@ frame_needed = 0, uses_anonymous_args = 0
 1579              	.LVL194:
 1580 0000 70B5     		push	{r4, r5, r6, lr}
 1581              		.cfi_def_cfa_offset 16
 1582              		.cfi_offset 4, -16
 1583              		.cfi_offset 5, -12
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 84


 1584              		.cfi_offset 6, -8
 1585              		.cfi_offset 14, -4
 1586 0002 0546     		mov	r5, r0
 1587 0004 0C46     		mov	r4, r1
 1588 0006 1646     		mov	r6, r2
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1589              		.loc 1 1055 0
 1590 0008 0F29     		cmp	r1, #15
 1591 000a 04D9     		bls	.L162
 1592              		.loc 1 1055 0 is_stmt 0 discriminator 1
 1593 000c 40F21F41 		movw	r1, #1055
 1594              	.LVL195:
 1595 0010 1648     		ldr	r0, .L169
 1596              	.LVL196:
 1597 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1598              	.LVL197:
 1599              	.L162:
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t result_mVolts = 0;
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1600              		.loc 1 1059 0 is_stmt 1
 1601 0016 0F2C     		cmp	r4, #15
 1602 0018 23D8     		bhi	.L166
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1603              		.loc 1 1061 0
 1604 001a 6B68     		ldr	r3, [r5, #4]
 1605 001c 13F0020F 		tst	r3, #2
 1606 0020 21D1     		bne	.L167
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1607              		.loc 1 1063 0
 1608 0022 3246     		mov	r2, r6
 1609 0024 2146     		mov	r1, r4
 1610 0026 2846     		mov	r0, r5
 1611 0028 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1612              	.LVL198:
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts = ((int32_t)adcCounts * CY_SAR_10MV_COUNTS);
 1613              		.loc 1 1065 0
 1614 002c 42F21073 		movw	r3, #10000
 1615 0030 03FB00F2 		mul	r2, r3, r0
 1616              	.LVL199:
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (adcCounts > 0)
 1617              		.loc 1 1066 0
 1618 0034 0028     		cmp	r0, #0
 1619 0036 07DD     		ble	.L164
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts += Cy_SAR_countsPer10Volt[chan] / 2;
 1620              		.loc 1 1068 0
 1621 0038 0D4B     		ldr	r3, .L169+4
 1622 003a 53F82400 		ldr	r0, [r3, r4, lsl #2]
 1623              	.LVL200:
 1624 003e 00EBD070 		add	r0, r0, r0, lsr #31
 1625 0042 02EB6003 		add	r3, r2, r0, asr #1
 1626              	.LVL201:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 85


 1627 0046 06E0     		b	.L165
 1628              	.LVL202:
 1629              	.L164:
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts -= Cy_SAR_countsPer10Volt[chan] / 2;
 1630              		.loc 1 1072 0
 1631 0048 094B     		ldr	r3, .L169+4
 1632 004a 53F82400 		ldr	r0, [r3, r4, lsl #2]
 1633              	.LVL203:
 1634 004e 00EBD070 		add	r0, r0, r0, lsr #31
 1635 0052 A2EB6003 		sub	r3, r2, r0, asr #1
 1636              	.LVL204:
 1637              	.L165:
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts /= Cy_SAR_countsPer10Volt[chan];
 1638              		.loc 1 1074 0
 1639 0056 064A     		ldr	r2, .L169+4
 1640 0058 52F82400 		ldr	r0, [r2, r4, lsl #2]
 1641 005c 93FBF0F0 		sdiv	r0, r3, r0
 1642              	.LVL205:
 1643 0060 02E0     		b	.L163
 1644              	.LVL206:
 1645              	.L166:
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1646              		.loc 1 1057 0
 1647 0062 0020     		movs	r0, #0
 1648 0064 00E0     		b	.L163
 1649              	.L167:
 1650 0066 0020     		movs	r0, #0
 1651              	.LVL207:
 1652              	.L163:
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) result_mVolts;
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1653              		.loc 1 1079 0
 1654 0068 00B2     		sxth	r0, r0
 1655              	.LVL208:
 1656 006a 70BD     		pop	{r4, r5, r6, pc}
 1657              	.LVL209:
 1658              	.L170:
 1659              		.align	2
 1660              	.L169:
 1661 006c 00000000 		.word	.LC0
 1662 0070 00000000 		.word	Cy_SAR_countsPer10Volt
 1663              		.cfi_endproc
 1664              	.LFE211:
 1665              		.size	Cy_SAR_CountsTo_mVolts, .-Cy_SAR_CountsTo_mVolts
 1666              		.global	__aeabi_ldivmod
 1667              		.section	.text.Cy_SAR_CountsTo_uVolts,"ax",%progbits
 1668              		.align	2
 1669              		.global	Cy_SAR_CountsTo_uVolts
 1670              		.thumb
 1671              		.thumb_func
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 86


 1672              		.type	Cy_SAR_CountsTo_uVolts, %function
 1673              	Cy_SAR_CountsTo_uVolts:
 1674              	.LFB212:
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_uVolts
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to microvolts as a int32. For example, if the ADC
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534000.
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     uV = V * 1000000
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in microvolts.
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is valid, 0 is returned.
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_UVOLTS
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1675              		.loc 1 1129 0
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 87


 1679              	.LVL210:
 1680 0000 70B5     		push	{r4, r5, r6, lr}
 1681              		.cfi_def_cfa_offset 16
 1682              		.cfi_offset 4, -16
 1683              		.cfi_offset 5, -12
 1684              		.cfi_offset 6, -8
 1685              		.cfi_offset 14, -4
 1686 0002 0546     		mov	r5, r0
 1687 0004 0C46     		mov	r4, r1
 1688 0006 1646     		mov	r6, r2
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1689              		.loc 1 1130 0
 1690 0008 0F29     		cmp	r1, #15
 1691 000a 04D9     		bls	.L172
 1692              		.loc 1 1130 0 is_stmt 0 discriminator 1
 1693 000c 40F26A41 		movw	r1, #1130
 1694              	.LVL211:
 1695 0010 0F48     		ldr	r0, .L177
 1696              	.LVL212:
 1697 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1698              	.LVL213:
 1699              	.L172:
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int64_t result_uVolts = 0;
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1700              		.loc 1 1134 0 is_stmt 1
 1701 0016 0F2C     		cmp	r4, #15
 1702 0018 16D8     		bhi	.L174
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1703              		.loc 1 1136 0
 1704 001a 6B68     		ldr	r3, [r5, #4]
 1705 001c 13F0020F 		tst	r3, #2
 1706 0020 14D1     		bne	.L175
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1707              		.loc 1 1138 0
 1708 0022 3246     		mov	r2, r6
 1709 0024 2146     		mov	r1, r4
 1710 0026 2846     		mov	r0, r5
 1711 0028 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1712              	.LVL214:
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts = (int64_t)adcCounts * CY_SAR_10UV_COUNTS;
 1713              		.loc 1 1139 0
 1714 002c 02B2     		sxth	r2, r0
 1715 002e D317     		asrs	r3, r2, #31
 1716 0030 084D     		ldr	r5, .L177+4
 1717              	.LVL215:
 1718 0032 A2FB0501 		umull	r0, r1, r2, r5
 1719              	.LVL216:
 1720 0036 05FB0311 		mla	r1, r5, r3, r1
 1721              	.LVL217:
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts /= Cy_SAR_countsPer10Volt[chan];
 1722              		.loc 1 1140 0
 1723 003a 074B     		ldr	r3, .L177+8
 1724 003c 53F82420 		ldr	r2, [r3, r4, lsl #2]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 88


 1725              	.LVL218:
 1726 0040 D317     		asrs	r3, r2, #31
 1727 0042 FFF7FEFF 		bl	__aeabi_ldivmod
 1728              	.LVL219:
 1729 0046 70BD     		pop	{r4, r5, r6, pc}
 1730              	.LVL220:
 1731              	.L174:
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1732              		.loc 1 1132 0
 1733 0048 0020     		movs	r0, #0
 1734 004a 70BD     		pop	{r4, r5, r6, pc}
 1735              	.LVL221:
 1736              	.L175:
 1737 004c 0020     		movs	r0, #0
 1738              	.LVL222:
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int32_t)result_uVolts;
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1739              		.loc 1 1145 0
 1740 004e 70BD     		pop	{r4, r5, r6, pc}
 1741              	.LVL223:
 1742              	.L178:
 1743              		.align	2
 1744              	.L177:
 1745 0050 00000000 		.word	.LC0
 1746 0054 80969800 		.word	10000000
 1747 0058 00000000 		.word	Cy_SAR_countsPer10Volt
 1748              		.cfi_endproc
 1749              	.LFE212:
 1750              		.size	Cy_SAR_CountsTo_uVolts, .-Cy_SAR_CountsTo_uVolts
 1751              		.section	.text.Cy_SAR_SetAnalogSwitch,"ax",%progbits
 1752              		.align	2
 1753              		.global	Cy_SAR_SetAnalogSwitch
 1754              		.thumb
 1755              		.thumb_func
 1756              		.type	Cy_SAR_SetAnalogSwitch, %function
 1757              	Cy_SAR_SetAnalogSwitch:
 1758              	.LFB213:
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetAnalogSwitch
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provide firmware control of the SARMUX switches for firmware sequencing.
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each call to this function can open or close a set of switches.
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARSEQ is enabled, there is no need to use this function.
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 89


1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches to either open or close.
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param state
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Open or close the desired swithces. Select a value from \ref cy_en_sar_switch_state_t.
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_ANALOG_SWITCH
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1759              		.loc 1 1181 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 0
 1762              		@ frame_needed = 0, uses_anonymous_args = 0
 1763              	.LVL224:
 1764 0000 70B5     		push	{r4, r5, r6, lr}
 1765              		.cfi_def_cfa_offset 16
 1766              		.cfi_offset 4, -16
 1767              		.cfi_offset 5, -12
 1768              		.cfi_offset 6, -8
 1769              		.cfi_offset 14, -4
 1770 0002 0646     		mov	r6, r0
 1771 0004 1446     		mov	r4, r2
 1772 0006 1D46     		mov	r5, r3
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
 1773              		.loc 1 1182 0
 1774 0008 21B1     		cbz	r1, .L180
 1775              		.loc 1 1182 0 is_stmt 0 discriminator 1
 1776 000a 40F29E41 		movw	r1, #1182
 1777              	.LVL225:
 1778 000e 0E48     		ldr	r0, .L188
 1779              	.LVL226:
 1780 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1781              	.LVL227:
 1782              	.L180:
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SWITCHMASK(switchMask));
 1783              		.loc 1 1183 0 is_stmt 1
 1784 0014 B4F1804F 		cmp	r4, #1073741824
 1785 0018 04D3     		bcc	.L181
 1786              		.loc 1 1183 0 is_stmt 0 discriminator 1
 1787 001a 40F29F41 		movw	r1, #1183
 1788 001e 0A48     		ldr	r0, .L188
 1789 0020 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1790              	.LVL228:
 1791              	.L181:
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSTATE(state));
 1792              		.loc 1 1184 0 is_stmt 1
 1793 0024 012D     		cmp	r5, #1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 90


 1794 0026 04D9     		bls	.L182
 1795              		.loc 1 1184 0 is_stmt 0 discriminator 1
 1796 0028 4FF49461 		mov	r1, #1184
 1797 002c 0648     		ldr	r0, .L188
 1798 002e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1799              	.LVL229:
 1800              	.L182:
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchReg;
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchClearReg;
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchReg = &SAR_MUX_SWITCH0(base);
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchClearReg = &SAR_MUX_SWITCH_CLEAR0(base);
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(state)
 1801              		.loc 1 1192 0 is_stmt 1
 1802 0032 012D     		cmp	r5, #1
 1803 0034 05D1     		bne	.L186
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_CLOSE:
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchReg |= switchMask;
 1804              		.loc 1 1195 0
 1805 0036 D6F80033 		ldr	r3, [r6, #768]
 1806 003a 1C43     		orrs	r4, r4, r3
 1807              	.LVL230:
 1808 003c C6F80043 		str	r4, [r6, #768]
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 1809              		.loc 1 1196 0
 1810 0040 70BD     		pop	{r4, r5, r6, pc}
 1811              	.LVL231:
 1812              	.L186:
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_OPEN:
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Unlike the close case, we are not OR'ing the register. Set 1 to clear.*/
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchClearReg = switchMask;
 1813              		.loc 1 1201 0
 1814 0042 C6F80443 		str	r4, [r6, #772]
 1815 0046 70BD     		pop	{r4, r5, r6, pc}
 1816              	.LVL232:
 1817              	.L189:
 1818              		.align	2
 1819              	.L188:
 1820 0048 00000000 		.word	.LC0
 1821              		.cfi_endproc
 1822              	.LFE213:
 1823              		.size	Cy_SAR_SetAnalogSwitch, .-Cy_SAR_SetAnalogSwitch
 1824              		.section	.text.Cy_SAR_GetAnalogSwitch,"ax",%progbits
 1825              		.align	2
 1826              		.global	Cy_SAR_GetAnalogSwitch
 1827              		.thumb
 1828              		.thumb_func
 1829              		.type	Cy_SAR_GetAnalogSwitch, %function
 1830              	Cy_SAR_GetAnalogSwitch:
 1831              	.LFB214:
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 91


1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetAnalogSwitch
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the state (open or close) of SARMUX switches.
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each bit corresponds to a single switch, where a bit value of 0 is open
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and 1 is closed.
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Compare this value to the switch masks in \ref cy_en_sar_mux_switch_fw_ctrl_t.
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1832              		.loc 1 1227 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 0
 1835              		@ frame_needed = 0, uses_anonymous_args = 0
 1836              	.LVL233:
 1837 0000 10B5     		push	{r4, lr}
 1838              		.cfi_def_cfa_offset 8
 1839              		.cfi_offset 4, -8
 1840              		.cfi_offset 14, -4
 1841 0002 0446     		mov	r4, r0
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
 1842              		.loc 1 1228 0
 1843 0004 21B1     		cbz	r1, .L191
 1844              		.loc 1 1228 0 is_stmt 0 discriminator 1
 1845 0006 40F2CC41 		movw	r1, #1228
 1846              	.LVL234:
 1847 000a 0348     		ldr	r0, .L193
 1848              	.LVL235:
 1849 000c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1850              	.LVL236:
 1851              	.L191:
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return SAR_MUX_SWITCH0(base);
 1852              		.loc 1 1230 0 is_stmt 1
 1853 0010 D4F80003 		ldr	r0, [r4, #768]
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1854              		.loc 1 1231 0
 1855 0014 10BD     		pop	{r4, pc}
 1856              	.LVL237:
 1857              	.L194:
 1858 0016 00BF     		.align	2
 1859              	.L193:
 1860 0018 00000000 		.word	.LC0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 92


 1861              		.cfi_endproc
 1862              	.LFE214:
 1863              		.size	Cy_SAR_GetAnalogSwitch, .-Cy_SAR_GetAnalogSwitch
 1864              		.section	.text.Cy_SAR_SetSwitchSarSeqCtrl,"ax",%progbits
 1865              		.align	2
 1866              		.global	Cy_SAR_SetSwitchSarSeqCtrl
 1867              		.thumb
 1868              		.thumb_func
 1869              		.type	Cy_SAR_SetSwitchSarSeqCtrl, %function
 1870              	Cy_SAR_SetSwitchSarSeqCtrl:
 1871              	.LFB215:
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetSwitchSarSeqCtrl
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control of one or more switches.
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param ctrl
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control. Select a value from \ref cy_en_sar_switch_sar_seq_ctrl_t.
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_SWITCH_SAR_SEQ_CTRL
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1872              		.loc 1 1260 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876              	.LVL238:
 1877 0000 70B5     		push	{r4, r5, r6, lr}
 1878              		.cfi_def_cfa_offset 16
 1879              		.cfi_offset 4, -16
 1880              		.cfi_offset 5, -12
 1881              		.cfi_offset 6, -8
 1882              		.cfi_offset 14, -4
 1883 0002 0446     		mov	r4, r0
 1884 0004 0D46     		mov	r5, r1
 1885 0006 1646     		mov	r6, r2
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SQMASK(switchMask));
 1886              		.loc 1 1261 0
 1887 0008 21F44F03 		bic	r3, r1, #13565952
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 93


 1888 000c 23F0FF03 		bic	r3, r3, #255
 1889 0010 23B1     		cbz	r3, .L196
 1890              		.loc 1 1261 0 is_stmt 0 discriminator 1
 1891 0012 40F2ED41 		movw	r1, #1261
 1892              	.LVL239:
 1893 0016 0C48     		ldr	r0, .L203
 1894              	.LVL240:
 1895 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1896              	.LVL241:
 1897              	.L196:
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SQCTRL(ctrl));
 1898              		.loc 1 1262 0 is_stmt 1
 1899 001c 012E     		cmp	r6, #1
 1900 001e 04D9     		bls	.L197
 1901              		.loc 1 1262 0 is_stmt 0 discriminator 1
 1902 0020 40F2EE41 		movw	r1, #1262
 1903 0024 0848     		ldr	r0, .L203
 1904 0026 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1905              	.LVL242:
 1906              	.L197:
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(ctrl)
 1907              		.loc 1 1264 0 is_stmt 1
 1908 002a 012E     		cmp	r6, #1
 1909 002c 05D1     		bne	.L201
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_ENABLE:
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) |= switchMask;
 1910              		.loc 1 1267 0
 1911 002e D4F84433 		ldr	r3, [r4, #836]
 1912 0032 1D43     		orrs	r5, r5, r3
 1913              	.LVL243:
 1914 0034 C4F84453 		str	r5, [r4, #836]
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 1915              		.loc 1 1268 0
 1916 0038 70BD     		pop	{r4, r5, r6, pc}
 1917              	.LVL244:
 1918              	.L201:
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_DISABLE:
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) &= ~switchMask;
 1919              		.loc 1 1271 0
 1920 003a D4F84433 		ldr	r3, [r4, #836]
 1921 003e 23EA0505 		bic	r5, r3, r5
 1922              	.LVL245:
 1923 0042 C4F84453 		str	r5, [r4, #836]
 1924 0046 70BD     		pop	{r4, r5, r6, pc}
 1925              	.LVL246:
 1926              	.L204:
 1927              		.align	2
 1928              	.L203:
 1929 0048 00000000 		.word	.LC0
 1930              		.cfi_endproc
 1931              	.LFE215:
 1932              		.size	Cy_SAR_SetSwitchSarSeqCtrl, .-Cy_SAR_SetSwitchSarSeqCtrl
 1933              		.section	.text.Cy_SAR_DeepSleepCallback,"ax",%progbits
 1934              		.align	2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 94


 1935              		.global	Cy_SAR_DeepSleepCallback
 1936              		.thumb
 1937              		.thumb_func
 1938              		.type	Cy_SAR_DeepSleepCallback, %function
 1939              	Cy_SAR_DeepSleepCallback:
 1940              	.LFB216:
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleepCallback
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback to prepare the SAR before entering Deep Sleep
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and to re-enable the SAR after exiting Deep Sleep.
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param callbackParams
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure of type \ref cy_stc_syspm_callback_params_t
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref cy_en_syspm_status_t
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEEPSLEEP_CALLBACK
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1941              		.loc 1 1299 0
 1942              		.cfi_startproc
 1943              		@ args = 0, pretend = 0, frame = 0
 1944              		@ frame_needed = 0, uses_anonymous_args = 0
 1945              	.LVL247:
 1946 0000 08B5     		push	{r3, lr}
 1947              		.cfi_def_cfa_offset 8
 1948              		.cfi_offset 3, -8
 1949              		.cfi_offset 14, -4
 1950              	.LVL248:
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_syspm_status_t returnValue = CY_SYSPM_SUCCESS;
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (CY_SYSPM_BEFORE_TRANSITION == mode)
 1951              		.loc 1 1302 0
 1952 0002 0429     		cmp	r1, #4
 1953 0004 03D1     		bne	.L206
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done before entering the Deep Sleep mode */
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_DeepSleep((SAR_V1_Type *)callbackParams->base);
 1954              		.loc 1 1304 0
 1955 0006 0068     		ldr	r0, [r0]
 1956              	.LVL249:
 1957 0008 FFF7FEFF 		bl	Cy_SAR_DeepSleep
 1958              	.LVL250:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 95


 1959 000c 04E0     		b	.L207
 1960              	.LVL251:
 1961              	.L206:
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (CY_SYSPM_AFTER_TRANSITION == mode)
 1962              		.loc 1 1306 0
 1963 000e 0829     		cmp	r1, #8
 1964 0010 02D1     		bne	.L207
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done after exiting the Deep Sleep mode */
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Wakeup((SAR_V1_Type *)callbackParams->base);
 1965              		.loc 1 1308 0
 1966 0012 0068     		ldr	r0, [r0]
 1967              	.LVL252:
 1968 0014 FFF7FEFF 		bl	Cy_SAR_Wakeup
 1969              	.LVL253:
 1970              	.L207:
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Does nothing in other modes */
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return returnValue;
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1971              		.loc 1 1315 0
 1972 0018 0020     		movs	r0, #0
 1973 001a 08BD     		pop	{r3, pc}
 1974              		.cfi_endproc
 1975              	.LFE216:
 1976              		.size	Cy_SAR_DeepSleepCallback, .-Cy_SAR_DeepSleepCallback
 1977              		.comm	Cy_SAR_countsPer10Volt,64,4
 1978              		.comm	Cy_SAR_offset,32,4
 1979              		.section	.rodata.str1.4,"aMS",%progbits,1
 1980              		.align	2
 1981              	.LC0:
 1982 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 1982      72617465 
 1982      645F536F 
 1982      75726365 
 1982      5C50536F 
 1983 002e 7361725C 		.ascii	"sar\\cy_sar.c\000"
 1983      63795F73 
 1983      61722E63 
 1983      00
 1984              		.bss
 1985              		.align	2
 1986              		.set	.LANCHOR0,. + 0
 1987              		.type	enabledBeforeSleep, %object
 1988              		.size	enabledBeforeSleep, 8
 1989              	enabledBeforeSleep:
 1990 0000 00000000 		.space	8
 1990      00000000 
 1991              		.text
 1992              	.Letext0:
 1993              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 1994              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 1995              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 1996              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 96


 1997              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 1998              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 1999              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
 2000              		.file 10 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 2001              		.section	.debug_info,"",%progbits
 2002              	.Ldebug_info0:
 2003 0000 211A0000 		.4byte	0x1a21
 2004 0004 0400     		.2byte	0x4
 2005 0006 00000000 		.4byte	.Ldebug_abbrev0
 2006 000a 04       		.byte	0x4
 2007 000b 01       		.uleb128 0x1
 2008 000c 23030000 		.4byte	.LASF310
 2009 0010 0C       		.byte	0xc
 2010 0011 3B0F0000 		.4byte	.LASF311
 2011 0015 ED0D0000 		.4byte	.LASF312
 2012 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2013 001d 00000000 		.4byte	0
 2014 0021 00000000 		.4byte	.Ldebug_line0
 2015 0025 02       		.uleb128 0x2
 2016 0026 01       		.byte	0x1
 2017 0027 06       		.byte	0x6
 2018 0028 71120000 		.4byte	.LASF0
 2019 002c 03       		.uleb128 0x3
 2020 002d 310F0000 		.4byte	.LASF2
 2021 0031 03       		.byte	0x3
 2022 0032 1D       		.byte	0x1d
 2023 0033 37000000 		.4byte	0x37
 2024 0037 02       		.uleb128 0x2
 2025 0038 01       		.byte	0x1
 2026 0039 08       		.byte	0x8
 2027 003a 6C0C0000 		.4byte	.LASF1
 2028 003e 03       		.uleb128 0x3
 2029 003f 850A0000 		.4byte	.LASF3
 2030 0043 03       		.byte	0x3
 2031 0044 29       		.byte	0x29
 2032 0045 49000000 		.4byte	0x49
 2033 0049 02       		.uleb128 0x2
 2034 004a 02       		.byte	0x2
 2035 004b 05       		.byte	0x5
 2036 004c 39020000 		.4byte	.LASF4
 2037 0050 03       		.uleb128 0x3
 2038 0051 B1050000 		.4byte	.LASF5
 2039 0055 03       		.byte	0x3
 2040 0056 2B       		.byte	0x2b
 2041 0057 5B000000 		.4byte	0x5b
 2042 005b 02       		.uleb128 0x2
 2043 005c 02       		.byte	0x2
 2044 005d 07       		.byte	0x7
 2045 005e F00B0000 		.4byte	.LASF6
 2046 0062 03       		.uleb128 0x3
 2047 0063 9D010000 		.4byte	.LASF7
 2048 0067 03       		.byte	0x3
 2049 0068 3F       		.byte	0x3f
 2050 0069 6D000000 		.4byte	0x6d
 2051 006d 02       		.uleb128 0x2
 2052 006e 04       		.byte	0x4
 2053 006f 05       		.byte	0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 97


 2054 0070 8E0D0000 		.4byte	.LASF8
 2055 0074 03       		.uleb128 0x3
 2056 0075 F2100000 		.4byte	.LASF9
 2057 0079 03       		.byte	0x3
 2058 007a 41       		.byte	0x41
 2059 007b 7F000000 		.4byte	0x7f
 2060 007f 02       		.uleb128 0x2
 2061 0080 04       		.byte	0x4
 2062 0081 07       		.byte	0x7
 2063 0082 FB0F0000 		.4byte	.LASF10
 2064 0086 03       		.uleb128 0x3
 2065 0087 DC0B0000 		.4byte	.LASF11
 2066 008b 03       		.byte	0x3
 2067 008c 59       		.byte	0x59
 2068 008d 91000000 		.4byte	0x91
 2069 0091 02       		.uleb128 0x2
 2070 0092 08       		.byte	0x8
 2071 0093 05       		.byte	0x5
 2072 0094 C0090000 		.4byte	.LASF12
 2073 0098 02       		.uleb128 0x2
 2074 0099 08       		.byte	0x8
 2075 009a 07       		.byte	0x7
 2076 009b 28050000 		.4byte	.LASF13
 2077 009f 04       		.uleb128 0x4
 2078 00a0 04       		.byte	0x4
 2079 00a1 05       		.byte	0x5
 2080 00a2 696E7400 		.ascii	"int\000"
 2081 00a6 02       		.uleb128 0x2
 2082 00a7 04       		.byte	0x4
 2083 00a8 07       		.byte	0x7
 2084 00a9 2C010000 		.4byte	.LASF14
 2085 00ad 03       		.uleb128 0x3
 2086 00ae EC080000 		.4byte	.LASF15
 2087 00b2 04       		.byte	0x4
 2088 00b3 18       		.byte	0x18
 2089 00b4 2C000000 		.4byte	0x2c
 2090 00b8 03       		.uleb128 0x3
 2091 00b9 06050000 		.4byte	.LASF16
 2092 00bd 04       		.byte	0x4
 2093 00be 20       		.byte	0x20
 2094 00bf 3E000000 		.4byte	0x3e
 2095 00c3 03       		.uleb128 0x3
 2096 00c4 0F0C0000 		.4byte	.LASF17
 2097 00c8 04       		.byte	0x4
 2098 00c9 24       		.byte	0x24
 2099 00ca 50000000 		.4byte	0x50
 2100 00ce 03       		.uleb128 0x3
 2101 00cf 2C100000 		.4byte	.LASF18
 2102 00d3 04       		.byte	0x4
 2103 00d4 2C       		.byte	0x2c
 2104 00d5 62000000 		.4byte	0x62
 2105 00d9 03       		.uleb128 0x3
 2106 00da AE040000 		.4byte	.LASF19
 2107 00de 04       		.byte	0x4
 2108 00df 30       		.byte	0x30
 2109 00e0 74000000 		.4byte	0x74
 2110 00e4 03       		.uleb128 0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 98


 2111 00e5 7A060000 		.4byte	.LASF20
 2112 00e9 04       		.byte	0x4
 2113 00ea 38       		.byte	0x38
 2114 00eb 86000000 		.4byte	0x86
 2115 00ef 02       		.uleb128 0x2
 2116 00f0 08       		.byte	0x8
 2117 00f1 04       		.byte	0x4
 2118 00f2 030C0000 		.4byte	.LASF21
 2119 00f6 02       		.uleb128 0x2
 2120 00f7 04       		.byte	0x4
 2121 00f8 07       		.byte	0x7
 2122 00f9 BC0C0000 		.4byte	.LASF22
 2123 00fd 05       		.uleb128 0x5
 2124 00fe D9000000 		.4byte	0xd9
 2125 0102 06       		.uleb128 0x6
 2126 0103 FD000000 		.4byte	0xfd
 2127 0107 07       		.uleb128 0x7
 2128 0108 02010000 		.4byte	0x102
 2129 010c 17010000 		.4byte	0x117
 2130 0110 08       		.uleb128 0x8
 2131 0111 F6000000 		.4byte	0xf6
 2132 0115 01       		.byte	0x1
 2133 0116 00       		.byte	0
 2134 0117 07       		.uleb128 0x7
 2135 0118 FD000000 		.4byte	0xfd
 2136 011c 27010000 		.4byte	0x127
 2137 0120 08       		.uleb128 0x8
 2138 0121 F6000000 		.4byte	0xf6
 2139 0125 0F       		.byte	0xf
 2140 0126 00       		.byte	0
 2141 0127 07       		.uleb128 0x7
 2142 0128 02010000 		.4byte	0x102
 2143 012c 37010000 		.4byte	0x137
 2144 0130 08       		.uleb128 0x8
 2145 0131 F6000000 		.4byte	0xf6
 2146 0135 0F       		.byte	0xf
 2147 0136 00       		.byte	0
 2148 0137 07       		.uleb128 0x7
 2149 0138 02010000 		.4byte	0x102
 2150 013c 47010000 		.4byte	0x147
 2151 0140 08       		.uleb128 0x8
 2152 0141 F6000000 		.4byte	0xf6
 2153 0145 02       		.byte	0x2
 2154 0146 00       		.byte	0
 2155 0147 07       		.uleb128 0x7
 2156 0148 02010000 		.4byte	0x102
 2157 014c 57010000 		.4byte	0x157
 2158 0150 08       		.uleb128 0x8
 2159 0151 F6000000 		.4byte	0xf6
 2160 0155 0E       		.byte	0xe
 2161 0156 00       		.byte	0
 2162 0157 09       		.uleb128 0x9
 2163 0158 080F     		.2byte	0xf08
 2164 015a 05       		.byte	0x5
 2165 015b 21       		.byte	0x21
 2166 015c DF030000 		.4byte	0x3df
 2167 0160 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 99


 2168 0161 3B140000 		.4byte	.LASF23
 2169 0165 05       		.byte	0x5
 2170 0166 22       		.byte	0x22
 2171 0167 FD000000 		.4byte	0xfd
 2172 016b 00       		.byte	0
 2173 016c 0A       		.uleb128 0xa
 2174 016d FE0A0000 		.4byte	.LASF24
 2175 0171 05       		.byte	0x5
 2176 0172 23       		.byte	0x23
 2177 0173 FD000000 		.4byte	0xfd
 2178 0177 04       		.byte	0x4
 2179 0178 0A       		.uleb128 0xa
 2180 0179 2B000000 		.4byte	.LASF25
 2181 017d 05       		.byte	0x5
 2182 017e 24       		.byte	0x24
 2183 017f E4030000 		.4byte	0x3e4
 2184 0183 08       		.byte	0x8
 2185 0184 0A       		.uleb128 0xa
 2186 0185 51020000 		.4byte	.LASF26
 2187 0189 05       		.byte	0x5
 2188 018a 25       		.byte	0x25
 2189 018b FD000000 		.4byte	0xfd
 2190 018f 10       		.byte	0x10
 2191 0190 0A       		.uleb128 0xa
 2192 0191 98050000 		.4byte	.LASF27
 2193 0195 05       		.byte	0x5
 2194 0196 26       		.byte	0x26
 2195 0197 FD000000 		.4byte	0xfd
 2196 019b 14       		.byte	0x14
 2197 019c 0A       		.uleb128 0xa
 2198 019d 780E0000 		.4byte	.LASF28
 2199 01a1 05       		.byte	0x5
 2200 01a2 27       		.byte	0x27
 2201 01a3 FD000000 		.4byte	0xfd
 2202 01a7 18       		.byte	0x18
 2203 01a8 0A       		.uleb128 0xa
 2204 01a9 BE060000 		.4byte	.LASF29
 2205 01ad 05       		.byte	0x5
 2206 01ae 28       		.byte	0x28
 2207 01af FD000000 		.4byte	0xfd
 2208 01b3 1C       		.byte	0x1c
 2209 01b4 0A       		.uleb128 0xa
 2210 01b5 BF000000 		.4byte	.LASF30
 2211 01b9 05       		.byte	0x5
 2212 01ba 29       		.byte	0x29
 2213 01bb FD000000 		.4byte	0xfd
 2214 01bf 20       		.byte	0x20
 2215 01c0 0A       		.uleb128 0xa
 2216 01c1 930B0000 		.4byte	.LASF31
 2217 01c5 05       		.byte	0x5
 2218 01c6 2A       		.byte	0x2a
 2219 01c7 FD000000 		.4byte	0xfd
 2220 01cb 24       		.byte	0x24
 2221 01cc 0A       		.uleb128 0xa
 2222 01cd 30130000 		.4byte	.LASF32
 2223 01d1 05       		.byte	0x5
 2224 01d2 2B       		.byte	0x2b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 100


 2225 01d3 FE030000 		.4byte	0x3fe
 2226 01d7 28       		.byte	0x28
 2227 01d8 0A       		.uleb128 0xa
 2228 01d9 91100000 		.4byte	.LASF33
 2229 01dd 05       		.byte	0x5
 2230 01de 2C       		.byte	0x2c
 2231 01df 03040000 		.4byte	0x403
 2232 01e3 80       		.byte	0x80
 2233 01e4 0A       		.uleb128 0xa
 2234 01e5 0F0D0000 		.4byte	.LASF34
 2235 01e9 05       		.byte	0x5
 2236 01ea 2D       		.byte	0x2d
 2237 01eb 0D040000 		.4byte	0x40d
 2238 01ef C0       		.byte	0xc0
 2239 01f0 0B       		.uleb128 0xb
 2240 01f1 C70E0000 		.4byte	.LASF35
 2241 01f5 05       		.byte	0x5
 2242 01f6 2E       		.byte	0x2e
 2243 01f7 17040000 		.4byte	0x417
 2244 01fb 0001     		.2byte	0x100
 2245 01fd 0B       		.uleb128 0xb
 2246 01fe 190D0000 		.4byte	.LASF36
 2247 0202 05       		.byte	0x5
 2248 0203 2F       		.byte	0x2f
 2249 0204 21040000 		.4byte	0x421
 2250 0208 4001     		.2byte	0x140
 2251 020a 0B       		.uleb128 0xb
 2252 020b AD0A0000 		.4byte	.LASF37
 2253 020f 05       		.byte	0x5
 2254 0210 30       		.byte	0x30
 2255 0211 2B040000 		.4byte	0x42b
 2256 0215 8001     		.2byte	0x180
 2257 0217 0B       		.uleb128 0xb
 2258 0218 230D0000 		.4byte	.LASF38
 2259 021c 05       		.byte	0x5
 2260 021d 31       		.byte	0x31
 2261 021e 35040000 		.4byte	0x435
 2262 0222 C001     		.2byte	0x1c0
 2263 0224 0B       		.uleb128 0xb
 2264 0225 46000000 		.4byte	.LASF39
 2265 0229 05       		.byte	0x5
 2266 022a 32       		.byte	0x32
 2267 022b 02010000 		.4byte	0x102
 2268 022f 0002     		.2byte	0x200
 2269 0231 0B       		.uleb128 0xb
 2270 0232 40100000 		.4byte	.LASF40
 2271 0236 05       		.byte	0x5
 2272 0237 33       		.byte	0x33
 2273 0238 02010000 		.4byte	0x102
 2274 023c 0402     		.2byte	0x204
 2275 023e 0B       		.uleb128 0xb
 2276 023f A7010000 		.4byte	.LASF41
 2277 0243 05       		.byte	0x5
 2278 0244 34       		.byte	0x34
 2279 0245 02010000 		.4byte	0x102
 2280 0249 0802     		.2byte	0x208
 2281 024b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 101


 2282 024c 96080000 		.4byte	.LASF42
 2283 0250 05       		.byte	0x5
 2284 0251 35       		.byte	0x35
 2285 0252 02010000 		.4byte	0x102
 2286 0256 0C02     		.2byte	0x20c
 2287 0258 0B       		.uleb128 0xb
 2288 0259 CB040000 		.4byte	.LASF43
 2289 025d 05       		.byte	0x5
 2290 025e 36       		.byte	0x36
 2291 025f FD000000 		.4byte	0xfd
 2292 0263 1002     		.2byte	0x210
 2293 0265 0B       		.uleb128 0xb
 2294 0266 A6020000 		.4byte	.LASF44
 2295 026a 05       		.byte	0x5
 2296 026b 37       		.byte	0x37
 2297 026c FD000000 		.4byte	0xfd
 2298 0270 1402     		.2byte	0x214
 2299 0272 0B       		.uleb128 0xb
 2300 0273 F40A0000 		.4byte	.LASF45
 2301 0277 05       		.byte	0x5
 2302 0278 38       		.byte	0x38
 2303 0279 FD000000 		.4byte	0xfd
 2304 027d 1802     		.2byte	0x218
 2305 027f 0B       		.uleb128 0xb
 2306 0280 B10F0000 		.4byte	.LASF46
 2307 0284 05       		.byte	0x5
 2308 0285 39       		.byte	0x39
 2309 0286 02010000 		.4byte	0x102
 2310 028a 1C02     		.2byte	0x21c
 2311 028c 0B       		.uleb128 0xb
 2312 028d 43020000 		.4byte	.LASF47
 2313 0291 05       		.byte	0x5
 2314 0292 3A       		.byte	0x3a
 2315 0293 FD000000 		.4byte	0xfd
 2316 0297 2002     		.2byte	0x220
 2317 0299 0B       		.uleb128 0xb
 2318 029a F4070000 		.4byte	.LASF48
 2319 029e 05       		.byte	0x5
 2320 029f 3B       		.byte	0x3b
 2321 02a0 FD000000 		.4byte	0xfd
 2322 02a4 2402     		.2byte	0x224
 2323 02a6 0B       		.uleb128 0xb
 2324 02a7 4F110000 		.4byte	.LASF49
 2325 02ab 05       		.byte	0x5
 2326 02ac 3C       		.byte	0x3c
 2327 02ad FD000000 		.4byte	0xfd
 2328 02b1 2802     		.2byte	0x228
 2329 02b3 0B       		.uleb128 0xb
 2330 02b4 CD070000 		.4byte	.LASF50
 2331 02b8 05       		.byte	0x5
 2332 02b9 3D       		.byte	0x3d
 2333 02ba 02010000 		.4byte	0x102
 2334 02be 2C02     		.2byte	0x22c
 2335 02c0 0B       		.uleb128 0xb
 2336 02c1 DD0A0000 		.4byte	.LASF51
 2337 02c5 05       		.byte	0x5
 2338 02c6 3E       		.byte	0x3e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 102


 2339 02c7 FD000000 		.4byte	0xfd
 2340 02cb 3002     		.2byte	0x230
 2341 02cd 0B       		.uleb128 0xb
 2342 02ce 89090000 		.4byte	.LASF52
 2343 02d2 05       		.byte	0x5
 2344 02d3 3F       		.byte	0x3f
 2345 02d4 FD000000 		.4byte	0xfd
 2346 02d8 3402     		.2byte	0x234
 2347 02da 0B       		.uleb128 0xb
 2348 02db 94060000 		.4byte	.LASF53
 2349 02df 05       		.byte	0x5
 2350 02e0 40       		.byte	0x40
 2351 02e1 FD000000 		.4byte	0xfd
 2352 02e5 3802     		.2byte	0x238
 2353 02e7 0B       		.uleb128 0xb
 2354 02e8 34000000 		.4byte	.LASF54
 2355 02ec 05       		.byte	0x5
 2356 02ed 41       		.byte	0x41
 2357 02ee 02010000 		.4byte	0x102
 2358 02f2 3C02     		.2byte	0x23c
 2359 02f4 0B       		.uleb128 0xb
 2360 02f5 39010000 		.4byte	.LASF55
 2361 02f9 05       		.byte	0x5
 2362 02fa 42       		.byte	0x42
 2363 02fb 02010000 		.4byte	0x102
 2364 02ff 4002     		.2byte	0x240
 2365 0301 0B       		.uleb128 0xb
 2366 0302 2D0D0000 		.4byte	.LASF56
 2367 0306 05       		.byte	0x5
 2368 0307 43       		.byte	0x43
 2369 0308 3F040000 		.4byte	0x43f
 2370 030c 4402     		.2byte	0x244
 2371 030e 0B       		.uleb128 0xb
 2372 030f AB080000 		.4byte	.LASF57
 2373 0313 05       		.byte	0x5
 2374 0314 44       		.byte	0x44
 2375 0315 FD000000 		.4byte	0xfd
 2376 0319 8002     		.2byte	0x280
 2377 031b 0B       		.uleb128 0xb
 2378 031c 370D0000 		.4byte	.LASF58
 2379 0320 05       		.byte	0x5
 2380 0321 45       		.byte	0x45
 2381 0322 49040000 		.4byte	0x449
 2382 0326 8402     		.2byte	0x284
 2383 0328 0B       		.uleb128 0xb
 2384 0329 76020000 		.4byte	.LASF59
 2385 032d 05       		.byte	0x5
 2386 032e 46       		.byte	0x46
 2387 032f 02010000 		.4byte	0x102
 2388 0333 9002     		.2byte	0x290
 2389 0335 0B       		.uleb128 0xb
 2390 0336 410D0000 		.4byte	.LASF60
 2391 033a 05       		.byte	0x5
 2392 033b 47       		.byte	0x47
 2393 033c 53040000 		.4byte	0x453
 2394 0340 9402     		.2byte	0x294
 2395 0342 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 103


 2396 0343 49130000 		.4byte	.LASF61
 2397 0347 05       		.byte	0x5
 2398 0348 48       		.byte	0x48
 2399 0349 02010000 		.4byte	0x102
 2400 034d A002     		.2byte	0x2a0
 2401 034f 0B       		.uleb128 0xb
 2402 0350 D2080000 		.4byte	.LASF62
 2403 0354 05       		.byte	0x5
 2404 0355 49       		.byte	0x49
 2405 0356 02010000 		.4byte	0x102
 2406 035a A402     		.2byte	0x2a4
 2407 035c 0B       		.uleb128 0xb
 2408 035d 4B0D0000 		.4byte	.LASF63
 2409 0361 05       		.byte	0x5
 2410 0362 4A       		.byte	0x4a
 2411 0363 5D040000 		.4byte	0x45d
 2412 0367 A802     		.2byte	0x2a8
 2413 0369 0B       		.uleb128 0xb
 2414 036a 34100000 		.4byte	.LASF64
 2415 036e 05       		.byte	0x5
 2416 036f 4B       		.byte	0x4b
 2417 0370 FD000000 		.4byte	0xfd
 2418 0374 0003     		.2byte	0x300
 2419 0376 0B       		.uleb128 0xb
 2420 0377 1F0B0000 		.4byte	.LASF65
 2421 037b 05       		.byte	0x5
 2422 037c 4C       		.byte	0x4c
 2423 037d FD000000 		.4byte	0xfd
 2424 0381 0403     		.2byte	0x304
 2425 0383 0B       		.uleb128 0xb
 2426 0384 550D0000 		.4byte	.LASF66
 2427 0388 05       		.byte	0x5
 2428 0389 4D       		.byte	0x4d
 2429 038a 77040000 		.4byte	0x477
 2430 038e 0803     		.2byte	0x308
 2431 0390 0B       		.uleb128 0xb
 2432 0391 DD060000 		.4byte	.LASF67
 2433 0395 05       		.byte	0x5
 2434 0396 4E       		.byte	0x4e
 2435 0397 FD000000 		.4byte	0xfd
 2436 039b 4003     		.2byte	0x340
 2437 039d 0B       		.uleb128 0xb
 2438 039e 7B0D0000 		.4byte	.LASF68
 2439 03a2 05       		.byte	0x5
 2440 03a3 4F       		.byte	0x4f
 2441 03a4 FD000000 		.4byte	0xfd
 2442 03a8 4403     		.2byte	0x344
 2443 03aa 0B       		.uleb128 0xb
 2444 03ab DF120000 		.4byte	.LASF69
 2445 03af 05       		.byte	0x5
 2446 03b0 50       		.byte	0x50
 2447 03b1 02010000 		.4byte	0x102
 2448 03b5 4803     		.2byte	0x348
 2449 03b7 0B       		.uleb128 0xb
 2450 03b8 6A110000 		.4byte	.LASF70
 2451 03bc 05       		.byte	0x5
 2452 03bd 51       		.byte	0x51
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 104


 2453 03be 92040000 		.4byte	0x492
 2454 03c2 4C03     		.2byte	0x34c
 2455 03c4 0B       		.uleb128 0xb
 2456 03c5 DE100000 		.4byte	.LASF71
 2457 03c9 05       		.byte	0x5
 2458 03ca 52       		.byte	0x52
 2459 03cb FD000000 		.4byte	0xfd
 2460 03cf 000F     		.2byte	0xf00
 2461 03d1 0B       		.uleb128 0xb
 2462 03d2 E8100000 		.4byte	.LASF72
 2463 03d6 05       		.byte	0x5
 2464 03d7 53       		.byte	0x53
 2465 03d8 FD000000 		.4byte	0xfd
 2466 03dc 040F     		.2byte	0xf04
 2467 03de 00       		.byte	0
 2468 03df 05       		.uleb128 0x5
 2469 03e0 07010000 		.4byte	0x107
 2470 03e4 06       		.uleb128 0x6
 2471 03e5 DF030000 		.4byte	0x3df
 2472 03e9 07       		.uleb128 0x7
 2473 03ea 02010000 		.4byte	0x102
 2474 03ee F9030000 		.4byte	0x3f9
 2475 03f2 08       		.uleb128 0x8
 2476 03f3 F6000000 		.4byte	0xf6
 2477 03f7 15       		.byte	0x15
 2478 03f8 00       		.byte	0
 2479 03f9 05       		.uleb128 0x5
 2480 03fa E9030000 		.4byte	0x3e9
 2481 03fe 06       		.uleb128 0x6
 2482 03ff F9030000 		.4byte	0x3f9
 2483 0403 05       		.uleb128 0x5
 2484 0404 17010000 		.4byte	0x117
 2485 0408 05       		.uleb128 0x5
 2486 0409 27010000 		.4byte	0x127
 2487 040d 06       		.uleb128 0x6
 2488 040e 08040000 		.4byte	0x408
 2489 0412 05       		.uleb128 0x5
 2490 0413 27010000 		.4byte	0x127
 2491 0417 06       		.uleb128 0x6
 2492 0418 12040000 		.4byte	0x412
 2493 041c 05       		.uleb128 0x5
 2494 041d 27010000 		.4byte	0x127
 2495 0421 06       		.uleb128 0x6
 2496 0422 1C040000 		.4byte	0x41c
 2497 0426 05       		.uleb128 0x5
 2498 0427 27010000 		.4byte	0x127
 2499 042b 06       		.uleb128 0x6
 2500 042c 26040000 		.4byte	0x426
 2501 0430 05       		.uleb128 0x5
 2502 0431 27010000 		.4byte	0x127
 2503 0435 06       		.uleb128 0x6
 2504 0436 30040000 		.4byte	0x430
 2505 043a 05       		.uleb128 0x5
 2506 043b 47010000 		.4byte	0x147
 2507 043f 06       		.uleb128 0x6
 2508 0440 3A040000 		.4byte	0x43a
 2509 0444 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 105


 2510 0445 37010000 		.4byte	0x137
 2511 0449 06       		.uleb128 0x6
 2512 044a 44040000 		.4byte	0x444
 2513 044e 05       		.uleb128 0x5
 2514 044f 37010000 		.4byte	0x137
 2515 0453 06       		.uleb128 0x6
 2516 0454 4E040000 		.4byte	0x44e
 2517 0458 05       		.uleb128 0x5
 2518 0459 E9030000 		.4byte	0x3e9
 2519 045d 06       		.uleb128 0x6
 2520 045e 58040000 		.4byte	0x458
 2521 0462 07       		.uleb128 0x7
 2522 0463 02010000 		.4byte	0x102
 2523 0467 72040000 		.4byte	0x472
 2524 046b 08       		.uleb128 0x8
 2525 046c F6000000 		.4byte	0xf6
 2526 0470 0D       		.byte	0xd
 2527 0471 00       		.byte	0
 2528 0472 05       		.uleb128 0x5
 2529 0473 62040000 		.4byte	0x462
 2530 0477 06       		.uleb128 0x6
 2531 0478 72040000 		.4byte	0x472
 2532 047c 07       		.uleb128 0x7
 2533 047d 02010000 		.4byte	0x102
 2534 0481 8D040000 		.4byte	0x48d
 2535 0485 0C       		.uleb128 0xc
 2536 0486 F6000000 		.4byte	0xf6
 2537 048a EC02     		.2byte	0x2ec
 2538 048c 00       		.byte	0
 2539 048d 05       		.uleb128 0x5
 2540 048e 7C040000 		.4byte	0x47c
 2541 0492 06       		.uleb128 0x6
 2542 0493 8D040000 		.4byte	0x48d
 2543 0497 03       		.uleb128 0x3
 2544 0498 8D070000 		.4byte	.LASF73
 2545 049c 05       		.byte	0x5
 2546 049d 54       		.byte	0x54
 2547 049e 57010000 		.4byte	0x157
 2548 04a2 0D       		.uleb128 0xd
 2549 04a3 03040000 		.4byte	.LASF74
 2550 04a7 06       		.byte	0x6
 2551 04a8 5206     		.2byte	0x652
 2552 04aa 97040000 		.4byte	0x497
 2553 04ae 0E       		.uleb128 0xe
 2554 04af B8       		.byte	0xb8
 2555 04b0 07       		.byte	0x7
 2556 04b1 34       		.byte	0x34
 2557 04b2 BF080000 		.4byte	0x8bf
 2558 04b6 0A       		.uleb128 0xa
 2559 04b7 CC010000 		.4byte	.LASF75
 2560 04bb 07       		.byte	0x7
 2561 04bc 37       		.byte	0x37
 2562 04bd D9000000 		.4byte	0xd9
 2563 04c1 00       		.byte	0
 2564 04c2 0A       		.uleb128 0xa
 2565 04c3 FB040000 		.4byte	.LASF76
 2566 04c7 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 106


 2567 04c8 38       		.byte	0x38
 2568 04c9 D9000000 		.4byte	0xd9
 2569 04cd 04       		.byte	0x4
 2570 04ce 0A       		.uleb128 0xa
 2571 04cf DC000000 		.4byte	.LASF77
 2572 04d3 07       		.byte	0x7
 2573 04d4 39       		.byte	0x39
 2574 04d5 D9000000 		.4byte	0xd9
 2575 04d9 08       		.byte	0x8
 2576 04da 0A       		.uleb128 0xa
 2577 04db B7000000 		.4byte	.LASF78
 2578 04df 07       		.byte	0x7
 2579 04e0 3A       		.byte	0x3a
 2580 04e1 D9000000 		.4byte	0xd9
 2581 04e5 0C       		.byte	0xc
 2582 04e6 0A       		.uleb128 0xa
 2583 04e7 180C0000 		.4byte	.LASF79
 2584 04eb 07       		.byte	0x7
 2585 04ec 3B       		.byte	0x3b
 2586 04ed D9000000 		.4byte	0xd9
 2587 04f1 10       		.byte	0x10
 2588 04f2 0A       		.uleb128 0xa
 2589 04f3 8F0A0000 		.4byte	.LASF80
 2590 04f7 07       		.byte	0x7
 2591 04f8 3C       		.byte	0x3c
 2592 04f9 D9000000 		.4byte	0xd9
 2593 04fd 14       		.byte	0x14
 2594 04fe 0A       		.uleb128 0xa
 2595 04ff 05070000 		.4byte	.LASF81
 2596 0503 07       		.byte	0x7
 2597 0504 3D       		.byte	0x3d
 2598 0505 D9000000 		.4byte	0xd9
 2599 0509 18       		.byte	0x18
 2600 050a 0A       		.uleb128 0xa
 2601 050b 27130000 		.4byte	.LASF82
 2602 050f 07       		.byte	0x7
 2603 0510 3E       		.byte	0x3e
 2604 0511 D9000000 		.4byte	0xd9
 2605 0515 1C       		.byte	0x1c
 2606 0516 0A       		.uleb128 0xa
 2607 0517 CE090000 		.4byte	.LASF83
 2608 051b 07       		.byte	0x7
 2609 051c 3F       		.byte	0x3f
 2610 051d D9000000 		.4byte	0xd9
 2611 0521 20       		.byte	0x20
 2612 0522 0A       		.uleb128 0xa
 2613 0523 E5090000 		.4byte	.LASF84
 2614 0527 07       		.byte	0x7
 2615 0528 40       		.byte	0x40
 2616 0529 D9000000 		.4byte	0xd9
 2617 052d 24       		.byte	0x24
 2618 052e 0A       		.uleb128 0xa
 2619 052f B10D0000 		.4byte	.LASF85
 2620 0533 07       		.byte	0x7
 2621 0534 43       		.byte	0x43
 2622 0535 AD000000 		.4byte	0xad
 2623 0539 28       		.byte	0x28
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 107


 2624 053a 0A       		.uleb128 0xa
 2625 053b D6040000 		.4byte	.LASF86
 2626 053f 07       		.byte	0x7
 2627 0540 44       		.byte	0x44
 2628 0541 AD000000 		.4byte	0xad
 2629 0545 29       		.byte	0x29
 2630 0546 0A       		.uleb128 0xa
 2631 0547 4E0C0000 		.4byte	.LASF87
 2632 054b 07       		.byte	0x7
 2633 054c 45       		.byte	0x45
 2634 054d AD000000 		.4byte	0xad
 2635 0551 2A       		.byte	0x2a
 2636 0552 0A       		.uleb128 0xa
 2637 0553 DF0D0000 		.4byte	.LASF88
 2638 0557 07       		.byte	0x7
 2639 0558 46       		.byte	0x46
 2640 0559 AD000000 		.4byte	0xad
 2641 055d 2B       		.byte	0x2b
 2642 055e 0A       		.uleb128 0xa
 2643 055f D30D0000 		.4byte	.LASF89
 2644 0563 07       		.byte	0x7
 2645 0564 47       		.byte	0x47
 2646 0565 AD000000 		.4byte	0xad
 2647 0569 2C       		.byte	0x2c
 2648 056a 0A       		.uleb128 0xa
 2649 056b EE0F0000 		.4byte	.LASF90
 2650 056f 07       		.byte	0x7
 2651 0570 48       		.byte	0x48
 2652 0571 AD000000 		.4byte	0xad
 2653 0575 2D       		.byte	0x2d
 2654 0576 0A       		.uleb128 0xa
 2655 0577 00140000 		.4byte	.LASF91
 2656 057b 07       		.byte	0x7
 2657 057c 49       		.byte	0x49
 2658 057d AD000000 		.4byte	0xad
 2659 0581 2E       		.byte	0x2e
 2660 0582 0A       		.uleb128 0xa
 2661 0583 F1120000 		.4byte	.LASF92
 2662 0587 07       		.byte	0x7
 2663 0588 4A       		.byte	0x4a
 2664 0589 AD000000 		.4byte	0xad
 2665 058d 2F       		.byte	0x2f
 2666 058e 0A       		.uleb128 0xa
 2667 058f D6030000 		.4byte	.LASF93
 2668 0593 07       		.byte	0x7
 2669 0594 4B       		.byte	0x4b
 2670 0595 AD000000 		.4byte	0xad
 2671 0599 30       		.byte	0x30
 2672 059a 0A       		.uleb128 0xa
 2673 059b 140B0000 		.4byte	.LASF94
 2674 059f 07       		.byte	0x7
 2675 05a0 4E       		.byte	0x4e
 2676 05a1 AD000000 		.4byte	0xad
 2677 05a5 31       		.byte	0x31
 2678 05a6 0A       		.uleb128 0xa
 2679 05a7 88120000 		.4byte	.LASF95
 2680 05ab 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 108


 2681 05ac 4F       		.byte	0x4f
 2682 05ad AD000000 		.4byte	0xad
 2683 05b1 32       		.byte	0x32
 2684 05b2 0A       		.uleb128 0xa
 2685 05b3 E80A0000 		.4byte	.LASF96
 2686 05b7 07       		.byte	0x7
 2687 05b8 50       		.byte	0x50
 2688 05b9 AD000000 		.4byte	0xad
 2689 05bd 33       		.byte	0x33
 2690 05be 0A       		.uleb128 0xa
 2691 05bf 73010000 		.4byte	.LASF97
 2692 05c3 07       		.byte	0x7
 2693 05c4 51       		.byte	0x51
 2694 05c5 AD000000 		.4byte	0xad
 2695 05c9 34       		.byte	0x34
 2696 05ca 0A       		.uleb128 0xa
 2697 05cb 64120000 		.4byte	.LASF98
 2698 05cf 07       		.byte	0x7
 2699 05d0 52       		.byte	0x52
 2700 05d1 B8000000 		.4byte	0xb8
 2701 05d5 36       		.byte	0x36
 2702 05d6 0A       		.uleb128 0xa
 2703 05d7 FA010000 		.4byte	.LASF99
 2704 05db 07       		.byte	0x7
 2705 05dc 53       		.byte	0x53
 2706 05dd B8000000 		.4byte	0xb8
 2707 05e1 38       		.byte	0x38
 2708 05e2 0A       		.uleb128 0xa
 2709 05e3 24020000 		.4byte	.LASF100
 2710 05e7 07       		.byte	0x7
 2711 05e8 54       		.byte	0x54
 2712 05e9 B8000000 		.4byte	0xb8
 2713 05ed 3A       		.byte	0x3a
 2714 05ee 0A       		.uleb128 0xa
 2715 05ef 3A130000 		.4byte	.LASF101
 2716 05f3 07       		.byte	0x7
 2717 05f4 55       		.byte	0x55
 2718 05f5 AD000000 		.4byte	0xad
 2719 05f9 3C       		.byte	0x3c
 2720 05fa 0A       		.uleb128 0xa
 2721 05fb 4E060000 		.4byte	.LASF102
 2722 05ff 07       		.byte	0x7
 2723 0600 56       		.byte	0x56
 2724 0601 AD000000 		.4byte	0xad
 2725 0605 3D       		.byte	0x3d
 2726 0606 0A       		.uleb128 0xa
 2727 0607 400C0000 		.4byte	.LASF103
 2728 060b 07       		.byte	0x7
 2729 060c 57       		.byte	0x57
 2730 060d AD000000 		.4byte	0xad
 2731 0611 3E       		.byte	0x3e
 2732 0612 0A       		.uleb128 0xa
 2733 0613 A6000000 		.4byte	.LASF104
 2734 0617 07       		.byte	0x7
 2735 0618 58       		.byte	0x58
 2736 0619 AD000000 		.4byte	0xad
 2737 061d 3F       		.byte	0x3f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 109


 2738 061e 0A       		.uleb128 0xa
 2739 061f 44010000 		.4byte	.LASF105
 2740 0623 07       		.byte	0x7
 2741 0624 59       		.byte	0x59
 2742 0625 AD000000 		.4byte	0xad
 2743 0629 40       		.byte	0x40
 2744 062a 0A       		.uleb128 0xa
 2745 062b 310B0000 		.4byte	.LASF106
 2746 062f 07       		.byte	0x7
 2747 0630 5A       		.byte	0x5a
 2748 0631 AD000000 		.4byte	0xad
 2749 0635 41       		.byte	0x41
 2750 0636 0A       		.uleb128 0xa
 2751 0637 36120000 		.4byte	.LASF107
 2752 063b 07       		.byte	0x7
 2753 063c 5B       		.byte	0x5b
 2754 063d AD000000 		.4byte	0xad
 2755 0641 42       		.byte	0x42
 2756 0642 0A       		.uleb128 0xa
 2757 0643 4C070000 		.4byte	.LASF108
 2758 0647 07       		.byte	0x7
 2759 0648 5C       		.byte	0x5c
 2760 0649 AD000000 		.4byte	0xad
 2761 064d 43       		.byte	0x43
 2762 064e 0A       		.uleb128 0xa
 2763 064f 85080000 		.4byte	.LASF109
 2764 0653 07       		.byte	0x7
 2765 0654 5D       		.byte	0x5d
 2766 0655 AD000000 		.4byte	0xad
 2767 0659 44       		.byte	0x44
 2768 065a 0A       		.uleb128 0xa
 2769 065b 02120000 		.4byte	.LASF110
 2770 065f 07       		.byte	0x7
 2771 0660 5E       		.byte	0x5e
 2772 0661 D9000000 		.4byte	0xd9
 2773 0665 48       		.byte	0x48
 2774 0666 0A       		.uleb128 0xa
 2775 0667 AF020000 		.4byte	.LASF111
 2776 066b 07       		.byte	0x7
 2777 066c 5F       		.byte	0x5f
 2778 066d D9000000 		.4byte	0xd9
 2779 0671 4C       		.byte	0x4c
 2780 0672 0A       		.uleb128 0xa
 2781 0673 14120000 		.4byte	.LASF112
 2782 0677 07       		.byte	0x7
 2783 0678 60       		.byte	0x60
 2784 0679 AD000000 		.4byte	0xad
 2785 067d 50       		.byte	0x50
 2786 067e 0A       		.uleb128 0xa
 2787 067f 82060000 		.4byte	.LASF113
 2788 0683 07       		.byte	0x7
 2789 0684 61       		.byte	0x61
 2790 0685 AD000000 		.4byte	0xad
 2791 0689 51       		.byte	0x51
 2792 068a 0A       		.uleb128 0xa
 2793 068b 4B0A0000 		.4byte	.LASF114
 2794 068f 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 110


 2795 0690 62       		.byte	0x62
 2796 0691 AD000000 		.4byte	0xad
 2797 0695 52       		.byte	0x52
 2798 0696 0A       		.uleb128 0xa
 2799 0697 E4040000 		.4byte	.LASF115
 2800 069b 07       		.byte	0x7
 2801 069c 63       		.byte	0x63
 2802 069d AD000000 		.4byte	0xad
 2803 06a1 53       		.byte	0x53
 2804 06a2 0A       		.uleb128 0xa
 2805 06a3 83110000 		.4byte	.LASF116
 2806 06a7 07       		.byte	0x7
 2807 06a8 64       		.byte	0x64
 2808 06a9 AD000000 		.4byte	0xad
 2809 06ad 54       		.byte	0x54
 2810 06ae 0A       		.uleb128 0xa
 2811 06af C9060000 		.4byte	.LASF117
 2812 06b3 07       		.byte	0x7
 2813 06b4 65       		.byte	0x65
 2814 06b5 AD000000 		.4byte	0xad
 2815 06b9 55       		.byte	0x55
 2816 06ba 0A       		.uleb128 0xa
 2817 06bb 00000000 		.4byte	.LASF118
 2818 06bf 07       		.byte	0x7
 2819 06c0 66       		.byte	0x66
 2820 06c1 AD000000 		.4byte	0xad
 2821 06c5 56       		.byte	0x56
 2822 06c6 0A       		.uleb128 0xa
 2823 06c7 580C0000 		.4byte	.LASF119
 2824 06cb 07       		.byte	0x7
 2825 06cc 67       		.byte	0x67
 2826 06cd AD000000 		.4byte	0xad
 2827 06d1 57       		.byte	0x57
 2828 06d2 0A       		.uleb128 0xa
 2829 06d3 3A060000 		.4byte	.LASF120
 2830 06d7 07       		.byte	0x7
 2831 06d8 68       		.byte	0x68
 2832 06d9 AD000000 		.4byte	0xad
 2833 06dd 58       		.byte	0x58
 2834 06de 0A       		.uleb128 0xa
 2835 06df 61130000 		.4byte	.LASF121
 2836 06e3 07       		.byte	0x7
 2837 06e4 69       		.byte	0x69
 2838 06e5 AD000000 		.4byte	0xad
 2839 06e9 59       		.byte	0x59
 2840 06ea 0A       		.uleb128 0xa
 2841 06eb 7D120000 		.4byte	.LASF122
 2842 06ef 07       		.byte	0x7
 2843 06f0 6E       		.byte	0x6e
 2844 06f1 C3000000 		.4byte	0xc3
 2845 06f5 5A       		.byte	0x5a
 2846 06f6 0A       		.uleb128 0xa
 2847 06f7 07010000 		.4byte	.LASF123
 2848 06fb 07       		.byte	0x7
 2849 06fc 6F       		.byte	0x6f
 2850 06fd C3000000 		.4byte	0xc3
 2851 0701 5C       		.byte	0x5c
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 111


 2852 0702 0A       		.uleb128 0xa
 2853 0703 D6090000 		.4byte	.LASF124
 2854 0707 07       		.byte	0x7
 2855 0708 70       		.byte	0x70
 2856 0709 AD000000 		.4byte	0xad
 2857 070d 5E       		.byte	0x5e
 2858 070e 0A       		.uleb128 0xa
 2859 070f 96120000 		.4byte	.LASF125
 2860 0713 07       		.byte	0x7
 2861 0714 71       		.byte	0x71
 2862 0715 AD000000 		.4byte	0xad
 2863 0719 5F       		.byte	0x5f
 2864 071a 0A       		.uleb128 0xa
 2865 071b 72070000 		.4byte	.LASF126
 2866 071f 07       		.byte	0x7
 2867 0720 72       		.byte	0x72
 2868 0721 AD000000 		.4byte	0xad
 2869 0725 60       		.byte	0x60
 2870 0726 0A       		.uleb128 0xa
 2871 0727 DB080000 		.4byte	.LASF127
 2872 072b 07       		.byte	0x7
 2873 072c 73       		.byte	0x73
 2874 072d D9000000 		.4byte	0xd9
 2875 0731 64       		.byte	0x64
 2876 0732 0A       		.uleb128 0xa
 2877 0733 14140000 		.4byte	.LASF128
 2878 0737 07       		.byte	0x7
 2879 0738 76       		.byte	0x76
 2880 0739 C3000000 		.4byte	0xc3
 2881 073d 68       		.byte	0x68
 2882 073e 0A       		.uleb128 0xa
 2883 073f 210C0000 		.4byte	.LASF129
 2884 0743 07       		.byte	0x7
 2885 0744 77       		.byte	0x77
 2886 0745 C3000000 		.4byte	0xc3
 2887 0749 6A       		.byte	0x6a
 2888 074a 0A       		.uleb128 0xa
 2889 074b C70A0000 		.4byte	.LASF130
 2890 074f 07       		.byte	0x7
 2891 0750 78       		.byte	0x78
 2892 0751 C3000000 		.4byte	0xc3
 2893 0755 6C       		.byte	0x6c
 2894 0756 0A       		.uleb128 0xa
 2895 0757 F5020000 		.4byte	.LASF131
 2896 075b 07       		.byte	0x7
 2897 075c 79       		.byte	0x79
 2898 075d C3000000 		.4byte	0xc3
 2899 0761 6E       		.byte	0x6e
 2900 0762 0A       		.uleb128 0xa
 2901 0763 4E090000 		.4byte	.LASF132
 2902 0767 07       		.byte	0x7
 2903 0768 7B       		.byte	0x7b
 2904 0769 AD000000 		.4byte	0xad
 2905 076d 70       		.byte	0x70
 2906 076e 0A       		.uleb128 0xa
 2907 076f 34040000 		.4byte	.LASF133
 2908 0773 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 112


 2909 0774 7C       		.byte	0x7c
 2910 0775 AD000000 		.4byte	0xad
 2911 0779 71       		.byte	0x71
 2912 077a 0A       		.uleb128 0xa
 2913 077b 81020000 		.4byte	.LASF134
 2914 077f 07       		.byte	0x7
 2915 0780 7D       		.byte	0x7d
 2916 0781 AD000000 		.4byte	0xad
 2917 0785 72       		.byte	0x72
 2918 0786 0A       		.uleb128 0xa
 2919 0787 6A050000 		.4byte	.LASF135
 2920 078b 07       		.byte	0x7
 2921 078c 7E       		.byte	0x7e
 2922 078d AD000000 		.4byte	0xad
 2923 0791 73       		.byte	0x73
 2924 0792 0A       		.uleb128 0xa
 2925 0793 FD0C0000 		.4byte	.LASF136
 2926 0797 07       		.byte	0x7
 2927 0798 80       		.byte	0x80
 2928 0799 C3000000 		.4byte	0xc3
 2929 079d 74       		.byte	0x74
 2930 079e 0A       		.uleb128 0xa
 2931 079f B40B0000 		.4byte	.LASF137
 2932 07a3 07       		.byte	0x7
 2933 07a4 81       		.byte	0x81
 2934 07a5 C3000000 		.4byte	0xc3
 2935 07a9 76       		.byte	0x76
 2936 07aa 0A       		.uleb128 0xa
 2937 07ab 70080000 		.4byte	.LASF138
 2938 07af 07       		.byte	0x7
 2939 07b0 82       		.byte	0x82
 2940 07b1 C3000000 		.4byte	0xc3
 2941 07b5 78       		.byte	0x78
 2942 07b6 0A       		.uleb128 0xa
 2943 07b7 180A0000 		.4byte	.LASF139
 2944 07bb 07       		.byte	0x7
 2945 07bc 83       		.byte	0x83
 2946 07bd C3000000 		.4byte	0xc3
 2947 07c1 7A       		.byte	0x7a
 2948 07c2 0A       		.uleb128 0xa
 2949 07c3 850F0000 		.4byte	.LASF140
 2950 07c7 07       		.byte	0x7
 2951 07c8 86       		.byte	0x86
 2952 07c9 AD000000 		.4byte	0xad
 2953 07cd 7C       		.byte	0x7c
 2954 07ce 0A       		.uleb128 0xa
 2955 07cf 25120000 		.4byte	.LASF141
 2956 07d3 07       		.byte	0x7
 2957 07d4 87       		.byte	0x87
 2958 07d5 AD000000 		.4byte	0xad
 2959 07d9 7D       		.byte	0x7d
 2960 07da 0A       		.uleb128 0xa
 2961 07db 0E050000 		.4byte	.LASF142
 2962 07df 07       		.byte	0x7
 2963 07e0 88       		.byte	0x88
 2964 07e1 AD000000 		.4byte	0xad
 2965 07e5 7E       		.byte	0x7e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 113


 2966 07e6 0A       		.uleb128 0xa
 2967 07e7 B7040000 		.4byte	.LASF143
 2968 07eb 07       		.byte	0x7
 2969 07ec 89       		.byte	0x89
 2970 07ed AD000000 		.4byte	0xad
 2971 07f1 7F       		.byte	0x7f
 2972 07f2 0A       		.uleb128 0xa
 2973 07f3 4F050000 		.4byte	.LASF144
 2974 07f7 07       		.byte	0x7
 2975 07f8 8A       		.byte	0x8a
 2976 07f9 AD000000 		.4byte	0xad
 2977 07fd 80       		.byte	0x80
 2978 07fe 0A       		.uleb128 0xa
 2979 07ff DF110000 		.4byte	.LASF145
 2980 0803 07       		.byte	0x7
 2981 0804 8D       		.byte	0x8d
 2982 0805 D9000000 		.4byte	0xd9
 2983 0809 84       		.byte	0x84
 2984 080a 0A       		.uleb128 0xa
 2985 080b 9A0F0000 		.4byte	.LASF146
 2986 080f 07       		.byte	0x7
 2987 0810 8E       		.byte	0x8e
 2988 0811 D9000000 		.4byte	0xd9
 2989 0815 88       		.byte	0x88
 2990 0816 0A       		.uleb128 0xa
 2991 0817 BF120000 		.4byte	.LASF147
 2992 081b 07       		.byte	0x7
 2993 081c 8F       		.byte	0x8f
 2994 081d D9000000 		.4byte	0xd9
 2995 0821 8C       		.byte	0x8c
 2996 0822 0A       		.uleb128 0xa
 2997 0823 E80C0000 		.4byte	.LASF148
 2998 0827 07       		.byte	0x7
 2999 0828 90       		.byte	0x90
 3000 0829 D9000000 		.4byte	0xd9
 3001 082d 90       		.byte	0x90
 3002 082e 0A       		.uleb128 0xa
 3003 082f 1C0F0000 		.4byte	.LASF149
 3004 0833 07       		.byte	0x7
 3005 0834 91       		.byte	0x91
 3006 0835 D9000000 		.4byte	0xd9
 3007 0839 94       		.byte	0x94
 3008 083a 0A       		.uleb128 0xa
 3009 083b 5B040000 		.4byte	.LASF150
 3010 083f 07       		.byte	0x7
 3011 0840 92       		.byte	0x92
 3012 0841 D9000000 		.4byte	0xd9
 3013 0845 98       		.byte	0x98
 3014 0846 0A       		.uleb128 0xa
 3015 0847 BD0F0000 		.4byte	.LASF151
 3016 084b 07       		.byte	0x7
 3017 084c 93       		.byte	0x93
 3018 084d D9000000 		.4byte	0xd9
 3019 0851 9C       		.byte	0x9c
 3020 0852 0A       		.uleb128 0xa
 3021 0853 36070000 		.4byte	.LASF152
 3022 0857 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 114


 3023 0858 94       		.byte	0x94
 3024 0859 D9000000 		.4byte	0xd9
 3025 085d A0       		.byte	0xa0
 3026 085e 0A       		.uleb128 0xa
 3027 085f F2000000 		.4byte	.LASF153
 3028 0863 07       		.byte	0x7
 3029 0864 95       		.byte	0x95
 3030 0865 C3000000 		.4byte	0xc3
 3031 0869 A4       		.byte	0xa4
 3032 086a 0A       		.uleb128 0xa
 3033 086b 3A110000 		.4byte	.LASF154
 3034 086f 07       		.byte	0x7
 3035 0870 96       		.byte	0x96
 3036 0871 C3000000 		.4byte	0xc3
 3037 0875 A6       		.byte	0xa6
 3038 0876 0A       		.uleb128 0xa
 3039 0877 0D100000 		.4byte	.LASF155
 3040 087b 07       		.byte	0x7
 3041 087c 97       		.byte	0x97
 3042 087d C3000000 		.4byte	0xc3
 3043 0881 A8       		.byte	0xa8
 3044 0882 0A       		.uleb128 0xa
 3045 0883 B2090000 		.4byte	.LASF156
 3046 0887 07       		.byte	0x7
 3047 0888 98       		.byte	0x98
 3048 0889 C3000000 		.4byte	0xc3
 3049 088d AA       		.byte	0xaa
 3050 088e 0A       		.uleb128 0xa
 3051 088f B90A0000 		.4byte	.LASF157
 3052 0893 07       		.byte	0x7
 3053 0894 99       		.byte	0x99
 3054 0895 C3000000 		.4byte	0xc3
 3055 0899 AC       		.byte	0xac
 3056 089a 0A       		.uleb128 0xa
 3057 089b 410B0000 		.4byte	.LASF158
 3058 089f 07       		.byte	0x7
 3059 08a0 9A       		.byte	0x9a
 3060 08a1 C3000000 		.4byte	0xc3
 3061 08a5 AE       		.byte	0xae
 3062 08a6 0A       		.uleb128 0xa
 3063 08a7 02030000 		.4byte	.LASF159
 3064 08ab 07       		.byte	0x7
 3065 08ac 9D       		.byte	0x9d
 3066 08ad C3000000 		.4byte	0xc3
 3067 08b1 B0       		.byte	0xb0
 3068 08b2 0A       		.uleb128 0xa
 3069 08b3 13110000 		.4byte	.LASF160
 3070 08b7 07       		.byte	0x7
 3071 08b8 9E       		.byte	0x9e
 3072 08b9 D9000000 		.4byte	0xd9
 3073 08bd B4       		.byte	0xb4
 3074 08be 00       		.byte	0
 3075 08bf 03       		.uleb128 0x3
 3076 08c0 9E040000 		.4byte	.LASF161
 3077 08c4 07       		.byte	0x7
 3078 08c5 9F       		.byte	0x9f
 3079 08c6 AE040000 		.4byte	0x4ae
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 115


 3080 08ca 0D       		.uleb128 0xd
 3081 08cb 8F0E0000 		.4byte	.LASF162
 3082 08cf 08       		.byte	0x8
 3083 08d0 F601     		.2byte	0x1f6
 3084 08d2 D6080000 		.4byte	0x8d6
 3085 08d6 02       		.uleb128 0x2
 3086 08d7 01       		.byte	0x1
 3087 08d8 08       		.byte	0x8
 3088 08d9 B2000000 		.4byte	.LASF163
 3089 08dd 0D       		.uleb128 0xd
 3090 08de D3050000 		.4byte	.LASF164
 3091 08e2 08       		.byte	0x8
 3092 08e3 F701     		.2byte	0x1f7
 3093 08e5 E9080000 		.4byte	0x8e9
 3094 08e9 02       		.uleb128 0x2
 3095 08ea 04       		.byte	0x4
 3096 08eb 04       		.byte	0x4
 3097 08ec D0040000 		.4byte	.LASF165
 3098 08f0 02       		.uleb128 0x2
 3099 08f1 08       		.byte	0x8
 3100 08f2 04       		.byte	0x4
 3101 08f3 A4060000 		.4byte	.LASF166
 3102 08f7 0D       		.uleb128 0xd
 3103 08f8 D60A0000 		.4byte	.LASF167
 3104 08fc 08       		.byte	0x8
 3105 08fd EB03     		.2byte	0x3eb
 3106 08ff C3000000 		.4byte	0xc3
 3107 0903 0F       		.uleb128 0xf
 3108 0904 04       		.byte	0x4
 3109 0905 A6000000 		.4byte	0xa6
 3110 0909 09       		.byte	0x9
 3111 090a 1405     		.2byte	0x514
 3112 090c 44090000 		.4byte	0x944
 3113 0910 10       		.uleb128 0x10
 3114 0911 29060000 		.4byte	.LASF168
 3115 0915 00       		.byte	0
 3116 0916 11       		.uleb128 0x11
 3117 0917 42120000 		.4byte	.LASF169
 3118 091b 01004200 		.4byte	0x420001
 3119 091f 11       		.uleb128 0x11
 3120 0920 99070000 		.4byte	.LASF170
 3121 0924 02004200 		.4byte	0x420002
 3122 0928 11       		.uleb128 0x11
 3123 0929 B6070000 		.4byte	.LASF171
 3124 092d 03004200 		.4byte	0x420003
 3125 0931 11       		.uleb128 0x11
 3126 0932 E2070000 		.4byte	.LASF172
 3127 0936 04004200 		.4byte	0x420004
 3128 093a 11       		.uleb128 0x11
 3129 093b 75110000 		.4byte	.LASF173
 3130 093f FF004200 		.4byte	0x4200ff
 3131 0943 00       		.byte	0
 3132 0944 0D       		.uleb128 0xd
 3133 0945 C7000000 		.4byte	.LASF174
 3134 0949 09       		.byte	0x9
 3135 094a 1C05     		.2byte	0x51c
 3136 094c 03090000 		.4byte	0x903
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 116


 3137 0950 0F       		.uleb128 0xf
 3138 0951 01       		.byte	0x1
 3139 0952 37000000 		.4byte	0x37
 3140 0956 09       		.byte	0x9
 3141 0957 BC05     		.2byte	0x5bc
 3142 0959 76090000 		.4byte	0x976
 3143 095d 10       		.uleb128 0x10
 3144 095e 75140000 		.4byte	.LASF175
 3145 0962 01       		.byte	0x1
 3146 0963 10       		.uleb128 0x10
 3147 0964 8A040000 		.4byte	.LASF176
 3148 0968 02       		.byte	0x2
 3149 0969 10       		.uleb128 0x10
 3150 096a 40140000 		.4byte	.LASF177
 3151 096e 04       		.byte	0x4
 3152 096f 10       		.uleb128 0x10
 3153 0970 5B140000 		.4byte	.LASF178
 3154 0974 08       		.byte	0x8
 3155 0975 00       		.byte	0
 3156 0976 0D       		.uleb128 0xd
 3157 0977 5F0D0000 		.4byte	.LASF179
 3158 097b 09       		.byte	0x9
 3159 097c CB05     		.2byte	0x5cb
 3160 097e 50090000 		.4byte	0x950
 3161 0982 12       		.uleb128 0x12
 3162 0983 08       		.byte	0x8
 3163 0984 09       		.byte	0x9
 3164 0985 E705     		.2byte	0x5e7
 3165 0987 A6090000 		.4byte	0x9a6
 3166 098b 13       		.uleb128 0x13
 3167 098c F6040000 		.4byte	.LASF180
 3168 0990 09       		.byte	0x9
 3169 0991 E905     		.2byte	0x5e9
 3170 0993 A6090000 		.4byte	0x9a6
 3171 0997 00       		.byte	0
 3172 0998 13       		.uleb128 0x13
 3173 0999 7D0A0000 		.4byte	.LASF181
 3174 099d 09       		.byte	0x9
 3175 099e EC05     		.2byte	0x5ec
 3176 09a0 A6090000 		.4byte	0x9a6
 3177 09a4 04       		.byte	0x4
 3178 09a5 00       		.byte	0
 3179 09a6 14       		.uleb128 0x14
 3180 09a7 04       		.byte	0x4
 3181 09a8 0D       		.uleb128 0xd
 3182 09a9 58000000 		.4byte	.LASF182
 3183 09ad 09       		.byte	0x9
 3184 09ae EF05     		.2byte	0x5ef
 3185 09b0 82090000 		.4byte	0x982
 3186 09b4 15       		.uleb128 0x15
 3187 09b5 04       		.byte	0x4
 3188 09b6 A8090000 		.4byte	0x9a8
 3189 09ba 0F       		.uleb128 0xf
 3190 09bb 04       		.byte	0x4
 3191 09bc A6000000 		.4byte	0xa6
 3192 09c0 02       		.byte	0x2
 3193 09c1 FE02     		.2byte	0x2fe
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 117


 3194 09c3 E9090000 		.4byte	0x9e9
 3195 09c7 10       		.uleb128 0x10
 3196 09c8 7A090000 		.4byte	.LASF183
 3197 09cc 00       		.byte	0
 3198 09cd 11       		.uleb128 0x11
 3199 09ce 0E070000 		.4byte	.LASF184
 3200 09d2 01000600 		.4byte	0x60001
 3201 09d6 11       		.uleb128 0x11
 3202 09d7 9E0B0000 		.4byte	.LASF185
 3203 09db 02000600 		.4byte	0x60002
 3204 09df 11       		.uleb128 0x11
 3205 09e0 05020000 		.4byte	.LASF186
 3206 09e4 03000600 		.4byte	0x60003
 3207 09e8 00       		.byte	0
 3208 09e9 0D       		.uleb128 0xd
 3209 09ea 25090000 		.4byte	.LASF187
 3210 09ee 02       		.byte	0x2
 3211 09ef 0303     		.2byte	0x303
 3212 09f1 BA090000 		.4byte	0x9ba
 3213 09f5 0F       		.uleb128 0xf
 3214 09f6 01       		.byte	0x1
 3215 09f7 37000000 		.4byte	0x37
 3216 09fb 02       		.byte	0x2
 3217 09fc 0703     		.2byte	0x307
 3218 09fe 0F0A0000 		.4byte	0xa0f
 3219 0a02 10       		.uleb128 0x10
 3220 0a03 660B0000 		.4byte	.LASF188
 3221 0a07 00       		.byte	0
 3222 0a08 10       		.uleb128 0x10
 3223 0a09 CD130000 		.4byte	.LASF189
 3224 0a0d 01       		.byte	0x1
 3225 0a0e 00       		.byte	0
 3226 0a0f 0D       		.uleb128 0xd
 3227 0a10 D7020000 		.4byte	.LASF190
 3228 0a14 02       		.byte	0x2
 3229 0a15 0A03     		.2byte	0x30a
 3230 0a17 F5090000 		.4byte	0x9f5
 3231 0a1b 0F       		.uleb128 0xf
 3232 0a1c 01       		.byte	0x1
 3233 0a1d 37000000 		.4byte	0x37
 3234 0a21 02       		.byte	0x2
 3235 0a22 0E03     		.2byte	0x30e
 3236 0a24 350A0000 		.4byte	0xa35
 3237 0a28 10       		.uleb128 0x10
 3238 0a29 C50C0000 		.4byte	.LASF191
 3239 0a2d 00       		.byte	0
 3240 0a2e 10       		.uleb128 0x10
 3241 0a2f 5F020000 		.4byte	.LASF192
 3242 0a33 01       		.byte	0x1
 3243 0a34 00       		.byte	0
 3244 0a35 0D       		.uleb128 0xd
 3245 0a36 54100000 		.4byte	.LASF193
 3246 0a3a 02       		.byte	0x2
 3247 0a3b 1103     		.2byte	0x311
 3248 0a3d 1B0A0000 		.4byte	0xa1b
 3249 0a41 0F       		.uleb128 0xf
 3250 0a42 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 118


 3251 0a43 37000000 		.4byte	0x37
 3252 0a47 02       		.byte	0x2
 3253 0a48 1503     		.2byte	0x315
 3254 0a4a 5B0A0000 		.4byte	0xa5b
 3255 0a4e 10       		.uleb128 0x10
 3256 0a4f 27110000 		.4byte	.LASF194
 3257 0a53 00       		.byte	0
 3258 0a54 10       		.uleb128 0x10
 3259 0a55 83130000 		.4byte	.LASF195
 3260 0a59 01       		.byte	0x1
 3261 0a5a 00       		.byte	0
 3262 0a5b 0D       		.uleb128 0xd
 3263 0a5c 84010000 		.4byte	.LASF196
 3264 0a60 02       		.byte	0x2
 3265 0a61 1803     		.2byte	0x318
 3266 0a63 410A0000 		.4byte	0xa41
 3267 0a67 0F       		.uleb128 0xf
 3268 0a68 01       		.byte	0x1
 3269 0a69 37000000 		.4byte	0x37
 3270 0a6d 02       		.byte	0x2
 3271 0a6e 1C03     		.2byte	0x31c
 3272 0a70 810A0000 		.4byte	0xa81
 3273 0a74 10       		.uleb128 0x10
 3274 0a75 C0110000 		.4byte	.LASF197
 3275 0a79 00       		.byte	0
 3276 0a7a 10       		.uleb128 0x10
 3277 0a7b 9E0C0000 		.4byte	.LASF198
 3278 0a7f 01       		.byte	0x1
 3279 0a80 00       		.byte	0
 3280 0a81 0D       		.uleb128 0xd
 3281 0a82 1E080000 		.4byte	.LASF199
 3282 0a86 02       		.byte	0x2
 3283 0a87 1F03     		.2byte	0x31f
 3284 0a89 670A0000 		.4byte	0xa67
 3285 0a8d 0F       		.uleb128 0xf
 3286 0a8e 01       		.byte	0x1
 3287 0a8f 37000000 		.4byte	0x37
 3288 0a93 02       		.byte	0x2
 3289 0a94 2303     		.2byte	0x323
 3290 0a96 A10A0000 		.4byte	0xaa1
 3291 0a9a 10       		.uleb128 0x10
 3292 0a9b 59060000 		.4byte	.LASF200
 3293 0a9f 00       		.byte	0
 3294 0aa0 00       		.byte	0
 3295 0aa1 0D       		.uleb128 0xd
 3296 0aa2 D10E0000 		.4byte	.LASF201
 3297 0aa6 02       		.byte	0x2
 3298 0aa7 2503     		.2byte	0x325
 3299 0aa9 8D0A0000 		.4byte	0xa8d
 3300 0aad 0F       		.uleb128 0xf
 3301 0aae 02       		.byte	0x2
 3302 0aaf 5B000000 		.4byte	0x5b
 3303 0ab3 02       		.byte	0x2
 3304 0ab4 5703     		.2byte	0x357
 3305 0ab6 EB0A0000 		.4byte	0xaeb
 3306 0aba 10       		.uleb128 0x10
 3307 0abb 76100000 		.4byte	.LASF202
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 119


 3308 0abf 00       		.byte	0
 3309 0ac0 16       		.uleb128 0x16
 3310 0ac1 BA010000 		.4byte	.LASF203
 3311 0ac5 0004     		.2byte	0x400
 3312 0ac7 16       		.uleb128 0x16
 3313 0ac8 49040000 		.4byte	.LASF204
 3314 0acc 0006     		.2byte	0x600
 3315 0ace 16       		.uleb128 0x16
 3316 0acf D6010000 		.4byte	.LASF205
 3317 0ad3 0008     		.2byte	0x800
 3318 0ad5 16       		.uleb128 0x16
 3319 0ad6 E8010000 		.4byte	.LASF206
 3320 0ada 000A     		.2byte	0xa00
 3321 0adc 16       		.uleb128 0x16
 3322 0add C70B0000 		.4byte	.LASF207
 3323 0ae1 000C     		.2byte	0xc00
 3324 0ae3 16       		.uleb128 0x16
 3325 0ae4 92000000 		.4byte	.LASF208
 3326 0ae8 000E     		.2byte	0xe00
 3327 0aea 00       		.byte	0
 3328 0aeb 0F       		.uleb128 0xf
 3329 0aec 04       		.byte	0x4
 3330 0aed A6000000 		.4byte	0xa6
 3331 0af1 02       		.byte	0x2
 3332 0af2 E403     		.2byte	0x3e4
 3333 0af4 110B0000 		.4byte	0xb11
 3334 0af8 10       		.uleb128 0x10
 3335 0af9 AB0E0000 		.4byte	.LASF209
 3336 0afd 00       		.byte	0
 3337 0afe 11       		.uleb128 0x11
 3338 0aff 5B0A0000 		.4byte	.LASF210
 3339 0b03 00000200 		.4byte	0x20000
 3340 0b07 11       		.uleb128 0x11
 3341 0b08 F4080000 		.4byte	.LASF211
 3342 0b0c 00000600 		.4byte	0x60000
 3343 0b10 00       		.byte	0
 3344 0b11 0D       		.uleb128 0xd
 3345 0b12 4E0E0000 		.4byte	.LASF212
 3346 0b16 02       		.byte	0x2
 3347 0b17 E803     		.2byte	0x3e8
 3348 0b19 EB0A0000 		.4byte	0xaeb
 3349 0b1d 0F       		.uleb128 0xf
 3350 0b1e 01       		.byte	0x1
 3351 0b1f 37000000 		.4byte	0x37
 3352 0b23 02       		.byte	0x2
 3353 0b24 1304     		.2byte	0x413
 3354 0b26 430B0000 		.4byte	0xb43
 3355 0b2a 10       		.uleb128 0x10
 3356 0b2b E2030000 		.4byte	.LASF213
 3357 0b2f 00       		.byte	0
 3358 0b30 10       		.uleb128 0x10
 3359 0b31 10060000 		.4byte	.LASF214
 3360 0b35 01       		.byte	0x1
 3361 0b36 10       		.uleb128 0x10
 3362 0b37 06080000 		.4byte	.LASF215
 3363 0b3b 02       		.byte	0x2
 3364 0b3c 10       		.uleb128 0x10
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 120


 3365 0b3d 51010000 		.4byte	.LASF216
 3366 0b41 03       		.byte	0x3
 3367 0b42 00       		.byte	0
 3368 0b43 0D       		.uleb128 0xd
 3369 0b44 97130000 		.4byte	.LASF217
 3370 0b48 02       		.byte	0x2
 3371 0b49 1804     		.2byte	0x418
 3372 0b4b 1D0B0000 		.4byte	0xb1d
 3373 0b4f 0F       		.uleb128 0xf
 3374 0b50 01       		.byte	0x1
 3375 0b51 37000000 		.4byte	0x37
 3376 0b55 02       		.byte	0x2
 3377 0b56 9404     		.2byte	0x494
 3378 0b58 750B0000 		.4byte	0xb75
 3379 0b5c 10       		.uleb128 0x10
 3380 0b5d C8100000 		.4byte	.LASF218
 3381 0b61 00       		.byte	0
 3382 0b62 10       		.uleb128 0x10
 3383 0b63 F0060000 		.4byte	.LASF219
 3384 0b67 01       		.byte	0x1
 3385 0b68 10       		.uleb128 0x10
 3386 0b69 F0090000 		.4byte	.LASF220
 3387 0b6d 02       		.byte	0x2
 3388 0b6e 10       		.uleb128 0x10
 3389 0b6f 2D0A0000 		.4byte	.LASF221
 3390 0b73 04       		.byte	0x4
 3391 0b74 00       		.byte	0
 3392 0b75 12       		.uleb128 0x12
 3393 0b76 78       		.byte	0x78
 3394 0b77 02       		.byte	0x2
 3395 0b78 0205     		.2byte	0x502
 3396 0b7a 420C0000 		.4byte	0xc42
 3397 0b7e 13       		.uleb128 0x13
 3398 0b7f F1050000 		.4byte	.LASF222
 3399 0b83 02       		.byte	0x2
 3400 0b84 0405     		.2byte	0x504
 3401 0b86 D9000000 		.4byte	0xd9
 3402 0b8a 00       		.byte	0
 3403 0b8b 13       		.uleb128 0x13
 3404 0b8c AF100000 		.4byte	.LASF223
 3405 0b90 02       		.byte	0x2
 3406 0b91 0505     		.2byte	0x505
 3407 0b93 D9000000 		.4byte	0xd9
 3408 0b97 04       		.byte	0x4
 3409 0b98 13       		.uleb128 0x13
 3410 0b99 330C0000 		.4byte	.LASF224
 3411 0b9d 02       		.byte	0x2
 3412 0b9e 0605     		.2byte	0x506
 3413 0ba0 D9000000 		.4byte	0xd9
 3414 0ba4 08       		.byte	0x8
 3415 0ba5 13       		.uleb128 0x13
 3416 0ba6 D30F0000 		.4byte	.LASF225
 3417 0baa 02       		.byte	0x2
 3418 0bab 0705     		.2byte	0x507
 3419 0bad D9000000 		.4byte	0xd9
 3420 0bb1 0C       		.byte	0xc
 3421 0bb2 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 121


 3422 0bb3 A6050000 		.4byte	.LASF226
 3423 0bb7 02       		.byte	0x2
 3424 0bb8 0805     		.2byte	0x508
 3425 0bba D9000000 		.4byte	0xd9
 3426 0bbe 10       		.byte	0x10
 3427 0bbf 13       		.uleb128 0x13
 3428 0bc0 A8090000 		.4byte	.LASF227
 3429 0bc4 02       		.byte	0x2
 3430 0bc5 0905     		.2byte	0x509
 3431 0bc7 430B0000 		.4byte	0xb43
 3432 0bcb 14       		.byte	0x14
 3433 0bcc 13       		.uleb128 0x13
 3434 0bcd 69080000 		.4byte	.LASF228
 3435 0bd1 02       		.byte	0x2
 3436 0bd2 0A05     		.2byte	0x50a
 3437 0bd4 D9000000 		.4byte	0xd9
 3438 0bd8 18       		.byte	0x18
 3439 0bd9 13       		.uleb128 0x13
 3440 0bda D4120000 		.4byte	.LASF229
 3441 0bde 02       		.byte	0x2
 3442 0bdf 0B05     		.2byte	0x50b
 3443 0be1 420C0000 		.4byte	0xc42
 3444 0be5 1C       		.byte	0x1c
 3445 0be6 13       		.uleb128 0x13
 3446 0be7 0B140000 		.4byte	.LASF230
 3447 0beb 02       		.byte	0x2
 3448 0bec 0C05     		.2byte	0x50c
 3449 0bee D9000000 		.4byte	0xd9
 3450 0bf2 5C       		.byte	0x5c
 3451 0bf3 13       		.uleb128 0x13
 3452 0bf4 CB020000 		.4byte	.LASF231
 3453 0bf8 02       		.byte	0x2
 3454 0bf9 0D05     		.2byte	0x50d
 3455 0bfb D9000000 		.4byte	0xd9
 3456 0bff 60       		.byte	0x60
 3457 0c00 13       		.uleb128 0x13
 3458 0c01 75130000 		.4byte	.LASF232
 3459 0c05 02       		.byte	0x2
 3460 0c06 0E05     		.2byte	0x50e
 3461 0c08 D9000000 		.4byte	0xd9
 3462 0c0c 64       		.byte	0x64
 3463 0c0d 13       		.uleb128 0x13
 3464 0c0e E60B0000 		.4byte	.LASF233
 3465 0c12 02       		.byte	0x2
 3466 0c13 0F05     		.2byte	0x50f
 3467 0c15 D9000000 		.4byte	0xd9
 3468 0c19 68       		.byte	0x68
 3469 0c1a 13       		.uleb128 0x13
 3470 0c1b 98090000 		.4byte	.LASF234
 3471 0c1f 02       		.byte	0x2
 3472 0c20 1005     		.2byte	0x510
 3473 0c22 D9000000 		.4byte	0xd9
 3474 0c26 6C       		.byte	0x6c
 3475 0c27 13       		.uleb128 0x13
 3476 0c28 19130000 		.4byte	.LASF235
 3477 0c2c 02       		.byte	0x2
 3478 0c2d 1105     		.2byte	0x511
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 122


 3479 0c2f 520C0000 		.4byte	0xc52
 3480 0c33 70       		.byte	0x70
 3481 0c34 13       		.uleb128 0x13
 3482 0c35 AA070000 		.4byte	.LASF236
 3483 0c39 02       		.byte	0x2
 3484 0c3a 1205     		.2byte	0x512
 3485 0c3c D9000000 		.4byte	0xd9
 3486 0c40 74       		.byte	0x74
 3487 0c41 00       		.byte	0
 3488 0c42 07       		.uleb128 0x7
 3489 0c43 D9000000 		.4byte	0xd9
 3490 0c47 520C0000 		.4byte	0xc52
 3491 0c4b 08       		.uleb128 0x8
 3492 0c4c F6000000 		.4byte	0xf6
 3493 0c50 0F       		.byte	0xf
 3494 0c51 00       		.byte	0
 3495 0c52 02       		.uleb128 0x2
 3496 0c53 01       		.byte	0x1
 3497 0c54 02       		.byte	0x2
 3498 0c55 B8060000 		.4byte	.LASF237
 3499 0c59 0D       		.uleb128 0xd
 3500 0c5a DD050000 		.4byte	.LASF238
 3501 0c5e 02       		.byte	0x2
 3502 0c5f 1305     		.2byte	0x513
 3503 0c61 750B0000 		.4byte	0xb75
 3504 0c65 12       		.uleb128 0x12
 3505 0c66 08       		.byte	0x8
 3506 0c67 02       		.byte	0x2
 3507 0c68 1705     		.2byte	0x517
 3508 0c6a 890C0000 		.4byte	0xc89
 3509 0c6e 13       		.uleb128 0x13
 3510 0c6f 83070000 		.4byte	.LASF239
 3511 0c73 02       		.byte	0x2
 3512 0c74 1905     		.2byte	0x519
 3513 0c76 D9000000 		.4byte	0xd9
 3514 0c7a 00       		.byte	0
 3515 0c7b 13       		.uleb128 0x13
 3516 0c7c 110F0000 		.4byte	.LASF240
 3517 0c80 02       		.byte	0x2
 3518 0c81 1A05     		.2byte	0x51a
 3519 0c83 D9000000 		.4byte	0xd9
 3520 0c87 04       		.byte	0x4
 3521 0c88 00       		.byte	0
 3522 0c89 0D       		.uleb128 0xd
 3523 0c8a 970D0000 		.4byte	.LASF241
 3524 0c8e 02       		.byte	0x2
 3525 0c8f 1B05     		.2byte	0x51b
 3526 0c91 650C0000 		.4byte	0xc65
 3527 0c95 17       		.uleb128 0x17
 3528 0c96 810C0000 		.4byte	.LASF313
 3529 0c9a 02       		.byte	0x2
 3530 0c9b FD07     		.2byte	0x7fd
 3531 0c9d 520C0000 		.4byte	0xc52
 3532 0ca1 03       		.byte	0x3
 3533 0ca2 BF0C0000 		.4byte	0xcbf
 3534 0ca6 18       		.uleb128 0x18
 3535 0ca7 F6040000 		.4byte	.LASF180
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 123


 3536 0cab 02       		.byte	0x2
 3537 0cac FD07     		.2byte	0x7fd
 3538 0cae BF0C0000 		.4byte	0xcbf
 3539 0cb2 18       		.uleb128 0x18
 3540 0cb3 81000000 		.4byte	.LASF242
 3541 0cb7 02       		.byte	0x2
 3542 0cb8 FD07     		.2byte	0x7fd
 3543 0cba D9000000 		.4byte	0xd9
 3544 0cbe 00       		.byte	0
 3545 0cbf 15       		.uleb128 0x15
 3546 0cc0 04       		.byte	0x4
 3547 0cc1 C50C0000 		.4byte	0xcc5
 3548 0cc5 06       		.uleb128 0x6
 3549 0cc6 A2040000 		.4byte	0x4a2
 3550 0cca 19       		.uleb128 0x19
 3551 0ccb F6110000 		.4byte	.LASF249
 3552 0ccf 01       		.byte	0x1
 3553 0cd0 38       		.byte	0x38
 3554 0cd1 E9090000 		.4byte	0x9e9
 3555 0cd5 00000000 		.4byte	.LFB192
 3556 0cd9 00020000 		.4byte	.LFE192-.LFB192
 3557 0cdd 01       		.uleb128 0x1
 3558 0cde 9C       		.byte	0x9c
 3559 0cdf EE0E0000 		.4byte	0xeee
 3560 0ce3 1A       		.uleb128 0x1a
 3561 0ce4 F6040000 		.4byte	.LASF180
 3562 0ce8 01       		.byte	0x1
 3563 0ce9 38       		.byte	0x38
 3564 0cea EE0E0000 		.4byte	0xeee
 3565 0cee 00000000 		.4byte	.LLST0
 3566 0cf2 1A       		.uleb128 0x1a
 3567 0cf3 7A0C0000 		.4byte	.LASF243
 3568 0cf7 01       		.byte	0x1
 3569 0cf8 38       		.byte	0x38
 3570 0cf9 F40E0000 		.4byte	0xef4
 3571 0cfd 2C000000 		.4byte	.LLST1
 3572 0d01 1B       		.uleb128 0x1b
 3573 0d02 21050000 		.4byte	.LASF244
 3574 0d06 01       		.byte	0x1
 3575 0d07 3D       		.byte	0x3d
 3576 0d08 E9090000 		.4byte	0x9e9
 3577 0d0c 58000000 		.4byte	.LLST2
 3578 0d10 1B       		.uleb128 0x1b
 3579 0d11 81000000 		.4byte	.LASF242
 3580 0d15 01       		.byte	0x1
 3581 0d16 3E       		.byte	0x3e
 3582 0d17 AD000000 		.4byte	0xad
 3583 0d1b 77000000 		.4byte	.LLST3
 3584 0d1f 1B       		.uleb128 0x1b
 3585 0d20 AD0B0000 		.4byte	.LASF245
 3586 0d24 01       		.byte	0x1
 3587 0d25 3F       		.byte	0x3f
 3588 0d26 CE000000 		.4byte	0xce
 3589 0d2a A1000000 		.4byte	.LLST4
 3590 0d2e 1B       		.uleb128 0x1b
 3591 0d2f BA100000 		.4byte	.LASF246
 3592 0d33 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 124


 3593 0d34 40       		.byte	0x40
 3594 0d35 520C0000 		.4byte	0xc52
 3595 0d39 B7000000 		.4byte	.LLST5
 3596 0d3d 1B       		.uleb128 0x1b
 3597 0d3e 1A010000 		.4byte	.LASF247
 3598 0d42 01       		.byte	0x1
 3599 0d43 41       		.byte	0x41
 3600 0d44 520C0000 		.4byte	0xc52
 3601 0d48 D0000000 		.4byte	.LLST6
 3602 0d4c 1B       		.uleb128 0x1b
 3603 0d4d 3F050000 		.4byte	.LASF248
 3604 0d51 01       		.byte	0x1
 3605 0d52 42       		.byte	0x42
 3606 0d53 520C0000 		.4byte	0xc52
 3607 0d57 E7000000 		.4byte	.LLST7
 3608 0d5b 1C       		.uleb128 0x1c
 3609 0d5c 12000000 		.4byte	.LVL3
 3610 0d60 0C1A0000 		.4byte	0x1a0c
 3611 0d64 780D0000 		.4byte	0xd78
 3612 0d68 1D       		.uleb128 0x1d
 3613 0d69 01       		.uleb128 0x1
 3614 0d6a 50       		.byte	0x50
 3615 0d6b 05       		.uleb128 0x5
 3616 0d6c 03       		.byte	0x3
 3617 0d6d 00000000 		.4byte	.LC0
 3618 0d71 1D       		.uleb128 0x1d
 3619 0d72 01       		.uleb128 0x1
 3620 0d73 51       		.byte	0x51
 3621 0d74 02       		.uleb128 0x2
 3622 0d75 08       		.byte	0x8
 3623 0d76 3A       		.byte	0x3a
 3624 0d77 00       		.byte	0
 3625 0d78 1C       		.uleb128 0x1c
 3626 0d79 1C000000 		.4byte	.LVL4
 3627 0d7d 0C1A0000 		.4byte	0x1a0c
 3628 0d81 950D0000 		.4byte	0xd95
 3629 0d85 1D       		.uleb128 0x1d
 3630 0d86 01       		.uleb128 0x1
 3631 0d87 50       		.byte	0x50
 3632 0d88 05       		.uleb128 0x5
 3633 0d89 03       		.byte	0x3
 3634 0d8a 00000000 		.4byte	.LC0
 3635 0d8e 1D       		.uleb128 0x1d
 3636 0d8f 01       		.uleb128 0x1
 3637 0d90 51       		.byte	0x51
 3638 0d91 02       		.uleb128 0x2
 3639 0d92 08       		.byte	0x8
 3640 0d93 3B       		.byte	0x3b
 3641 0d94 00       		.byte	0
 3642 0d95 1C       		.uleb128 0x1c
 3643 0d96 38000000 		.4byte	.LVL5
 3644 0d9a 0C1A0000 		.4byte	0x1a0c
 3645 0d9e B20D0000 		.4byte	0xdb2
 3646 0da2 1D       		.uleb128 0x1d
 3647 0da3 01       		.uleb128 0x1
 3648 0da4 50       		.byte	0x50
 3649 0da5 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 125


 3650 0da6 03       		.byte	0x3
 3651 0da7 00000000 		.4byte	.LC0
 3652 0dab 1D       		.uleb128 0x1d
 3653 0dac 01       		.uleb128 0x1
 3654 0dad 51       		.byte	0x51
 3655 0dae 02       		.uleb128 0x2
 3656 0daf 08       		.byte	0x8
 3657 0db0 4A       		.byte	0x4a
 3658 0db1 00       		.byte	0
 3659 0db2 1C       		.uleb128 0x1c
 3660 0db3 48000000 		.4byte	.LVL6
 3661 0db7 0C1A0000 		.4byte	0x1a0c
 3662 0dbb CF0D0000 		.4byte	0xdcf
 3663 0dbf 1D       		.uleb128 0x1d
 3664 0dc0 01       		.uleb128 0x1
 3665 0dc1 50       		.byte	0x50
 3666 0dc2 05       		.uleb128 0x5
 3667 0dc3 03       		.byte	0x3
 3668 0dc4 00000000 		.4byte	.LC0
 3669 0dc8 1D       		.uleb128 0x1d
 3670 0dc9 01       		.uleb128 0x1
 3671 0dca 51       		.byte	0x51
 3672 0dcb 02       		.uleb128 0x2
 3673 0dcc 08       		.byte	0x8
 3674 0dcd 4B       		.byte	0x4b
 3675 0dce 00       		.byte	0
 3676 0dcf 1C       		.uleb128 0x1c
 3677 0dd0 58000000 		.4byte	.LVL7
 3678 0dd4 0C1A0000 		.4byte	0x1a0c
 3679 0dd8 EC0D0000 		.4byte	0xdec
 3680 0ddc 1D       		.uleb128 0x1d
 3681 0ddd 01       		.uleb128 0x1
 3682 0dde 50       		.byte	0x50
 3683 0ddf 05       		.uleb128 0x5
 3684 0de0 03       		.byte	0x3
 3685 0de1 00000000 		.4byte	.LC0
 3686 0de5 1D       		.uleb128 0x1d
 3687 0de6 01       		.uleb128 0x1
 3688 0de7 51       		.byte	0x51
 3689 0de8 02       		.uleb128 0x2
 3690 0de9 08       		.byte	0x8
 3691 0dea 4C       		.byte	0x4c
 3692 0deb 00       		.byte	0
 3693 0dec 1C       		.uleb128 0x1c
 3694 0ded 68000000 		.4byte	.LVL8
 3695 0df1 0C1A0000 		.4byte	0x1a0c
 3696 0df5 090E0000 		.4byte	0xe09
 3697 0df9 1D       		.uleb128 0x1d
 3698 0dfa 01       		.uleb128 0x1
 3699 0dfb 50       		.byte	0x50
 3700 0dfc 05       		.uleb128 0x5
 3701 0dfd 03       		.byte	0x3
 3702 0dfe 00000000 		.4byte	.LC0
 3703 0e02 1D       		.uleb128 0x1d
 3704 0e03 01       		.uleb128 0x1
 3705 0e04 51       		.byte	0x51
 3706 0e05 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 126


 3707 0e06 08       		.byte	0x8
 3708 0e07 4D       		.byte	0x4d
 3709 0e08 00       		.byte	0
 3710 0e09 1C       		.uleb128 0x1c
 3711 0e0a 76000000 		.4byte	.LVL9
 3712 0e0e 0C1A0000 		.4byte	0x1a0c
 3713 0e12 260E0000 		.4byte	0xe26
 3714 0e16 1D       		.uleb128 0x1d
 3715 0e17 01       		.uleb128 0x1
 3716 0e18 50       		.byte	0x50
 3717 0e19 05       		.uleb128 0x5
 3718 0e1a 03       		.byte	0x3
 3719 0e1b 00000000 		.4byte	.LC0
 3720 0e1f 1D       		.uleb128 0x1d
 3721 0e20 01       		.uleb128 0x1
 3722 0e21 51       		.byte	0x51
 3723 0e22 02       		.uleb128 0x2
 3724 0e23 08       		.byte	0x8
 3725 0e24 4E       		.byte	0x4e
 3726 0e25 00       		.byte	0
 3727 0e26 1C       		.uleb128 0x1c
 3728 0e27 86000000 		.4byte	.LVL10
 3729 0e2b 0C1A0000 		.4byte	0x1a0c
 3730 0e2f 430E0000 		.4byte	0xe43
 3731 0e33 1D       		.uleb128 0x1d
 3732 0e34 01       		.uleb128 0x1
 3733 0e35 50       		.byte	0x50
 3734 0e36 05       		.uleb128 0x5
 3735 0e37 03       		.byte	0x3
 3736 0e38 00000000 		.4byte	.LC0
 3737 0e3c 1D       		.uleb128 0x1d
 3738 0e3d 01       		.uleb128 0x1
 3739 0e3e 51       		.byte	0x51
 3740 0e3f 02       		.uleb128 0x2
 3741 0e40 08       		.byte	0x8
 3742 0e41 4F       		.byte	0x4f
 3743 0e42 00       		.byte	0
 3744 0e43 1C       		.uleb128 0x1c
 3745 0e44 94000000 		.4byte	.LVL11
 3746 0e48 0C1A0000 		.4byte	0x1a0c
 3747 0e4c 600E0000 		.4byte	0xe60
 3748 0e50 1D       		.uleb128 0x1d
 3749 0e51 01       		.uleb128 0x1
 3750 0e52 50       		.byte	0x50
 3751 0e53 05       		.uleb128 0x5
 3752 0e54 03       		.byte	0x3
 3753 0e55 00000000 		.4byte	.LC0
 3754 0e59 1D       		.uleb128 0x1d
 3755 0e5a 01       		.uleb128 0x1
 3756 0e5b 51       		.byte	0x51
 3757 0e5c 02       		.uleb128 0x2
 3758 0e5d 08       		.byte	0x8
 3759 0e5e 50       		.byte	0x50
 3760 0e5f 00       		.byte	0
 3761 0e60 1C       		.uleb128 0x1c
 3762 0e61 A4000000 		.4byte	.LVL12
 3763 0e65 0C1A0000 		.4byte	0x1a0c
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 127


 3764 0e69 7D0E0000 		.4byte	0xe7d
 3765 0e6d 1D       		.uleb128 0x1d
 3766 0e6e 01       		.uleb128 0x1
 3767 0e6f 50       		.byte	0x50
 3768 0e70 05       		.uleb128 0x5
 3769 0e71 03       		.byte	0x3
 3770 0e72 00000000 		.4byte	.LC0
 3771 0e76 1D       		.uleb128 0x1d
 3772 0e77 01       		.uleb128 0x1
 3773 0e78 51       		.byte	0x51
 3774 0e79 02       		.uleb128 0x2
 3775 0e7a 08       		.byte	0x8
 3776 0e7b 51       		.byte	0x51
 3777 0e7c 00       		.byte	0
 3778 0e7d 1C       		.uleb128 0x1c
 3779 0e7e B4000000 		.4byte	.LVL13
 3780 0e82 0C1A0000 		.4byte	0x1a0c
 3781 0e86 9A0E0000 		.4byte	0xe9a
 3782 0e8a 1D       		.uleb128 0x1d
 3783 0e8b 01       		.uleb128 0x1
 3784 0e8c 50       		.byte	0x50
 3785 0e8d 05       		.uleb128 0x5
 3786 0e8e 03       		.byte	0x3
 3787 0e8f 00000000 		.4byte	.LC0
 3788 0e93 1D       		.uleb128 0x1d
 3789 0e94 01       		.uleb128 0x1
 3790 0e95 51       		.byte	0x51
 3791 0e96 02       		.uleb128 0x2
 3792 0e97 08       		.byte	0x8
 3793 0e98 52       		.byte	0x52
 3794 0e99 00       		.byte	0
 3795 0e9a 1C       		.uleb128 0x1c
 3796 0e9b FA000000 		.4byte	.LVL17
 3797 0e9f 0C1A0000 		.4byte	0x1a0c
 3798 0ea3 B70E0000 		.4byte	0xeb7
 3799 0ea7 1D       		.uleb128 0x1d
 3800 0ea8 01       		.uleb128 0x1
 3801 0ea9 50       		.byte	0x50
 3802 0eaa 05       		.uleb128 0x5
 3803 0eab 03       		.byte	0x3
 3804 0eac 00000000 		.4byte	.LC0
 3805 0eb0 1D       		.uleb128 0x1d
 3806 0eb1 01       		.uleb128 0x1
 3807 0eb2 51       		.byte	0x51
 3808 0eb3 02       		.uleb128 0x2
 3809 0eb4 08       		.byte	0x8
 3810 0eb5 63       		.byte	0x63
 3811 0eb6 00       		.byte	0
 3812 0eb7 1C       		.uleb128 0x1c
 3813 0eb8 8C010000 		.4byte	.LVL27
 3814 0ebc 0C1A0000 		.4byte	0x1a0c
 3815 0ec0 D40E0000 		.4byte	0xed4
 3816 0ec4 1D       		.uleb128 0x1d
 3817 0ec5 01       		.uleb128 0x1
 3818 0ec6 50       		.byte	0x50
 3819 0ec7 05       		.uleb128 0x5
 3820 0ec8 03       		.byte	0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 128


 3821 0ec9 00000000 		.4byte	.LC0
 3822 0ecd 1D       		.uleb128 0x1d
 3823 0ece 01       		.uleb128 0x1
 3824 0ecf 51       		.byte	0x51
 3825 0ed0 02       		.uleb128 0x2
 3826 0ed1 08       		.byte	0x8
 3827 0ed2 82       		.byte	0x82
 3828 0ed3 00       		.byte	0
 3829 0ed4 1E       		.uleb128 0x1e
 3830 0ed5 A0010000 		.4byte	.LVL28
 3831 0ed9 0C1A0000 		.4byte	0x1a0c
 3832 0edd 1D       		.uleb128 0x1d
 3833 0ede 01       		.uleb128 0x1
 3834 0edf 50       		.byte	0x50
 3835 0ee0 05       		.uleb128 0x5
 3836 0ee1 03       		.byte	0x3
 3837 0ee2 00000000 		.4byte	.LC0
 3838 0ee6 1D       		.uleb128 0x1d
 3839 0ee7 01       		.uleb128 0x1
 3840 0ee8 51       		.byte	0x51
 3841 0ee9 02       		.uleb128 0x2
 3842 0eea 08       		.byte	0x8
 3843 0eeb 83       		.byte	0x83
 3844 0eec 00       		.byte	0
 3845 0eed 00       		.byte	0
 3846 0eee 15       		.uleb128 0x15
 3847 0eef 04       		.byte	0x4
 3848 0ef0 A2040000 		.4byte	0x4a2
 3849 0ef4 15       		.uleb128 0x15
 3850 0ef5 04       		.byte	0x4
 3851 0ef6 FA0E0000 		.4byte	0xefa
 3852 0efa 06       		.uleb128 0x6
 3853 0efb 590C0000 		.4byte	0xc59
 3854 0eff 19       		.uleb128 0x19
 3855 0f00 6C060000 		.4byte	.LASF250
 3856 0f04 01       		.byte	0x1
 3857 0f05 B3       		.byte	0xb3
 3858 0f06 E9090000 		.4byte	0x9e9
 3859 0f0a 00000000 		.4byte	.LFB193
 3860 0f0e 70000000 		.4byte	.LFE193-.LFB193
 3861 0f12 01       		.uleb128 0x1
 3862 0f13 9C       		.byte	0x9c
 3863 0f14 6C0F0000 		.4byte	0xf6c
 3864 0f18 1A       		.uleb128 0x1a
 3865 0f19 F6040000 		.4byte	.LASF180
 3866 0f1d 01       		.byte	0x1
 3867 0f1e B3       		.byte	0xb3
 3868 0f1f EE0E0000 		.4byte	0xeee
 3869 0f23 53010000 		.4byte	.LLST8
 3870 0f27 1A       		.uleb128 0x1a
 3871 0f28 0B130000 		.4byte	.LASF251
 3872 0f2c 01       		.byte	0x1
 3873 0f2d B3       		.byte	0xb3
 3874 0f2e 520C0000 		.4byte	0xc52
 3875 0f32 7F010000 		.4byte	.LLST9
 3876 0f36 1F       		.uleb128 0x1f
 3877 0f37 21050000 		.4byte	.LASF244
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 129


 3878 0f3b 01       		.byte	0x1
 3879 0f3c B7       		.byte	0xb7
 3880 0f3d E9090000 		.4byte	0x9e9
 3881 0f41 01       		.uleb128 0x1
 3882 0f42 50       		.byte	0x50
 3883 0f43 1B       		.uleb128 0x1b
 3884 0f44 81000000 		.4byte	.LASF242
 3885 0f48 01       		.byte	0x1
 3886 0f49 B8       		.byte	0xb8
 3887 0f4a AD000000 		.4byte	0xad
 3888 0f4e A0010000 		.4byte	.LLST10
 3889 0f52 1E       		.uleb128 0x1e
 3890 0f53 10000000 		.4byte	.LVL37
 3891 0f57 0C1A0000 		.4byte	0x1a0c
 3892 0f5b 1D       		.uleb128 0x1d
 3893 0f5c 01       		.uleb128 0x1
 3894 0f5d 50       		.byte	0x50
 3895 0f5e 05       		.uleb128 0x5
 3896 0f5f 03       		.byte	0x3
 3897 0f60 00000000 		.4byte	.LC0
 3898 0f64 1D       		.uleb128 0x1d
 3899 0f65 01       		.uleb128 0x1
 3900 0f66 51       		.byte	0x51
 3901 0f67 02       		.uleb128 0x2
 3902 0f68 08       		.byte	0x8
 3903 0f69 B5       		.byte	0xb5
 3904 0f6a 00       		.byte	0
 3905 0f6b 00       		.byte	0
 3906 0f6c 20       		.uleb128 0x20
 3907 0f6d E00F0000 		.4byte	.LASF252
 3908 0f71 01       		.byte	0x1
 3909 0f72 E8       		.byte	0xe8
 3910 0f73 00000000 		.4byte	.LFB194
 3911 0f77 20000000 		.4byte	.LFE194-.LFB194
 3912 0f7b 01       		.uleb128 0x1
 3913 0f7c 9C       		.byte	0x9c
 3914 0f7d A00F0000 		.4byte	0xfa0
 3915 0f81 1A       		.uleb128 0x1a
 3916 0f82 F6040000 		.4byte	.LASF180
 3917 0f86 01       		.byte	0x1
 3918 0f87 E8       		.byte	0xe8
 3919 0f88 EE0E0000 		.4byte	0xeee
 3920 0f8c CA010000 		.4byte	.LLST11
 3921 0f90 1E       		.uleb128 0x1e
 3922 0f91 1E000000 		.4byte	.LVL49
 3923 0f95 181A0000 		.4byte	0x1a18
 3924 0f99 1D       		.uleb128 0x1d
 3925 0f9a 01       		.uleb128 0x1
 3926 0f9b 50       		.byte	0x50
 3927 0f9c 01       		.uleb128 0x1
 3928 0f9d 32       		.byte	0x32
 3929 0f9e 00       		.byte	0
 3930 0f9f 00       		.byte	0
 3931 0fa0 21       		.uleb128 0x21
 3932 0fa1 990A0000 		.4byte	.LASF253
 3933 0fa5 01       		.byte	0x1
 3934 0fa6 6F01     		.2byte	0x16f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 130


 3935 0fa8 00000000 		.4byte	.LFB197
 3936 0fac 2C000000 		.4byte	.LFE197-.LFB197
 3937 0fb0 01       		.uleb128 0x1
 3938 0fb1 9C       		.byte	0x9c
 3939 0fb2 F10F0000 		.4byte	0xff1
 3940 0fb6 22       		.uleb128 0x22
 3941 0fb7 F6040000 		.4byte	.LASF180
 3942 0fbb 01       		.byte	0x1
 3943 0fbc 6F01     		.2byte	0x16f
 3944 0fbe EE0E0000 		.4byte	0xeee
 3945 0fc2 EB010000 		.4byte	.LLST12
 3946 0fc6 22       		.uleb128 0x22
 3947 0fc7 F6050000 		.4byte	.LASF254
 3948 0fcb 01       		.byte	0x1
 3949 0fcc 6F01     		.2byte	0x16f
 3950 0fce 0F0A0000 		.4byte	0xa0f
 3951 0fd2 17020000 		.4byte	.LLST13
 3952 0fd6 1E       		.uleb128 0x1e
 3953 0fd7 14000000 		.4byte	.LVL53
 3954 0fdb 0C1A0000 		.4byte	0x1a0c
 3955 0fdf 1D       		.uleb128 0x1d
 3956 0fe0 01       		.uleb128 0x1
 3957 0fe1 50       		.byte	0x50
 3958 0fe2 05       		.uleb128 0x5
 3959 0fe3 03       		.byte	0x3
 3960 0fe4 00000000 		.4byte	.LC0
 3961 0fe8 1D       		.uleb128 0x1d
 3962 0fe9 01       		.uleb128 0x1
 3963 0fea 51       		.byte	0x51
 3964 0feb 03       		.uleb128 0x3
 3965 0fec 0A       		.byte	0xa
 3966 0fed 7101     		.2byte	0x171
 3967 0fef 00       		.byte	0
 3968 0ff0 00       		.byte	0
 3969 0ff1 21       		.uleb128 0x21
 3970 0ff2 BD020000 		.4byte	.LASF255
 3971 0ff6 01       		.byte	0x1
 3972 0ff7 4901     		.2byte	0x149
 3973 0ff9 00000000 		.4byte	.LFB196
 3974 0ffd 34000000 		.4byte	.LFE196-.LFB196
 3975 1001 01       		.uleb128 0x1
 3976 1002 9C       		.byte	0x9c
 3977 1003 41100000 		.4byte	0x1041
 3978 1007 22       		.uleb128 0x22
 3979 1008 F6040000 		.4byte	.LASF180
 3980 100c 01       		.byte	0x1
 3981 100d 4901     		.2byte	0x149
 3982 100f EE0E0000 		.4byte	0xeee
 3983 1013 38020000 		.4byte	.LLST14
 3984 1017 1C       		.uleb128 0x1c
 3985 1018 1A000000 		.4byte	.LVL57
 3986 101c 6C0F0000 		.4byte	0xf6c
 3987 1020 2B100000 		.4byte	0x102b
 3988 1024 1D       		.uleb128 0x1d
 3989 1025 01       		.uleb128 0x1
 3990 1026 50       		.byte	0x50
 3991 1027 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 131


 3992 1028 74       		.byte	0x74
 3993 1029 00       		.sleb128 0
 3994 102a 00       		.byte	0
 3995 102b 1E       		.uleb128 0x1e
 3996 102c 2C000000 		.4byte	.LVL58
 3997 1030 A00F0000 		.4byte	0xfa0
 3998 1034 1D       		.uleb128 0x1d
 3999 1035 01       		.uleb128 0x1
 4000 1036 50       		.byte	0x50
 4001 1037 02       		.uleb128 0x2
 4002 1038 74       		.byte	0x74
 4003 1039 00       		.sleb128 0
 4004 103a 1D       		.uleb128 0x1d
 4005 103b 01       		.uleb128 0x1
 4006 103c 51       		.byte	0x51
 4007 103d 01       		.uleb128 0x1
 4008 103e 31       		.byte	0x31
 4009 103f 00       		.byte	0
 4010 1040 00       		.byte	0
 4011 1041 21       		.uleb128 0x21
 4012 1042 BA130000 		.4byte	.LASF256
 4013 1046 01       		.byte	0x1
 4014 1047 9301     		.2byte	0x193
 4015 1049 00000000 		.4byte	.LFB198
 4016 104d 12000000 		.4byte	.LFE198-.LFB198
 4017 1051 01       		.uleb128 0x1
 4018 1052 9C       		.byte	0x9c
 4019 1053 66100000 		.4byte	0x1066
 4020 1057 23       		.uleb128 0x23
 4021 1058 F6040000 		.4byte	.LASF180
 4022 105c 01       		.byte	0x1
 4023 105d 9301     		.2byte	0x193
 4024 105f EE0E0000 		.4byte	0xeee
 4025 1063 01       		.uleb128 0x1
 4026 1064 50       		.byte	0x50
 4027 1065 00       		.byte	0
 4028 1066 21       		.uleb128 0x21
 4029 1067 F60E0000 		.4byte	.LASF257
 4030 106b 01       		.byte	0x1
 4031 106c 0F01     		.2byte	0x10f
 4032 106e 00000000 		.4byte	.LFB195
 4033 1072 40000000 		.4byte	.LFE195-.LFB195
 4034 1076 01       		.uleb128 0x1
 4035 1077 9C       		.byte	0x9c
 4036 1078 AD100000 		.4byte	0x10ad
 4037 107c 22       		.uleb128 0x22
 4038 107d F6040000 		.4byte	.LASF180
 4039 1081 01       		.byte	0x1
 4040 1082 0F01     		.2byte	0x10f
 4041 1084 EE0E0000 		.4byte	0xeee
 4042 1088 61020000 		.4byte	.LLST15
 4043 108c 24       		.uleb128 0x24
 4044 108d CB0D0000 		.4byte	.LASF258
 4045 1091 01       		.byte	0x1
 4046 1092 1101     		.2byte	0x111
 4047 1094 D9000000 		.4byte	0xd9
 4048 1098 8D020000 		.4byte	.LLST16
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 132


 4049 109c 1E       		.uleb128 0x1e
 4050 109d 20000000 		.4byte	.LVL64
 4051 10a1 41100000 		.4byte	0x1041
 4052 10a5 1D       		.uleb128 0x1d
 4053 10a6 01       		.uleb128 0x1
 4054 10a7 50       		.byte	0x50
 4055 10a8 02       		.uleb128 0x2
 4056 10a9 74       		.byte	0x74
 4057 10aa 00       		.sleb128 0
 4058 10ab 00       		.byte	0
 4059 10ac 00       		.byte	0
 4060 10ad 21       		.uleb128 0x21
 4061 10ae 38090000 		.4byte	.LASF259
 4062 10b2 01       		.byte	0x1
 4063 10b3 B701     		.2byte	0x1b7
 4064 10b5 00000000 		.4byte	.LFB199
 4065 10b9 30000000 		.4byte	.LFE199-.LFB199
 4066 10bd 01       		.uleb128 0x1
 4067 10be 9C       		.byte	0x9c
 4068 10bf 0E110000 		.4byte	0x110e
 4069 10c3 22       		.uleb128 0x22
 4070 10c4 F6040000 		.4byte	.LASF180
 4071 10c8 01       		.byte	0x1
 4072 10c9 B701     		.2byte	0x1b7
 4073 10cb EE0E0000 		.4byte	0xeee
 4074 10cf B8020000 		.4byte	.LLST17
 4075 10d3 22       		.uleb128 0x22
 4076 10d4 F10E0000 		.4byte	.LASF260
 4077 10d8 01       		.byte	0x1
 4078 10d9 B701     		.2byte	0x1b7
 4079 10db 110B0000 		.4byte	0xb11
 4080 10df E4020000 		.4byte	.LLST18
 4081 10e3 24       		.uleb128 0x24
 4082 10e4 FD120000 		.4byte	.LASF261
 4083 10e8 01       		.byte	0x1
 4084 10e9 BC01     		.2byte	0x1bc
 4085 10eb D9000000 		.4byte	0xd9
 4086 10ef 10030000 		.4byte	.LLST19
 4087 10f3 1E       		.uleb128 0x1e
 4088 10f4 1E000000 		.4byte	.LVL69
 4089 10f8 0C1A0000 		.4byte	0x1a0c
 4090 10fc 1D       		.uleb128 0x1d
 4091 10fd 01       		.uleb128 0x1
 4092 10fe 50       		.byte	0x50
 4093 10ff 05       		.uleb128 0x5
 4094 1100 03       		.byte	0x3
 4095 1101 00000000 		.4byte	.LC0
 4096 1105 1D       		.uleb128 0x1d
 4097 1106 01       		.uleb128 0x1
 4098 1107 51       		.byte	0x51
 4099 1108 03       		.uleb128 0x3
 4100 1109 0A       		.byte	0xa
 4101 110a B901     		.2byte	0x1b9
 4102 110c 00       		.byte	0
 4103 110d 00       		.byte	0
 4104 110e 25       		.uleb128 0x25
 4105 110f 24140000 		.4byte	.LASF262
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 133


 4106 1113 01       		.byte	0x1
 4107 1114 DE01     		.2byte	0x1de
 4108 1116 E9090000 		.4byte	0x9e9
 4109 111a 00000000 		.4byte	.LFB200
 4110 111e 64000000 		.4byte	.LFE200-.LFB200
 4111 1122 01       		.uleb128 0x1
 4112 1123 9C       		.byte	0x9c
 4113 1124 93110000 		.4byte	0x1193
 4114 1128 22       		.uleb128 0x22
 4115 1129 F6040000 		.4byte	.LASF180
 4116 112d 01       		.byte	0x1
 4117 112e DE01     		.2byte	0x1de
 4118 1130 EE0E0000 		.4byte	0xeee
 4119 1134 23030000 		.4byte	.LLST20
 4120 1138 22       		.uleb128 0x22
 4121 1139 62110000 		.4byte	.LASF263
 4122 113d 01       		.byte	0x1
 4123 113e DE01     		.2byte	0x1de
 4124 1140 350A0000 		.4byte	0xa35
 4125 1144 4F030000 		.4byte	.LLST21
 4126 1148 24       		.uleb128 0x24
 4127 1149 21050000 		.4byte	.LASF244
 4128 114d 01       		.byte	0x1
 4129 114e E201     		.2byte	0x1e2
 4130 1150 E9090000 		.4byte	0x9e9
 4131 1154 70030000 		.4byte	.LLST22
 4132 1158 24       		.uleb128 0x24
 4133 1159 B0110000 		.4byte	.LASF264
 4134 115d 01       		.byte	0x1
 4135 115e E401     		.2byte	0x1e4
 4136 1160 D9000000 		.4byte	0xd9
 4137 1164 8F030000 		.4byte	.LLST23
 4138 1168 26       		.uleb128 0x26
 4139 1169 77647400 		.ascii	"wdt\000"
 4140 116d 01       		.byte	0x1
 4141 116e E501     		.2byte	0x1e5
 4142 1170 D9000000 		.4byte	0xd9
 4143 1174 B8030000 		.4byte	.LLST24
 4144 1178 1E       		.uleb128 0x1e
 4145 1179 14000000 		.4byte	.LVL76
 4146 117d 0C1A0000 		.4byte	0x1a0c
 4147 1181 1D       		.uleb128 0x1d
 4148 1182 01       		.uleb128 0x1
 4149 1183 50       		.byte	0x50
 4150 1184 05       		.uleb128 0x5
 4151 1185 03       		.byte	0x3
 4152 1186 00000000 		.4byte	.LC0
 4153 118a 1D       		.uleb128 0x1d
 4154 118b 01       		.uleb128 0x1
 4155 118c 51       		.byte	0x51
 4156 118d 03       		.uleb128 0x3
 4157 118e 0A       		.byte	0xa
 4158 118f E001     		.2byte	0x1e0
 4159 1191 00       		.byte	0
 4160 1192 00       		.byte	0
 4161 1193 25       		.uleb128 0x25
 4162 1194 18040000 		.4byte	.LASF265
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 134


 4163 1198 01       		.byte	0x1
 4164 1199 5202     		.2byte	0x252
 4165 119b 520C0000 		.4byte	0xc52
 4166 119f 00000000 		.4byte	.LFB202
 4167 11a3 34000000 		.4byte	.LFE202-.LFB202
 4168 11a7 01       		.uleb128 0x1
 4169 11a8 9C       		.byte	0x9c
 4170 11a9 F8110000 		.4byte	0x11f8
 4171 11ad 22       		.uleb128 0x22
 4172 11ae F6040000 		.4byte	.LASF180
 4173 11b2 01       		.byte	0x1
 4174 11b3 5202     		.2byte	0x252
 4175 11b5 BF0C0000 		.4byte	0xcbf
 4176 11b9 11040000 		.4byte	.LLST25
 4177 11bd 22       		.uleb128 0x22
 4178 11be 81000000 		.4byte	.LASF242
 4179 11c2 01       		.byte	0x1
 4180 11c3 5202     		.2byte	0x252
 4181 11c5 D9000000 		.4byte	0xd9
 4182 11c9 3D040000 		.4byte	.LLST26
 4183 11cd 24       		.uleb128 0x24
 4184 11ce 02060000 		.4byte	.LASF266
 4185 11d2 01       		.byte	0x1
 4186 11d3 5602     		.2byte	0x256
 4187 11d5 520C0000 		.4byte	0xc52
 4188 11d9 81040000 		.4byte	.LLST27
 4189 11dd 1E       		.uleb128 0x1e
 4190 11de 14000000 		.4byte	.LVL95
 4191 11e2 0C1A0000 		.4byte	0x1a0c
 4192 11e6 1D       		.uleb128 0x1d
 4193 11e7 01       		.uleb128 0x1
 4194 11e8 50       		.byte	0x50
 4195 11e9 05       		.uleb128 0x5
 4196 11ea 03       		.byte	0x3
 4197 11eb 00000000 		.4byte	.LC0
 4198 11ef 1D       		.uleb128 0x1d
 4199 11f0 01       		.uleb128 0x1
 4200 11f1 51       		.byte	0x51
 4201 11f2 03       		.uleb128 0x3
 4202 11f3 0A       		.byte	0xa
 4203 11f4 5402     		.2byte	0x254
 4204 11f6 00       		.byte	0
 4205 11f7 00       		.byte	0
 4206 11f8 25       		.uleb128 0x25
 4207 11f9 BC050000 		.4byte	.LASF267
 4208 11fd 01       		.byte	0x1
 4209 11fe 2002     		.2byte	0x220
 4210 1200 520C0000 		.4byte	0xc52
 4211 1204 00000000 		.4byte	.LFB201
 4212 1208 54000000 		.4byte	.LFE201-.LFB201
 4213 120c 01       		.uleb128 0x1
 4214 120d 9C       		.byte	0x9c
 4215 120e 9A120000 		.4byte	0x129a
 4216 1212 22       		.uleb128 0x22
 4217 1213 F6040000 		.4byte	.LASF180
 4218 1217 01       		.byte	0x1
 4219 1218 2002     		.2byte	0x220
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 135


 4220 121a BF0C0000 		.4byte	0xcbf
 4221 121e A0040000 		.4byte	.LLST28
 4222 1222 22       		.uleb128 0x22
 4223 1223 81000000 		.4byte	.LASF242
 4224 1227 01       		.byte	0x1
 4225 1228 2002     		.2byte	0x220
 4226 122a D9000000 		.4byte	0xd9
 4227 122e CC040000 		.4byte	.LLST29
 4228 1232 24       		.uleb128 0x24
 4229 1233 FA030000 		.4byte	.LASF268
 4230 1237 01       		.byte	0x1
 4231 1238 2402     		.2byte	0x224
 4232 123a 520C0000 		.4byte	0xc52
 4233 123e F8040000 		.4byte	.LLST30
 4234 1242 27       		.uleb128 0x27
 4235 1243 950C0000 		.4byte	0xc95
 4236 1247 18000000 		.4byte	.LBB4
 4237 124b 0C000000 		.4byte	.LBE4-.LBB4
 4238 124f 01       		.byte	0x1
 4239 1250 2A02     		.2byte	0x22a
 4240 1252 7F120000 		.4byte	0x127f
 4241 1256 28       		.uleb128 0x28
 4242 1257 B20C0000 		.4byte	0xcb2
 4243 125b 17050000 		.4byte	.LLST31
 4244 125f 28       		.uleb128 0x28
 4245 1260 A60C0000 		.4byte	0xca6
 4246 1264 2A050000 		.4byte	.LLST32
 4247 1268 1E       		.uleb128 0x1e
 4248 1269 20000000 		.4byte	.LVL106
 4249 126d 93110000 		.4byte	0x1193
 4250 1271 1D       		.uleb128 0x1d
 4251 1272 01       		.uleb128 0x1
 4252 1273 50       		.byte	0x50
 4253 1274 02       		.uleb128 0x2
 4254 1275 75       		.byte	0x75
 4255 1276 00       		.sleb128 0
 4256 1277 1D       		.uleb128 0x1d
 4257 1278 01       		.uleb128 0x1
 4258 1279 51       		.byte	0x51
 4259 127a 02       		.uleb128 0x2
 4260 127b 74       		.byte	0x74
 4261 127c 00       		.sleb128 0
 4262 127d 00       		.byte	0
 4263 127e 00       		.byte	0
 4264 127f 1E       		.uleb128 0x1e
 4265 1280 14000000 		.4byte	.LVL104
 4266 1284 0C1A0000 		.4byte	0x1a0c
 4267 1288 1D       		.uleb128 0x1d
 4268 1289 01       		.uleb128 0x1
 4269 128a 50       		.byte	0x50
 4270 128b 05       		.uleb128 0x5
 4271 128c 03       		.byte	0x3
 4272 128d 00000000 		.4byte	.LC0
 4273 1291 1D       		.uleb128 0x1d
 4274 1292 01       		.uleb128 0x1
 4275 1293 51       		.byte	0x51
 4276 1294 03       		.uleb128 0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 136


 4277 1295 0A       		.byte	0xa
 4278 1296 2202     		.2byte	0x222
 4279 1298 00       		.byte	0
 4280 1299 00       		.byte	0
 4281 129a 25       		.uleb128 0x25
 4282 129b 19100000 		.4byte	.LASF269
 4283 129f 01       		.byte	0x1
 4284 12a0 7902     		.2byte	0x279
 4285 12a2 B8000000 		.4byte	0xb8
 4286 12a6 00000000 		.4byte	.LFB203
 4287 12aa 2C000000 		.4byte	.LFE203-.LFB203
 4288 12ae 01       		.uleb128 0x1
 4289 12af 9C       		.byte	0x9c
 4290 12b0 FF120000 		.4byte	0x12ff
 4291 12b4 22       		.uleb128 0x22
 4292 12b5 F6040000 		.4byte	.LASF180
 4293 12b9 01       		.byte	0x1
 4294 12ba 7902     		.2byte	0x279
 4295 12bc BF0C0000 		.4byte	0xcbf
 4296 12c0 3D050000 		.4byte	.LLST33
 4297 12c4 22       		.uleb128 0x22
 4298 12c5 81000000 		.4byte	.LASF242
 4299 12c9 01       		.byte	0x1
 4300 12ca 7902     		.2byte	0x279
 4301 12cc D9000000 		.4byte	0xd9
 4302 12d0 69050000 		.4byte	.LLST34
 4303 12d4 24       		.uleb128 0x24
 4304 12d5 6C100000 		.4byte	.LASF270
 4305 12d9 01       		.byte	0x1
 4306 12da 7D02     		.2byte	0x27d
 4307 12dc D9000000 		.4byte	0xd9
 4308 12e0 AE050000 		.4byte	.LLST35
 4309 12e4 1E       		.uleb128 0x1e
 4310 12e5 14000000 		.4byte	.LVL117
 4311 12e9 0C1A0000 		.4byte	0x1a0c
 4312 12ed 1D       		.uleb128 0x1d
 4313 12ee 01       		.uleb128 0x1
 4314 12ef 50       		.byte	0x50
 4315 12f0 05       		.uleb128 0x5
 4316 12f1 03       		.byte	0x3
 4317 12f2 00000000 		.4byte	.LC0
 4318 12f6 1D       		.uleb128 0x1d
 4319 12f7 01       		.uleb128 0x1
 4320 12f8 51       		.byte	0x51
 4321 12f9 03       		.uleb128 0x3
 4322 12fa 0A       		.byte	0xa
 4323 12fb 7B02     		.2byte	0x27b
 4324 12fd 00       		.byte	0
 4325 12fe 00       		.byte	0
 4326 12ff 25       		.uleb128 0x25
 4327 1300 AC120000 		.4byte	.LASF271
 4328 1304 01       		.byte	0x1
 4329 1305 9E02     		.2byte	0x29e
 4330 1307 CE000000 		.4byte	0xce
 4331 130b 00000000 		.4byte	.LFB204
 4332 130f 3C000000 		.4byte	.LFE204-.LFB204
 4333 1313 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 137


 4334 1314 9C       		.byte	0x9c
 4335 1315 9A130000 		.4byte	0x139a
 4336 1319 22       		.uleb128 0x22
 4337 131a F6040000 		.4byte	.LASF180
 4338 131e 01       		.byte	0x1
 4339 131f 9E02     		.2byte	0x29e
 4340 1321 BF0C0000 		.4byte	0xcbf
 4341 1325 E4050000 		.4byte	.LLST36
 4342 1329 22       		.uleb128 0x22
 4343 132a 81000000 		.4byte	.LASF242
 4344 132e 01       		.byte	0x1
 4345 132f 9E02     		.2byte	0x29e
 4346 1331 D9000000 		.4byte	0xd9
 4347 1335 10060000 		.4byte	.LLST37
 4348 1339 24       		.uleb128 0x24
 4349 133a 6C100000 		.4byte	.LASF270
 4350 133e 01       		.byte	0x1
 4351 133f A202     		.2byte	0x2a2
 4352 1341 D9000000 		.4byte	0xd9
 4353 1345 3C060000 		.4byte	.LLST38
 4354 1349 29       		.uleb128 0x29
 4355 134a 0C040000 		.4byte	.LASF314
 4356 134e 01       		.byte	0x1
 4357 134f A302     		.2byte	0x2a3
 4358 1351 B8000000 		.4byte	0xb8
 4359 1355 24       		.uleb128 0x24
 4360 1356 86000000 		.4byte	.LASF272
 4361 135a 01       		.byte	0x1
 4362 135b A402     		.2byte	0x2a4
 4363 135d CE000000 		.4byte	0xce
 4364 1361 7D060000 		.4byte	.LLST39
 4365 1365 1C       		.uleb128 0x1c
 4366 1366 14000000 		.4byte	.LVL127
 4367 136a 0C1A0000 		.4byte	0x1a0c
 4368 136e 83130000 		.4byte	0x1383
 4369 1372 1D       		.uleb128 0x1d
 4370 1373 01       		.uleb128 0x1
 4371 1374 50       		.byte	0x50
 4372 1375 05       		.uleb128 0x5
 4373 1376 03       		.byte	0x3
 4374 1377 00000000 		.4byte	.LC0
 4375 137b 1D       		.uleb128 0x1d
 4376 137c 01       		.uleb128 0x1
 4377 137d 51       		.byte	0x51
 4378 137e 03       		.uleb128 0x3
 4379 137f 0A       		.byte	0xa
 4380 1380 A002     		.2byte	0x2a0
 4381 1382 00       		.byte	0
 4382 1383 1E       		.uleb128 0x1e
 4383 1384 2E000000 		.4byte	.LVL131
 4384 1388 F8110000 		.4byte	0x11f8
 4385 138c 1D       		.uleb128 0x1d
 4386 138d 01       		.uleb128 0x1
 4387 138e 50       		.byte	0x50
 4388 138f 02       		.uleb128 0x2
 4389 1390 76       		.byte	0x76
 4390 1391 00       		.sleb128 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 138


 4391 1392 1D       		.uleb128 0x1d
 4392 1393 01       		.uleb128 0x1
 4393 1394 51       		.byte	0x51
 4394 1395 02       		.uleb128 0x2
 4395 1396 75       		.byte	0x75
 4396 1397 00       		.sleb128 0
 4397 1398 00       		.byte	0
 4398 1399 00       		.byte	0
 4399 139a 21       		.uleb128 0x21
 4400 139b 10030000 		.4byte	.LASF273
 4401 139f 01       		.byte	0x1
 4402 13a0 CF02     		.2byte	0x2cf
 4403 13a2 00000000 		.4byte	.LFB205
 4404 13a6 28000000 		.4byte	.LFE205-.LFB205
 4405 13aa 01       		.uleb128 0x1
 4406 13ab 9C       		.byte	0x9c
 4407 13ac FB130000 		.4byte	0x13fb
 4408 13b0 22       		.uleb128 0x22
 4409 13b1 F6040000 		.4byte	.LASF180
 4410 13b5 01       		.byte	0x1
 4411 13b6 CF02     		.2byte	0x2cf
 4412 13b8 EE0E0000 		.4byte	0xeee
 4413 13bc 9B060000 		.4byte	.LLST40
 4414 13c0 22       		.uleb128 0x22
 4415 13c1 22000000 		.4byte	.LASF274
 4416 13c5 01       		.byte	0x1
 4417 13c6 CF02     		.2byte	0x2cf
 4418 13c8 D9000000 		.4byte	0xd9
 4419 13cc C7060000 		.4byte	.LLST41
 4420 13d0 24       		.uleb128 0x24
 4421 13d1 14000000 		.4byte	.LASF275
 4422 13d5 01       		.byte	0x1
 4423 13d6 D302     		.2byte	0x2d3
 4424 13d8 D9000000 		.4byte	0xd9
 4425 13dc F3060000 		.4byte	.LLST42
 4426 13e0 1E       		.uleb128 0x1e
 4427 13e1 16000000 		.4byte	.LVL139
 4428 13e5 0C1A0000 		.4byte	0x1a0c
 4429 13e9 1D       		.uleb128 0x1d
 4430 13ea 01       		.uleb128 0x1
 4431 13eb 50       		.byte	0x50
 4432 13ec 05       		.uleb128 0x5
 4433 13ed 03       		.byte	0x3
 4434 13ee 00000000 		.4byte	.LC0
 4435 13f2 1D       		.uleb128 0x1d
 4436 13f3 01       		.uleb128 0x1
 4437 13f4 51       		.byte	0x51
 4438 13f5 03       		.uleb128 0x3
 4439 13f6 0A       		.byte	0xa
 4440 13f7 D102     		.2byte	0x2d1
 4441 13f9 00       		.byte	0
 4442 13fa 00       		.byte	0
 4443 13fb 21       		.uleb128 0x21
 4444 13fc 55080000 		.4byte	.LASF276
 4445 1400 01       		.byte	0x1
 4446 1401 F202     		.2byte	0x2f2
 4447 1403 00000000 		.4byte	.LFB206
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 139


 4448 1407 28000000 		.4byte	.LFE206-.LFB206
 4449 140b 01       		.uleb128 0x1
 4450 140c 9C       		.byte	0x9c
 4451 140d 5A140000 		.4byte	0x145a
 4452 1411 22       		.uleb128 0x22
 4453 1412 F6040000 		.4byte	.LASF180
 4454 1416 01       		.byte	0x1
 4455 1417 F202     		.2byte	0x2f2
 4456 1419 EE0E0000 		.4byte	0xeee
 4457 141d 20070000 		.4byte	.LLST43
 4458 1421 22       		.uleb128 0x22
 4459 1422 070F0000 		.4byte	.LASF277
 4460 1426 01       		.byte	0x1
 4461 1427 F202     		.2byte	0x2f2
 4462 1429 D9000000 		.4byte	0xd9
 4463 142d 4C070000 		.4byte	.LLST44
 4464 1431 2A       		.uleb128 0x2a
 4465 1432 14000000 		.4byte	.LASF275
 4466 1436 01       		.byte	0x1
 4467 1437 F602     		.2byte	0x2f6
 4468 1439 D9000000 		.4byte	0xd9
 4469 143d 01       		.uleb128 0x1
 4470 143e 51       		.byte	0x51
 4471 143f 1E       		.uleb128 0x1e
 4472 1440 16000000 		.4byte	.LVL147
 4473 1444 0C1A0000 		.4byte	0x1a0c
 4474 1448 1D       		.uleb128 0x1d
 4475 1449 01       		.uleb128 0x1
 4476 144a 50       		.byte	0x50
 4477 144b 05       		.uleb128 0x5
 4478 144c 03       		.byte	0x3
 4479 144d 00000000 		.4byte	.LC0
 4480 1451 1D       		.uleb128 0x1d
 4481 1452 01       		.uleb128 0x1
 4482 1453 51       		.byte	0x51
 4483 1454 03       		.uleb128 0x3
 4484 1455 0A       		.byte	0xa
 4485 1456 F402     		.2byte	0x2f4
 4486 1458 00       		.byte	0
 4487 1459 00       		.byte	0
 4488 145a 25       		.uleb128 0x25
 4489 145b 50130000 		.4byte	.LASF278
 4490 145f 01       		.byte	0x1
 4491 1460 1803     		.2byte	0x318
 4492 1462 E9090000 		.4byte	0x9e9
 4493 1466 00000000 		.4byte	.LFB207
 4494 146a 34000000 		.4byte	.LFE207-.LFB207
 4495 146e 01       		.uleb128 0x1
 4496 146f 9C       		.byte	0x9c
 4497 1470 BF140000 		.4byte	0x14bf
 4498 1474 22       		.uleb128 0x22
 4499 1475 81000000 		.4byte	.LASF242
 4500 1479 01       		.byte	0x1
 4501 147a 1803     		.2byte	0x318
 4502 147c D9000000 		.4byte	0xd9
 4503 1480 78070000 		.4byte	.LLST45
 4504 1484 22       		.uleb128 0x22
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 140


 4505 1485 63050000 		.4byte	.LASF279
 4506 1489 01       		.byte	0x1
 4507 148a 1803     		.2byte	0x318
 4508 148c B8000000 		.4byte	0xb8
 4509 1490 A4070000 		.4byte	.LLST46
 4510 1494 24       		.uleb128 0x24
 4511 1495 21050000 		.4byte	.LASF244
 4512 1499 01       		.byte	0x1
 4513 149a 1C03     		.2byte	0x31c
 4514 149c E9090000 		.4byte	0x9e9
 4515 14a0 C5070000 		.4byte	.LLST47
 4516 14a4 1E       		.uleb128 0x1e
 4517 14a5 14000000 		.4byte	.LVL154
 4518 14a9 0C1A0000 		.4byte	0x1a0c
 4519 14ad 1D       		.uleb128 0x1d
 4520 14ae 01       		.uleb128 0x1
 4521 14af 50       		.byte	0x50
 4522 14b0 05       		.uleb128 0x5
 4523 14b1 03       		.byte	0x3
 4524 14b2 00000000 		.4byte	.LC0
 4525 14b6 1D       		.uleb128 0x1d
 4526 14b7 01       		.uleb128 0x1
 4527 14b8 51       		.byte	0x51
 4528 14b9 03       		.uleb128 0x3
 4529 14ba 0A       		.byte	0xa
 4530 14bb 1A03     		.2byte	0x31a
 4531 14bd 00       		.byte	0
 4532 14be 00       		.byte	0
 4533 14bf 25       		.uleb128 0x25
 4534 14c0 760F0000 		.4byte	.LASF280
 4535 14c4 01       		.byte	0x1
 4536 14c5 4203     		.2byte	0x342
 4537 14c7 E9090000 		.4byte	0x9e9
 4538 14cb 00000000 		.4byte	.LFB208
 4539 14cf 34000000 		.4byte	.LFE208-.LFB208
 4540 14d3 01       		.uleb128 0x1
 4541 14d4 9C       		.byte	0x9c
 4542 14d5 24150000 		.4byte	0x1524
 4543 14d9 22       		.uleb128 0x22
 4544 14da 81000000 		.4byte	.LASF242
 4545 14de 01       		.byte	0x1
 4546 14df 4203     		.2byte	0x342
 4547 14e1 D9000000 		.4byte	0xd9
 4548 14e5 04080000 		.4byte	.LLST48
 4549 14e9 22       		.uleb128 0x22
 4550 14ea 6B010000 		.4byte	.LASF281
 4551 14ee 01       		.byte	0x1
 4552 14ef 4203     		.2byte	0x342
 4553 14f1 CE000000 		.4byte	0xce
 4554 14f5 30080000 		.4byte	.LLST49
 4555 14f9 24       		.uleb128 0x24
 4556 14fa 21050000 		.4byte	.LASF244
 4557 14fe 01       		.byte	0x1
 4558 14ff 4603     		.2byte	0x346
 4559 1501 E9090000 		.4byte	0x9e9
 4560 1505 5C080000 		.4byte	.LLST50
 4561 1509 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 141


 4562 150a 14000000 		.4byte	.LVL162
 4563 150e 0C1A0000 		.4byte	0x1a0c
 4564 1512 1D       		.uleb128 0x1d
 4565 1513 01       		.uleb128 0x1
 4566 1514 50       		.byte	0x50
 4567 1515 05       		.uleb128 0x5
 4568 1516 03       		.byte	0x3
 4569 1517 00000000 		.4byte	.LC0
 4570 151b 1D       		.uleb128 0x1d
 4571 151c 01       		.uleb128 0x1
 4572 151d 51       		.byte	0x51
 4573 151e 03       		.uleb128 0x3
 4574 151f 0A       		.byte	0xa
 4575 1520 4403     		.2byte	0x344
 4576 1522 00       		.byte	0
 4577 1523 00       		.byte	0
 4578 1524 25       		.uleb128 0x25
 4579 1525 62090000 		.4byte	.LASF282
 4580 1529 01       		.byte	0x1
 4581 152a 7903     		.2byte	0x379
 4582 152c B8000000 		.4byte	0xb8
 4583 1530 00000000 		.4byte	.LFB209
 4584 1534 80000000 		.4byte	.LFE209-.LFB209
 4585 1538 01       		.uleb128 0x1
 4586 1539 9C       		.byte	0x9c
 4587 153a C3150000 		.4byte	0x15c3
 4588 153e 22       		.uleb128 0x22
 4589 153f F6040000 		.4byte	.LASF180
 4590 1543 01       		.byte	0x1
 4591 1544 7903     		.2byte	0x379
 4592 1546 BF0C0000 		.4byte	0xcbf
 4593 154a 9B080000 		.4byte	.LLST51
 4594 154e 22       		.uleb128 0x22
 4595 154f 81000000 		.4byte	.LASF242
 4596 1553 01       		.byte	0x1
 4597 1554 7903     		.2byte	0x379
 4598 1556 D9000000 		.4byte	0xd9
 4599 155a C7080000 		.4byte	.LLST52
 4600 155e 22       		.uleb128 0x22
 4601 155f 10010000 		.4byte	.LASF283
 4602 1563 01       		.byte	0x1
 4603 1564 7903     		.2byte	0x379
 4604 1566 B8000000 		.4byte	0xb8
 4605 156a F3080000 		.4byte	.LLST53
 4606 156e 24       		.uleb128 0x24
 4607 156f 730E0000 		.4byte	.LASF284
 4608 1573 01       		.byte	0x1
 4609 1574 7D03     		.2byte	0x37d
 4610 1576 D9000000 		.4byte	0xd9
 4611 157a 43090000 		.4byte	.LLST54
 4612 157e 24       		.uleb128 0x24
 4613 157f 960E0000 		.4byte	.LASF285
 4614 1583 01       		.byte	0x1
 4615 1584 7E03     		.2byte	0x37e
 4616 1586 D9000000 		.4byte	0xd9
 4617 158a 56090000 		.4byte	.LLST55
 4618 158e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 142


 4619 158f 16000000 		.4byte	.LVL170
 4620 1593 0C1A0000 		.4byte	0x1a0c
 4621 1597 AC150000 		.4byte	0x15ac
 4622 159b 1D       		.uleb128 0x1d
 4623 159c 01       		.uleb128 0x1
 4624 159d 50       		.byte	0x50
 4625 159e 05       		.uleb128 0x5
 4626 159f 03       		.byte	0x3
 4627 15a0 00000000 		.4byte	.LC0
 4628 15a4 1D       		.uleb128 0x1d
 4629 15a5 01       		.uleb128 0x1
 4630 15a6 51       		.byte	0x51
 4631 15a7 03       		.uleb128 0x3
 4632 15a8 0A       		.byte	0xa
 4633 15a9 7B03     		.2byte	0x37b
 4634 15ab 00       		.byte	0
 4635 15ac 1E       		.uleb128 0x1e
 4636 15ad 54000000 		.4byte	.LVL175
 4637 15b1 F8110000 		.4byte	0x11f8
 4638 15b5 1D       		.uleb128 0x1d
 4639 15b6 01       		.uleb128 0x1
 4640 15b7 50       		.byte	0x50
 4641 15b8 02       		.uleb128 0x2
 4642 15b9 76       		.byte	0x76
 4643 15ba 00       		.sleb128 0
 4644 15bb 1D       		.uleb128 0x1d
 4645 15bc 01       		.uleb128 0x1
 4646 15bd 51       		.byte	0x51
 4647 15be 02       		.uleb128 0x2
 4648 15bf 74       		.byte	0x74
 4649 15c0 00       		.sleb128 0
 4650 15c1 00       		.byte	0
 4651 15c2 00       		.byte	0
 4652 15c3 25       		.uleb128 0x25
 4653 15c4 FD100000 		.4byte	.LASF286
 4654 15c8 01       		.byte	0x1
 4655 15c9 DA03     		.2byte	0x3da
 4656 15cb DD080000 		.4byte	0x8dd
 4657 15cf 00000000 		.4byte	.LFB210
 4658 15d3 6C000000 		.4byte	.LFE210-.LFB210
 4659 15d7 01       		.uleb128 0x1
 4660 15d8 9C       		.byte	0x9c
 4661 15d9 58160000 		.4byte	0x1658
 4662 15dd 22       		.uleb128 0x22
 4663 15de F6040000 		.4byte	.LASF180
 4664 15e2 01       		.byte	0x1
 4665 15e3 DA03     		.2byte	0x3da
 4666 15e5 BF0C0000 		.4byte	0xcbf
 4667 15e9 81090000 		.4byte	.LLST56
 4668 15ed 22       		.uleb128 0x22
 4669 15ee 81000000 		.4byte	.LASF242
 4670 15f2 01       		.byte	0x1
 4671 15f3 DA03     		.2byte	0x3da
 4672 15f5 D9000000 		.4byte	0xd9
 4673 15f9 AD090000 		.4byte	.LLST57
 4674 15fd 22       		.uleb128 0x22
 4675 15fe 10010000 		.4byte	.LASF283
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 143


 4676 1602 01       		.byte	0x1
 4677 1603 DA03     		.2byte	0x3da
 4678 1605 B8000000 		.4byte	0xb8
 4679 1609 D9090000 		.4byte	.LLST58
 4680 160d 24       		.uleb128 0x24
 4681 160e AB060000 		.4byte	.LASF287
 4682 1612 01       		.byte	0x1
 4683 1613 DE03     		.2byte	0x3de
 4684 1615 DD080000 		.4byte	0x8dd
 4685 1619 130A0000 		.4byte	.LLST59
 4686 161d 1C       		.uleb128 0x1c
 4687 161e 16000000 		.4byte	.LVL187
 4688 1622 0C1A0000 		.4byte	0x1a0c
 4689 1626 3B160000 		.4byte	0x163b
 4690 162a 1D       		.uleb128 0x1d
 4691 162b 01       		.uleb128 0x1
 4692 162c 50       		.byte	0x50
 4693 162d 05       		.uleb128 0x5
 4694 162e 03       		.byte	0x3
 4695 162f 00000000 		.4byte	.LC0
 4696 1633 1D       		.uleb128 0x1d
 4697 1634 01       		.uleb128 0x1
 4698 1635 51       		.byte	0x51
 4699 1636 03       		.uleb128 0x3
 4700 1637 0A       		.byte	0xa
 4701 1638 DC03     		.2byte	0x3dc
 4702 163a 00       		.byte	0
 4703 163b 1E       		.uleb128 0x1e
 4704 163c 2C000000 		.4byte	.LVL188
 4705 1640 24150000 		.4byte	0x1524
 4706 1644 1D       		.uleb128 0x1d
 4707 1645 01       		.uleb128 0x1
 4708 1646 50       		.byte	0x50
 4709 1647 02       		.uleb128 0x2
 4710 1648 75       		.byte	0x75
 4711 1649 00       		.sleb128 0
 4712 164a 1D       		.uleb128 0x1d
 4713 164b 01       		.uleb128 0x1
 4714 164c 51       		.byte	0x51
 4715 164d 02       		.uleb128 0x2
 4716 164e 74       		.byte	0x74
 4717 164f 00       		.sleb128 0
 4718 1650 1D       		.uleb128 0x1d
 4719 1651 01       		.uleb128 0x1
 4720 1652 52       		.byte	0x52
 4721 1653 02       		.uleb128 0x2
 4722 1654 76       		.byte	0x76
 4723 1655 00       		.sleb128 0
 4724 1656 00       		.byte	0
 4725 1657 00       		.byte	0
 4726 1658 25       		.uleb128 0x25
 4727 1659 1F070000 		.4byte	.LASF288
 4728 165d 01       		.byte	0x1
 4729 165e 1D04     		.2byte	0x41d
 4730 1660 B8000000 		.4byte	0xb8
 4731 1664 00000000 		.4byte	.LFB211
 4732 1668 74000000 		.4byte	.LFE211-.LFB211
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 144


 4733 166c 01       		.uleb128 0x1
 4734 166d 9C       		.byte	0x9c
 4735 166e ED160000 		.4byte	0x16ed
 4736 1672 22       		.uleb128 0x22
 4737 1673 F6040000 		.4byte	.LASF180
 4738 1677 01       		.byte	0x1
 4739 1678 1D04     		.2byte	0x41d
 4740 167a BF0C0000 		.4byte	0xcbf
 4741 167e 5F0A0000 		.4byte	.LLST60
 4742 1682 22       		.uleb128 0x22
 4743 1683 81000000 		.4byte	.LASF242
 4744 1687 01       		.byte	0x1
 4745 1688 1D04     		.2byte	0x41d
 4746 168a D9000000 		.4byte	0xd9
 4747 168e 8B0A0000 		.4byte	.LLST61
 4748 1692 22       		.uleb128 0x22
 4749 1693 10010000 		.4byte	.LASF283
 4750 1697 01       		.byte	0x1
 4751 1698 1D04     		.2byte	0x41d
 4752 169a B8000000 		.4byte	0xb8
 4753 169e B70A0000 		.4byte	.LLST62
 4754 16a2 24       		.uleb128 0x24
 4755 16a3 DA0C0000 		.4byte	.LASF289
 4756 16a7 01       		.byte	0x1
 4757 16a8 2104     		.2byte	0x421
 4758 16aa CE000000 		.4byte	0xce
 4759 16ae FC0A0000 		.4byte	.LLST63
 4760 16b2 1C       		.uleb128 0x1c
 4761 16b3 16000000 		.4byte	.LVL197
 4762 16b7 0C1A0000 		.4byte	0x1a0c
 4763 16bb D0160000 		.4byte	0x16d0
 4764 16bf 1D       		.uleb128 0x1d
 4765 16c0 01       		.uleb128 0x1
 4766 16c1 50       		.byte	0x50
 4767 16c2 05       		.uleb128 0x5
 4768 16c3 03       		.byte	0x3
 4769 16c4 00000000 		.4byte	.LC0
 4770 16c8 1D       		.uleb128 0x1d
 4771 16c9 01       		.uleb128 0x1
 4772 16ca 51       		.byte	0x51
 4773 16cb 03       		.uleb128 0x3
 4774 16cc 0A       		.byte	0xa
 4775 16cd 1F04     		.2byte	0x41f
 4776 16cf 00       		.byte	0
 4777 16d0 1E       		.uleb128 0x1e
 4778 16d1 2C000000 		.4byte	.LVL198
 4779 16d5 24150000 		.4byte	0x1524
 4780 16d9 1D       		.uleb128 0x1d
 4781 16da 01       		.uleb128 0x1
 4782 16db 50       		.byte	0x50
 4783 16dc 02       		.uleb128 0x2
 4784 16dd 75       		.byte	0x75
 4785 16de 00       		.sleb128 0
 4786 16df 1D       		.uleb128 0x1d
 4787 16e0 01       		.uleb128 0x1
 4788 16e1 51       		.byte	0x51
 4789 16e2 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 145


 4790 16e3 74       		.byte	0x74
 4791 16e4 00       		.sleb128 0
 4792 16e5 1D       		.uleb128 0x1d
 4793 16e6 01       		.uleb128 0x1
 4794 16e7 52       		.byte	0x52
 4795 16e8 02       		.uleb128 0x2
 4796 16e9 76       		.byte	0x76
 4797 16ea 00       		.sleb128 0
 4798 16eb 00       		.byte	0
 4799 16ec 00       		.byte	0
 4800 16ed 2B       		.uleb128 0x2b
 4801 16ee 81050000 		.4byte	.LASF290
 4802 16f2 01       		.byte	0x1
 4803 16f3 6804     		.2byte	0x468
 4804 16f5 CE000000 		.4byte	0xce
 4805 16f9 00000000 		.4byte	.LFB212
 4806 16fd 5C000000 		.4byte	.LFE212-.LFB212
 4807 1701 01       		.uleb128 0x1
 4808 1702 9C       		.byte	0x9c
 4809 1703 82170000 		.4byte	0x1782
 4810 1707 22       		.uleb128 0x22
 4811 1708 F6040000 		.4byte	.LASF180
 4812 170c 01       		.byte	0x1
 4813 170d 6804     		.2byte	0x468
 4814 170f BF0C0000 		.4byte	0xcbf
 4815 1713 5E0B0000 		.4byte	.LLST64
 4816 1717 22       		.uleb128 0x22
 4817 1718 81000000 		.4byte	.LASF242
 4818 171c 01       		.byte	0x1
 4819 171d 6804     		.2byte	0x468
 4820 171f D9000000 		.4byte	0xd9
 4821 1723 A30B0000 		.4byte	.LLST65
 4822 1727 22       		.uleb128 0x22
 4823 1728 10010000 		.4byte	.LASF283
 4824 172c 01       		.byte	0x1
 4825 172d 6804     		.2byte	0x468
 4826 172f B8000000 		.4byte	0xb8
 4827 1733 CF0B0000 		.4byte	.LLST66
 4828 1737 24       		.uleb128 0x24
 4829 1738 17090000 		.4byte	.LASF291
 4830 173c 01       		.byte	0x1
 4831 173d 6C04     		.2byte	0x46c
 4832 173f E4000000 		.4byte	0xe4
 4833 1743 140C0000 		.4byte	.LLST67
 4834 1747 1C       		.uleb128 0x1c
 4835 1748 16000000 		.4byte	.LVL213
 4836 174c 0C1A0000 		.4byte	0x1a0c
 4837 1750 65170000 		.4byte	0x1765
 4838 1754 1D       		.uleb128 0x1d
 4839 1755 01       		.uleb128 0x1
 4840 1756 50       		.byte	0x50
 4841 1757 05       		.uleb128 0x5
 4842 1758 03       		.byte	0x3
 4843 1759 00000000 		.4byte	.LC0
 4844 175d 1D       		.uleb128 0x1d
 4845 175e 01       		.uleb128 0x1
 4846 175f 51       		.byte	0x51
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 146


 4847 1760 03       		.uleb128 0x3
 4848 1761 0A       		.byte	0xa
 4849 1762 6A04     		.2byte	0x46a
 4850 1764 00       		.byte	0
 4851 1765 1E       		.uleb128 0x1e
 4852 1766 2C000000 		.4byte	.LVL214
 4853 176a 24150000 		.4byte	0x1524
 4854 176e 1D       		.uleb128 0x1d
 4855 176f 01       		.uleb128 0x1
 4856 1770 50       		.byte	0x50
 4857 1771 02       		.uleb128 0x2
 4858 1772 75       		.byte	0x75
 4859 1773 00       		.sleb128 0
 4860 1774 1D       		.uleb128 0x1d
 4861 1775 01       		.uleb128 0x1
 4862 1776 51       		.byte	0x51
 4863 1777 02       		.uleb128 0x2
 4864 1778 74       		.byte	0x74
 4865 1779 00       		.sleb128 0
 4866 177a 1D       		.uleb128 0x1d
 4867 177b 01       		.uleb128 0x1
 4868 177c 52       		.byte	0x52
 4869 177d 02       		.uleb128 0x2
 4870 177e 76       		.byte	0x76
 4871 177f 00       		.sleb128 0
 4872 1780 00       		.byte	0
 4873 1781 00       		.byte	0
 4874 1782 21       		.uleb128 0x21
 4875 1783 93110000 		.4byte	.LASF292
 4876 1787 01       		.byte	0x1
 4877 1788 9C04     		.2byte	0x49c
 4878 178a 00000000 		.4byte	.LFB213
 4879 178e 4C000000 		.4byte	.LFE213-.LFB213
 4880 1792 01       		.uleb128 0x1
 4881 1793 9C       		.byte	0x9c
 4882 1794 4F180000 		.4byte	0x184f
 4883 1798 22       		.uleb128 0x22
 4884 1799 F6040000 		.4byte	.LASF180
 4885 179d 01       		.byte	0x1
 4886 179e 9C04     		.2byte	0x49c
 4887 17a0 EE0E0000 		.4byte	0xeee
 4888 17a4 540C0000 		.4byte	.LLST68
 4889 17a8 22       		.uleb128 0x22
 4890 17a9 E5000000 		.4byte	.LASF293
 4891 17ad 01       		.byte	0x1
 4892 17ae 9C04     		.2byte	0x49c
 4893 17b0 A10A0000 		.4byte	0xaa1
 4894 17b4 800C0000 		.4byte	.LLST69
 4895 17b8 22       		.uleb128 0x22
 4896 17b9 840E0000 		.4byte	.LASF294
 4897 17bd 01       		.byte	0x1
 4898 17be 9C04     		.2byte	0x49c
 4899 17c0 D9000000 		.4byte	0xd9
 4900 17c4 A10C0000 		.4byte	.LLST70
 4901 17c8 22       		.uleb128 0x22
 4902 17c9 AA110000 		.4byte	.LASF295
 4903 17cd 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 147


 4904 17ce 9C04     		.2byte	0x49c
 4905 17d0 5B0A0000 		.4byte	0xa5b
 4906 17d4 E80C0000 		.4byte	.LLST71
 4907 17d8 24       		.uleb128 0x24
 4908 17d9 0A0B0000 		.4byte	.LASF296
 4909 17dd 01       		.byte	0x1
 4910 17de A204     		.2byte	0x4a2
 4911 17e0 4F180000 		.4byte	0x184f
 4912 17e4 090D0000 		.4byte	.LLST72
 4913 17e8 24       		.uleb128 0x24
 4914 17e9 97020000 		.4byte	.LASF297
 4915 17ed 01       		.byte	0x1
 4916 17ee A304     		.2byte	0x4a3
 4917 17f0 4F180000 		.4byte	0x184f
 4918 17f4 300D0000 		.4byte	.LLST73
 4919 17f8 1C       		.uleb128 0x1c
 4920 17f9 14000000 		.4byte	.LVL227
 4921 17fd 0C1A0000 		.4byte	0x1a0c
 4922 1801 16180000 		.4byte	0x1816
 4923 1805 1D       		.uleb128 0x1d
 4924 1806 01       		.uleb128 0x1
 4925 1807 50       		.byte	0x50
 4926 1808 05       		.uleb128 0x5
 4927 1809 03       		.byte	0x3
 4928 180a 00000000 		.4byte	.LC0
 4929 180e 1D       		.uleb128 0x1d
 4930 180f 01       		.uleb128 0x1
 4931 1810 51       		.byte	0x51
 4932 1811 03       		.uleb128 0x3
 4933 1812 0A       		.byte	0xa
 4934 1813 9E04     		.2byte	0x49e
 4935 1815 00       		.byte	0
 4936 1816 1C       		.uleb128 0x1c
 4937 1817 24000000 		.4byte	.LVL228
 4938 181b 0C1A0000 		.4byte	0x1a0c
 4939 181f 34180000 		.4byte	0x1834
 4940 1823 1D       		.uleb128 0x1d
 4941 1824 01       		.uleb128 0x1
 4942 1825 50       		.byte	0x50
 4943 1826 05       		.uleb128 0x5
 4944 1827 03       		.byte	0x3
 4945 1828 00000000 		.4byte	.LC0
 4946 182c 1D       		.uleb128 0x1d
 4947 182d 01       		.uleb128 0x1
 4948 182e 51       		.byte	0x51
 4949 182f 03       		.uleb128 0x3
 4950 1830 0A       		.byte	0xa
 4951 1831 9F04     		.2byte	0x49f
 4952 1833 00       		.byte	0
 4953 1834 1E       		.uleb128 0x1e
 4954 1835 32000000 		.4byte	.LVL229
 4955 1839 0C1A0000 		.4byte	0x1a0c
 4956 183d 1D       		.uleb128 0x1d
 4957 183e 01       		.uleb128 0x1
 4958 183f 50       		.byte	0x50
 4959 1840 05       		.uleb128 0x5
 4960 1841 03       		.byte	0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 148


 4961 1842 00000000 		.4byte	.LC0
 4962 1846 1D       		.uleb128 0x1d
 4963 1847 01       		.uleb128 0x1
 4964 1848 51       		.byte	0x51
 4965 1849 03       		.uleb128 0x3
 4966 184a 0A       		.byte	0xa
 4967 184b A004     		.2byte	0x4a0
 4968 184d 00       		.byte	0
 4969 184e 00       		.byte	0
 4970 184f 15       		.uleb128 0x15
 4971 1850 04       		.byte	0x4
 4972 1851 FD000000 		.4byte	0xfd
 4973 1855 25       		.uleb128 0x25
 4974 1856 BB080000 		.4byte	.LASF298
 4975 185a 01       		.byte	0x1
 4976 185b CA04     		.2byte	0x4ca
 4977 185d D9000000 		.4byte	0xd9
 4978 1861 00000000 		.4byte	.LFB214
 4979 1865 1C000000 		.4byte	.LFE214-.LFB214
 4980 1869 01       		.uleb128 0x1
 4981 186a 9C       		.byte	0x9c
 4982 186b AA180000 		.4byte	0x18aa
 4983 186f 22       		.uleb128 0x22
 4984 1870 F6040000 		.4byte	.LASF180
 4985 1874 01       		.byte	0x1
 4986 1875 CA04     		.2byte	0x4ca
 4987 1877 BF0C0000 		.4byte	0xcbf
 4988 187b 570D0000 		.4byte	.LLST74
 4989 187f 22       		.uleb128 0x22
 4990 1880 E5000000 		.4byte	.LASF293
 4991 1884 01       		.byte	0x1
 4992 1885 CA04     		.2byte	0x4ca
 4993 1887 A10A0000 		.4byte	0xaa1
 4994 188b 830D0000 		.4byte	.LLST75
 4995 188f 1E       		.uleb128 0x1e
 4996 1890 10000000 		.4byte	.LVL236
 4997 1894 0C1A0000 		.4byte	0x1a0c
 4998 1898 1D       		.uleb128 0x1d
 4999 1899 01       		.uleb128 0x1
 5000 189a 50       		.byte	0x50
 5001 189b 05       		.uleb128 0x5
 5002 189c 03       		.byte	0x3
 5003 189d 00000000 		.4byte	.LC0
 5004 18a1 1D       		.uleb128 0x1d
 5005 18a2 01       		.uleb128 0x1
 5006 18a3 51       		.byte	0x51
 5007 18a4 03       		.uleb128 0x3
 5008 18a5 0A       		.byte	0xa
 5009 18a6 CC04     		.2byte	0x4cc
 5010 18a8 00       		.byte	0
 5011 18a9 00       		.byte	0
 5012 18aa 21       		.uleb128 0x21
 5013 18ab 57070000 		.4byte	.LASF299
 5014 18af 01       		.byte	0x1
 5015 18b0 EB04     		.2byte	0x4eb
 5016 18b2 00000000 		.4byte	.LFB215
 5017 18b6 4C000000 		.4byte	.LFE215-.LFB215
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 149


 5018 18ba 01       		.uleb128 0x1
 5019 18bb 9C       		.byte	0x9c
 5020 18bc 29190000 		.4byte	0x1929
 5021 18c0 22       		.uleb128 0x22
 5022 18c1 F6040000 		.4byte	.LASF180
 5023 18c5 01       		.byte	0x1
 5024 18c6 EB04     		.2byte	0x4eb
 5025 18c8 EE0E0000 		.4byte	0xeee
 5026 18cc A40D0000 		.4byte	.LLST76
 5027 18d0 22       		.uleb128 0x22
 5028 18d1 840E0000 		.4byte	.LASF294
 5029 18d5 01       		.byte	0x1
 5030 18d6 EB04     		.2byte	0x4eb
 5031 18d8 D9000000 		.4byte	0xd9
 5032 18dc D00D0000 		.4byte	.LLST77
 5033 18e0 22       		.uleb128 0x22
 5034 18e1 F1050000 		.4byte	.LASF222
 5035 18e5 01       		.byte	0x1
 5036 18e6 EB04     		.2byte	0x4eb
 5037 18e8 810A0000 		.4byte	0xa81
 5038 18ec 150E0000 		.4byte	.LLST78
 5039 18f0 1C       		.uleb128 0x1c
 5040 18f1 1C000000 		.4byte	.LVL241
 5041 18f5 0C1A0000 		.4byte	0x1a0c
 5042 18f9 0E190000 		.4byte	0x190e
 5043 18fd 1D       		.uleb128 0x1d
 5044 18fe 01       		.uleb128 0x1
 5045 18ff 50       		.byte	0x50
 5046 1900 05       		.uleb128 0x5
 5047 1901 03       		.byte	0x3
 5048 1902 00000000 		.4byte	.LC0
 5049 1906 1D       		.uleb128 0x1d
 5050 1907 01       		.uleb128 0x1
 5051 1908 51       		.byte	0x51
 5052 1909 03       		.uleb128 0x3
 5053 190a 0A       		.byte	0xa
 5054 190b ED04     		.2byte	0x4ed
 5055 190d 00       		.byte	0
 5056 190e 1E       		.uleb128 0x1e
 5057 190f 2A000000 		.4byte	.LVL242
 5058 1913 0C1A0000 		.4byte	0x1a0c
 5059 1917 1D       		.uleb128 0x1d
 5060 1918 01       		.uleb128 0x1
 5061 1919 50       		.byte	0x50
 5062 191a 05       		.uleb128 0x5
 5063 191b 03       		.byte	0x3
 5064 191c 00000000 		.4byte	.LC0
 5065 1920 1D       		.uleb128 0x1d
 5066 1921 01       		.uleb128 0x1
 5067 1922 51       		.byte	0x51
 5068 1923 03       		.uleb128 0x3
 5069 1924 0A       		.byte	0xa
 5070 1925 EE04     		.2byte	0x4ee
 5071 1927 00       		.byte	0
 5072 1928 00       		.byte	0
 5073 1929 25       		.uleb128 0x25
 5074 192a 71040000 		.4byte	.LASF300
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 150


 5075 192e 01       		.byte	0x1
 5076 192f 1205     		.2byte	0x512
 5077 1931 44090000 		.4byte	0x944
 5078 1935 00000000 		.4byte	.LFB216
 5079 1939 1C000000 		.4byte	.LFE216-.LFB216
 5080 193d 01       		.uleb128 0x1
 5081 193e 9C       		.byte	0x9c
 5082 193f 83190000 		.4byte	0x1983
 5083 1943 22       		.uleb128 0x22
 5084 1944 55120000 		.4byte	.LASF301
 5085 1948 01       		.byte	0x1
 5086 1949 1205     		.2byte	0x512
 5087 194b B4090000 		.4byte	0x9b4
 5088 194f 360E0000 		.4byte	.LLST79
 5089 1953 22       		.uleb128 0x22
 5090 1954 F10E0000 		.4byte	.LASF260
 5091 1958 01       		.byte	0x1
 5092 1959 1205     		.2byte	0x512
 5093 195b 76090000 		.4byte	0x976
 5094 195f 700E0000 		.4byte	.LLST80
 5095 1963 2C       		.uleb128 0x2c
 5096 1964 870B0000 		.4byte	.LASF302
 5097 1968 01       		.byte	0x1
 5098 1969 1405     		.2byte	0x514
 5099 196b 44090000 		.4byte	0x944
 5100 196f 00       		.byte	0
 5101 1970 2D       		.uleb128 0x2d
 5102 1971 0C000000 		.4byte	.LVL250
 5103 1975 66100000 		.4byte	0x1066
 5104 1979 2D       		.uleb128 0x2d
 5105 197a 18000000 		.4byte	.LVL253
 5106 197e F10F0000 		.4byte	0xff1
 5107 1982 00       		.byte	0
 5108 1983 1F       		.uleb128 0x1f
 5109 1984 ED130000 		.4byte	.LASF303
 5110 1988 01       		.byte	0x1
 5111 1989 16       		.byte	0x16
 5112 198a 890C0000 		.4byte	0xc89
 5113 198e 05       		.uleb128 0x5
 5114 198f 03       		.byte	0x3
 5115 1990 00000000 		.4byte	enabledBeforeSleep
 5116 1994 2E       		.uleb128 0x2e
 5117 1995 BE0D0000 		.4byte	.LASF304
 5118 1999 0A       		.byte	0xa
 5119 199a F907     		.2byte	0x7f9
 5120 199c A0190000 		.4byte	0x19a0
 5121 19a0 05       		.uleb128 0x5
 5122 19a1 CE000000 		.4byte	0xce
 5123 19a5 2F       		.uleb128 0x2f
 5124 19a6 77000000 		.4byte	.LASF305
 5125 19aa 07       		.byte	0x7
 5126 19ab A7       		.byte	0xa7
 5127 19ac B0190000 		.4byte	0x19b0
 5128 19b0 15       		.uleb128 0x15
 5129 19b1 04       		.byte	0x4
 5130 19b2 B6190000 		.4byte	0x19b6
 5131 19b6 06       		.uleb128 0x6
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 151


 5132 19b7 BF080000 		.4byte	0x8bf
 5133 19bb 07       		.uleb128 0x7
 5134 19bc CB190000 		.4byte	0x19cb
 5135 19c0 CB190000 		.4byte	0x19cb
 5136 19c4 08       		.uleb128 0x8
 5137 19c5 F6000000 		.4byte	0xf6
 5138 19c9 0F       		.byte	0xf
 5139 19ca 00       		.byte	0
 5140 19cb 05       		.uleb128 0x5
 5141 19cc B8000000 		.4byte	0xb8
 5142 19d0 30       		.uleb128 0x30
 5143 19d1 0A0A0000 		.4byte	.LASF306
 5144 19d5 01       		.byte	0x1
 5145 19d6 1C       		.byte	0x1c
 5146 19d7 E1190000 		.4byte	0x19e1
 5147 19db 05       		.uleb128 0x5
 5148 19dc 03       		.byte	0x3
 5149 19dd 00000000 		.4byte	Cy_SAR_offset
 5150 19e1 05       		.uleb128 0x5
 5151 19e2 BB190000 		.4byte	0x19bb
 5152 19e6 07       		.uleb128 0x7
 5153 19e7 A0190000 		.4byte	0x19a0
 5154 19eb F6190000 		.4byte	0x19f6
 5155 19ef 08       		.uleb128 0x8
 5156 19f0 F6000000 		.4byte	0xf6
 5157 19f4 0F       		.byte	0xf
 5158 19f5 00       		.byte	0
 5159 19f6 30       		.uleb128 0x30
 5160 19f7 4F0B0000 		.4byte	.LASF307
 5161 19fb 01       		.byte	0x1
 5162 19fc 1D       		.byte	0x1d
 5163 19fd 071A0000 		.4byte	0x1a07
 5164 1a01 05       		.uleb128 0x5
 5165 1a02 03       		.byte	0x3
 5166 1a03 00000000 		.4byte	Cy_SAR_countsPer10Volt
 5167 1a07 05       		.uleb128 0x5
 5168 1a08 E6190000 		.4byte	0x19e6
 5169 1a0c 31       		.uleb128 0x31
 5170 1a0d 3E080000 		.4byte	.LASF308
 5171 1a11 3E080000 		.4byte	.LASF308
 5172 1a15 08       		.byte	0x8
 5173 1a16 9203     		.2byte	0x392
 5174 1a18 31       		.uleb128 0x31
 5175 1a19 9D100000 		.4byte	.LASF309
 5176 1a1d 9D100000 		.4byte	.LASF309
 5177 1a21 08       		.byte	0x8
 5178 1a22 8A03     		.2byte	0x38a
 5179 1a24 00       		.byte	0
 5180              		.section	.debug_abbrev,"",%progbits
 5181              	.Ldebug_abbrev0:
 5182 0000 01       		.uleb128 0x1
 5183 0001 11       		.uleb128 0x11
 5184 0002 01       		.byte	0x1
 5185 0003 25       		.uleb128 0x25
 5186 0004 0E       		.uleb128 0xe
 5187 0005 13       		.uleb128 0x13
 5188 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 152


 5189 0007 03       		.uleb128 0x3
 5190 0008 0E       		.uleb128 0xe
 5191 0009 1B       		.uleb128 0x1b
 5192 000a 0E       		.uleb128 0xe
 5193 000b 55       		.uleb128 0x55
 5194 000c 17       		.uleb128 0x17
 5195 000d 11       		.uleb128 0x11
 5196 000e 01       		.uleb128 0x1
 5197 000f 10       		.uleb128 0x10
 5198 0010 17       		.uleb128 0x17
 5199 0011 00       		.byte	0
 5200 0012 00       		.byte	0
 5201 0013 02       		.uleb128 0x2
 5202 0014 24       		.uleb128 0x24
 5203 0015 00       		.byte	0
 5204 0016 0B       		.uleb128 0xb
 5205 0017 0B       		.uleb128 0xb
 5206 0018 3E       		.uleb128 0x3e
 5207 0019 0B       		.uleb128 0xb
 5208 001a 03       		.uleb128 0x3
 5209 001b 0E       		.uleb128 0xe
 5210 001c 00       		.byte	0
 5211 001d 00       		.byte	0
 5212 001e 03       		.uleb128 0x3
 5213 001f 16       		.uleb128 0x16
 5214 0020 00       		.byte	0
 5215 0021 03       		.uleb128 0x3
 5216 0022 0E       		.uleb128 0xe
 5217 0023 3A       		.uleb128 0x3a
 5218 0024 0B       		.uleb128 0xb
 5219 0025 3B       		.uleb128 0x3b
 5220 0026 0B       		.uleb128 0xb
 5221 0027 49       		.uleb128 0x49
 5222 0028 13       		.uleb128 0x13
 5223 0029 00       		.byte	0
 5224 002a 00       		.byte	0
 5225 002b 04       		.uleb128 0x4
 5226 002c 24       		.uleb128 0x24
 5227 002d 00       		.byte	0
 5228 002e 0B       		.uleb128 0xb
 5229 002f 0B       		.uleb128 0xb
 5230 0030 3E       		.uleb128 0x3e
 5231 0031 0B       		.uleb128 0xb
 5232 0032 03       		.uleb128 0x3
 5233 0033 08       		.uleb128 0x8
 5234 0034 00       		.byte	0
 5235 0035 00       		.byte	0
 5236 0036 05       		.uleb128 0x5
 5237 0037 35       		.uleb128 0x35
 5238 0038 00       		.byte	0
 5239 0039 49       		.uleb128 0x49
 5240 003a 13       		.uleb128 0x13
 5241 003b 00       		.byte	0
 5242 003c 00       		.byte	0
 5243 003d 06       		.uleb128 0x6
 5244 003e 26       		.uleb128 0x26
 5245 003f 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 153


 5246 0040 49       		.uleb128 0x49
 5247 0041 13       		.uleb128 0x13
 5248 0042 00       		.byte	0
 5249 0043 00       		.byte	0
 5250 0044 07       		.uleb128 0x7
 5251 0045 01       		.uleb128 0x1
 5252 0046 01       		.byte	0x1
 5253 0047 49       		.uleb128 0x49
 5254 0048 13       		.uleb128 0x13
 5255 0049 01       		.uleb128 0x1
 5256 004a 13       		.uleb128 0x13
 5257 004b 00       		.byte	0
 5258 004c 00       		.byte	0
 5259 004d 08       		.uleb128 0x8
 5260 004e 21       		.uleb128 0x21
 5261 004f 00       		.byte	0
 5262 0050 49       		.uleb128 0x49
 5263 0051 13       		.uleb128 0x13
 5264 0052 2F       		.uleb128 0x2f
 5265 0053 0B       		.uleb128 0xb
 5266 0054 00       		.byte	0
 5267 0055 00       		.byte	0
 5268 0056 09       		.uleb128 0x9
 5269 0057 13       		.uleb128 0x13
 5270 0058 01       		.byte	0x1
 5271 0059 0B       		.uleb128 0xb
 5272 005a 05       		.uleb128 0x5
 5273 005b 3A       		.uleb128 0x3a
 5274 005c 0B       		.uleb128 0xb
 5275 005d 3B       		.uleb128 0x3b
 5276 005e 0B       		.uleb128 0xb
 5277 005f 01       		.uleb128 0x1
 5278 0060 13       		.uleb128 0x13
 5279 0061 00       		.byte	0
 5280 0062 00       		.byte	0
 5281 0063 0A       		.uleb128 0xa
 5282 0064 0D       		.uleb128 0xd
 5283 0065 00       		.byte	0
 5284 0066 03       		.uleb128 0x3
 5285 0067 0E       		.uleb128 0xe
 5286 0068 3A       		.uleb128 0x3a
 5287 0069 0B       		.uleb128 0xb
 5288 006a 3B       		.uleb128 0x3b
 5289 006b 0B       		.uleb128 0xb
 5290 006c 49       		.uleb128 0x49
 5291 006d 13       		.uleb128 0x13
 5292 006e 38       		.uleb128 0x38
 5293 006f 0B       		.uleb128 0xb
 5294 0070 00       		.byte	0
 5295 0071 00       		.byte	0
 5296 0072 0B       		.uleb128 0xb
 5297 0073 0D       		.uleb128 0xd
 5298 0074 00       		.byte	0
 5299 0075 03       		.uleb128 0x3
 5300 0076 0E       		.uleb128 0xe
 5301 0077 3A       		.uleb128 0x3a
 5302 0078 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 154


 5303 0079 3B       		.uleb128 0x3b
 5304 007a 0B       		.uleb128 0xb
 5305 007b 49       		.uleb128 0x49
 5306 007c 13       		.uleb128 0x13
 5307 007d 38       		.uleb128 0x38
 5308 007e 05       		.uleb128 0x5
 5309 007f 00       		.byte	0
 5310 0080 00       		.byte	0
 5311 0081 0C       		.uleb128 0xc
 5312 0082 21       		.uleb128 0x21
 5313 0083 00       		.byte	0
 5314 0084 49       		.uleb128 0x49
 5315 0085 13       		.uleb128 0x13
 5316 0086 2F       		.uleb128 0x2f
 5317 0087 05       		.uleb128 0x5
 5318 0088 00       		.byte	0
 5319 0089 00       		.byte	0
 5320 008a 0D       		.uleb128 0xd
 5321 008b 16       		.uleb128 0x16
 5322 008c 00       		.byte	0
 5323 008d 03       		.uleb128 0x3
 5324 008e 0E       		.uleb128 0xe
 5325 008f 3A       		.uleb128 0x3a
 5326 0090 0B       		.uleb128 0xb
 5327 0091 3B       		.uleb128 0x3b
 5328 0092 05       		.uleb128 0x5
 5329 0093 49       		.uleb128 0x49
 5330 0094 13       		.uleb128 0x13
 5331 0095 00       		.byte	0
 5332 0096 00       		.byte	0
 5333 0097 0E       		.uleb128 0xe
 5334 0098 13       		.uleb128 0x13
 5335 0099 01       		.byte	0x1
 5336 009a 0B       		.uleb128 0xb
 5337 009b 0B       		.uleb128 0xb
 5338 009c 3A       		.uleb128 0x3a
 5339 009d 0B       		.uleb128 0xb
 5340 009e 3B       		.uleb128 0x3b
 5341 009f 0B       		.uleb128 0xb
 5342 00a0 01       		.uleb128 0x1
 5343 00a1 13       		.uleb128 0x13
 5344 00a2 00       		.byte	0
 5345 00a3 00       		.byte	0
 5346 00a4 0F       		.uleb128 0xf
 5347 00a5 04       		.uleb128 0x4
 5348 00a6 01       		.byte	0x1
 5349 00a7 0B       		.uleb128 0xb
 5350 00a8 0B       		.uleb128 0xb
 5351 00a9 49       		.uleb128 0x49
 5352 00aa 13       		.uleb128 0x13
 5353 00ab 3A       		.uleb128 0x3a
 5354 00ac 0B       		.uleb128 0xb
 5355 00ad 3B       		.uleb128 0x3b
 5356 00ae 05       		.uleb128 0x5
 5357 00af 01       		.uleb128 0x1
 5358 00b0 13       		.uleb128 0x13
 5359 00b1 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 155


 5360 00b2 00       		.byte	0
 5361 00b3 10       		.uleb128 0x10
 5362 00b4 28       		.uleb128 0x28
 5363 00b5 00       		.byte	0
 5364 00b6 03       		.uleb128 0x3
 5365 00b7 0E       		.uleb128 0xe
 5366 00b8 1C       		.uleb128 0x1c
 5367 00b9 0B       		.uleb128 0xb
 5368 00ba 00       		.byte	0
 5369 00bb 00       		.byte	0
 5370 00bc 11       		.uleb128 0x11
 5371 00bd 28       		.uleb128 0x28
 5372 00be 00       		.byte	0
 5373 00bf 03       		.uleb128 0x3
 5374 00c0 0E       		.uleb128 0xe
 5375 00c1 1C       		.uleb128 0x1c
 5376 00c2 06       		.uleb128 0x6
 5377 00c3 00       		.byte	0
 5378 00c4 00       		.byte	0
 5379 00c5 12       		.uleb128 0x12
 5380 00c6 13       		.uleb128 0x13
 5381 00c7 01       		.byte	0x1
 5382 00c8 0B       		.uleb128 0xb
 5383 00c9 0B       		.uleb128 0xb
 5384 00ca 3A       		.uleb128 0x3a
 5385 00cb 0B       		.uleb128 0xb
 5386 00cc 3B       		.uleb128 0x3b
 5387 00cd 05       		.uleb128 0x5
 5388 00ce 01       		.uleb128 0x1
 5389 00cf 13       		.uleb128 0x13
 5390 00d0 00       		.byte	0
 5391 00d1 00       		.byte	0
 5392 00d2 13       		.uleb128 0x13
 5393 00d3 0D       		.uleb128 0xd
 5394 00d4 00       		.byte	0
 5395 00d5 03       		.uleb128 0x3
 5396 00d6 0E       		.uleb128 0xe
 5397 00d7 3A       		.uleb128 0x3a
 5398 00d8 0B       		.uleb128 0xb
 5399 00d9 3B       		.uleb128 0x3b
 5400 00da 05       		.uleb128 0x5
 5401 00db 49       		.uleb128 0x49
 5402 00dc 13       		.uleb128 0x13
 5403 00dd 38       		.uleb128 0x38
 5404 00de 0B       		.uleb128 0xb
 5405 00df 00       		.byte	0
 5406 00e0 00       		.byte	0
 5407 00e1 14       		.uleb128 0x14
 5408 00e2 0F       		.uleb128 0xf
 5409 00e3 00       		.byte	0
 5410 00e4 0B       		.uleb128 0xb
 5411 00e5 0B       		.uleb128 0xb
 5412 00e6 00       		.byte	0
 5413 00e7 00       		.byte	0
 5414 00e8 15       		.uleb128 0x15
 5415 00e9 0F       		.uleb128 0xf
 5416 00ea 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 156


 5417 00eb 0B       		.uleb128 0xb
 5418 00ec 0B       		.uleb128 0xb
 5419 00ed 49       		.uleb128 0x49
 5420 00ee 13       		.uleb128 0x13
 5421 00ef 00       		.byte	0
 5422 00f0 00       		.byte	0
 5423 00f1 16       		.uleb128 0x16
 5424 00f2 28       		.uleb128 0x28
 5425 00f3 00       		.byte	0
 5426 00f4 03       		.uleb128 0x3
 5427 00f5 0E       		.uleb128 0xe
 5428 00f6 1C       		.uleb128 0x1c
 5429 00f7 05       		.uleb128 0x5
 5430 00f8 00       		.byte	0
 5431 00f9 00       		.byte	0
 5432 00fa 17       		.uleb128 0x17
 5433 00fb 2E       		.uleb128 0x2e
 5434 00fc 01       		.byte	0x1
 5435 00fd 03       		.uleb128 0x3
 5436 00fe 0E       		.uleb128 0xe
 5437 00ff 3A       		.uleb128 0x3a
 5438 0100 0B       		.uleb128 0xb
 5439 0101 3B       		.uleb128 0x3b
 5440 0102 05       		.uleb128 0x5
 5441 0103 27       		.uleb128 0x27
 5442 0104 19       		.uleb128 0x19
 5443 0105 49       		.uleb128 0x49
 5444 0106 13       		.uleb128 0x13
 5445 0107 20       		.uleb128 0x20
 5446 0108 0B       		.uleb128 0xb
 5447 0109 01       		.uleb128 0x1
 5448 010a 13       		.uleb128 0x13
 5449 010b 00       		.byte	0
 5450 010c 00       		.byte	0
 5451 010d 18       		.uleb128 0x18
 5452 010e 05       		.uleb128 0x5
 5453 010f 00       		.byte	0
 5454 0110 03       		.uleb128 0x3
 5455 0111 0E       		.uleb128 0xe
 5456 0112 3A       		.uleb128 0x3a
 5457 0113 0B       		.uleb128 0xb
 5458 0114 3B       		.uleb128 0x3b
 5459 0115 05       		.uleb128 0x5
 5460 0116 49       		.uleb128 0x49
 5461 0117 13       		.uleb128 0x13
 5462 0118 00       		.byte	0
 5463 0119 00       		.byte	0
 5464 011a 19       		.uleb128 0x19
 5465 011b 2E       		.uleb128 0x2e
 5466 011c 01       		.byte	0x1
 5467 011d 3F       		.uleb128 0x3f
 5468 011e 19       		.uleb128 0x19
 5469 011f 03       		.uleb128 0x3
 5470 0120 0E       		.uleb128 0xe
 5471 0121 3A       		.uleb128 0x3a
 5472 0122 0B       		.uleb128 0xb
 5473 0123 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 157


 5474 0124 0B       		.uleb128 0xb
 5475 0125 27       		.uleb128 0x27
 5476 0126 19       		.uleb128 0x19
 5477 0127 49       		.uleb128 0x49
 5478 0128 13       		.uleb128 0x13
 5479 0129 11       		.uleb128 0x11
 5480 012a 01       		.uleb128 0x1
 5481 012b 12       		.uleb128 0x12
 5482 012c 06       		.uleb128 0x6
 5483 012d 40       		.uleb128 0x40
 5484 012e 18       		.uleb128 0x18
 5485 012f 9742     		.uleb128 0x2117
 5486 0131 19       		.uleb128 0x19
 5487 0132 01       		.uleb128 0x1
 5488 0133 13       		.uleb128 0x13
 5489 0134 00       		.byte	0
 5490 0135 00       		.byte	0
 5491 0136 1A       		.uleb128 0x1a
 5492 0137 05       		.uleb128 0x5
 5493 0138 00       		.byte	0
 5494 0139 03       		.uleb128 0x3
 5495 013a 0E       		.uleb128 0xe
 5496 013b 3A       		.uleb128 0x3a
 5497 013c 0B       		.uleb128 0xb
 5498 013d 3B       		.uleb128 0x3b
 5499 013e 0B       		.uleb128 0xb
 5500 013f 49       		.uleb128 0x49
 5501 0140 13       		.uleb128 0x13
 5502 0141 02       		.uleb128 0x2
 5503 0142 17       		.uleb128 0x17
 5504 0143 00       		.byte	0
 5505 0144 00       		.byte	0
 5506 0145 1B       		.uleb128 0x1b
 5507 0146 34       		.uleb128 0x34
 5508 0147 00       		.byte	0
 5509 0148 03       		.uleb128 0x3
 5510 0149 0E       		.uleb128 0xe
 5511 014a 3A       		.uleb128 0x3a
 5512 014b 0B       		.uleb128 0xb
 5513 014c 3B       		.uleb128 0x3b
 5514 014d 0B       		.uleb128 0xb
 5515 014e 49       		.uleb128 0x49
 5516 014f 13       		.uleb128 0x13
 5517 0150 02       		.uleb128 0x2
 5518 0151 17       		.uleb128 0x17
 5519 0152 00       		.byte	0
 5520 0153 00       		.byte	0
 5521 0154 1C       		.uleb128 0x1c
 5522 0155 898201   		.uleb128 0x4109
 5523 0158 01       		.byte	0x1
 5524 0159 11       		.uleb128 0x11
 5525 015a 01       		.uleb128 0x1
 5526 015b 31       		.uleb128 0x31
 5527 015c 13       		.uleb128 0x13
 5528 015d 01       		.uleb128 0x1
 5529 015e 13       		.uleb128 0x13
 5530 015f 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 158


 5531 0160 00       		.byte	0
 5532 0161 1D       		.uleb128 0x1d
 5533 0162 8A8201   		.uleb128 0x410a
 5534 0165 00       		.byte	0
 5535 0166 02       		.uleb128 0x2
 5536 0167 18       		.uleb128 0x18
 5537 0168 9142     		.uleb128 0x2111
 5538 016a 18       		.uleb128 0x18
 5539 016b 00       		.byte	0
 5540 016c 00       		.byte	0
 5541 016d 1E       		.uleb128 0x1e
 5542 016e 898201   		.uleb128 0x4109
 5543 0171 01       		.byte	0x1
 5544 0172 11       		.uleb128 0x11
 5545 0173 01       		.uleb128 0x1
 5546 0174 31       		.uleb128 0x31
 5547 0175 13       		.uleb128 0x13
 5548 0176 00       		.byte	0
 5549 0177 00       		.byte	0
 5550 0178 1F       		.uleb128 0x1f
 5551 0179 34       		.uleb128 0x34
 5552 017a 00       		.byte	0
 5553 017b 03       		.uleb128 0x3
 5554 017c 0E       		.uleb128 0xe
 5555 017d 3A       		.uleb128 0x3a
 5556 017e 0B       		.uleb128 0xb
 5557 017f 3B       		.uleb128 0x3b
 5558 0180 0B       		.uleb128 0xb
 5559 0181 49       		.uleb128 0x49
 5560 0182 13       		.uleb128 0x13
 5561 0183 02       		.uleb128 0x2
 5562 0184 18       		.uleb128 0x18
 5563 0185 00       		.byte	0
 5564 0186 00       		.byte	0
 5565 0187 20       		.uleb128 0x20
 5566 0188 2E       		.uleb128 0x2e
 5567 0189 01       		.byte	0x1
 5568 018a 3F       		.uleb128 0x3f
 5569 018b 19       		.uleb128 0x19
 5570 018c 03       		.uleb128 0x3
 5571 018d 0E       		.uleb128 0xe
 5572 018e 3A       		.uleb128 0x3a
 5573 018f 0B       		.uleb128 0xb
 5574 0190 3B       		.uleb128 0x3b
 5575 0191 0B       		.uleb128 0xb
 5576 0192 27       		.uleb128 0x27
 5577 0193 19       		.uleb128 0x19
 5578 0194 11       		.uleb128 0x11
 5579 0195 01       		.uleb128 0x1
 5580 0196 12       		.uleb128 0x12
 5581 0197 06       		.uleb128 0x6
 5582 0198 40       		.uleb128 0x40
 5583 0199 18       		.uleb128 0x18
 5584 019a 9742     		.uleb128 0x2117
 5585 019c 19       		.uleb128 0x19
 5586 019d 01       		.uleb128 0x1
 5587 019e 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 159


 5588 019f 00       		.byte	0
 5589 01a0 00       		.byte	0
 5590 01a1 21       		.uleb128 0x21
 5591 01a2 2E       		.uleb128 0x2e
 5592 01a3 01       		.byte	0x1
 5593 01a4 3F       		.uleb128 0x3f
 5594 01a5 19       		.uleb128 0x19
 5595 01a6 03       		.uleb128 0x3
 5596 01a7 0E       		.uleb128 0xe
 5597 01a8 3A       		.uleb128 0x3a
 5598 01a9 0B       		.uleb128 0xb
 5599 01aa 3B       		.uleb128 0x3b
 5600 01ab 05       		.uleb128 0x5
 5601 01ac 27       		.uleb128 0x27
 5602 01ad 19       		.uleb128 0x19
 5603 01ae 11       		.uleb128 0x11
 5604 01af 01       		.uleb128 0x1
 5605 01b0 12       		.uleb128 0x12
 5606 01b1 06       		.uleb128 0x6
 5607 01b2 40       		.uleb128 0x40
 5608 01b3 18       		.uleb128 0x18
 5609 01b4 9742     		.uleb128 0x2117
 5610 01b6 19       		.uleb128 0x19
 5611 01b7 01       		.uleb128 0x1
 5612 01b8 13       		.uleb128 0x13
 5613 01b9 00       		.byte	0
 5614 01ba 00       		.byte	0
 5615 01bb 22       		.uleb128 0x22
 5616 01bc 05       		.uleb128 0x5
 5617 01bd 00       		.byte	0
 5618 01be 03       		.uleb128 0x3
 5619 01bf 0E       		.uleb128 0xe
 5620 01c0 3A       		.uleb128 0x3a
 5621 01c1 0B       		.uleb128 0xb
 5622 01c2 3B       		.uleb128 0x3b
 5623 01c3 05       		.uleb128 0x5
 5624 01c4 49       		.uleb128 0x49
 5625 01c5 13       		.uleb128 0x13
 5626 01c6 02       		.uleb128 0x2
 5627 01c7 17       		.uleb128 0x17
 5628 01c8 00       		.byte	0
 5629 01c9 00       		.byte	0
 5630 01ca 23       		.uleb128 0x23
 5631 01cb 05       		.uleb128 0x5
 5632 01cc 00       		.byte	0
 5633 01cd 03       		.uleb128 0x3
 5634 01ce 0E       		.uleb128 0xe
 5635 01cf 3A       		.uleb128 0x3a
 5636 01d0 0B       		.uleb128 0xb
 5637 01d1 3B       		.uleb128 0x3b
 5638 01d2 05       		.uleb128 0x5
 5639 01d3 49       		.uleb128 0x49
 5640 01d4 13       		.uleb128 0x13
 5641 01d5 02       		.uleb128 0x2
 5642 01d6 18       		.uleb128 0x18
 5643 01d7 00       		.byte	0
 5644 01d8 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 160


 5645 01d9 24       		.uleb128 0x24
 5646 01da 34       		.uleb128 0x34
 5647 01db 00       		.byte	0
 5648 01dc 03       		.uleb128 0x3
 5649 01dd 0E       		.uleb128 0xe
 5650 01de 3A       		.uleb128 0x3a
 5651 01df 0B       		.uleb128 0xb
 5652 01e0 3B       		.uleb128 0x3b
 5653 01e1 05       		.uleb128 0x5
 5654 01e2 49       		.uleb128 0x49
 5655 01e3 13       		.uleb128 0x13
 5656 01e4 02       		.uleb128 0x2
 5657 01e5 17       		.uleb128 0x17
 5658 01e6 00       		.byte	0
 5659 01e7 00       		.byte	0
 5660 01e8 25       		.uleb128 0x25
 5661 01e9 2E       		.uleb128 0x2e
 5662 01ea 01       		.byte	0x1
 5663 01eb 3F       		.uleb128 0x3f
 5664 01ec 19       		.uleb128 0x19
 5665 01ed 03       		.uleb128 0x3
 5666 01ee 0E       		.uleb128 0xe
 5667 01ef 3A       		.uleb128 0x3a
 5668 01f0 0B       		.uleb128 0xb
 5669 01f1 3B       		.uleb128 0x3b
 5670 01f2 05       		.uleb128 0x5
 5671 01f3 27       		.uleb128 0x27
 5672 01f4 19       		.uleb128 0x19
 5673 01f5 49       		.uleb128 0x49
 5674 01f6 13       		.uleb128 0x13
 5675 01f7 11       		.uleb128 0x11
 5676 01f8 01       		.uleb128 0x1
 5677 01f9 12       		.uleb128 0x12
 5678 01fa 06       		.uleb128 0x6
 5679 01fb 40       		.uleb128 0x40
 5680 01fc 18       		.uleb128 0x18
 5681 01fd 9742     		.uleb128 0x2117
 5682 01ff 19       		.uleb128 0x19
 5683 0200 01       		.uleb128 0x1
 5684 0201 13       		.uleb128 0x13
 5685 0202 00       		.byte	0
 5686 0203 00       		.byte	0
 5687 0204 26       		.uleb128 0x26
 5688 0205 34       		.uleb128 0x34
 5689 0206 00       		.byte	0
 5690 0207 03       		.uleb128 0x3
 5691 0208 08       		.uleb128 0x8
 5692 0209 3A       		.uleb128 0x3a
 5693 020a 0B       		.uleb128 0xb
 5694 020b 3B       		.uleb128 0x3b
 5695 020c 05       		.uleb128 0x5
 5696 020d 49       		.uleb128 0x49
 5697 020e 13       		.uleb128 0x13
 5698 020f 02       		.uleb128 0x2
 5699 0210 17       		.uleb128 0x17
 5700 0211 00       		.byte	0
 5701 0212 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 161


 5702 0213 27       		.uleb128 0x27
 5703 0214 1D       		.uleb128 0x1d
 5704 0215 01       		.byte	0x1
 5705 0216 31       		.uleb128 0x31
 5706 0217 13       		.uleb128 0x13
 5707 0218 11       		.uleb128 0x11
 5708 0219 01       		.uleb128 0x1
 5709 021a 12       		.uleb128 0x12
 5710 021b 06       		.uleb128 0x6
 5711 021c 58       		.uleb128 0x58
 5712 021d 0B       		.uleb128 0xb
 5713 021e 59       		.uleb128 0x59
 5714 021f 05       		.uleb128 0x5
 5715 0220 01       		.uleb128 0x1
 5716 0221 13       		.uleb128 0x13
 5717 0222 00       		.byte	0
 5718 0223 00       		.byte	0
 5719 0224 28       		.uleb128 0x28
 5720 0225 05       		.uleb128 0x5
 5721 0226 00       		.byte	0
 5722 0227 31       		.uleb128 0x31
 5723 0228 13       		.uleb128 0x13
 5724 0229 02       		.uleb128 0x2
 5725 022a 17       		.uleb128 0x17
 5726 022b 00       		.byte	0
 5727 022c 00       		.byte	0
 5728 022d 29       		.uleb128 0x29
 5729 022e 34       		.uleb128 0x34
 5730 022f 00       		.byte	0
 5731 0230 03       		.uleb128 0x3
 5732 0231 0E       		.uleb128 0xe
 5733 0232 3A       		.uleb128 0x3a
 5734 0233 0B       		.uleb128 0xb
 5735 0234 3B       		.uleb128 0x3b
 5736 0235 05       		.uleb128 0x5
 5737 0236 49       		.uleb128 0x49
 5738 0237 13       		.uleb128 0x13
 5739 0238 00       		.byte	0
 5740 0239 00       		.byte	0
 5741 023a 2A       		.uleb128 0x2a
 5742 023b 34       		.uleb128 0x34
 5743 023c 00       		.byte	0
 5744 023d 03       		.uleb128 0x3
 5745 023e 0E       		.uleb128 0xe
 5746 023f 3A       		.uleb128 0x3a
 5747 0240 0B       		.uleb128 0xb
 5748 0241 3B       		.uleb128 0x3b
 5749 0242 05       		.uleb128 0x5
 5750 0243 49       		.uleb128 0x49
 5751 0244 13       		.uleb128 0x13
 5752 0245 02       		.uleb128 0x2
 5753 0246 18       		.uleb128 0x18
 5754 0247 00       		.byte	0
 5755 0248 00       		.byte	0
 5756 0249 2B       		.uleb128 0x2b
 5757 024a 2E       		.uleb128 0x2e
 5758 024b 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 162


 5759 024c 3F       		.uleb128 0x3f
 5760 024d 19       		.uleb128 0x19
 5761 024e 03       		.uleb128 0x3
 5762 024f 0E       		.uleb128 0xe
 5763 0250 3A       		.uleb128 0x3a
 5764 0251 0B       		.uleb128 0xb
 5765 0252 3B       		.uleb128 0x3b
 5766 0253 05       		.uleb128 0x5
 5767 0254 27       		.uleb128 0x27
 5768 0255 19       		.uleb128 0x19
 5769 0256 49       		.uleb128 0x49
 5770 0257 13       		.uleb128 0x13
 5771 0258 11       		.uleb128 0x11
 5772 0259 01       		.uleb128 0x1
 5773 025a 12       		.uleb128 0x12
 5774 025b 06       		.uleb128 0x6
 5775 025c 40       		.uleb128 0x40
 5776 025d 18       		.uleb128 0x18
 5777 025e 9642     		.uleb128 0x2116
 5778 0260 19       		.uleb128 0x19
 5779 0261 01       		.uleb128 0x1
 5780 0262 13       		.uleb128 0x13
 5781 0263 00       		.byte	0
 5782 0264 00       		.byte	0
 5783 0265 2C       		.uleb128 0x2c
 5784 0266 34       		.uleb128 0x34
 5785 0267 00       		.byte	0
 5786 0268 03       		.uleb128 0x3
 5787 0269 0E       		.uleb128 0xe
 5788 026a 3A       		.uleb128 0x3a
 5789 026b 0B       		.uleb128 0xb
 5790 026c 3B       		.uleb128 0x3b
 5791 026d 05       		.uleb128 0x5
 5792 026e 49       		.uleb128 0x49
 5793 026f 13       		.uleb128 0x13
 5794 0270 1C       		.uleb128 0x1c
 5795 0271 0B       		.uleb128 0xb
 5796 0272 00       		.byte	0
 5797 0273 00       		.byte	0
 5798 0274 2D       		.uleb128 0x2d
 5799 0275 898201   		.uleb128 0x4109
 5800 0278 00       		.byte	0
 5801 0279 11       		.uleb128 0x11
 5802 027a 01       		.uleb128 0x1
 5803 027b 31       		.uleb128 0x31
 5804 027c 13       		.uleb128 0x13
 5805 027d 00       		.byte	0
 5806 027e 00       		.byte	0
 5807 027f 2E       		.uleb128 0x2e
 5808 0280 34       		.uleb128 0x34
 5809 0281 00       		.byte	0
 5810 0282 03       		.uleb128 0x3
 5811 0283 0E       		.uleb128 0xe
 5812 0284 3A       		.uleb128 0x3a
 5813 0285 0B       		.uleb128 0xb
 5814 0286 3B       		.uleb128 0x3b
 5815 0287 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 163


 5816 0288 49       		.uleb128 0x49
 5817 0289 13       		.uleb128 0x13
 5818 028a 3F       		.uleb128 0x3f
 5819 028b 19       		.uleb128 0x19
 5820 028c 3C       		.uleb128 0x3c
 5821 028d 19       		.uleb128 0x19
 5822 028e 00       		.byte	0
 5823 028f 00       		.byte	0
 5824 0290 2F       		.uleb128 0x2f
 5825 0291 34       		.uleb128 0x34
 5826 0292 00       		.byte	0
 5827 0293 03       		.uleb128 0x3
 5828 0294 0E       		.uleb128 0xe
 5829 0295 3A       		.uleb128 0x3a
 5830 0296 0B       		.uleb128 0xb
 5831 0297 3B       		.uleb128 0x3b
 5832 0298 0B       		.uleb128 0xb
 5833 0299 49       		.uleb128 0x49
 5834 029a 13       		.uleb128 0x13
 5835 029b 3F       		.uleb128 0x3f
 5836 029c 19       		.uleb128 0x19
 5837 029d 3C       		.uleb128 0x3c
 5838 029e 19       		.uleb128 0x19
 5839 029f 00       		.byte	0
 5840 02a0 00       		.byte	0
 5841 02a1 30       		.uleb128 0x30
 5842 02a2 34       		.uleb128 0x34
 5843 02a3 00       		.byte	0
 5844 02a4 03       		.uleb128 0x3
 5845 02a5 0E       		.uleb128 0xe
 5846 02a6 3A       		.uleb128 0x3a
 5847 02a7 0B       		.uleb128 0xb
 5848 02a8 3B       		.uleb128 0x3b
 5849 02a9 0B       		.uleb128 0xb
 5850 02aa 49       		.uleb128 0x49
 5851 02ab 13       		.uleb128 0x13
 5852 02ac 3F       		.uleb128 0x3f
 5853 02ad 19       		.uleb128 0x19
 5854 02ae 02       		.uleb128 0x2
 5855 02af 18       		.uleb128 0x18
 5856 02b0 00       		.byte	0
 5857 02b1 00       		.byte	0
 5858 02b2 31       		.uleb128 0x31
 5859 02b3 2E       		.uleb128 0x2e
 5860 02b4 00       		.byte	0
 5861 02b5 3F       		.uleb128 0x3f
 5862 02b6 19       		.uleb128 0x19
 5863 02b7 3C       		.uleb128 0x3c
 5864 02b8 19       		.uleb128 0x19
 5865 02b9 6E       		.uleb128 0x6e
 5866 02ba 0E       		.uleb128 0xe
 5867 02bb 03       		.uleb128 0x3
 5868 02bc 0E       		.uleb128 0xe
 5869 02bd 3A       		.uleb128 0x3a
 5870 02be 0B       		.uleb128 0xb
 5871 02bf 3B       		.uleb128 0x3b
 5872 02c0 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 164


 5873 02c1 00       		.byte	0
 5874 02c2 00       		.byte	0
 5875 02c3 00       		.byte	0
 5876              		.section	.debug_loc,"",%progbits
 5877              	.Ldebug_loc0:
 5878              	.LLST0:
 5879 0000 00000000 		.4byte	.LVL0
 5880 0004 0E000000 		.4byte	.LVL2
 5881 0008 0100     		.2byte	0x1
 5882 000a 50       		.byte	0x50
 5883 000b 0E000000 		.4byte	.LVL2
 5884 000f E2010000 		.4byte	.LVL33
 5885 0013 0100     		.2byte	0x1
 5886 0015 57       		.byte	0x57
 5887 0016 E2010000 		.4byte	.LVL33
 5888 001a 00020000 		.4byte	.LFE192
 5889 001e 0400     		.2byte	0x4
 5890 0020 F3       		.byte	0xf3
 5891 0021 01       		.uleb128 0x1
 5892 0022 50       		.byte	0x50
 5893 0023 9F       		.byte	0x9f
 5894 0024 00000000 		.4byte	0
 5895 0028 00000000 		.4byte	0
 5896              	.LLST1:
 5897 002c 00000000 		.4byte	.LVL0
 5898 0030 0C000000 		.4byte	.LVL1
 5899 0034 0100     		.2byte	0x1
 5900 0036 51       		.byte	0x51
 5901 0037 0C000000 		.4byte	.LVL1
 5902 003b E2010000 		.4byte	.LVL33
 5903 003f 0100     		.2byte	0x1
 5904 0041 56       		.byte	0x56
 5905 0042 E2010000 		.4byte	.LVL33
 5906 0046 00020000 		.4byte	.LFE192
 5907 004a 0400     		.2byte	0x4
 5908 004c F3       		.byte	0xf3
 5909 004d 01       		.uleb128 0x1
 5910 004e 51       		.byte	0x51
 5911 004f 9F       		.byte	0x9f
 5912 0050 00000000 		.4byte	0
 5913 0054 00000000 		.4byte	0
 5914              	.LLST2:
 5915 0058 D0010000 		.4byte	.LVL29
 5916 005c D6010000 		.4byte	.LVL30
 5917 0060 0200     		.2byte	0x2
 5918 0062 30       		.byte	0x30
 5919 0063 9F       		.byte	0x9f
 5920 0064 DE010000 		.4byte	.LVL32
 5921 0068 00020000 		.4byte	.LFE192
 5922 006c 0100     		.2byte	0x1
 5923 006e 50       		.byte	0x50
 5924 006f 00000000 		.4byte	0
 5925 0073 00000000 		.4byte	0
 5926              	.LLST3:
 5927 0077 DE000000 		.4byte	.LVL15
 5928 007b E2000000 		.4byte	.LVL16
 5929 007f 0200     		.2byte	0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 165


 5930 0081 30       		.byte	0x30
 5931 0082 9F       		.byte	0x9f
 5932 0083 E2000000 		.4byte	.LVL16
 5933 0087 4C010000 		.4byte	.LVL25
 5934 008b 0100     		.2byte	0x1
 5935 008d 54       		.byte	0x54
 5936 008e 4E010000 		.4byte	.LVL26
 5937 0092 D6010000 		.4byte	.LVL30
 5938 0096 0100     		.2byte	0x1
 5939 0098 54       		.byte	0x54
 5940 0099 00000000 		.4byte	0
 5941 009d 00000000 		.4byte	0
 5942              	.LLST4:
 5943 00a1 0A010000 		.4byte	.LVL18
 5944 00a5 4E010000 		.4byte	.LVL26
 5945 00a9 0400     		.2byte	0x4
 5946 00ab 0A       		.byte	0xa
 5947 00ac 0010     		.2byte	0x1000
 5948 00ae 9F       		.byte	0x9f
 5949 00af 00000000 		.4byte	0
 5950 00b3 00000000 		.4byte	0
 5951              	.LLST5:
 5952 00b7 D8000000 		.4byte	.LVL14
 5953 00bb D6010000 		.4byte	.LVL30
 5954 00bf 0700     		.2byte	0x7
 5955 00c1 78       		.byte	0x78
 5956 00c2 00       		.sleb128 0
 5957 00c3 0A       		.byte	0xa
 5958 00c4 000E     		.2byte	0xe00
 5959 00c6 29       		.byte	0x29
 5960 00c7 9F       		.byte	0x9f
 5961 00c8 00000000 		.4byte	0
 5962 00cc 00000000 		.4byte	0
 5963              	.LLST6:
 5964 00d0 DE000000 		.4byte	.LVL15
 5965 00d4 D6010000 		.4byte	.LVL30
 5966 00d8 0500     		.2byte	0x5
 5967 00da 79       		.byte	0x79
 5968 00db 00       		.sleb128 0
 5969 00dc 30       		.byte	0x30
 5970 00dd 2E       		.byte	0x2e
 5971 00de 9F       		.byte	0x9f
 5972 00df 00000000 		.4byte	0
 5973 00e3 00000000 		.4byte	0
 5974              	.LLST7:
 5975 00e7 0C010000 		.4byte	.LVL19
 5976 00eb 24010000 		.4byte	.LVL20
 5977 00ef 0B00     		.2byte	0xb
 5978 00f1 73       		.byte	0x73
 5979 00f2 00       		.sleb128 0
 5980 00f3 0C       		.byte	0xc
 5981 00f4 00010001 		.4byte	0x1000100
 5982 00f8 1A       		.byte	0x1a
 5983 00f9 30       		.byte	0x30
 5984 00fa 29       		.byte	0x29
 5985 00fb 9F       		.byte	0x9f
 5986 00fc 24010000 		.4byte	.LVL20
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 166


 5987 0100 28010000 		.4byte	.LVL21
 5988 0104 1300     		.2byte	0x13
 5989 0106 74       		.byte	0x74
 5990 0107 06       		.sleb128 6
 5991 0108 32       		.byte	0x32
 5992 0109 24       		.byte	0x24
 5993 010a 76       		.byte	0x76
 5994 010b 00       		.sleb128 0
 5995 010c 22       		.byte	0x22
 5996 010d 23       		.byte	0x23
 5997 010e 04       		.uleb128 0x4
 5998 010f 06       		.byte	0x6
 5999 0110 0C       		.byte	0xc
 6000 0111 00010001 		.4byte	0x1000100
 6001 0115 1A       		.byte	0x1a
 6002 0116 30       		.byte	0x30
 6003 0117 29       		.byte	0x29
 6004 0118 9F       		.byte	0x9f
 6005 0119 2A010000 		.4byte	.LVL22
 6006 011d 2E010000 		.4byte	.LVL23
 6007 0121 0B00     		.2byte	0xb
 6008 0123 73       		.byte	0x73
 6009 0124 00       		.sleb128 0
 6010 0125 0C       		.byte	0xc
 6011 0126 00010001 		.4byte	0x1000100
 6012 012a 1A       		.byte	0x1a
 6013 012b 30       		.byte	0x30
 6014 012c 29       		.byte	0x29
 6015 012d 9F       		.byte	0x9f
 6016 012e 2E010000 		.4byte	.LVL23
 6017 0132 32010000 		.4byte	.LVL24
 6018 0136 1300     		.2byte	0x13
 6019 0138 74       		.byte	0x74
 6020 0139 06       		.sleb128 6
 6021 013a 32       		.byte	0x32
 6022 013b 24       		.byte	0x24
 6023 013c 76       		.byte	0x76
 6024 013d 00       		.sleb128 0
 6025 013e 22       		.byte	0x22
 6026 013f 23       		.byte	0x23
 6027 0140 04       		.uleb128 0x4
 6028 0141 06       		.byte	0x6
 6029 0142 0C       		.byte	0xc
 6030 0143 00010001 		.4byte	0x1000100
 6031 0147 1A       		.byte	0x1a
 6032 0148 30       		.byte	0x30
 6033 0149 29       		.byte	0x29
 6034 014a 9F       		.byte	0x9f
 6035 014b 00000000 		.4byte	0
 6036 014f 00000000 		.4byte	0
 6037              	.LLST8:
 6038 0153 00000000 		.4byte	.LVL34
 6039 0157 0C000000 		.4byte	.LVL36
 6040 015b 0100     		.2byte	0x1
 6041 015d 50       		.byte	0x50
 6042 015e 0C000000 		.4byte	.LVL36
 6043 0162 66000000 		.4byte	.LVL46
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 167


 6044 0166 0100     		.2byte	0x1
 6045 0168 54       		.byte	0x54
 6046 0169 66000000 		.4byte	.LVL46
 6047 016d 70000000 		.4byte	.LFE193
 6048 0171 0400     		.2byte	0x4
 6049 0173 F3       		.byte	0xf3
 6050 0174 01       		.uleb128 0x1
 6051 0175 50       		.byte	0x50
 6052 0176 9F       		.byte	0x9f
 6053 0177 00000000 		.4byte	0
 6054 017b 00000000 		.4byte	0
 6055              	.LLST9:
 6056 017f 00000000 		.4byte	.LVL34
 6057 0183 0A000000 		.4byte	.LVL35
 6058 0187 0100     		.2byte	0x1
 6059 0189 51       		.byte	0x51
 6060 018a 0A000000 		.4byte	.LVL35
 6061 018e 70000000 		.4byte	.LFE193
 6062 0192 0400     		.2byte	0x4
 6063 0194 F3       		.byte	0xf3
 6064 0195 01       		.uleb128 0x1
 6065 0196 51       		.byte	0x51
 6066 0197 9F       		.byte	0x9f
 6067 0198 00000000 		.4byte	0
 6068 019c 00000000 		.4byte	0
 6069              	.LLST10:
 6070 01a0 26000000 		.4byte	.LVL38
 6071 01a4 28000000 		.4byte	.LVL39
 6072 01a8 0200     		.2byte	0x2
 6073 01aa 30       		.byte	0x30
 6074 01ab 9F       		.byte	0x9f
 6075 01ac 28000000 		.4byte	.LVL39
 6076 01b0 34000000 		.4byte	.LVL40
 6077 01b4 0100     		.2byte	0x1
 6078 01b6 53       		.byte	0x53
 6079 01b7 36000000 		.4byte	.LVL41
 6080 01bb 3C000000 		.4byte	.LVL42
 6081 01bf 0100     		.2byte	0x1
 6082 01c1 53       		.byte	0x53
 6083 01c2 00000000 		.4byte	0
 6084 01c6 00000000 		.4byte	0
 6085              	.LLST11:
 6086 01ca 00000000 		.4byte	.LVL47
 6087 01ce 1A000000 		.4byte	.LVL48
 6088 01d2 0100     		.2byte	0x1
 6089 01d4 50       		.byte	0x50
 6090 01d5 1A000000 		.4byte	.LVL48
 6091 01d9 20000000 		.4byte	.LFE194
 6092 01dd 0400     		.2byte	0x4
 6093 01df F3       		.byte	0xf3
 6094 01e0 01       		.uleb128 0x1
 6095 01e1 50       		.byte	0x50
 6096 01e2 9F       		.byte	0x9f
 6097 01e3 00000000 		.4byte	0
 6098 01e7 00000000 		.4byte	0
 6099              	.LLST12:
 6100 01eb 00000000 		.4byte	.LVL50
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 168


 6101 01ef 10000000 		.4byte	.LVL52
 6102 01f3 0100     		.2byte	0x1
 6103 01f5 50       		.byte	0x50
 6104 01f6 10000000 		.4byte	.LVL52
 6105 01fa 28000000 		.4byte	.LVL55
 6106 01fe 0100     		.2byte	0x1
 6107 0200 55       		.byte	0x55
 6108 0201 28000000 		.4byte	.LVL55
 6109 0205 2C000000 		.4byte	.LFE197
 6110 0209 0400     		.2byte	0x4
 6111 020b F3       		.byte	0xf3
 6112 020c 01       		.uleb128 0x1
 6113 020d 50       		.byte	0x50
 6114 020e 9F       		.byte	0x9f
 6115 020f 00000000 		.4byte	0
 6116 0213 00000000 		.4byte	0
 6117              	.LLST13:
 6118 0217 00000000 		.4byte	.LVL50
 6119 021b 0E000000 		.4byte	.LVL51
 6120 021f 0100     		.2byte	0x1
 6121 0221 51       		.byte	0x51
 6122 0222 0E000000 		.4byte	.LVL51
 6123 0226 2C000000 		.4byte	.LFE197
 6124 022a 0400     		.2byte	0x4
 6125 022c F3       		.byte	0xf3
 6126 022d 01       		.uleb128 0x1
 6127 022e 51       		.byte	0x51
 6128 022f 9F       		.byte	0x9f
 6129 0230 00000000 		.4byte	0
 6130 0234 00000000 		.4byte	0
 6131              	.LLST14:
 6132 0238 00000000 		.4byte	.LVL56
 6133 023c 19000000 		.4byte	.LVL57-1
 6134 0240 0100     		.2byte	0x1
 6135 0242 50       		.byte	0x50
 6136 0243 19000000 		.4byte	.LVL57-1
 6137 0247 2E000000 		.4byte	.LVL59
 6138 024b 0100     		.2byte	0x1
 6139 024d 54       		.byte	0x54
 6140 024e 2E000000 		.4byte	.LVL59
 6141 0252 34000000 		.4byte	.LFE196
 6142 0256 0100     		.2byte	0x1
 6143 0258 50       		.byte	0x50
 6144 0259 00000000 		.4byte	0
 6145 025d 00000000 		.4byte	0
 6146              	.LLST15:
 6147 0261 00000000 		.4byte	.LVL61
 6148 0265 1F000000 		.4byte	.LVL64-1
 6149 0269 0100     		.2byte	0x1
 6150 026b 50       		.byte	0x50
 6151 026c 1F000000 		.4byte	.LVL64-1
 6152 0270 3A000000 		.4byte	.LVL65
 6153 0274 0100     		.2byte	0x1
 6154 0276 54       		.byte	0x54
 6155 0277 3A000000 		.4byte	.LVL65
 6156 027b 40000000 		.4byte	.LFE195
 6157 027f 0400     		.2byte	0x4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 169


 6158 0281 F3       		.byte	0xf3
 6159 0282 01       		.uleb128 0x1
 6160 0283 50       		.byte	0x50
 6161 0284 9F       		.byte	0x9f
 6162 0285 00000000 		.4byte	0
 6163 0289 00000000 		.4byte	0
 6164              	.LLST16:
 6165 028d 06000000 		.4byte	.LVL62
 6166 0291 12000000 		.4byte	.LVL63
 6167 0295 0100     		.2byte	0x1
 6168 0297 55       		.byte	0x55
 6169 0298 12000000 		.4byte	.LVL63
 6170 029c 3A000000 		.4byte	.LVL65
 6171 02a0 0100     		.2byte	0x1
 6172 02a2 56       		.byte	0x56
 6173 02a3 3A000000 		.4byte	.LVL65
 6174 02a7 40000000 		.4byte	.LFE195
 6175 02ab 0300     		.2byte	0x3
 6176 02ad F3       		.byte	0xf3
 6177 02ae 01       		.uleb128 0x1
 6178 02af 50       		.byte	0x50
 6179 02b0 00000000 		.4byte	0
 6180 02b4 00000000 		.4byte	0
 6181              	.LLST17:
 6182 02b8 00000000 		.4byte	.LVL66
 6183 02bc 1A000000 		.4byte	.LVL68
 6184 02c0 0100     		.2byte	0x1
 6185 02c2 50       		.byte	0x50
 6186 02c3 1A000000 		.4byte	.LVL68
 6187 02c7 2A000000 		.4byte	.LVL72
 6188 02cb 0100     		.2byte	0x1
 6189 02cd 55       		.byte	0x55
 6190 02ce 2A000000 		.4byte	.LVL72
 6191 02d2 30000000 		.4byte	.LFE199
 6192 02d6 0400     		.2byte	0x4
 6193 02d8 F3       		.byte	0xf3
 6194 02d9 01       		.uleb128 0x1
 6195 02da 50       		.byte	0x50
 6196 02db 9F       		.byte	0x9f
 6197 02dc 00000000 		.4byte	0
 6198 02e0 00000000 		.4byte	0
 6199              	.LLST18:
 6200 02e4 00000000 		.4byte	.LVL66
 6201 02e8 18000000 		.4byte	.LVL67
 6202 02ec 0100     		.2byte	0x1
 6203 02ee 51       		.byte	0x51
 6204 02ef 18000000 		.4byte	.LVL67
 6205 02f3 2A000000 		.4byte	.LVL72
 6206 02f7 0100     		.2byte	0x1
 6207 02f9 54       		.byte	0x54
 6208 02fa 2A000000 		.4byte	.LVL72
 6209 02fe 30000000 		.4byte	.LFE199
 6210 0302 0400     		.2byte	0x4
 6211 0304 F3       		.byte	0xf3
 6212 0305 01       		.uleb128 0x1
 6213 0306 51       		.byte	0x51
 6214 0307 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 170


 6215 0308 00000000 		.4byte	0
 6216 030c 00000000 		.4byte	0
 6217              	.LLST19:
 6218 0310 24000000 		.4byte	.LVL70
 6219 0314 26000000 		.4byte	.LVL71
 6220 0318 0100     		.2byte	0x1
 6221 031a 51       		.byte	0x51
 6222 031b 00000000 		.4byte	0
 6223 031f 00000000 		.4byte	0
 6224              	.LLST20:
 6225 0323 00000000 		.4byte	.LVL73
 6226 0327 10000000 		.4byte	.LVL75
 6227 032b 0100     		.2byte	0x1
 6228 032d 50       		.byte	0x50
 6229 032e 10000000 		.4byte	.LVL75
 6230 0332 54000000 		.4byte	.LVL91
 6231 0336 0100     		.2byte	0x1
 6232 0338 54       		.byte	0x54
 6233 0339 54000000 		.4byte	.LVL91
 6234 033d 64000000 		.4byte	.LFE200
 6235 0341 0400     		.2byte	0x4
 6236 0343 F3       		.byte	0xf3
 6237 0344 01       		.uleb128 0x1
 6238 0345 50       		.byte	0x50
 6239 0346 9F       		.byte	0x9f
 6240 0347 00000000 		.4byte	0
 6241 034b 00000000 		.4byte	0
 6242              	.LLST21:
 6243 034f 00000000 		.4byte	.LVL73
 6244 0353 0E000000 		.4byte	.LVL74
 6245 0357 0100     		.2byte	0x1
 6246 0359 51       		.byte	0x51
 6247 035a 0E000000 		.4byte	.LVL74
 6248 035e 64000000 		.4byte	.LFE200
 6249 0362 0400     		.2byte	0x4
 6250 0364 F3       		.byte	0xf3
 6251 0365 01       		.uleb128 0x1
 6252 0366 51       		.byte	0x51
 6253 0367 9F       		.byte	0x9f
 6254 0368 00000000 		.4byte	0
 6255 036c 00000000 		.4byte	0
 6256              	.LLST22:
 6257 0370 3C000000 		.4byte	.LVL86
 6258 0374 4A000000 		.4byte	.LVL88
 6259 0378 0200     		.2byte	0x2
 6260 037a 30       		.byte	0x30
 6261 037b 9F       		.byte	0x9f
 6262 037c 52000000 		.4byte	.LVL90
 6263 0380 64000000 		.4byte	.LFE200
 6264 0384 0100     		.2byte	0x1
 6265 0386 50       		.byte	0x50
 6266 0387 00000000 		.4byte	0
 6267 038b 00000000 		.4byte	0
 6268              	.LLST23:
 6269 038f 1C000000 		.4byte	.LVL77
 6270 0393 26000000 		.4byte	.LVL79
 6271 0397 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 171


 6272 0399 53       		.byte	0x53
 6273 039a 2A000000 		.4byte	.LVL80
 6274 039e 3E000000 		.4byte	.LVL87
 6275 03a2 0100     		.2byte	0x1
 6276 03a4 53       		.byte	0x53
 6277 03a5 4A000000 		.4byte	.LVL88
 6278 03a9 54000000 		.4byte	.LVL91
 6279 03ad 0100     		.2byte	0x1
 6280 03af 53       		.byte	0x53
 6281 03b0 00000000 		.4byte	0
 6282 03b4 00000000 		.4byte	0
 6283              	.LLST24:
 6284 03b8 1C000000 		.4byte	.LVL77
 6285 03bc 22000000 		.4byte	.LVL78
 6286 03c0 0600     		.2byte	0x6
 6287 03c2 0C       		.byte	0xc
 6288 03c3 55555501 		.4byte	0x1555555
 6289 03c7 9F       		.byte	0x9f
 6290 03c8 22000000 		.4byte	.LVL78
 6291 03cc 2E000000 		.4byte	.LVL82
 6292 03d0 0100     		.2byte	0x1
 6293 03d2 52       		.byte	0x52
 6294 03d3 2E000000 		.4byte	.LVL82
 6295 03d7 30000000 		.4byte	.LVL83
 6296 03db 0600     		.2byte	0x6
 6297 03dd 0C       		.byte	0xc
 6298 03de 55555501 		.4byte	0x1555555
 6299 03e2 9F       		.byte	0x9f
 6300 03e3 30000000 		.4byte	.LVL83
 6301 03e7 38000000 		.4byte	.LVL84
 6302 03eb 0100     		.2byte	0x1
 6303 03ed 52       		.byte	0x52
 6304 03ee 38000000 		.4byte	.LVL84
 6305 03f2 3A000000 		.4byte	.LVL85
 6306 03f6 0600     		.2byte	0x6
 6307 03f8 0C       		.byte	0xc
 6308 03f9 55555501 		.4byte	0x1555555
 6309 03fd 9F       		.byte	0x9f
 6310 03fe 3A000000 		.4byte	.LVL85
 6311 0402 64000000 		.4byte	.LFE200
 6312 0406 0100     		.2byte	0x1
 6313 0408 52       		.byte	0x52
 6314 0409 00000000 		.4byte	0
 6315 040d 00000000 		.4byte	0
 6316              	.LLST25:
 6317 0411 00000000 		.4byte	.LVL92
 6318 0415 10000000 		.4byte	.LVL94
 6319 0419 0100     		.2byte	0x1
 6320 041b 50       		.byte	0x50
 6321 041c 10000000 		.4byte	.LVL94
 6322 0420 30000000 		.4byte	.LVL100
 6323 0424 0100     		.2byte	0x1
 6324 0426 55       		.byte	0x55
 6325 0427 30000000 		.4byte	.LVL100
 6326 042b 34000000 		.4byte	.LFE202
 6327 042f 0400     		.2byte	0x4
 6328 0431 F3       		.byte	0xf3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 172


 6329 0432 01       		.uleb128 0x1
 6330 0433 50       		.byte	0x50
 6331 0434 9F       		.byte	0x9f
 6332 0435 00000000 		.4byte	0
 6333 0439 00000000 		.4byte	0
 6334              	.LLST26:
 6335 043d 00000000 		.4byte	.LVL92
 6336 0441 0E000000 		.4byte	.LVL93
 6337 0445 0100     		.2byte	0x1
 6338 0447 51       		.byte	0x51
 6339 0448 0E000000 		.4byte	.LVL93
 6340 044c 1A000000 		.4byte	.LVL96
 6341 0450 0100     		.2byte	0x1
 6342 0452 54       		.byte	0x54
 6343 0453 1A000000 		.4byte	.LVL96
 6344 0457 28000000 		.4byte	.LVL97
 6345 045b 0300     		.2byte	0x3
 6346 045d 74       		.byte	0x74
 6347 045e 60       		.sleb128 -32
 6348 045f 9F       		.byte	0x9f
 6349 0460 28000000 		.4byte	.LVL97
 6350 0464 2C000000 		.4byte	.LVL98
 6351 0468 0100     		.2byte	0x1
 6352 046a 54       		.byte	0x54
 6353 046b 2C000000 		.4byte	.LVL98
 6354 046f 34000000 		.4byte	.LFE202
 6355 0473 0400     		.2byte	0x4
 6356 0475 F3       		.byte	0xf3
 6357 0476 01       		.uleb128 0x1
 6358 0477 51       		.byte	0x51
 6359 0478 9F       		.byte	0x9f
 6360 0479 00000000 		.4byte	0
 6361 047d 00000000 		.4byte	0
 6362              	.LLST27:
 6363 0481 14000000 		.4byte	.LVL95
 6364 0485 2E000000 		.4byte	.LVL99
 6365 0489 0200     		.2byte	0x2
 6366 048b 30       		.byte	0x30
 6367 048c 9F       		.byte	0x9f
 6368 048d 2E000000 		.4byte	.LVL99
 6369 0491 34000000 		.4byte	.LFE202
 6370 0495 0100     		.2byte	0x1
 6371 0497 50       		.byte	0x50
 6372 0498 00000000 		.4byte	0
 6373 049c 00000000 		.4byte	0
 6374              	.LLST28:
 6375 04a0 00000000 		.4byte	.LVL101
 6376 04a4 10000000 		.4byte	.LVL103
 6377 04a8 0100     		.2byte	0x1
 6378 04aa 50       		.byte	0x50
 6379 04ab 10000000 		.4byte	.LVL103
 6380 04af 4E000000 		.4byte	.LVL113
 6381 04b3 0100     		.2byte	0x1
 6382 04b5 55       		.byte	0x55
 6383 04b6 4E000000 		.4byte	.LVL113
 6384 04ba 54000000 		.4byte	.LFE201
 6385 04be 0400     		.2byte	0x4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 173


 6386 04c0 F3       		.byte	0xf3
 6387 04c1 01       		.uleb128 0x1
 6388 04c2 50       		.byte	0x50
 6389 04c3 9F       		.byte	0x9f
 6390 04c4 00000000 		.4byte	0
 6391 04c8 00000000 		.4byte	0
 6392              	.LLST29:
 6393 04cc 00000000 		.4byte	.LVL101
 6394 04d0 0E000000 		.4byte	.LVL102
 6395 04d4 0100     		.2byte	0x1
 6396 04d6 51       		.byte	0x51
 6397 04d7 0E000000 		.4byte	.LVL102
 6398 04db 4E000000 		.4byte	.LVL113
 6399 04df 0100     		.2byte	0x1
 6400 04e1 54       		.byte	0x54
 6401 04e2 4E000000 		.4byte	.LVL113
 6402 04e6 54000000 		.4byte	.LFE201
 6403 04ea 0400     		.2byte	0x4
 6404 04ec F3       		.byte	0xf3
 6405 04ed 01       		.uleb128 0x1
 6406 04ee 51       		.byte	0x51
 6407 04ef 9F       		.byte	0x9f
 6408 04f0 00000000 		.4byte	0
 6409 04f4 00000000 		.4byte	0
 6410              	.LLST30:
 6411 04f8 14000000 		.4byte	.LVL104
 6412 04fc 4C000000 		.4byte	.LVL112
 6413 0500 0200     		.2byte	0x2
 6414 0502 30       		.byte	0x30
 6415 0503 9F       		.byte	0x9f
 6416 0504 4C000000 		.4byte	.LVL112
 6417 0508 54000000 		.4byte	.LFE201
 6418 050c 0100     		.2byte	0x1
 6419 050e 50       		.byte	0x50
 6420 050f 00000000 		.4byte	0
 6421 0513 00000000 		.4byte	0
 6422              	.LLST31:
 6423 0517 18000000 		.4byte	.LVL105
 6424 051b 24000000 		.4byte	.LVL107
 6425 051f 0100     		.2byte	0x1
 6426 0521 54       		.byte	0x54
 6427 0522 00000000 		.4byte	0
 6428 0526 00000000 		.4byte	0
 6429              	.LLST32:
 6430 052a 18000000 		.4byte	.LVL105
 6431 052e 24000000 		.4byte	.LVL107
 6432 0532 0100     		.2byte	0x1
 6433 0534 55       		.byte	0x55
 6434 0535 00000000 		.4byte	0
 6435 0539 00000000 		.4byte	0
 6436              	.LLST33:
 6437 053d 00000000 		.4byte	.LVL114
 6438 0541 10000000 		.4byte	.LVL116
 6439 0545 0100     		.2byte	0x1
 6440 0547 50       		.byte	0x50
 6441 0548 10000000 		.4byte	.LVL116
 6442 054c 28000000 		.4byte	.LVL123
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 174


 6443 0550 0100     		.2byte	0x1
 6444 0552 55       		.byte	0x55
 6445 0553 28000000 		.4byte	.LVL123
 6446 0557 2C000000 		.4byte	.LFE203
 6447 055b 0400     		.2byte	0x4
 6448 055d F3       		.byte	0xf3
 6449 055e 01       		.uleb128 0x1
 6450 055f 50       		.byte	0x50
 6451 0560 9F       		.byte	0x9f
 6452 0561 00000000 		.4byte	0
 6453 0565 00000000 		.4byte	0
 6454              	.LLST34:
 6455 0569 00000000 		.4byte	.LVL114
 6456 056d 0E000000 		.4byte	.LVL115
 6457 0571 0100     		.2byte	0x1
 6458 0573 51       		.byte	0x51
 6459 0574 0E000000 		.4byte	.LVL115
 6460 0578 1A000000 		.4byte	.LVL118
 6461 057c 0100     		.2byte	0x1
 6462 057e 54       		.byte	0x54
 6463 057f 1A000000 		.4byte	.LVL118
 6464 0583 22000000 		.4byte	.LVL120
 6465 0587 0400     		.2byte	0x4
 6466 0589 74       		.byte	0x74
 6467 058a A07F     		.sleb128 -96
 6468 058c 9F       		.byte	0x9f
 6469 058d 22000000 		.4byte	.LVL120
 6470 0591 24000000 		.4byte	.LVL121
 6471 0595 0100     		.2byte	0x1
 6472 0597 54       		.byte	0x54
 6473 0598 24000000 		.4byte	.LVL121
 6474 059c 2C000000 		.4byte	.LFE203
 6475 05a0 0400     		.2byte	0x4
 6476 05a2 F3       		.byte	0xf3
 6477 05a3 01       		.uleb128 0x1
 6478 05a4 51       		.byte	0x51
 6479 05a5 9F       		.byte	0x9f
 6480 05a6 00000000 		.4byte	0
 6481 05aa 00000000 		.4byte	0
 6482              	.LLST35:
 6483 05ae 14000000 		.4byte	.LVL117
 6484 05b2 20000000 		.4byte	.LVL119
 6485 05b6 0200     		.2byte	0x2
 6486 05b8 30       		.byte	0x30
 6487 05b9 9F       		.byte	0x9f
 6488 05ba 20000000 		.4byte	.LVL119
 6489 05be 22000000 		.4byte	.LVL120
 6490 05c2 0100     		.2byte	0x1
 6491 05c4 50       		.byte	0x50
 6492 05c5 22000000 		.4byte	.LVL120
 6493 05c9 24000000 		.4byte	.LVL121
 6494 05cd 0200     		.2byte	0x2
 6495 05cf 30       		.byte	0x30
 6496 05d0 9F       		.byte	0x9f
 6497 05d1 24000000 		.4byte	.LVL121
 6498 05d5 26000000 		.4byte	.LVL122
 6499 05d9 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 175


 6500 05db 50       		.byte	0x50
 6501 05dc 00000000 		.4byte	0
 6502 05e0 00000000 		.4byte	0
 6503              	.LLST36:
 6504 05e4 00000000 		.4byte	.LVL124
 6505 05e8 10000000 		.4byte	.LVL126
 6506 05ec 0100     		.2byte	0x1
 6507 05ee 50       		.byte	0x50
 6508 05ef 10000000 		.4byte	.LVL126
 6509 05f3 38000000 		.4byte	.LVL135
 6510 05f7 0100     		.2byte	0x1
 6511 05f9 56       		.byte	0x56
 6512 05fa 38000000 		.4byte	.LVL135
 6513 05fe 3C000000 		.4byte	.LFE204
 6514 0602 0400     		.2byte	0x4
 6515 0604 F3       		.byte	0xf3
 6516 0605 01       		.uleb128 0x1
 6517 0606 50       		.byte	0x50
 6518 0607 9F       		.byte	0x9f
 6519 0608 00000000 		.4byte	0
 6520 060c 00000000 		.4byte	0
 6521              	.LLST37:
 6522 0610 00000000 		.4byte	.LVL124
 6523 0614 0E000000 		.4byte	.LVL125
 6524 0618 0100     		.2byte	0x1
 6525 061a 51       		.byte	0x51
 6526 061b 0E000000 		.4byte	.LVL125
 6527 061f 38000000 		.4byte	.LVL135
 6528 0623 0100     		.2byte	0x1
 6529 0625 55       		.byte	0x55
 6530 0626 38000000 		.4byte	.LVL135
 6531 062a 3C000000 		.4byte	.LFE204
 6532 062e 0400     		.2byte	0x4
 6533 0630 F3       		.byte	0xf3
 6534 0631 01       		.uleb128 0x1
 6535 0632 51       		.byte	0x51
 6536 0633 9F       		.byte	0x9f
 6537 0634 00000000 		.4byte	0
 6538 0638 00000000 		.4byte	0
 6539              	.LLST38:
 6540 063c 14000000 		.4byte	.LVL127
 6541 0640 22000000 		.4byte	.LVL128
 6542 0644 0200     		.2byte	0x2
 6543 0646 30       		.byte	0x30
 6544 0647 9F       		.byte	0x9f
 6545 0648 22000000 		.4byte	.LVL128
 6546 064c 24000000 		.4byte	.LVL129
 6547 0650 0100     		.2byte	0x1
 6548 0652 54       		.byte	0x54
 6549 0653 24000000 		.4byte	.LVL129
 6550 0657 26000000 		.4byte	.LVL130
 6551 065b 0200     		.2byte	0x2
 6552 065d 30       		.byte	0x30
 6553 065e 9F       		.byte	0x9f
 6554 065f 26000000 		.4byte	.LVL130
 6555 0663 38000000 		.4byte	.LVL135
 6556 0667 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 176


 6557 0669 54       		.byte	0x54
 6558 066a 38000000 		.4byte	.LVL135
 6559 066e 3C000000 		.4byte	.LFE204
 6560 0672 0100     		.2byte	0x1
 6561 0674 50       		.byte	0x50
 6562 0675 00000000 		.4byte	0
 6563 0679 00000000 		.4byte	0
 6564              	.LLST39:
 6565 067d 32000000 		.4byte	.LVL132
 6566 0681 34000000 		.4byte	.LVL133
 6567 0685 0100     		.2byte	0x1
 6568 0687 50       		.byte	0x50
 6569 0688 36000000 		.4byte	.LVL134
 6570 068c 3C000000 		.4byte	.LFE204
 6571 0690 0100     		.2byte	0x1
 6572 0692 50       		.byte	0x50
 6573 0693 00000000 		.4byte	0
 6574 0697 00000000 		.4byte	0
 6575              	.LLST40:
 6576 069b 00000000 		.4byte	.LVL136
 6577 069f 12000000 		.4byte	.LVL138
 6578 06a3 0100     		.2byte	0x1
 6579 06a5 50       		.byte	0x50
 6580 06a6 12000000 		.4byte	.LVL138
 6581 06aa 24000000 		.4byte	.LVL143
 6582 06ae 0100     		.2byte	0x1
 6583 06b0 55       		.byte	0x55
 6584 06b1 24000000 		.4byte	.LVL143
 6585 06b5 28000000 		.4byte	.LFE205
 6586 06b9 0400     		.2byte	0x4
 6587 06bb F3       		.byte	0xf3
 6588 06bc 01       		.uleb128 0x1
 6589 06bd 50       		.byte	0x50
 6590 06be 9F       		.byte	0x9f
 6591 06bf 00000000 		.4byte	0
 6592 06c3 00000000 		.4byte	0
 6593              	.LLST41:
 6594 06c7 00000000 		.4byte	.LVL136
 6595 06cb 10000000 		.4byte	.LVL137
 6596 06cf 0100     		.2byte	0x1
 6597 06d1 51       		.byte	0x51
 6598 06d2 10000000 		.4byte	.LVL137
 6599 06d6 1E000000 		.4byte	.LVL141
 6600 06da 0100     		.2byte	0x1
 6601 06dc 54       		.byte	0x54
 6602 06dd 1E000000 		.4byte	.LVL141
 6603 06e1 28000000 		.4byte	.LFE205
 6604 06e5 0400     		.2byte	0x4
 6605 06e7 F3       		.byte	0xf3
 6606 06e8 01       		.uleb128 0x1
 6607 06e9 51       		.byte	0x51
 6608 06ea 9F       		.byte	0x9f
 6609 06eb 00000000 		.4byte	0
 6610 06ef 00000000 		.4byte	0
 6611              	.LLST42:
 6612 06f3 1C000000 		.4byte	.LVL140
 6613 06f7 20000000 		.4byte	.LVL142
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 177


 6614 06fb 0100     		.2byte	0x1
 6615 06fd 53       		.byte	0x53
 6616 06fe 20000000 		.4byte	.LVL142
 6617 0702 24000000 		.4byte	.LVL143
 6618 0706 0100     		.2byte	0x1
 6619 0708 54       		.byte	0x54
 6620 0709 24000000 		.4byte	.LVL143
 6621 070d 28000000 		.4byte	.LFE205
 6622 0711 0500     		.2byte	0x5
 6623 0713 F3       		.byte	0xf3
 6624 0714 01       		.uleb128 0x1
 6625 0715 50       		.byte	0x50
 6626 0716 23       		.byte	0x23
 6627 0717 18       		.uleb128 0x18
 6628 0718 00000000 		.4byte	0
 6629 071c 00000000 		.4byte	0
 6630              	.LLST43:
 6631 0720 00000000 		.4byte	.LVL144
 6632 0724 12000000 		.4byte	.LVL146
 6633 0728 0100     		.2byte	0x1
 6634 072a 50       		.byte	0x50
 6635 072b 12000000 		.4byte	.LVL146
 6636 072f 22000000 		.4byte	.LVL150
 6637 0733 0100     		.2byte	0x1
 6638 0735 54       		.byte	0x54
 6639 0736 22000000 		.4byte	.LVL150
 6640 073a 28000000 		.4byte	.LFE206
 6641 073e 0400     		.2byte	0x4
 6642 0740 F3       		.byte	0xf3
 6643 0741 01       		.uleb128 0x1
 6644 0742 50       		.byte	0x50
 6645 0743 9F       		.byte	0x9f
 6646 0744 00000000 		.4byte	0
 6647 0748 00000000 		.4byte	0
 6648              	.LLST44:
 6649 074c 00000000 		.4byte	.LVL144
 6650 0750 10000000 		.4byte	.LVL145
 6651 0754 0100     		.2byte	0x1
 6652 0756 51       		.byte	0x51
 6653 0757 10000000 		.4byte	.LVL145
 6654 075b 22000000 		.4byte	.LVL150
 6655 075f 0100     		.2byte	0x1
 6656 0761 55       		.byte	0x55
 6657 0762 22000000 		.4byte	.LVL150
 6658 0766 28000000 		.4byte	.LFE206
 6659 076a 0400     		.2byte	0x4
 6660 076c F3       		.byte	0xf3
 6661 076d 01       		.uleb128 0x1
 6662 076e 51       		.byte	0x51
 6663 076f 9F       		.byte	0x9f
 6664 0770 00000000 		.4byte	0
 6665 0774 00000000 		.4byte	0
 6666              	.LLST45:
 6667 0778 00000000 		.4byte	.LVL151
 6668 077c 10000000 		.4byte	.LVL153
 6669 0780 0100     		.2byte	0x1
 6670 0782 50       		.byte	0x50
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 178


 6671 0783 10000000 		.4byte	.LVL153
 6672 0787 26000000 		.4byte	.LVL158
 6673 078b 0100     		.2byte	0x1
 6674 078d 54       		.byte	0x54
 6675 078e 26000000 		.4byte	.LVL158
 6676 0792 34000000 		.4byte	.LFE207
 6677 0796 0400     		.2byte	0x4
 6678 0798 F3       		.byte	0xf3
 6679 0799 01       		.uleb128 0x1
 6680 079a 50       		.byte	0x50
 6681 079b 9F       		.byte	0x9f
 6682 079c 00000000 		.4byte	0
 6683 07a0 00000000 		.4byte	0
 6684              	.LLST46:
 6685 07a4 00000000 		.4byte	.LVL151
 6686 07a8 0E000000 		.4byte	.LVL152
 6687 07ac 0100     		.2byte	0x1
 6688 07ae 51       		.byte	0x51
 6689 07af 0E000000 		.4byte	.LVL152
 6690 07b3 34000000 		.4byte	.LFE207
 6691 07b7 0400     		.2byte	0x4
 6692 07b9 F3       		.byte	0xf3
 6693 07ba 01       		.uleb128 0x1
 6694 07bb 51       		.byte	0x51
 6695 07bc 9F       		.byte	0x9f
 6696 07bd 00000000 		.4byte	0
 6697 07c1 00000000 		.4byte	0
 6698              	.LLST47:
 6699 07c5 14000000 		.4byte	.LVL154
 6700 07c9 1E000000 		.4byte	.LVL155
 6701 07cd 0600     		.2byte	0x6
 6702 07cf 0C       		.byte	0xc
 6703 07d0 01000600 		.4byte	0x60001
 6704 07d4 9F       		.byte	0x9f
 6705 07d5 1E000000 		.4byte	.LVL155
 6706 07d9 22000000 		.4byte	.LVL156
 6707 07dd 0200     		.2byte	0x2
 6708 07df 30       		.byte	0x30
 6709 07e0 9F       		.byte	0x9f
 6710 07e1 22000000 		.4byte	.LVL156
 6711 07e5 24000000 		.4byte	.LVL157
 6712 07e9 0600     		.2byte	0x6
 6713 07eb 0C       		.byte	0xc
 6714 07ec 01000600 		.4byte	0x60001
 6715 07f0 9F       		.byte	0x9f
 6716 07f1 24000000 		.4byte	.LVL157
 6717 07f5 34000000 		.4byte	.LFE207
 6718 07f9 0100     		.2byte	0x1
 6719 07fb 50       		.byte	0x50
 6720 07fc 00000000 		.4byte	0
 6721 0800 00000000 		.4byte	0
 6722              	.LLST48:
 6723 0804 00000000 		.4byte	.LVL159
 6724 0808 10000000 		.4byte	.LVL161
 6725 080c 0100     		.2byte	0x1
 6726 080e 50       		.byte	0x50
 6727 080f 10000000 		.4byte	.LVL161
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 179


 6728 0813 26000000 		.4byte	.LVL166
 6729 0817 0100     		.2byte	0x1
 6730 0819 54       		.byte	0x54
 6731 081a 26000000 		.4byte	.LVL166
 6732 081e 34000000 		.4byte	.LFE208
 6733 0822 0400     		.2byte	0x4
 6734 0824 F3       		.byte	0xf3
 6735 0825 01       		.uleb128 0x1
 6736 0826 50       		.byte	0x50
 6737 0827 9F       		.byte	0x9f
 6738 0828 00000000 		.4byte	0
 6739 082c 00000000 		.4byte	0
 6740              	.LLST49:
 6741 0830 00000000 		.4byte	.LVL159
 6742 0834 0E000000 		.4byte	.LVL160
 6743 0838 0100     		.2byte	0x1
 6744 083a 51       		.byte	0x51
 6745 083b 0E000000 		.4byte	.LVL160
 6746 083f 26000000 		.4byte	.LVL166
 6747 0843 0100     		.2byte	0x1
 6748 0845 55       		.byte	0x55
 6749 0846 26000000 		.4byte	.LVL166
 6750 084a 34000000 		.4byte	.LFE208
 6751 084e 0400     		.2byte	0x4
 6752 0850 F3       		.byte	0xf3
 6753 0851 01       		.uleb128 0x1
 6754 0852 51       		.byte	0x51
 6755 0853 9F       		.byte	0x9f
 6756 0854 00000000 		.4byte	0
 6757 0858 00000000 		.4byte	0
 6758              	.LLST50:
 6759 085c 14000000 		.4byte	.LVL162
 6760 0860 1E000000 		.4byte	.LVL163
 6761 0864 0600     		.2byte	0x6
 6762 0866 0C       		.byte	0xc
 6763 0867 01000600 		.4byte	0x60001
 6764 086b 9F       		.byte	0x9f
 6765 086c 1E000000 		.4byte	.LVL163
 6766 0870 22000000 		.4byte	.LVL164
 6767 0874 0200     		.2byte	0x2
 6768 0876 30       		.byte	0x30
 6769 0877 9F       		.byte	0x9f
 6770 0878 22000000 		.4byte	.LVL164
 6771 087c 24000000 		.4byte	.LVL165
 6772 0880 0600     		.2byte	0x6
 6773 0882 0C       		.byte	0xc
 6774 0883 01000600 		.4byte	0x60001
 6775 0887 9F       		.byte	0x9f
 6776 0888 24000000 		.4byte	.LVL165
 6777 088c 34000000 		.4byte	.LFE208
 6778 0890 0100     		.2byte	0x1
 6779 0892 50       		.byte	0x50
 6780 0893 00000000 		.4byte	0
 6781 0897 00000000 		.4byte	0
 6782              	.LLST51:
 6783 089b 00000000 		.4byte	.LVL167
 6784 089f 12000000 		.4byte	.LVL169
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 180


 6785 08a3 0100     		.2byte	0x1
 6786 08a5 50       		.byte	0x50
 6787 08a6 12000000 		.4byte	.LVL169
 6788 08aa 76000000 		.4byte	.LVL183
 6789 08ae 0100     		.2byte	0x1
 6790 08b0 56       		.byte	0x56
 6791 08b1 76000000 		.4byte	.LVL183
 6792 08b5 80000000 		.4byte	.LFE209
 6793 08b9 0400     		.2byte	0x4
 6794 08bb F3       		.byte	0xf3
 6795 08bc 01       		.uleb128 0x1
 6796 08bd 50       		.byte	0x50
 6797 08be 9F       		.byte	0x9f
 6798 08bf 00000000 		.4byte	0
 6799 08c3 00000000 		.4byte	0
 6800              	.LLST52:
 6801 08c7 00000000 		.4byte	.LVL167
 6802 08cb 10000000 		.4byte	.LVL168
 6803 08cf 0100     		.2byte	0x1
 6804 08d1 51       		.byte	0x51
 6805 08d2 10000000 		.4byte	.LVL168
 6806 08d6 76000000 		.4byte	.LVL183
 6807 08da 0100     		.2byte	0x1
 6808 08dc 54       		.byte	0x54
 6809 08dd 76000000 		.4byte	.LVL183
 6810 08e1 80000000 		.4byte	.LFE209
 6811 08e5 0400     		.2byte	0x4
 6812 08e7 F3       		.byte	0xf3
 6813 08e8 01       		.uleb128 0x1
 6814 08e9 51       		.byte	0x51
 6815 08ea 9F       		.byte	0x9f
 6816 08eb 00000000 		.4byte	0
 6817 08ef 00000000 		.4byte	0
 6818              	.LLST53:
 6819 08f3 00000000 		.4byte	.LVL167
 6820 08f7 15000000 		.4byte	.LVL170-1
 6821 08fb 0100     		.2byte	0x1
 6822 08fd 52       		.byte	0x52
 6823 08fe 15000000 		.4byte	.LVL170-1
 6824 0902 5E000000 		.4byte	.LVL177
 6825 0906 0400     		.2byte	0x4
 6826 0908 F3       		.byte	0xf3
 6827 0909 01       		.uleb128 0x1
 6828 090a 52       		.byte	0x52
 6829 090b 9F       		.byte	0x9f
 6830 090c 5E000000 		.4byte	.LVL177
 6831 0910 60000000 		.4byte	.LVL178
 6832 0914 0100     		.2byte	0x1
 6833 0916 55       		.byte	0x55
 6834 0917 60000000 		.4byte	.LVL178
 6835 091b 68000000 		.4byte	.LVL180
 6836 091f 0400     		.2byte	0x4
 6837 0921 F3       		.byte	0xf3
 6838 0922 01       		.uleb128 0x1
 6839 0923 52       		.byte	0x52
 6840 0924 9F       		.byte	0x9f
 6841 0925 68000000 		.4byte	.LVL180
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 181


 6842 0929 70000000 		.4byte	.LVL181
 6843 092d 0100     		.2byte	0x1
 6844 092f 55       		.byte	0x55
 6845 0930 72000000 		.4byte	.LVL182
 6846 0934 76000000 		.4byte	.LVL183
 6847 0938 0100     		.2byte	0x1
 6848 093a 55       		.byte	0x55
 6849 093b 00000000 		.4byte	0
 6850 093f 00000000 		.4byte	0
 6851              	.LLST54:
 6852 0943 5C000000 		.4byte	.LVL176
 6853 0947 5E000000 		.4byte	.LVL177
 6854 094b 0100     		.2byte	0x1
 6855 094d 55       		.byte	0x55
 6856 094e 00000000 		.4byte	0
 6857 0952 00000000 		.4byte	0
 6858              	.LLST55:
 6859 0956 36000000 		.4byte	.LVL171
 6860 095a 38000000 		.4byte	.LVL172
 6861 095e 0100     		.2byte	0x1
 6862 0960 57       		.byte	0x57
 6863 0961 38000000 		.4byte	.LVL172
 6864 0965 3E000000 		.4byte	.LVL173
 6865 0969 0300     		.2byte	0x3
 6866 096b 77       		.byte	0x77
 6867 096c 7F       		.sleb128 -1
 6868 096d 9F       		.byte	0x9f
 6869 096e 3E000000 		.4byte	.LVL173
 6870 0972 62000000 		.4byte	.LVL179
 6871 0976 0100     		.2byte	0x1
 6872 0978 57       		.byte	0x57
 6873 0979 00000000 		.4byte	0
 6874 097d 00000000 		.4byte	0
 6875              	.LLST56:
 6876 0981 00000000 		.4byte	.LVL184
 6877 0985 12000000 		.4byte	.LVL186
 6878 0989 0100     		.2byte	0x1
 6879 098b 50       		.byte	0x50
 6880 098c 12000000 		.4byte	.LVL186
 6881 0990 60000000 		.4byte	.LVL193
 6882 0994 0100     		.2byte	0x1
 6883 0996 55       		.byte	0x55
 6884 0997 60000000 		.4byte	.LVL193
 6885 099b 6C000000 		.4byte	.LFE210
 6886 099f 0400     		.2byte	0x4
 6887 09a1 F3       		.byte	0xf3
 6888 09a2 01       		.uleb128 0x1
 6889 09a3 50       		.byte	0x50
 6890 09a4 9F       		.byte	0x9f
 6891 09a5 00000000 		.4byte	0
 6892 09a9 00000000 		.4byte	0
 6893              	.LLST57:
 6894 09ad 00000000 		.4byte	.LVL184
 6895 09b1 10000000 		.4byte	.LVL185
 6896 09b5 0100     		.2byte	0x1
 6897 09b7 51       		.byte	0x51
 6898 09b8 10000000 		.4byte	.LVL185
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 182


 6899 09bc 60000000 		.4byte	.LVL193
 6900 09c0 0100     		.2byte	0x1
 6901 09c2 54       		.byte	0x54
 6902 09c3 60000000 		.4byte	.LVL193
 6903 09c7 6C000000 		.4byte	.LFE210
 6904 09cb 0400     		.2byte	0x4
 6905 09cd F3       		.byte	0xf3
 6906 09ce 01       		.uleb128 0x1
 6907 09cf 51       		.byte	0x51
 6908 09d0 9F       		.byte	0x9f
 6909 09d1 00000000 		.4byte	0
 6910 09d5 00000000 		.4byte	0
 6911              	.LLST58:
 6912 09d9 00000000 		.4byte	.LVL184
 6913 09dd 15000000 		.4byte	.LVL187-1
 6914 09e1 0100     		.2byte	0x1
 6915 09e3 52       		.byte	0x52
 6916 09e4 15000000 		.4byte	.LVL187-1
 6917 09e8 2C000000 		.4byte	.LVL188
 6918 09ec 0400     		.2byte	0x4
 6919 09ee F3       		.byte	0xf3
 6920 09ef 01       		.uleb128 0x1
 6921 09f0 52       		.byte	0x52
 6922 09f1 9F       		.byte	0x9f
 6923 09f2 2C000000 		.4byte	.LVL188
 6924 09f6 50000000 		.4byte	.LVL191
 6925 09fa 0100     		.2byte	0x1
 6926 09fc 50       		.byte	0x50
 6927 09fd 50000000 		.4byte	.LVL191
 6928 0a01 5A000000 		.4byte	.LVL192
 6929 0a05 0400     		.2byte	0x4
 6930 0a07 F3       		.byte	0xf3
 6931 0a08 01       		.uleb128 0x1
 6932 0a09 52       		.byte	0x52
 6933 0a0a 9F       		.byte	0x9f
 6934 0a0b 00000000 		.4byte	0
 6935 0a0f 00000000 		.4byte	0
 6936              	.LLST59:
 6937 0a13 16000000 		.4byte	.LVL187
 6938 0a17 3C000000 		.4byte	.LVL189
 6939 0a1b 0600     		.2byte	0x6
 6940 0a1d 9E       		.byte	0x9e
 6941 0a1e 04       		.uleb128 0x4
 6942 0a1f 00000000 		.4byte	0
 6943 0a23 3C000000 		.4byte	.LVL189
 6944 0a27 4E000000 		.4byte	.LVL190
 6945 0a2b 0200     		.2byte	0x2
 6946 0a2d 90       		.byte	0x90
 6947 0a2e 4D       		.uleb128 0x4d
 6948 0a2f 4E000000 		.4byte	.LVL190
 6949 0a33 50000000 		.4byte	.LVL191
 6950 0a37 0200     		.2byte	0x2
 6951 0a39 90       		.byte	0x90
 6952 0a3a 4F       		.uleb128 0x4f
 6953 0a3b 50000000 		.4byte	.LVL191
 6954 0a3f 5A000000 		.4byte	.LVL192
 6955 0a43 0600     		.2byte	0x6
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 183


 6956 0a45 9E       		.byte	0x9e
 6957 0a46 04       		.uleb128 0x4
 6958 0a47 00000000 		.4byte	0
 6959 0a4b 5A000000 		.4byte	.LVL192
 6960 0a4f 6C000000 		.4byte	.LFE210
 6961 0a53 0200     		.2byte	0x2
 6962 0a55 90       		.byte	0x90
 6963 0a56 4F       		.uleb128 0x4f
 6964 0a57 00000000 		.4byte	0
 6965 0a5b 00000000 		.4byte	0
 6966              	.LLST60:
 6967 0a5f 00000000 		.4byte	.LVL194
 6968 0a63 12000000 		.4byte	.LVL196
 6969 0a67 0100     		.2byte	0x1
 6970 0a69 50       		.byte	0x50
 6971 0a6a 12000000 		.4byte	.LVL196
 6972 0a6e 6C000000 		.4byte	.LVL209
 6973 0a72 0100     		.2byte	0x1
 6974 0a74 55       		.byte	0x55
 6975 0a75 6C000000 		.4byte	.LVL209
 6976 0a79 74000000 		.4byte	.LFE211
 6977 0a7d 0400     		.2byte	0x4
 6978 0a7f F3       		.byte	0xf3
 6979 0a80 01       		.uleb128 0x1
 6980 0a81 50       		.byte	0x50
 6981 0a82 9F       		.byte	0x9f
 6982 0a83 00000000 		.4byte	0
 6983 0a87 00000000 		.4byte	0
 6984              	.LLST61:
 6985 0a8b 00000000 		.4byte	.LVL194
 6986 0a8f 10000000 		.4byte	.LVL195
 6987 0a93 0100     		.2byte	0x1
 6988 0a95 51       		.byte	0x51
 6989 0a96 10000000 		.4byte	.LVL195
 6990 0a9a 6C000000 		.4byte	.LVL209
 6991 0a9e 0100     		.2byte	0x1
 6992 0aa0 54       		.byte	0x54
 6993 0aa1 6C000000 		.4byte	.LVL209
 6994 0aa5 74000000 		.4byte	.LFE211
 6995 0aa9 0400     		.2byte	0x4
 6996 0aab F3       		.byte	0xf3
 6997 0aac 01       		.uleb128 0x1
 6998 0aad 51       		.byte	0x51
 6999 0aae 9F       		.byte	0x9f
 7000 0aaf 00000000 		.4byte	0
 7001 0ab3 00000000 		.4byte	0
 7002              	.LLST62:
 7003 0ab7 00000000 		.4byte	.LVL194
 7004 0abb 15000000 		.4byte	.LVL197-1
 7005 0abf 0100     		.2byte	0x1
 7006 0ac1 52       		.byte	0x52
 7007 0ac2 15000000 		.4byte	.LVL197-1
 7008 0ac6 2C000000 		.4byte	.LVL198
 7009 0aca 0400     		.2byte	0x4
 7010 0acc F3       		.byte	0xf3
 7011 0acd 01       		.uleb128 0x1
 7012 0ace 52       		.byte	0x52
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 184


 7013 0acf 9F       		.byte	0x9f
 7014 0ad0 2C000000 		.4byte	.LVL198
 7015 0ad4 3E000000 		.4byte	.LVL200
 7016 0ad8 0100     		.2byte	0x1
 7017 0ada 50       		.byte	0x50
 7018 0adb 48000000 		.4byte	.LVL202
 7019 0adf 4E000000 		.4byte	.LVL203
 7020 0ae3 0100     		.2byte	0x1
 7021 0ae5 50       		.byte	0x50
 7022 0ae6 62000000 		.4byte	.LVL206
 7023 0aea 68000000 		.4byte	.LVL207
 7024 0aee 0400     		.2byte	0x4
 7025 0af0 F3       		.byte	0xf3
 7026 0af1 01       		.uleb128 0x1
 7027 0af2 52       		.byte	0x52
 7028 0af3 9F       		.byte	0x9f
 7029 0af4 00000000 		.4byte	0
 7030 0af8 00000000 		.4byte	0
 7031              	.LLST63:
 7032 0afc 16000000 		.4byte	.LVL197
 7033 0b00 34000000 		.4byte	.LVL199
 7034 0b04 0200     		.2byte	0x2
 7035 0b06 30       		.byte	0x30
 7036 0b07 9F       		.byte	0x9f
 7037 0b08 34000000 		.4byte	.LVL199
 7038 0b0c 46000000 		.4byte	.LVL201
 7039 0b10 0100     		.2byte	0x1
 7040 0b12 52       		.byte	0x52
 7041 0b13 46000000 		.4byte	.LVL201
 7042 0b17 48000000 		.4byte	.LVL202
 7043 0b1b 0100     		.2byte	0x1
 7044 0b1d 53       		.byte	0x53
 7045 0b1e 48000000 		.4byte	.LVL202
 7046 0b22 56000000 		.4byte	.LVL204
 7047 0b26 0100     		.2byte	0x1
 7048 0b28 52       		.byte	0x52
 7049 0b29 56000000 		.4byte	.LVL204
 7050 0b2d 60000000 		.4byte	.LVL205
 7051 0b31 0100     		.2byte	0x1
 7052 0b33 53       		.byte	0x53
 7053 0b34 60000000 		.4byte	.LVL205
 7054 0b38 62000000 		.4byte	.LVL206
 7055 0b3c 0100     		.2byte	0x1
 7056 0b3e 50       		.byte	0x50
 7057 0b3f 62000000 		.4byte	.LVL206
 7058 0b43 68000000 		.4byte	.LVL207
 7059 0b47 0200     		.2byte	0x2
 7060 0b49 30       		.byte	0x30
 7061 0b4a 9F       		.byte	0x9f
 7062 0b4b 68000000 		.4byte	.LVL207
 7063 0b4f 6A000000 		.4byte	.LVL208
 7064 0b53 0100     		.2byte	0x1
 7065 0b55 50       		.byte	0x50
 7066 0b56 00000000 		.4byte	0
 7067 0b5a 00000000 		.4byte	0
 7068              	.LLST64:
 7069 0b5e 00000000 		.4byte	.LVL210
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 185


 7070 0b62 12000000 		.4byte	.LVL212
 7071 0b66 0100     		.2byte	0x1
 7072 0b68 50       		.byte	0x50
 7073 0b69 12000000 		.4byte	.LVL212
 7074 0b6d 32000000 		.4byte	.LVL215
 7075 0b71 0100     		.2byte	0x1
 7076 0b73 55       		.byte	0x55
 7077 0b74 32000000 		.4byte	.LVL215
 7078 0b78 48000000 		.4byte	.LVL220
 7079 0b7c 0400     		.2byte	0x4
 7080 0b7e F3       		.byte	0xf3
 7081 0b7f 01       		.uleb128 0x1
 7082 0b80 50       		.byte	0x50
 7083 0b81 9F       		.byte	0x9f
 7084 0b82 48000000 		.4byte	.LVL220
 7085 0b86 50000000 		.4byte	.LVL223
 7086 0b8a 0100     		.2byte	0x1
 7087 0b8c 55       		.byte	0x55
 7088 0b8d 50000000 		.4byte	.LVL223
 7089 0b91 5C000000 		.4byte	.LFE212
 7090 0b95 0400     		.2byte	0x4
 7091 0b97 F3       		.byte	0xf3
 7092 0b98 01       		.uleb128 0x1
 7093 0b99 50       		.byte	0x50
 7094 0b9a 9F       		.byte	0x9f
 7095 0b9b 00000000 		.4byte	0
 7096 0b9f 00000000 		.4byte	0
 7097              	.LLST65:
 7098 0ba3 00000000 		.4byte	.LVL210
 7099 0ba7 10000000 		.4byte	.LVL211
 7100 0bab 0100     		.2byte	0x1
 7101 0bad 51       		.byte	0x51
 7102 0bae 10000000 		.4byte	.LVL211
 7103 0bb2 50000000 		.4byte	.LVL223
 7104 0bb6 0100     		.2byte	0x1
 7105 0bb8 54       		.byte	0x54
 7106 0bb9 50000000 		.4byte	.LVL223
 7107 0bbd 5C000000 		.4byte	.LFE212
 7108 0bc1 0400     		.2byte	0x4
 7109 0bc3 F3       		.byte	0xf3
 7110 0bc4 01       		.uleb128 0x1
 7111 0bc5 51       		.byte	0x51
 7112 0bc6 9F       		.byte	0x9f
 7113 0bc7 00000000 		.4byte	0
 7114 0bcb 00000000 		.4byte	0
 7115              	.LLST66:
 7116 0bcf 00000000 		.4byte	.LVL210
 7117 0bd3 15000000 		.4byte	.LVL213-1
 7118 0bd7 0100     		.2byte	0x1
 7119 0bd9 52       		.byte	0x52
 7120 0bda 15000000 		.4byte	.LVL213-1
 7121 0bde 2C000000 		.4byte	.LVL214
 7122 0be2 0400     		.2byte	0x4
 7123 0be4 F3       		.byte	0xf3
 7124 0be5 01       		.uleb128 0x1
 7125 0be6 52       		.byte	0x52
 7126 0be7 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 186


 7127 0be8 2C000000 		.4byte	.LVL214
 7128 0bec 36000000 		.4byte	.LVL216
 7129 0bf0 0100     		.2byte	0x1
 7130 0bf2 50       		.byte	0x50
 7131 0bf3 36000000 		.4byte	.LVL216
 7132 0bf7 40000000 		.4byte	.LVL218
 7133 0bfb 0100     		.2byte	0x1
 7134 0bfd 52       		.byte	0x52
 7135 0bfe 48000000 		.4byte	.LVL220
 7136 0c02 5C000000 		.4byte	.LFE212
 7137 0c06 0400     		.2byte	0x4
 7138 0c08 F3       		.byte	0xf3
 7139 0c09 01       		.uleb128 0x1
 7140 0c0a 52       		.byte	0x52
 7141 0c0b 9F       		.byte	0x9f
 7142 0c0c 00000000 		.4byte	0
 7143 0c10 00000000 		.4byte	0
 7144              	.LLST67:
 7145 0c14 16000000 		.4byte	.LVL213
 7146 0c18 3A000000 		.4byte	.LVL217
 7147 0c1c 0A00     		.2byte	0xa
 7148 0c1e 9E       		.byte	0x9e
 7149 0c1f 08       		.uleb128 0x8
 7150 0c20 00000000 		.8byte	0
 7150      00000000 
 7151 0c28 3A000000 		.4byte	.LVL217
 7152 0c2c 45000000 		.4byte	.LVL219-1
 7153 0c30 0600     		.2byte	0x6
 7154 0c32 50       		.byte	0x50
 7155 0c33 93       		.byte	0x93
 7156 0c34 04       		.uleb128 0x4
 7157 0c35 51       		.byte	0x51
 7158 0c36 93       		.byte	0x93
 7159 0c37 04       		.uleb128 0x4
 7160 0c38 48000000 		.4byte	.LVL220
 7161 0c3c 4E000000 		.4byte	.LVL222
 7162 0c40 0A00     		.2byte	0xa
 7163 0c42 9E       		.byte	0x9e
 7164 0c43 08       		.uleb128 0x8
 7165 0c44 00000000 		.8byte	0
 7165      00000000 
 7166 0c4c 00000000 		.4byte	0
 7167 0c50 00000000 		.4byte	0
 7168              	.LLST68:
 7169 0c54 00000000 		.4byte	.LVL224
 7170 0c58 10000000 		.4byte	.LVL226
 7171 0c5c 0100     		.2byte	0x1
 7172 0c5e 50       		.byte	0x50
 7173 0c5f 10000000 		.4byte	.LVL226
 7174 0c63 48000000 		.4byte	.LVL232
 7175 0c67 0100     		.2byte	0x1
 7176 0c69 56       		.byte	0x56
 7177 0c6a 48000000 		.4byte	.LVL232
 7178 0c6e 4C000000 		.4byte	.LFE213
 7179 0c72 0400     		.2byte	0x4
 7180 0c74 F3       		.byte	0xf3
 7181 0c75 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 187


 7182 0c76 50       		.byte	0x50
 7183 0c77 9F       		.byte	0x9f
 7184 0c78 00000000 		.4byte	0
 7185 0c7c 00000000 		.4byte	0
 7186              	.LLST69:
 7187 0c80 00000000 		.4byte	.LVL224
 7188 0c84 0E000000 		.4byte	.LVL225
 7189 0c88 0100     		.2byte	0x1
 7190 0c8a 51       		.byte	0x51
 7191 0c8b 0E000000 		.4byte	.LVL225
 7192 0c8f 4C000000 		.4byte	.LFE213
 7193 0c93 0400     		.2byte	0x4
 7194 0c95 F3       		.byte	0xf3
 7195 0c96 01       		.uleb128 0x1
 7196 0c97 51       		.byte	0x51
 7197 0c98 9F       		.byte	0x9f
 7198 0c99 00000000 		.4byte	0
 7199 0c9d 00000000 		.4byte	0
 7200              	.LLST70:
 7201 0ca1 00000000 		.4byte	.LVL224
 7202 0ca5 13000000 		.4byte	.LVL227-1
 7203 0ca9 0100     		.2byte	0x1
 7204 0cab 52       		.byte	0x52
 7205 0cac 13000000 		.4byte	.LVL227-1
 7206 0cb0 3C000000 		.4byte	.LVL230
 7207 0cb4 0100     		.2byte	0x1
 7208 0cb6 54       		.byte	0x54
 7209 0cb7 3C000000 		.4byte	.LVL230
 7210 0cbb 42000000 		.4byte	.LVL231
 7211 0cbf 0400     		.2byte	0x4
 7212 0cc1 F3       		.byte	0xf3
 7213 0cc2 01       		.uleb128 0x1
 7214 0cc3 52       		.byte	0x52
 7215 0cc4 9F       		.byte	0x9f
 7216 0cc5 42000000 		.4byte	.LVL231
 7217 0cc9 48000000 		.4byte	.LVL232
 7218 0ccd 0100     		.2byte	0x1
 7219 0ccf 54       		.byte	0x54
 7220 0cd0 48000000 		.4byte	.LVL232
 7221 0cd4 4C000000 		.4byte	.LFE213
 7222 0cd8 0600     		.2byte	0x6
 7223 0cda F3       		.byte	0xf3
 7224 0cdb 01       		.uleb128 0x1
 7225 0cdc 50       		.byte	0x50
 7226 0cdd 23       		.byte	0x23
 7227 0cde 8406     		.uleb128 0x304
 7228 0ce0 00000000 		.4byte	0
 7229 0ce4 00000000 		.4byte	0
 7230              	.LLST71:
 7231 0ce8 00000000 		.4byte	.LVL224
 7232 0cec 13000000 		.4byte	.LVL227-1
 7233 0cf0 0100     		.2byte	0x1
 7234 0cf2 53       		.byte	0x53
 7235 0cf3 13000000 		.4byte	.LVL227-1
 7236 0cf7 4C000000 		.4byte	.LFE213
 7237 0cfb 0400     		.2byte	0x4
 7238 0cfd F3       		.byte	0xf3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 188


 7239 0cfe 01       		.uleb128 0x1
 7240 0cff 53       		.byte	0x53
 7241 0d00 9F       		.byte	0x9f
 7242 0d01 00000000 		.4byte	0
 7243 0d05 00000000 		.4byte	0
 7244              	.LLST72:
 7245 0d09 32000000 		.4byte	.LVL229
 7246 0d0d 48000000 		.4byte	.LVL232
 7247 0d11 0400     		.2byte	0x4
 7248 0d13 76       		.byte	0x76
 7249 0d14 8006     		.sleb128 768
 7250 0d16 9F       		.byte	0x9f
 7251 0d17 48000000 		.4byte	.LVL232
 7252 0d1b 4C000000 		.4byte	.LFE213
 7253 0d1f 0700     		.2byte	0x7
 7254 0d21 F3       		.byte	0xf3
 7255 0d22 01       		.uleb128 0x1
 7256 0d23 50       		.byte	0x50
 7257 0d24 23       		.byte	0x23
 7258 0d25 8006     		.uleb128 0x300
 7259 0d27 9F       		.byte	0x9f
 7260 0d28 00000000 		.4byte	0
 7261 0d2c 00000000 		.4byte	0
 7262              	.LLST73:
 7263 0d30 32000000 		.4byte	.LVL229
 7264 0d34 48000000 		.4byte	.LVL232
 7265 0d38 0400     		.2byte	0x4
 7266 0d3a 76       		.byte	0x76
 7267 0d3b 8406     		.sleb128 772
 7268 0d3d 9F       		.byte	0x9f
 7269 0d3e 48000000 		.4byte	.LVL232
 7270 0d42 4C000000 		.4byte	.LFE213
 7271 0d46 0700     		.2byte	0x7
 7272 0d48 F3       		.byte	0xf3
 7273 0d49 01       		.uleb128 0x1
 7274 0d4a 50       		.byte	0x50
 7275 0d4b 23       		.byte	0x23
 7276 0d4c 8406     		.uleb128 0x304
 7277 0d4e 9F       		.byte	0x9f
 7278 0d4f 00000000 		.4byte	0
 7279 0d53 00000000 		.4byte	0
 7280              	.LLST74:
 7281 0d57 00000000 		.4byte	.LVL233
 7282 0d5b 0C000000 		.4byte	.LVL235
 7283 0d5f 0100     		.2byte	0x1
 7284 0d61 50       		.byte	0x50
 7285 0d62 0C000000 		.4byte	.LVL235
 7286 0d66 16000000 		.4byte	.LVL237
 7287 0d6a 0100     		.2byte	0x1
 7288 0d6c 54       		.byte	0x54
 7289 0d6d 16000000 		.4byte	.LVL237
 7290 0d71 1C000000 		.4byte	.LFE214
 7291 0d75 0400     		.2byte	0x4
 7292 0d77 F3       		.byte	0xf3
 7293 0d78 01       		.uleb128 0x1
 7294 0d79 50       		.byte	0x50
 7295 0d7a 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 189


 7296 0d7b 00000000 		.4byte	0
 7297 0d7f 00000000 		.4byte	0
 7298              	.LLST75:
 7299 0d83 00000000 		.4byte	.LVL233
 7300 0d87 0A000000 		.4byte	.LVL234
 7301 0d8b 0100     		.2byte	0x1
 7302 0d8d 51       		.byte	0x51
 7303 0d8e 0A000000 		.4byte	.LVL234
 7304 0d92 1C000000 		.4byte	.LFE214
 7305 0d96 0400     		.2byte	0x4
 7306 0d98 F3       		.byte	0xf3
 7307 0d99 01       		.uleb128 0x1
 7308 0d9a 51       		.byte	0x51
 7309 0d9b 9F       		.byte	0x9f
 7310 0d9c 00000000 		.4byte	0
 7311 0da0 00000000 		.4byte	0
 7312              	.LLST76:
 7313 0da4 00000000 		.4byte	.LVL238
 7314 0da8 18000000 		.4byte	.LVL240
 7315 0dac 0100     		.2byte	0x1
 7316 0dae 50       		.byte	0x50
 7317 0daf 18000000 		.4byte	.LVL240
 7318 0db3 48000000 		.4byte	.LVL246
 7319 0db7 0100     		.2byte	0x1
 7320 0db9 54       		.byte	0x54
 7321 0dba 48000000 		.4byte	.LVL246
 7322 0dbe 4C000000 		.4byte	.LFE215
 7323 0dc2 0400     		.2byte	0x4
 7324 0dc4 F3       		.byte	0xf3
 7325 0dc5 01       		.uleb128 0x1
 7326 0dc6 50       		.byte	0x50
 7327 0dc7 9F       		.byte	0x9f
 7328 0dc8 00000000 		.4byte	0
 7329 0dcc 00000000 		.4byte	0
 7330              	.LLST77:
 7331 0dd0 00000000 		.4byte	.LVL238
 7332 0dd4 16000000 		.4byte	.LVL239
 7333 0dd8 0100     		.2byte	0x1
 7334 0dda 51       		.byte	0x51
 7335 0ddb 16000000 		.4byte	.LVL239
 7336 0ddf 34000000 		.4byte	.LVL243
 7337 0de3 0100     		.2byte	0x1
 7338 0de5 55       		.byte	0x55
 7339 0de6 34000000 		.4byte	.LVL243
 7340 0dea 3A000000 		.4byte	.LVL244
 7341 0dee 0400     		.2byte	0x4
 7342 0df0 F3       		.byte	0xf3
 7343 0df1 01       		.uleb128 0x1
 7344 0df2 51       		.byte	0x51
 7345 0df3 9F       		.byte	0x9f
 7346 0df4 3A000000 		.4byte	.LVL244
 7347 0df8 42000000 		.4byte	.LVL245
 7348 0dfc 0100     		.2byte	0x1
 7349 0dfe 55       		.byte	0x55
 7350 0dff 42000000 		.4byte	.LVL245
 7351 0e03 4C000000 		.4byte	.LFE215
 7352 0e07 0400     		.2byte	0x4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 190


 7353 0e09 F3       		.byte	0xf3
 7354 0e0a 01       		.uleb128 0x1
 7355 0e0b 51       		.byte	0x51
 7356 0e0c 9F       		.byte	0x9f
 7357 0e0d 00000000 		.4byte	0
 7358 0e11 00000000 		.4byte	0
 7359              	.LLST78:
 7360 0e15 00000000 		.4byte	.LVL238
 7361 0e19 1B000000 		.4byte	.LVL241-1
 7362 0e1d 0100     		.2byte	0x1
 7363 0e1f 52       		.byte	0x52
 7364 0e20 1B000000 		.4byte	.LVL241-1
 7365 0e24 4C000000 		.4byte	.LFE215
 7366 0e28 0400     		.2byte	0x4
 7367 0e2a F3       		.byte	0xf3
 7368 0e2b 01       		.uleb128 0x1
 7369 0e2c 52       		.byte	0x52
 7370 0e2d 9F       		.byte	0x9f
 7371 0e2e 00000000 		.4byte	0
 7372 0e32 00000000 		.4byte	0
 7373              	.LLST79:
 7374 0e36 00000000 		.4byte	.LVL247
 7375 0e3a 08000000 		.4byte	.LVL249
 7376 0e3e 0100     		.2byte	0x1
 7377 0e40 50       		.byte	0x50
 7378 0e41 08000000 		.4byte	.LVL249
 7379 0e45 0E000000 		.4byte	.LVL251
 7380 0e49 0400     		.2byte	0x4
 7381 0e4b F3       		.byte	0xf3
 7382 0e4c 01       		.uleb128 0x1
 7383 0e4d 50       		.byte	0x50
 7384 0e4e 9F       		.byte	0x9f
 7385 0e4f 0E000000 		.4byte	.LVL251
 7386 0e53 14000000 		.4byte	.LVL252
 7387 0e57 0100     		.2byte	0x1
 7388 0e59 50       		.byte	0x50
 7389 0e5a 14000000 		.4byte	.LVL252
 7390 0e5e 1C000000 		.4byte	.LFE216
 7391 0e62 0400     		.2byte	0x4
 7392 0e64 F3       		.byte	0xf3
 7393 0e65 01       		.uleb128 0x1
 7394 0e66 50       		.byte	0x50
 7395 0e67 9F       		.byte	0x9f
 7396 0e68 00000000 		.4byte	0
 7397 0e6c 00000000 		.4byte	0
 7398              	.LLST80:
 7399 0e70 00000000 		.4byte	.LVL247
 7400 0e74 0B000000 		.4byte	.LVL250-1
 7401 0e78 0100     		.2byte	0x1
 7402 0e7a 51       		.byte	0x51
 7403 0e7b 0B000000 		.4byte	.LVL250-1
 7404 0e7f 0E000000 		.4byte	.LVL251
 7405 0e83 0400     		.2byte	0x4
 7406 0e85 F3       		.byte	0xf3
 7407 0e86 01       		.uleb128 0x1
 7408 0e87 51       		.byte	0x51
 7409 0e88 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 191


 7410 0e89 0E000000 		.4byte	.LVL251
 7411 0e8d 17000000 		.4byte	.LVL253-1
 7412 0e91 0100     		.2byte	0x1
 7413 0e93 51       		.byte	0x51
 7414 0e94 17000000 		.4byte	.LVL253-1
 7415 0e98 1C000000 		.4byte	.LFE216
 7416 0e9c 0400     		.2byte	0x4
 7417 0e9e F3       		.byte	0xf3
 7418 0e9f 01       		.uleb128 0x1
 7419 0ea0 51       		.byte	0x51
 7420 0ea1 9F       		.byte	0x9f
 7421 0ea2 00000000 		.4byte	0
 7422 0ea6 00000000 		.4byte	0
 7423              		.section	.debug_aranges,"",%progbits
 7424 0000 DC000000 		.4byte	0xdc
 7425 0004 0200     		.2byte	0x2
 7426 0006 00000000 		.4byte	.Ldebug_info0
 7427 000a 04       		.byte	0x4
 7428 000b 00       		.byte	0
 7429 000c 0000     		.2byte	0
 7430 000e 0000     		.2byte	0
 7431 0010 00000000 		.4byte	.LFB192
 7432 0014 00020000 		.4byte	.LFE192-.LFB192
 7433 0018 00000000 		.4byte	.LFB193
 7434 001c 70000000 		.4byte	.LFE193-.LFB193
 7435 0020 00000000 		.4byte	.LFB194
 7436 0024 20000000 		.4byte	.LFE194-.LFB194
 7437 0028 00000000 		.4byte	.LFB197
 7438 002c 2C000000 		.4byte	.LFE197-.LFB197
 7439 0030 00000000 		.4byte	.LFB196
 7440 0034 34000000 		.4byte	.LFE196-.LFB196
 7441 0038 00000000 		.4byte	.LFB198
 7442 003c 12000000 		.4byte	.LFE198-.LFB198
 7443 0040 00000000 		.4byte	.LFB195
 7444 0044 40000000 		.4byte	.LFE195-.LFB195
 7445 0048 00000000 		.4byte	.LFB199
 7446 004c 30000000 		.4byte	.LFE199-.LFB199
 7447 0050 00000000 		.4byte	.LFB200
 7448 0054 64000000 		.4byte	.LFE200-.LFB200
 7449 0058 00000000 		.4byte	.LFB202
 7450 005c 34000000 		.4byte	.LFE202-.LFB202
 7451 0060 00000000 		.4byte	.LFB201
 7452 0064 54000000 		.4byte	.LFE201-.LFB201
 7453 0068 00000000 		.4byte	.LFB203
 7454 006c 2C000000 		.4byte	.LFE203-.LFB203
 7455 0070 00000000 		.4byte	.LFB204
 7456 0074 3C000000 		.4byte	.LFE204-.LFB204
 7457 0078 00000000 		.4byte	.LFB205
 7458 007c 28000000 		.4byte	.LFE205-.LFB205
 7459 0080 00000000 		.4byte	.LFB206
 7460 0084 28000000 		.4byte	.LFE206-.LFB206
 7461 0088 00000000 		.4byte	.LFB207
 7462 008c 34000000 		.4byte	.LFE207-.LFB207
 7463 0090 00000000 		.4byte	.LFB208
 7464 0094 34000000 		.4byte	.LFE208-.LFB208
 7465 0098 00000000 		.4byte	.LFB209
 7466 009c 80000000 		.4byte	.LFE209-.LFB209
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 192


 7467 00a0 00000000 		.4byte	.LFB210
 7468 00a4 6C000000 		.4byte	.LFE210-.LFB210
 7469 00a8 00000000 		.4byte	.LFB211
 7470 00ac 74000000 		.4byte	.LFE211-.LFB211
 7471 00b0 00000000 		.4byte	.LFB212
 7472 00b4 5C000000 		.4byte	.LFE212-.LFB212
 7473 00b8 00000000 		.4byte	.LFB213
 7474 00bc 4C000000 		.4byte	.LFE213-.LFB213
 7475 00c0 00000000 		.4byte	.LFB214
 7476 00c4 1C000000 		.4byte	.LFE214-.LFB214
 7477 00c8 00000000 		.4byte	.LFB215
 7478 00cc 4C000000 		.4byte	.LFE215-.LFB215
 7479 00d0 00000000 		.4byte	.LFB216
 7480 00d4 1C000000 		.4byte	.LFE216-.LFB216
 7481 00d8 00000000 		.4byte	0
 7482 00dc 00000000 		.4byte	0
 7483              		.section	.debug_ranges,"",%progbits
 7484              	.Ldebug_ranges0:
 7485 0000 00000000 		.4byte	.LFB192
 7486 0004 00020000 		.4byte	.LFE192
 7487 0008 00000000 		.4byte	.LFB193
 7488 000c 70000000 		.4byte	.LFE193
 7489 0010 00000000 		.4byte	.LFB194
 7490 0014 20000000 		.4byte	.LFE194
 7491 0018 00000000 		.4byte	.LFB197
 7492 001c 2C000000 		.4byte	.LFE197
 7493 0020 00000000 		.4byte	.LFB196
 7494 0024 34000000 		.4byte	.LFE196
 7495 0028 00000000 		.4byte	.LFB198
 7496 002c 12000000 		.4byte	.LFE198
 7497 0030 00000000 		.4byte	.LFB195
 7498 0034 40000000 		.4byte	.LFE195
 7499 0038 00000000 		.4byte	.LFB199
 7500 003c 30000000 		.4byte	.LFE199
 7501 0040 00000000 		.4byte	.LFB200
 7502 0044 64000000 		.4byte	.LFE200
 7503 0048 00000000 		.4byte	.LFB202
 7504 004c 34000000 		.4byte	.LFE202
 7505 0050 00000000 		.4byte	.LFB201
 7506 0054 54000000 		.4byte	.LFE201
 7507 0058 00000000 		.4byte	.LFB203
 7508 005c 2C000000 		.4byte	.LFE203
 7509 0060 00000000 		.4byte	.LFB204
 7510 0064 3C000000 		.4byte	.LFE204
 7511 0068 00000000 		.4byte	.LFB205
 7512 006c 28000000 		.4byte	.LFE205
 7513 0070 00000000 		.4byte	.LFB206
 7514 0074 28000000 		.4byte	.LFE206
 7515 0078 00000000 		.4byte	.LFB207
 7516 007c 34000000 		.4byte	.LFE207
 7517 0080 00000000 		.4byte	.LFB208
 7518 0084 34000000 		.4byte	.LFE208
 7519 0088 00000000 		.4byte	.LFB209
 7520 008c 80000000 		.4byte	.LFE209
 7521 0090 00000000 		.4byte	.LFB210
 7522 0094 6C000000 		.4byte	.LFE210
 7523 0098 00000000 		.4byte	.LFB211
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 193


 7524 009c 74000000 		.4byte	.LFE211
 7525 00a0 00000000 		.4byte	.LFB212
 7526 00a4 5C000000 		.4byte	.LFE212
 7527 00a8 00000000 		.4byte	.LFB213
 7528 00ac 4C000000 		.4byte	.LFE213
 7529 00b0 00000000 		.4byte	.LFB214
 7530 00b4 1C000000 		.4byte	.LFE214
 7531 00b8 00000000 		.4byte	.LFB215
 7532 00bc 4C000000 		.4byte	.LFE215
 7533 00c0 00000000 		.4byte	.LFB216
 7534 00c4 1C000000 		.4byte	.LFE216
 7535 00c8 00000000 		.4byte	0
 7536 00cc 00000000 		.4byte	0
 7537              		.section	.debug_line,"",%progbits
 7538              	.Ldebug_line0:
 7539 0000 EA060000 		.section	.debug_str,"MS",%progbits,1
 7539      0200EB02 
 7539      00000201 
 7539      FB0E0D00 
 7539      01010101 
 7540              	.LASF118:
 7541 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 7541      6843746C 
 7541      4D61696E 
 7541      57733146 
 7541      72657100 
 7542              	.LASF275:
 7543 0014 72616E67 		.ascii	"rangeThresReg\000"
 7543      65546872 
 7543      65735265 
 7543      6700
 7544              	.LASF274:
 7545 0022 6C6F774C 		.ascii	"lowLimit\000"
 7545      696D6974 
 7545      00
 7546              	.LASF25:
 7547 002b 52455345 		.ascii	"RESERVED\000"
 7547      52564544 
 7547      00
 7548              	.LASF54:
 7549 0034 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 7549      455F494E 
 7549      54525F4D 
 7549      41534B45 
 7549      4400
 7550              	.LASF39:
 7551 0046 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 7551      5F574F52 
 7551      4B5F5550 
 7551      44415445 
 7551      4400
 7552              	.LASF182:
 7553 0058 63795F73 		.ascii	"cy_stc_syspm_callback_params_t\000"
 7553      74635F73 
 7553      7973706D 
 7553      5F63616C 
 7553      6C626163 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 194


 7554              	.LASF305:
 7555 0077 63795F64 		.ascii	"cy_device\000"
 7555      65766963 
 7555      6500
 7556              	.LASF242:
 7557 0081 6368616E 		.ascii	"chan\000"
 7557      00
 7558              	.LASF272:
 7559 0086 66696E61 		.ascii	"finalResult\000"
 7559      6C526573 
 7559      756C7400 
 7560              	.LASF208:
 7561 0092 43595F53 		.ascii	"CY_SAR_NEG_SEL_VREF\000"
 7561      41525F4E 
 7561      45475F53 
 7561      454C5F56 
 7561      52454600 
 7562              	.LASF104:
 7563 00a6 70657269 		.ascii	"periClockNr\000"
 7563      436C6F63 
 7563      6B4E7200 
 7564              	.LASF163:
 7565 00b2 63686172 		.ascii	"char\000"
 7565      00
 7566              	.LASF78:
 7567 00b7 75646242 		.ascii	"udbBase\000"
 7567      61736500 
 7568              	.LASF30:
 7569 00bf 4348414E 		.ascii	"CHAN_EN\000"
 7569      5F454E00 
 7570              	.LASF174:
 7571 00c7 63795F65 		.ascii	"cy_en_syspm_status_t\000"
 7571      6E5F7379 
 7571      73706D5F 
 7571      73746174 
 7571      75735F74 
 7572              	.LASF77:
 7573 00dc 70657269 		.ascii	"periBase\000"
 7573      42617365 
 7573      00
 7574              	.LASF293:
 7575 00e5 73776974 		.ascii	"switchSelect\000"
 7575      63685365 
 7575      6C656374 
 7575      00
 7576              	.LASF153:
 7577 00f2 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 7577      73436D30 
 7577      4E6D6943 
 7577      746C4F66 
 7577      66736574 
 7578              	.LASF123:
 7579 0107 64774368 		.ascii	"dwChSize\000"
 7579      53697A65 
 7579      00
 7580              	.LASF283:
 7581 0110 61646343 		.ascii	"adcCounts\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 195


 7581      6F756E74 
 7581      7300
 7582              	.LASF247:
 7583 011a 73696E67 		.ascii	"singleEndedSigned\000"
 7583      6C65456E 
 7583      64656453 
 7583      69676E65 
 7583      6400
 7584              	.LASF14:
 7585 012c 756E7369 		.ascii	"unsigned int\000"
 7585      676E6564 
 7585      20696E74 
 7585      00
 7586              	.LASF55:
 7587 0139 494E5452 		.ascii	"INTR_CAUSE\000"
 7587      5F434155 
 7587      534500
 7588              	.LASF105:
 7589 0144 736D6966 		.ascii	"smifDeviceNr\000"
 7589      44657669 
 7589      63654E72 
 7589      00
 7590              	.LASF216:
 7591 0151 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 7591      41525F52 
 7591      414E4745 
 7591      5F434F4E 
 7591      445F4F55 
 7592              	.LASF281:
 7593 016b 61646347 		.ascii	"adcGain\000"
 7593      61696E00 
 7594              	.LASF97:
 7595 0173 63707573 		.ascii	"cpussFlashPaSize\000"
 7595      73466C61 
 7595      73685061 
 7595      53697A65 
 7595      00
 7596              	.LASF196:
 7597 0184 63795F65 		.ascii	"cy_en_sar_switch_state_t\000"
 7597      6E5F7361 
 7597      725F7377 
 7597      69746368 
 7597      5F737461 
 7598              	.LASF7:
 7599 019d 5F5F696E 		.ascii	"__int32_t\000"
 7599      7433325F 
 7599      7400
 7600              	.LASF41:
 7601 01a7 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 7601      5F574F52 
 7601      4B5F4E45 
 7601      5756414C 
 7601      554500
 7602              	.LASF203:
 7603 01ba 43595F53 		.ascii	"CY_SAR_NEG_SEL_P1\000"
 7603      41525F4E 
 7603      45475F53 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 196


 7603      454C5F50 
 7603      3100
 7604              	.LASF75:
 7605 01cc 63707573 		.ascii	"cpussBase\000"
 7605      73426173 
 7605      6500
 7606              	.LASF205:
 7607 01d6 43595F53 		.ascii	"CY_SAR_NEG_SEL_P5\000"
 7607      41525F4E 
 7607      45475F53 
 7607      454C5F50 
 7607      3500
 7608              	.LASF206:
 7609 01e8 43595F53 		.ascii	"CY_SAR_NEG_SEL_P7\000"
 7609      41525F4E 
 7609      45475F53 
 7609      454C5F50 
 7609      3700
 7610              	.LASF99:
 7611 01fa 63707573 		.ascii	"cpussFmIrq\000"
 7611      73466D49 
 7611      727100
 7612              	.LASF186:
 7613 0205 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 7613      41525F43 
 7613      4F4E5645 
 7613      5253494F 
 7613      4E5F4E4F 
 7614              	.LASF100:
 7615 0224 63707573 		.ascii	"cpussNotConnectedIrq\000"
 7615      734E6F74 
 7615      436F6E6E 
 7615      65637465 
 7615      64497271 
 7616              	.LASF4:
 7617 0239 73686F72 		.ascii	"short int\000"
 7617      7420696E 
 7617      7400
 7618              	.LASF47:
 7619 0243 53415455 		.ascii	"SATURATE_INTR\000"
 7619      52415445 
 7619      5F494E54 
 7619      5200
 7620              	.LASF26:
 7621 0251 53414D50 		.ascii	"SAMPLE_TIME01\000"
 7621      4C455F54 
 7621      494D4530 
 7621      3100
 7622              	.LASF192:
 7623 025f 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 7623      41525F57 
 7623      4149545F 
 7623      464F525F 
 7623      52455355 
 7624              	.LASF59:
 7625 0276 494E4A5F 		.ascii	"INJ_RESULT\000"
 7625      52455355 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 197


 7625      4C5400
 7626              	.LASF134:
 7627 0281 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 7627      44697643 
 7627      6D645061 
 7627      44697653 
 7627      656C506F 
 7628              	.LASF297:
 7629 0297 73776974 		.ascii	"switchClearReg\000"
 7629      6368436C 
 7629      65617252 
 7629      656700
 7630              	.LASF44:
 7631 02a6 494E5452 		.ascii	"INTR_SET\000"
 7631      5F534554 
 7631      00
 7632              	.LASF111:
 7633 02af 63727970 		.ascii	"cryptoMemSize\000"
 7633      746F4D65 
 7633      6D53697A 
 7633      6500
 7634              	.LASF255:
 7635 02bd 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 7635      41525F57 
 7635      616B6575 
 7635      7000
 7636              	.LASF231:
 7637 02cb 73617449 		.ascii	"satIntrMask\000"
 7637      6E74724D 
 7637      61736B00 
 7638              	.LASF190:
 7639 02d7 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 7639      6E5F7361 
 7639      725F7374 
 7639      6172745F 
 7639      636F6E76 
 7640              	.LASF131:
 7641 02f5 70657269 		.ascii	"periTrGrSize\000"
 7641      54724772 
 7641      53697A65 
 7641      00
 7642              	.LASF159:
 7643 0302 69706353 		.ascii	"ipcStructSize\000"
 7643      74727563 
 7643      7453697A 
 7643      6500
 7644              	.LASF273:
 7645 0310 43795F53 		.ascii	"Cy_SAR_SetLowLimit\000"
 7645      41525F53 
 7645      65744C6F 
 7645      774C696D 
 7645      697400
 7646              	.LASF310:
 7647 0323 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7647      43313120 
 7647      352E342E 
 7647      31203230 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 198


 7647      31363036 
 7648 0356 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 7648      20726576 
 7648      6973696F 
 7648      6E203233 
 7648      37373135 
 7649 0389 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 7649      70202D6D 
 7649      6670753D 
 7649      66707634 
 7649      2D73702D 
 7650 03bc 65637469 		.ascii	"ections -ffat-lto-objects\000"
 7650      6F6E7320 
 7650      2D666661 
 7650      742D6C74 
 7650      6F2D6F62 
 7651              	.LASF93:
 7652 03d6 70726F74 		.ascii	"protVersion\000"
 7652      56657273 
 7652      696F6E00 
 7653              	.LASF213:
 7654 03e2 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 7654      41525F52 
 7654      414E4745 
 7654      5F434F4E 
 7654      445F4245 
 7655              	.LASF268:
 7656 03fa 69735369 		.ascii	"isSigned\000"
 7656      676E6564 
 7656      00
 7657              	.LASF74:
 7658 0403 5341525F 		.ascii	"SAR_Type\000"
 7658      54797065 
 7658      00
 7659              	.LASF314:
 7660 040c 61646352 		.ascii	"adcResult16\000"
 7660      6573756C 
 7660      74313600 
 7661              	.LASF265:
 7662 0418 43795F53 		.ascii	"Cy_SAR_IsChannelSingleEnded\000"
 7662      41525F49 
 7662      73436861 
 7662      6E6E656C 
 7662      53696E67 
 7663              	.LASF133:
 7664 0434 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 7664      44697643 
 7664      6D645479 
 7664      70655365 
 7664      6C506F73 
 7665              	.LASF204:
 7666 0449 43595F53 		.ascii	"CY_SAR_NEG_SEL_P3\000"
 7666      41525F4E 
 7666      45475F53 
 7666      454C5F50 
 7666      3300
 7667              	.LASF150:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 199


 7668 045b 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 7668      73547269 
 7668      6D52616D 
 7668      43746C4F 
 7668      66667365 
 7669              	.LASF300:
 7670 0471 43795F53 		.ascii	"Cy_SAR_DeepSleepCallback\000"
 7670      41525F44 
 7670      65657053 
 7670      6C656570 
 7670      43616C6C 
 7671              	.LASF176:
 7672 048a 43595F53 		.ascii	"CY_SYSPM_CHECK_FAIL\000"
 7672      5953504D 
 7672      5F434845 
 7672      434B5F46 
 7672      41494C00 
 7673              	.LASF161:
 7674 049e 63795F73 		.ascii	"cy_stc_device_t\000"
 7674      74635F64 
 7674      65766963 
 7674      655F7400 
 7675              	.LASF19:
 7676 04ae 75696E74 		.ascii	"uint32_t\000"
 7676      33325F74 
 7676      00
 7677              	.LASF143:
 7678 04b7 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 7678      50727443 
 7678      66674F75 
 7678      744F6666 
 7678      73657400 
 7679              	.LASF43:
 7680 04cb 494E5452 		.ascii	"INTR\000"
 7680      00
 7681              	.LASF165:
 7682 04d0 666C6F61 		.ascii	"float\000"
 7682      7400
 7683              	.LASF86:
 7684 04d6 63727970 		.ascii	"cryptoVersion\000"
 7684      746F5665 
 7684      7273696F 
 7684      6E00
 7685              	.LASF115:
 7686 04e4 666C6173 		.ascii	"flashProgramDelay\000"
 7686      6850726F 
 7686      6772616D 
 7686      44656C61 
 7686      7900
 7687              	.LASF180:
 7688 04f6 62617365 		.ascii	"base\000"
 7688      00
 7689              	.LASF76:
 7690 04fb 666C6173 		.ascii	"flashcBase\000"
 7690      68634261 
 7690      736500
 7691              	.LASF16:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 200


 7692 0506 696E7431 		.ascii	"int16_t\000"
 7692      365F7400 
 7693              	.LASF142:
 7694 050e 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 7694      50727443 
 7694      6667496E 
 7694      4F666673 
 7694      657400
 7695              	.LASF244:
 7696 0521 72657375 		.ascii	"result\000"
 7696      6C7400
 7697              	.LASF13:
 7698 0528 6C6F6E67 		.ascii	"long long unsigned int\000"
 7698      206C6F6E 
 7698      6720756E 
 7698      7369676E 
 7698      65642069 
 7699              	.LASF248:
 7700 053f 6368616E 		.ascii	"chanSingleEnded\000"
 7700      53696E67 
 7700      6C65456E 
 7700      64656400 
 7701              	.LASF144:
 7702 054f 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 7702      50727443 
 7702      66675369 
 7702      6F4F6666 
 7702      73657400 
 7703              	.LASF279:
 7704 0563 6F666673 		.ascii	"offset\000"
 7704      657400
 7705              	.LASF135:
 7706 056a 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 7706      44697643 
 7706      6D645061 
 7706      54797065 
 7706      53656C50 
 7707              	.LASF290:
 7708 0581 43795F53 		.ascii	"Cy_SAR_CountsTo_uVolts\000"
 7708      41525F43 
 7708      6F756E74 
 7708      73546F5F 
 7708      75566F6C 
 7709              	.LASF27:
 7710 0598 53414D50 		.ascii	"SAMPLE_TIME23\000"
 7710      4C455F54 
 7710      494D4532 
 7710      3300
 7711              	.LASF226:
 7712 05a6 72616E67 		.ascii	"rangeThres\000"
 7712      65546872 
 7712      657300
 7713              	.LASF5:
 7714 05b1 5F5F7569 		.ascii	"__uint16_t\000"
 7714      6E743136 
 7714      5F7400
 7715              	.LASF267:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 201


 7716 05bc 43795F53 		.ascii	"Cy_SAR_IsChannelSigned\000"
 7716      41525F49 
 7716      73436861 
 7716      6E6E656C 
 7716      5369676E 
 7717              	.LASF164:
 7718 05d3 666C6F61 		.ascii	"float32_t\000"
 7718      7433325F 
 7718      7400
 7719              	.LASF238:
 7720 05dd 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 7720      74635F73 
 7720      61725F63 
 7720      6F6E6669 
 7720      675F7400 
 7721              	.LASF222:
 7722 05f1 6374726C 		.ascii	"ctrl\000"
 7722      00
 7723              	.LASF254:
 7724 05f6 73746172 		.ascii	"startSelect\000"
 7724      7453656C 
 7724      65637400 
 7725              	.LASF266:
 7726 0602 69735369 		.ascii	"isSingleEnded\000"
 7726      6E676C65 
 7726      456E6465 
 7726      6400
 7727              	.LASF214:
 7728 0610 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 7728      41525F52 
 7728      414E4745 
 7728      5F434F4E 
 7728      445F494E 
 7729              	.LASF168:
 7730 0629 43595F53 		.ascii	"CY_SYSPM_SUCCESS\000"
 7730      5953504D 
 7730      5F535543 
 7730      43455353 
 7730      00
 7731              	.LASF120:
 7732 063a 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 7732      6843746C 
 7732      4D61696E 
 7732      57733346 
 7732      72657100 
 7733              	.LASF102:
 7734 064e 73727373 		.ascii	"srssNumPll\000"
 7734      4E756D50 
 7734      6C6C00
 7735              	.LASF200:
 7736 0659 43595F53 		.ascii	"CY_SAR_MUX_SWITCH0\000"
 7736      41525F4D 
 7736      55585F53 
 7736      57495443 
 7736      483000
 7737              	.LASF250:
 7738 066c 43795F53 		.ascii	"Cy_SAR_DeInit\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 202


 7738      41525F44 
 7738      65496E69 
 7738      7400
 7739              	.LASF20:
 7740 067a 696E7436 		.ascii	"int64_t\000"
 7740      345F7400 
 7741              	.LASF113:
 7742 0682 666C6173 		.ascii	"flashPipeRequired\000"
 7742      68506970 
 7742      65526571 
 7742      75697265 
 7742      6400
 7743              	.LASF53:
 7744 0694 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 7744      455F494E 
 7744      54525F4D 
 7744      41534B00 
 7745              	.LASF166:
 7746 06a4 646F7562 		.ascii	"double\000"
 7746      6C6500
 7747              	.LASF287:
 7748 06ab 72657375 		.ascii	"result_Volts\000"
 7748      6C745F56 
 7748      6F6C7473 
 7748      00
 7749              	.LASF237:
 7750 06b8 5F426F6F 		.ascii	"_Bool\000"
 7750      6C00
 7751              	.LASF29:
 7752 06be 52414E47 		.ascii	"RANGE_COND\000"
 7752      455F434F 
 7752      4E4400
 7753              	.LASF117:
 7754 06c9 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 7754      6843746C 
 7754      4D61696E 
 7754      57733046 
 7754      72657100 
 7755              	.LASF67:
 7756 06dd 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 7756      53574954 
 7756      43485F44 
 7756      535F4354 
 7756      524C00
 7757              	.LASF219:
 7758 06f0 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 7758      41525F49 
 7758      4E54525F 
 7758      454F535F 
 7758      4D41534B 
 7759              	.LASF81:
 7760 0705 6770696F 		.ascii	"gpioBase\000"
 7760      42617365 
 7760      00
 7761              	.LASF184:
 7762 070e 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 7762      41525F42 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 203


 7762      41445F50 
 7762      4152414D 
 7762      00
 7763              	.LASF288:
 7764 071f 43795F53 		.ascii	"Cy_SAR_CountsTo_mVolts\000"
 7764      41525F43 
 7764      6F756E74 
 7764      73546F5F 
 7764      6D566F6C 
 7765              	.LASF152:
 7766 0736 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 7766      73537973 
 7766      5469636B 
 7766      43746C4F 
 7766      66667365 
 7767              	.LASF108:
 7768 074c 75646250 		.ascii	"udbPresent\000"
 7768      72657365 
 7768      6E7400
 7769              	.LASF299:
 7770 0757 43795F53 		.ascii	"Cy_SAR_SetSwitchSarSeqCtrl\000"
 7770      41525F53 
 7770      65745377 
 7770      69746368 
 7770      53617253 
 7771              	.LASF126:
 7772 0772 64775374 		.ascii	"dwStatusChIdxPos\000"
 7772      61747573 
 7772      43684964 
 7772      78506F73 
 7772      00
 7773              	.LASF239:
 7774 0783 6877456E 		.ascii	"hwEnabled\000"
 7774      61626C65 
 7774      6400
 7775              	.LASF73:
 7776 078d 5341525F 		.ascii	"SAR_V1_Type\000"
 7776      56315F54 
 7776      79706500 
 7777              	.LASF170:
 7778 0799 43595F53 		.ascii	"CY_SYSPM_TIMEOUT\000"
 7778      5953504D 
 7778      5F54494D 
 7778      454F5554 
 7778      00
 7779              	.LASF236:
 7780 07aa 76726566 		.ascii	"vrefMvValue\000"
 7780      4D765661 
 7780      6C756500 
 7781              	.LASF171:
 7782 07b6 43595F53 		.ascii	"CY_SYSPM_INVALID_STATE\000"
 7782      5953504D 
 7782      5F494E56 
 7782      414C4944 
 7782      5F535441 
 7783              	.LASF50:
 7784 07cd 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 204


 7784      52415445 
 7784      5F494E54 
 7784      525F4D41 
 7784      534B4544 
 7785              	.LASF172:
 7786 07e2 43595F53 		.ascii	"CY_SYSPM_CANCELED\000"
 7786      5953504D 
 7786      5F43414E 
 7786      43454C45 
 7786      4400
 7787              	.LASF48:
 7788 07f4 53415455 		.ascii	"SATURATE_INTR_SET\000"
 7788      52415445 
 7788      5F494E54 
 7788      525F5345 
 7788      5400
 7789              	.LASF215:
 7790 0806 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 7790      41525F52 
 7790      414E4745 
 7790      5F434F4E 
 7790      445F4142 
 7791              	.LASF199:
 7792 081e 63795F65 		.ascii	"cy_en_sar_switch_sar_seq_ctrl_t\000"
 7792      6E5F7361 
 7792      725F7377 
 7792      69746368 
 7792      5F736172 
 7793              	.LASF308:
 7794 083e 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 7794      79734C69 
 7794      625F4173 
 7794      73657274 
 7794      4661696C 
 7795              	.LASF276:
 7796 0855 43795F53 		.ascii	"Cy_SAR_SetHighLimit\000"
 7796      41525F53 
 7796      65744869 
 7796      67684C69 
 7796      6D697400 
 7797              	.LASF228:
 7798 0869 6368616E 		.ascii	"chanEn\000"
 7798      456E00
 7799              	.LASF138:
 7800 0870 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 7800      44697631 
 7800      365F3543 
 7800      746C4F66 
 7800      66736574 
 7801              	.LASF109:
 7802 0885 73797350 		.ascii	"sysPmSimoPresent\000"
 7802      6D53696D 
 7802      6F507265 
 7802      73656E74 
 7802      00
 7803              	.LASF42:
 7804 0896 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 205


 7804      5F524553 
 7804      554C545F 
 7804      4E455756 
 7804      414C5545 
 7805              	.LASF57:
 7806 08ab 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 7806      4348414E 
 7806      5F434F4E 
 7806      46494700 
 7807              	.LASF298:
 7808 08bb 43795F53 		.ascii	"Cy_SAR_GetAnalogSwitch\000"
 7808      41525F47 
 7808      6574416E 
 7808      616C6F67 
 7808      53776974 
 7809              	.LASF62:
 7810 08d2 4156475F 		.ascii	"AVG_STAT\000"
 7810      53544154 
 7810      00
 7811              	.LASF127:
 7812 08db 64775374 		.ascii	"dwStatusChIdxMsk\000"
 7812      61747573 
 7812      43684964 
 7812      784D736B 
 7812      00
 7813              	.LASF15:
 7814 08ec 75696E74 		.ascii	"uint8_t\000"
 7814      385F7400 
 7815              	.LASF211:
 7816 08f4 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL\000"
 7816      41525F54 
 7816      52494747 
 7816      45525F4D 
 7816      4F44455F 
 7817              	.LASF291:
 7818 0917 72657375 		.ascii	"result_uVolts\000"
 7818      6C745F75 
 7818      566F6C74 
 7818      7300
 7819              	.LASF187:
 7820 0925 63795F65 		.ascii	"cy_en_sar_status_t\000"
 7820      6E5F7361 
 7820      725F7374 
 7820      61747573 
 7820      5F7400
 7821              	.LASF259:
 7822 0938 43795F53 		.ascii	"Cy_SAR_SetConvertMode\000"
 7822      41525F53 
 7822      6574436F 
 7822      6E766572 
 7822      744D6F64 
 7823              	.LASF132:
 7824 094e 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 7824      44697643 
 7824      6D644469 
 7824      7653656C 
 7824      4D736B00 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 206


 7825              	.LASF282:
 7826 0962 43795F53 		.ascii	"Cy_SAR_RawCounts2Counts\000"
 7826      41525F52 
 7826      6177436F 
 7826      756E7473 
 7826      32436F75 
 7827              	.LASF183:
 7828 097a 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 7828      41525F53 
 7828      55434345 
 7828      535300
 7829              	.LASF52:
 7830 0989 52414E47 		.ascii	"RANGE_INTR_SET\000"
 7830      455F494E 
 7830      54525F53 
 7830      455400
 7831              	.LASF234:
 7832 0998 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 7832      77697463 
 7832      68537143 
 7832      74726C00 
 7833              	.LASF227:
 7834 09a8 72616E67 		.ascii	"rangeCond\000"
 7834      65436F6E 
 7834      6400
 7835              	.LASF156:
 7836 09b2 63707573 		.ascii	"cpussRam0Ctl0\000"
 7836      7352616D 
 7836      3043746C 
 7836      3000
 7837              	.LASF12:
 7838 09c0 6C6F6E67 		.ascii	"long long int\000"
 7838      206C6F6E 
 7838      6720696E 
 7838      7400
 7839              	.LASF83:
 7840 09ce 69706342 		.ascii	"ipcBase\000"
 7840      61736500 
 7841              	.LASF124:
 7842 09d6 64774368 		.ascii	"dwChCtlPrioPos\000"
 7842      43746C50 
 7842      72696F50 
 7842      6F7300
 7843              	.LASF84:
 7844 09e5 63727970 		.ascii	"cryptoBase\000"
 7844      746F4261 
 7844      736500
 7845              	.LASF220:
 7846 09f0 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 7846      41525F49 
 7846      4E54525F 
 7846      4F564552 
 7846      464C4F57 
 7847              	.LASF306:
 7848 0a0a 43795F53 		.ascii	"Cy_SAR_offset\000"
 7848      41525F6F 
 7848      66667365 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 207


 7848      7400
 7849              	.LASF139:
 7850 0a18 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 7850      44697632 
 7850      345F3543 
 7850      746C4F66 
 7850      66736574 
 7851              	.LASF221:
 7852 0a2d 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 7852      41525F49 
 7852      4E54525F 
 7852      46575F43 
 7852      4F4C4C49 
 7853              	.LASF114:
 7854 0a4b 666C6173 		.ascii	"flashWriteDelay\000"
 7854      68577269 
 7854      74654465 
 7854      6C617900 
 7855              	.LASF210:
 7856 0a5b 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE\000"
 7856      41525F54 
 7856      52494747 
 7856      45525F4D 
 7856      4F44455F 
 7857              	.LASF181:
 7858 0a7d 636F6E74 		.ascii	"context\000"
 7858      65787400 
 7859              	.LASF3:
 7860 0a85 5F5F696E 		.ascii	"__int16_t\000"
 7860      7431365F 
 7860      7400
 7861              	.LASF80:
 7862 0a8f 6873696F 		.ascii	"hsiomBase\000"
 7862      6D426173 
 7862      6500
 7863              	.LASF253:
 7864 0a99 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 7864      41525F53 
 7864      74617274 
 7864      436F6E76 
 7864      65727400 
 7865              	.LASF37:
 7866 0aad 4348414E 		.ascii	"CHAN_RESULT\000"
 7866      5F524553 
 7866      554C5400 
 7867              	.LASF157:
 7868 0ab9 63707573 		.ascii	"cpussRam1Ctl0\000"
 7868      7352616D 
 7868      3143746C 
 7868      3000
 7869              	.LASF130:
 7870 0ac7 70657269 		.ascii	"periTrGrOffset\000"
 7870      54724772 
 7870      4F666673 
 7870      657400
 7871              	.LASF167:
 7872 0ad6 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 208


 7872      313600
 7873              	.LASF51:
 7874 0add 52414E47 		.ascii	"RANGE_INTR\000"
 7874      455F494E 
 7874      545200
 7875              	.LASF96:
 7876 0ae8 63707573 		.ascii	"cpussDwChNr\000"
 7876      73447743 
 7876      684E7200 
 7877              	.LASF45:
 7878 0af4 494E5452 		.ascii	"INTR_MASK\000"
 7878      5F4D4153 
 7878      4B00
 7879              	.LASF24:
 7880 0afe 53414D50 		.ascii	"SAMPLE_CTRL\000"
 7880      4C455F43 
 7880      54524C00 
 7881              	.LASF296:
 7882 0b0a 73776974 		.ascii	"switchReg\000"
 7882      63685265 
 7882      6700
 7883              	.LASF94:
 7884 0b14 63707573 		.ascii	"cpussIpcNr\000"
 7884      73497063 
 7884      4E7200
 7885              	.LASF65:
 7886 0b1f 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 7886      53574954 
 7886      43485F43 
 7886      4C454152 
 7886      3000
 7887              	.LASF106:
 7888 0b31 70617373 		.ascii	"passSarChannels\000"
 7888      53617243 
 7888      68616E6E 
 7888      656C7300 
 7889              	.LASF158:
 7890 0b41 63707573 		.ascii	"cpussRam2Ctl0\000"
 7890      7352616D 
 7890      3243746C 
 7890      3000
 7891              	.LASF307:
 7892 0b4f 43795F53 		.ascii	"Cy_SAR_countsPer10Volt\000"
 7892      41525F63 
 7892      6F756E74 
 7892      73506572 
 7892      3130566F 
 7893              	.LASF188:
 7894 0b66 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 7894      41525F53 
 7894      54415254 
 7894      5F434F4E 
 7894      56455254 
 7895              	.LASF302:
 7896 0b87 72657475 		.ascii	"returnValue\000"
 7896      726E5661 
 7896      6C756500 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 209


 7897              	.LASF31:
 7898 0b93 53544152 		.ascii	"START_CTRL\000"
 7898      545F4354 
 7898      524C00
 7899              	.LASF185:
 7900 0b9e 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 7900      41525F54 
 7900      494D454F 
 7900      555400
 7901              	.LASF245:
 7902 0bad 636F756E 		.ascii	"counts\000"
 7902      747300
 7903              	.LASF137:
 7904 0bb4 70657269 		.ascii	"periDiv16CtlOffset\000"
 7904      44697631 
 7904      3643746C 
 7904      4F666673 
 7904      657400
 7905              	.LASF207:
 7906 0bc7 43595F53 		.ascii	"CY_SAR_NEG_SEL_ACORE\000"
 7906      41525F4E 
 7906      45475F53 
 7906      454C5F41 
 7906      434F5245 
 7907              	.LASF11:
 7908 0bdc 5F5F696E 		.ascii	"__int64_t\000"
 7908      7436345F 
 7908      7400
 7909              	.LASF233:
 7910 0be6 6D757853 		.ascii	"muxSwitch\000"
 7910      77697463 
 7910      6800
 7911              	.LASF6:
 7912 0bf0 73686F72 		.ascii	"short unsigned int\000"
 7912      7420756E 
 7912      7369676E 
 7912      65642069 
 7912      6E7400
 7913              	.LASF21:
 7914 0c03 6C6F6E67 		.ascii	"long double\000"
 7914      20646F75 
 7914      626C6500 
 7915              	.LASF17:
 7916 0c0f 75696E74 		.ascii	"uint16_t\000"
 7916      31365F74 
 7916      00
 7917              	.LASF79:
 7918 0c18 70726F74 		.ascii	"protBase\000"
 7918      42617365 
 7918      00
 7919              	.LASF129:
 7920 0c21 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 7920      5472436D 
 7920      64477253 
 7920      656C4D73 
 7920      6B00
 7921              	.LASF224:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 210


 7922 0c33 73616D70 		.ascii	"sampleTime01\000"
 7922      6C655469 
 7922      6D653031 
 7922      00
 7923              	.LASF103:
 7924 0c40 73727373 		.ascii	"srssNumHfroot\000"
 7924      4E756D48 
 7924      66726F6F 
 7924      7400
 7925              	.LASF87:
 7926 0c4e 64775665 		.ascii	"dwVersion\000"
 7926      7273696F 
 7926      6E00
 7927              	.LASF119:
 7928 0c58 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 7928      6843746C 
 7928      4D61696E 
 7928      57733246 
 7928      72657100 
 7929              	.LASF1:
 7930 0c6c 756E7369 		.ascii	"unsigned char\000"
 7930      676E6564 
 7930      20636861 
 7930      7200
 7931              	.LASF243:
 7932 0c7a 636F6E66 		.ascii	"config\000"
 7932      696700
 7933              	.LASF313:
 7934 0c81 43795F53 		.ascii	"Cy_SAR_IsChannelDifferential\000"
 7934      41525F49 
 7934      73436861 
 7934      6E6E656C 
 7934      44696666 
 7935              	.LASF198:
 7936 0c9e 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 7936      41525F53 
 7936      57495443 
 7936      485F5345 
 7936      515F4354 
 7937              	.LASF22:
 7938 0cbc 73697A65 		.ascii	"sizetype\000"
 7938      74797065 
 7938      00
 7939              	.LASF191:
 7940 0cc5 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 7940      41525F52 
 7940      45545552 
 7940      4E5F5354 
 7940      41545553 
 7941              	.LASF289:
 7942 0cda 72657375 		.ascii	"result_mVolts\000"
 7942      6C745F6D 
 7942      566F6C74 
 7942      7300
 7943              	.LASF148:
 7944 0ce8 63707573 		.ascii	"cpussCm0StatusOffset\000"
 7944      73436D30 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 211


 7944      53746174 
 7944      75734F66 
 7944      66736574 
 7945              	.LASF136:
 7946 0cfd 70657269 		.ascii	"periDiv8CtlOffset\000"
 7946      44697638 
 7946      43746C4F 
 7946      66667365 
 7946      7400
 7947              	.LASF34:
 7948 0d0f 52455345 		.ascii	"RESERVED2\000"
 7948      52564544 
 7948      3200
 7949              	.LASF36:
 7950 0d19 52455345 		.ascii	"RESERVED3\000"
 7950      52564544 
 7950      3300
 7951              	.LASF38:
 7952 0d23 52455345 		.ascii	"RESERVED4\000"
 7952      52564544 
 7952      3400
 7953              	.LASF56:
 7954 0d2d 52455345 		.ascii	"RESERVED5\000"
 7954      52564544 
 7954      3500
 7955              	.LASF58:
 7956 0d37 52455345 		.ascii	"RESERVED6\000"
 7956      52564544 
 7956      3600
 7957              	.LASF60:
 7958 0d41 52455345 		.ascii	"RESERVED7\000"
 7958      52564544 
 7958      3700
 7959              	.LASF63:
 7960 0d4b 52455345 		.ascii	"RESERVED8\000"
 7960      52564544 
 7960      3800
 7961              	.LASF66:
 7962 0d55 52455345 		.ascii	"RESERVED9\000"
 7962      52564544 
 7962      3900
 7963              	.LASF179:
 7964 0d5f 63795F65 		.ascii	"cy_en_syspm_callback_mode_t\000"
 7964      6E5F7379 
 7964      73706D5F 
 7964      63616C6C 
 7964      6261636B 
 7965              	.LASF68:
 7966 0d7b 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 7966      53574954 
 7966      43485F53 
 7966      515F4354 
 7966      524C00
 7967              	.LASF8:
 7968 0d8e 6C6F6E67 		.ascii	"long int\000"
 7968      20696E74 
 7968      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 212


 7969              	.LASF241:
 7970 0d97 63795F73 		.ascii	"cy_stc_sar_state_backup_t\000"
 7970      74635F73 
 7970      61725F73 
 7970      74617465 
 7970      5F626163 
 7971              	.LASF85:
 7972 0db1 63707573 		.ascii	"cpussVersion\000"
 7972      73566572 
 7972      73696F6E 
 7972      00
 7973              	.LASF304:
 7974 0dbe 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7974      52784275 
 7974      66666572 
 7974      00
 7975              	.LASF258:
 7976 0dcb 6374726C 		.ascii	"ctrlReg\000"
 7976      52656700 
 7977              	.LASF89:
 7978 0dd3 6770696F 		.ascii	"gpioVersion\000"
 7978      56657273 
 7978      696F6E00 
 7979              	.LASF88:
 7980 0ddf 666C6173 		.ascii	"flashcVersion\000"
 7980      68635665 
 7980      7273696F 
 7980      6E00
 7981              	.LASF312:
 7982 0ded 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 7982      635C4461 
 7982      74615C56 
 7982      53636F64 
 7982      655C4749 
 7983 0e1a 65735C45 		.ascii	"es\\Example_DevKitLightSensor\\Onethinx_Creator.cyd"
 7983      78616D70 
 7983      6C655F44 
 7983      65764B69 
 7983      744C6967 
 7984 0e4b 736E00   		.ascii	"sn\000"
 7985              	.LASF212:
 7986 0e4e 63795F65 		.ascii	"cy_en_sar_sample_ctrl_trigger_mode_t\000"
 7986      6E5F7361 
 7986      725F7361 
 7986      6D706C65 
 7986      5F637472 
 7987              	.LASF284:
 7988 0e73 74656D70 		.ascii	"temp\000"
 7988      00
 7989              	.LASF28:
 7990 0e78 52414E47 		.ascii	"RANGE_THRES\000"
 7990      455F5448 
 7990      52455300 
 7991              	.LASF294:
 7992 0e84 73776974 		.ascii	"switchMask\000"
 7992      63684D61 
 7992      736B00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 213


 7993              	.LASF162:
 7994 0e8f 63686172 		.ascii	"char_t\000"
 7994      5F7400
 7995              	.LASF285:
 7996 0e96 61766572 		.ascii	"averageAdcSamplesDiv\000"
 7996      61676541 
 7996      64635361 
 7996      6D706C65 
 7996      73446976 
 7997              	.LASF209:
 7998 0eab 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_ONLY\000"
 7998      41525F54 
 7998      52494747 
 7998      45525F4D 
 7998      4F44455F 
 7999              	.LASF35:
 8000 0ec7 4348414E 		.ascii	"CHAN_WORK\000"
 8000      5F574F52 
 8000      4B00
 8001              	.LASF201:
 8002 0ed1 63795F65 		.ascii	"cy_en_sar_switch_register_sel_t\000"
 8002      6E5F7361 
 8002      725F7377 
 8002      69746368 
 8002      5F726567 
 8003              	.LASF260:
 8004 0ef1 6D6F6465 		.ascii	"mode\000"
 8004      00
 8005              	.LASF257:
 8006 0ef6 43795F53 		.ascii	"Cy_SAR_DeepSleep\000"
 8006      41525F44 
 8006      65657053 
 8006      6C656570 
 8006      00
 8007              	.LASF277:
 8008 0f07 68696768 		.ascii	"highLimit\000"
 8008      4C696D69 
 8008      7400
 8009              	.LASF240:
 8010 0f11 636F6E74 		.ascii	"continuous\000"
 8010      696E756F 
 8010      757300
 8011              	.LASF149:
 8012 0f1c 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 8012      73436D34 
 8012      50777243 
 8012      746C4F66 
 8012      66736574 
 8013              	.LASF2:
 8014 0f31 5F5F7569 		.ascii	"__uint8_t\000"
 8014      6E74385F 
 8014      7400
 8015              	.LASF311:
 8016 0f3b 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 8016      72617465 
 8016      645F536F 
 8016      75726365 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 214


 8016      5C50536F 
 8017 0f69 7361725C 		.ascii	"sar\\cy_sar.c\000"
 8017      63795F73 
 8017      61722E63 
 8017      00
 8018              	.LASF280:
 8019 0f76 43795F53 		.ascii	"Cy_SAR_SetGain\000"
 8019      41525F53 
 8019      65744761 
 8019      696E00
 8020              	.LASF140:
 8021 0f85 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 8021      50727449 
 8021      6E747243 
 8021      66674F66 
 8021      66736574 
 8022              	.LASF146:
 8023 0f9a 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 8023      73436D34 
 8023      436C6F63 
 8023      6B43746C 
 8023      4F666673 
 8024              	.LASF46:
 8025 0fb1 494E5452 		.ascii	"INTR_MASKED\000"
 8025      5F4D4153 
 8025      4B454400 
 8026              	.LASF151:
 8027 0fbd 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 8027      73547269 
 8027      6D526F6D 
 8027      43746C4F 
 8027      66667365 
 8028              	.LASF225:
 8029 0fd3 73616D70 		.ascii	"sampleTime23\000"
 8029      6C655469 
 8029      6D653233 
 8029      00
 8030              	.LASF252:
 8031 0fe0 43795F53 		.ascii	"Cy_SAR_Enable\000"
 8031      41525F45 
 8031      6E61626C 
 8031      6500
 8032              	.LASF90:
 8033 0fee 6873696F 		.ascii	"hsiomVersion\000"
 8033      6D566572 
 8033      73696F6E 
 8033      00
 8034              	.LASF10:
 8035 0ffb 6C6F6E67 		.ascii	"long unsigned int\000"
 8035      20756E73 
 8035      69676E65 
 8035      6420696E 
 8035      7400
 8036              	.LASF155:
 8037 100d 63707573 		.ascii	"cpussRomCtl\000"
 8037      73526F6D 
 8037      43746C00 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 215


 8038              	.LASF269:
 8039 1019 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 8039      41525F47 
 8039      65745265 
 8039      73756C74 
 8039      313600
 8040              	.LASF18:
 8041 102c 696E7433 		.ascii	"int32_t\000"
 8041      325F7400 
 8042              	.LASF64:
 8043 1034 4D55585F 		.ascii	"MUX_SWITCH0\000"
 8043      53574954 
 8043      43483000 
 8044              	.LASF40:
 8045 1040 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 8045      5F524553 
 8045      554C545F 
 8045      55504441 
 8045      54454400 
 8046              	.LASF193:
 8047 1054 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 8047      6E5F7361 
 8047      725F7265 
 8047      7475726E 
 8047      5F6D6F64 
 8048              	.LASF270:
 8049 106c 61646352 		.ascii	"adcResult\000"
 8049      6573756C 
 8049      7400
 8050              	.LASF202:
 8051 1076 43595F53 		.ascii	"CY_SAR_NEG_SEL_VSSA_KELVIN\000"
 8051      41525F4E 
 8051      45475F53 
 8051      454C5F56 
 8051      5353415F 
 8052              	.LASF33:
 8053 1091 4348414E 		.ascii	"CHAN_CONFIG\000"
 8053      5F434F4E 
 8053      46494700 
 8054              	.LASF309:
 8055 109d 43795F53 		.ascii	"Cy_SysLib_DelayUs\000"
 8055      79734C69 
 8055      625F4465 
 8055      6C617955 
 8055      7300
 8056              	.LASF223:
 8057 10af 73616D70 		.ascii	"sampleCtrl\000"
 8057      6C654374 
 8057      726C00
 8058              	.LASF246:
 8059 10ba 76726566 		.ascii	"vrefNegSelect\000"
 8059      4E656753 
 8059      656C6563 
 8059      7400
 8060              	.LASF218:
 8061 10c8 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 8061      41525F49 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 216


 8061      4E54525F 
 8061      4D41534B 
 8061      5F4E4F4E 
 8062              	.LASF71:
 8063 10de 414E415F 		.ascii	"ANA_TRIM0\000"
 8063      5452494D 
 8063      3000
 8064              	.LASF72:
 8065 10e8 414E415F 		.ascii	"ANA_TRIM1\000"
 8065      5452494D 
 8065      3100
 8066              	.LASF9:
 8067 10f2 5F5F7569 		.ascii	"__uint32_t\000"
 8067      6E743332 
 8067      5F7400
 8068              	.LASF286:
 8069 10fd 43795F53 		.ascii	"Cy_SAR_CountsTo_Volts\000"
 8069      41525F43 
 8069      6F756E74 
 8069      73546F5F 
 8069      566F6C74 
 8070              	.LASF160:
 8071 1113 6970634C 		.ascii	"ipcLockStatusOffset\000"
 8071      6F636B53 
 8071      74617475 
 8071      734F6666 
 8071      73657400 
 8072              	.LASF194:
 8073 1127 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 8073      41525F53 
 8073      57495443 
 8073      485F4F50 
 8073      454E00
 8074              	.LASF154:
 8075 113a 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 8075      73436D34 
 8075      4E6D6943 
 8075      746C4F66 
 8075      66736574 
 8076              	.LASF49:
 8077 114f 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 8077      52415445 
 8077      5F494E54 
 8077      525F4D41 
 8077      534B00
 8078              	.LASF263:
 8079 1162 7265744D 		.ascii	"retMode\000"
 8079      6F646500 
 8080              	.LASF70:
 8081 116a 52455345 		.ascii	"RESERVED10\000"
 8081      52564544 
 8081      313000
 8082              	.LASF173:
 8083 1175 43595F53 		.ascii	"CY_SYSPM_FAIL\000"
 8083      5953504D 
 8083      5F464149 
 8083      4C00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 217


 8084              	.LASF116:
 8085 1183 666C6173 		.ascii	"flashEraseDelay\000"
 8085      68457261 
 8085      73654465 
 8085      6C617900 
 8086              	.LASF292:
 8087 1193 43795F53 		.ascii	"Cy_SAR_SetAnalogSwitch\000"
 8087      41525F53 
 8087      6574416E 
 8087      616C6F67 
 8087      53776974 
 8088              	.LASF295:
 8089 11aa 73746174 		.ascii	"state\000"
 8089      6500
 8090              	.LASF264:
 8091 11b0 656E644F 		.ascii	"endOfConversion\000"
 8091      66436F6E 
 8091      76657273 
 8091      696F6E00 
 8092              	.LASF197:
 8093 11c0 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 8093      41525F53 
 8093      57495443 
 8093      485F5345 
 8093      515F4354 
 8094              	.LASF145:
 8095 11df 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 8095      73436D30 
 8095      436C6F63 
 8095      6B43746C 
 8095      4F666673 
 8096              	.LASF249:
 8097 11f6 43795F53 		.ascii	"Cy_SAR_Init\000"
 8097      41525F49 
 8097      6E697400 
 8098              	.LASF110:
 8099 1202 70726F74 		.ascii	"protBusMasterMask\000"
 8099      4275734D 
 8099      61737465 
 8099      724D6173 
 8099      6B00
 8100              	.LASF112:
 8101 1214 666C6173 		.ascii	"flashRwwRequired\000"
 8101      68527777 
 8101      52657175 
 8101      69726564 
 8101      00
 8102              	.LASF141:
 8103 1225 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 8103      50727443 
 8103      66674F66 
 8103      66736574 
 8103      00
 8104              	.LASF107:
 8105 1236 65704D6F 		.ascii	"epMonitorNr\000"
 8105      6E69746F 
 8105      724E7200 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 218


 8106              	.LASF169:
 8107 1242 43595F53 		.ascii	"CY_SYSPM_BAD_PARAM\000"
 8107      5953504D 
 8107      5F424144 
 8107      5F504152 
 8107      414D00
 8108              	.LASF301:
 8109 1255 63616C6C 		.ascii	"callbackParams\000"
 8109      6261636B 
 8109      50617261 
 8109      6D7300
 8110              	.LASF98:
 8111 1264 63707573 		.ascii	"cpussIpc0Irq\000"
 8111      73497063 
 8111      30497271 
 8111      00
 8112              	.LASF0:
 8113 1271 7369676E 		.ascii	"signed char\000"
 8113      65642063 
 8113      68617200 
 8114              	.LASF122:
 8115 127d 64774368 		.ascii	"dwChOffset\000"
 8115      4F666673 
 8115      657400
 8116              	.LASF95:
 8117 1288 63707573 		.ascii	"cpussIpcIrqNr\000"
 8117      73497063 
 8117      4972714E 
 8117      7200
 8118              	.LASF125:
 8119 1296 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 8119      43746C50 
 8119      7265656D 
 8119      70746162 
 8119      6C65506F 
 8120              	.LASF271:
 8121 12ac 43795F53 		.ascii	"Cy_SAR_GetResult32\000"
 8121      41525F47 
 8121      65745265 
 8121      73756C74 
 8121      333200
 8122              	.LASF147:
 8123 12bf 63707573 		.ascii	"cpussCm4StatusOffset\000"
 8123      73436D34 
 8123      53746174 
 8123      75734F66 
 8123      66736574 
 8124              	.LASF229:
 8125 12d4 6368616E 		.ascii	"chanConfig\000"
 8125      436F6E66 
 8125      696700
 8126              	.LASF69:
 8127 12df 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 8127      53574954 
 8127      43485F53 
 8127      54415455 
 8127      5300
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 219


 8128              	.LASF92:
 8129 12f1 70657269 		.ascii	"periVersion\000"
 8129      56657273 
 8129      696F6E00 
 8130              	.LASF261:
 8131 12fd 73616D70 		.ascii	"sampleCtrlReg\000"
 8131      6C654374 
 8131      726C5265 
 8131      6700
 8132              	.LASF251:
 8133 130b 6465496E 		.ascii	"deInitRouting\000"
 8133      6974526F 
 8133      7574696E 
 8133      6700
 8134              	.LASF235:
 8135 1319 636F6E66 		.ascii	"configRouting\000"
 8135      6967526F 
 8135      7574696E 
 8135      6700
 8136              	.LASF82:
 8137 1327 70617373 		.ascii	"passBase\000"
 8137      42617365 
 8137      00
 8138              	.LASF32:
 8139 1330 52455345 		.ascii	"RESERVED1\000"
 8139      52564544 
 8139      3100
 8140              	.LASF101:
 8141 133a 73727373 		.ascii	"srssNumClkpath\000"
 8141      4E756D43 
 8141      6C6B7061 
 8141      746800
 8142              	.LASF61:
 8143 1349 53544154 		.ascii	"STATUS\000"
 8143      555300
 8144              	.LASF278:
 8145 1350 43795F53 		.ascii	"Cy_SAR_SetOffset\000"
 8145      41525F53 
 8145      65744F66 
 8145      66736574 
 8145      00
 8146              	.LASF121:
 8147 1361 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 8147      6843746C 
 8147      4D61696E 
 8147      57733446 
 8147      72657100 
 8148              	.LASF232:
 8149 1375 72616E67 		.ascii	"rangeIntrMask\000"
 8149      65496E74 
 8149      724D6173 
 8149      6B00
 8150              	.LASF195:
 8151 1383 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 8151      41525F53 
 8151      57495443 
 8151      485F434C 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 220


 8151      4F534500 
 8152              	.LASF217:
 8153 1397 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 8153      6E5F7361 
 8153      725F7261 
 8153      6E67655F 
 8153      64657465 
 8154              	.LASF256:
 8155 13ba 43795F53 		.ascii	"Cy_SAR_StopConvert\000"
 8155      41525F53 
 8155      746F7043 
 8155      6F6E7665 
 8155      727400
 8156              	.LASF189:
 8157 13cd 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 8157      41525F53 
 8157      54415254 
 8157      5F434F4E 
 8157      56455254 
 8158              	.LASF303:
 8159 13ed 656E6162 		.ascii	"enabledBeforeSleep\000"
 8159      6C656442 
 8159      65666F72 
 8159      65536C65 
 8159      657000
 8160              	.LASF91:
 8161 1400 69706356 		.ascii	"ipcVersion\000"
 8161      65727369 
 8161      6F6E00
 8162              	.LASF230:
 8163 140b 696E7472 		.ascii	"intrMask\000"
 8163      4D61736B 
 8163      00
 8164              	.LASF128:
 8165 1414 70657269 		.ascii	"periTrCmdOffset\000"
 8165      5472436D 
 8165      644F6666 
 8165      73657400 
 8166              	.LASF262:
 8167 1424 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 8167      41525F49 
 8167      73456E64 
 8167      436F6E76 
 8167      65727369 
 8168              	.LASF23:
 8169 143b 4354524C 		.ascii	"CTRL\000"
 8169      00
 8170              	.LASF177:
 8171 1440 43595F53 		.ascii	"CY_SYSPM_BEFORE_TRANSITION\000"
 8171      5953504D 
 8171      5F424546 
 8171      4F52455F 
 8171      5452414E 
 8172              	.LASF178:
 8173 145b 43595F53 		.ascii	"CY_SYSPM_AFTER_TRANSITION\000"
 8173      5953504D 
 8173      5F414654 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJOfepe.s 			page 221


 8173      45525F54 
 8173      52414E53 
 8174              	.LASF175:
 8175 1475 43595F53 		.ascii	"CY_SYSPM_CHECK_READY\000"
 8175      5953504D 
 8175      5F434845 
 8175      434B5F52 
 8175      45414459 
 8176              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
