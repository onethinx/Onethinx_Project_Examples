ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"CapSense_Filter.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.CapSense_FtInitialize,"ax",%progbits
  21              		.align	2
  22              		.global	CapSense_FtInitialize
  23              		.thumb
  24              		.thumb_func
  25              		.type	CapSense_FtInitialize, %function
  26              	CapSense_FtInitialize:
  27              	.LFB132:
  28              		.file 1 "Generated_Source\\PSoC6\\CapSense_Filter.c"
   1:Generated_Source\PSoC6/CapSense_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Filter.c **** * \file CapSense_Filter.c
   3:Generated_Source\PSoC6/CapSense_Filter.c **** * \version 3.0
   4:Generated_Source\PSoC6/CapSense_Filter.c **** *
   5:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Filter.c **** *   This file contains the implementation source code to implement all
   7:Generated_Source\PSoC6/CapSense_Filter.c **** *   firmware filters.
   8:Generated_Source\PSoC6/CapSense_Filter.c **** *
   9:Generated_Source\PSoC6/CapSense_Filter.c **** * \see CapSense v3.0 Datasheet
  10:Generated_Source\PSoC6/CapSense_Filter.c **** *
  11:Generated_Source\PSoC6/CapSense_Filter.c **** *//*****************************************************************************
  12:Generated_Source\PSoC6/CapSense_Filter.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC6/CapSense_Filter.c **** ********************************************************************************
  14:Generated_Source\PSoC6/CapSense_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC6/CapSense_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC6/CapSense_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC6/CapSense_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC6/CapSense_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC6/CapSense_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC6/CapSense_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC6/CapSense_Filter.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC6/CapSense_Filter.c **** * written permission of Cypress.
  25:Generated_Source\PSoC6/CapSense_Filter.c **** *
  26:Generated_Source\PSoC6/CapSense_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC6/CapSense_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC6/CapSense_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 2


  30:Generated_Source\PSoC6/CapSense_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC6/CapSense_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC6/CapSense_Filter.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC6/CapSense_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC6/CapSense_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC6/CapSense_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC6/CapSense_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC6/CapSense_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/CapSense_Filter.c **** 
  40:Generated_Source\PSoC6/CapSense_Filter.c **** #include "stddef.h"
  41:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Filter.h"
  42:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC6/CapSense_Filter.c **** 
  44:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  45:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SmartSense_LL.h"
  46:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  47:Generated_Source\PSoC6/CapSense_Filter.c **** 
  48:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  49:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SelfTest.h"
  50:Generated_Source\PSoC6/CapSense_Filter.c **** #endif
  51:Generated_Source\PSoC6/CapSense_Filter.c **** 
  52:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  53:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitialize
  54:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  55:Generated_Source\PSoC6/CapSense_Filter.c **** *
  56:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  57:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  58:Generated_Source\PSoC6/CapSense_Filter.c **** *
  59:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  60:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  61:Generated_Source\PSoC6/CapSense_Filter.c **** *
  62:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  63:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitialize(void)
  64:Generated_Source\PSoC6/CapSense_Filter.c **** {
  29              		.loc 1 64 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE132:
  37              		.size	CapSense_FtInitialize, .-CapSense_FtInitialize
  38 0002 00BF     		.section	.text.CapSense_FtInitializeBaselineChannel,"ax",%progbits
  39              		.align	2
  40              		.global	CapSense_FtInitializeBaselineChannel
  41              		.thumb
  42              		.thumb_func
  43              		.type	CapSense_FtInitializeBaselineChannel, %function
  44              	CapSense_FtInitializeBaselineChannel:
  45              	.LFB141:
  65:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  66:Generated_Source\PSoC6/CapSense_Filter.c ****          (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
  67:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeAllFilters();
  68:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  69:Generated_Source\PSoC6/CapSense_Filter.c ****                (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 3


  70:Generated_Source\PSoC6/CapSense_Filter.c **** }
  71:Generated_Source\PSoC6/CapSense_Filter.c **** 
  72:Generated_Source\PSoC6/CapSense_Filter.c **** 
  73:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  74:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateAllBaselines
  75:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  76:Generated_Source\PSoC6/CapSense_Filter.c **** *
  77:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  78:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets.
  79:Generated_Source\PSoC6/CapSense_Filter.c **** *
  80:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  81:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets. Baseline updating is a
  82:Generated_Source\PSoC6/CapSense_Filter.c **** *  part of data processing performed by the process functions. So, no need to
  83:Generated_Source\PSoC6/CapSense_Filter.c **** *  call this function except a specific process flow is implemented.
  84:Generated_Source\PSoC6/CapSense_Filter.c **** *
  85:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
  86:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
  87:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
  88:Generated_Source\PSoC6/CapSense_Filter.c **** *
  89:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
  90:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
  91:Generated_Source\PSoC6/CapSense_Filter.c **** *
  92:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
  93:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the update baseline operation of all the widgets:
  94:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
  95:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
  96:Generated_Source\PSoC6/CapSense_Filter.c **** *
  97:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  98:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateAllBaselines(void)
  99:Generated_Source\PSoC6/CapSense_Filter.c **** {
 100:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 101:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 102:Generated_Source\PSoC6/CapSense_Filter.c **** 
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 104:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 105:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateWidgetBaseline(widgetId);
 106:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107:Generated_Source\PSoC6/CapSense_Filter.c **** 
 108:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 109:Generated_Source\PSoC6/CapSense_Filter.c **** }
 110:Generated_Source\PSoC6/CapSense_Filter.c **** 
 111:Generated_Source\PSoC6/CapSense_Filter.c **** 
 112:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateWidgetBaseline
 114:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 115:Generated_Source\PSoC6/CapSense_Filter.c **** *
 116:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 117:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baselines for all the sensors in a widget specified by the input parameter.
 118:Generated_Source\PSoC6/CapSense_Filter.c **** *
 119:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 120:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 121:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() but only for a specified widget.
 122:Generated_Source\PSoC6/CapSense_Filter.c **** *
 123:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 124:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 125:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 126:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 4


 127:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 128:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 129:Generated_Source\PSoC6/CapSense_Filter.c **** *
 130:Generated_Source\PSoC6/CapSense_Filter.c **** * \param widgetId
 131:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of all the sensors
 132:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 133:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 134:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 135:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 136:Generated_Source\PSoC6/CapSense_Filter.c **** *
 137:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 138:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 139:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 140:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 141:Generated_Source\PSoC6/CapSense_Filter.c **** *
 142:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 143:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateWidgetBaseline(uint32 widgetId)
 144:Generated_Source\PSoC6/CapSense_Filter.c **** {
 145:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 146:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 147:Generated_Source\PSoC6/CapSense_Filter.c **** 
 148:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 149:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 150:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 152:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 153:Generated_Source\PSoC6/CapSense_Filter.c **** 
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 155:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 156:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateSensorBaseline(widgetId, sensorId);
 157:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 158:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 160:Generated_Source\PSoC6/CapSense_Filter.c **** }
 161:Generated_Source\PSoC6/CapSense_Filter.c **** 
 162:Generated_Source\PSoC6/CapSense_Filter.c **** 
 163:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 164:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateSensorBaseline
 165:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 166:Generated_Source\PSoC6/CapSense_Filter.c **** *
 167:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 168:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor in a widget specified by the input parameters.
 169:Generated_Source\PSoC6/CapSense_Filter.c **** *
 170:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 171:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 172:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() and
 173:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateWidgetBaseline() but only for a specified sensor.
 174:Generated_Source\PSoC6/CapSense_Filter.c **** *
 175:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 176:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 177:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 178:Generated_Source\PSoC6/CapSense_Filter.c **** *
 179:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 180:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 181:Generated_Source\PSoC6/CapSense_Filter.c **** *
 182:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   widgetId
 183:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of the sensor
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 5


 184:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the sensorId argument.
 185:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 186:Generated_Source\PSoC6/CapSense_Filter.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 187:Generated_Source\PSoC6/CapSense_Filter.c **** *
 188:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   sensorId
 189:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to update its baseline.
 190:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 191:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 192:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 193:Generated_Source\PSoC6/CapSense_Filter.c **** *
 194:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 195:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 196:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 197:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 198:Generated_Source\PSoC6/CapSense_Filter.c **** *
 199:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 200:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 201:Generated_Source\PSoC6/CapSense_Filter.c **** {
 202:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 203:Generated_Source\PSoC6/CapSense_Filter.c **** 
 204:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 205:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 206:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = (CapSense_RAM_WD_BASE_STRUCT *)ptrWidget->ptr2WdgtR
 207:Generated_Source\PSoC6/CapSense_Filter.c **** 
 208:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 211:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 212:Generated_Source\PSoC6/CapSense_Filter.c **** 
 213:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 214:Generated_Source\PSoC6/CapSense_Filter.c ****         if (CY_RET_SUCCESS != result)
 215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 216:Generated_Source\PSoC6/CapSense_Filter.c ****             result = CY_RET_BAD_DATA;
 217:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 218:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 219:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 220:Generated_Source\PSoC6/CapSense_Filter.c **** 
 221:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 222:Generated_Source\PSoC6/CapSense_Filter.c **** }
 223:Generated_Source\PSoC6/CapSense_Filter.c **** 
 224:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 225:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtUpdateBaseline
 226:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 227:Generated_Source\PSoC6/CapSense_Filter.c **** *
 228:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 229:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor specified by an input parameter.
 230:Generated_Source\PSoC6/CapSense_Filter.c **** *
 231:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 232:Generated_Source\PSoC6/CapSense_Filter.c **** *  Check a matching of present baseline and its inverse duplication. If they
 233:Generated_Source\PSoC6/CapSense_Filter.c **** *  match then updates the baseline for a sensor specified by an input parameter.
 234:Generated_Source\PSoC6/CapSense_Filter.c **** *  If don't match the function return CapSense_TST_BSLN_DUPLICATION
 235:Generated_Source\PSoC6/CapSense_Filter.c **** *  result and don't update baseline.
 236:Generated_Source\PSoC6/CapSense_Filter.c **** *
 237:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrWidgetRam
 238:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the widget RAM structure where all the widget parameters
 239:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 240:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 6


 241:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensor
 242:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the sensor RAM structure where all the sensor parameters
 243:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 244:Generated_Source\PSoC6/CapSense_Filter.c **** *
 245:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType
 246:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the type of a widget.
 247:Generated_Source\PSoC6/CapSense_Filter.c **** *
 248:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 249:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns a status indicating whether the baseline has been updated:
 250:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS if baseline updating was successful;
 251:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_PROCESS_BASELINE_FAILED if present sensor's any channel
 252:Generated_Source\PSoC6/CapSense_Filter.c **** *    baseline and its inversion doesn't matched
 253:Generated_Source\PSoC6/CapSense_Filter.c **** *
 254:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 255:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtUpdateBaseline(
 256:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 257:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_SNS_STRUCT *ptrSensor,
 258:Generated_Source\PSoC6/CapSense_Filter.c ****                                 uint32 wdType)
 259:Generated_Source\PSoC6/CapSense_Filter.c **** {
 260:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 261:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 difference;
 262:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 263:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 baselineCoeff;
 264:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 265:Generated_Source\PSoC6/CapSense_Filter.c **** 
 266:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_TOTAL_WIDGETS)
 267:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 history;
 268:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_TOTAL_WIDGETS) */
 269:Generated_Source\PSoC6/CapSense_Filter.c **** 
 270:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline to every channel in sensor */
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 272:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 273:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 274:Generated_Source\PSoC6/CapSense_Filter.c ****             if (ptrSensor->bslnInv[freqChannel] != ((uint16) ~(ptrSensor->bsln[freqChannel])))
 275:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 276:Generated_Source\PSoC6/CapSense_Filter.c ****                 result = CapSense_PROCESS_BASELINE_FAILED;
 277:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 278:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 279:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 280:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 281:Generated_Source\PSoC6/CapSense_Filter.c **** 
 282:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Calculate signal value and its sign */
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         if(ptrSensor->raw[freqChannel] >= ptrSensor->bsln[freqChannel])
 284:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->raw[freqChannel] - (uint32)ptrSensor->bsln[freqChannel]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 287:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 288:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 289:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 290:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->bsln[freqChannel] - (uint32)ptrSensor->raw[freqChannel]
 292:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 293:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 294:Generated_Source\PSoC6/CapSense_Filter.c **** 
 295:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Reset baseline if condition is met */
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
 297:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 7


 298:Generated_Source\PSoC6/CapSense_Filter.c ****             if(ptrSensor->negBslnRstCnt[freqChannel] >= ptrWidgetRam->lowBslnRst)
 299:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 300:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 301:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 302:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 303:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 304:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensor->negBslnRstCnt[freqChannel]++;
 305:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 306:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 307:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 308:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 309:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 310:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 313:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 314:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 315:Generated_Source\PSoC6/CapSense_Filter.c **** 
 316:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 317:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Calculate baseline value */
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 319:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 320:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_REGULAR_SENSOR_EN)
 321:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 324:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 325:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = ptrSensor->bsln[freqChannel];
 326:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 327:Generated_Source\PSoC6/CapSense_Filter.c **** 
 328:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 329:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 330:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 331:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_REGULAR_IIR_BL_N;
 332:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 333:Generated_Source\PSoC6/CapSense_Filter.c **** 
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                         history =  CapSense_FtIIR1stOrder(
 335:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 336:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 337:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_REGULAR_IIR_BL_SHIFT);
 338:Generated_Source\PSoC6/CapSense_Filter.c **** 
 339:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 342:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 343:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 344:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 345:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_REGULAR_SENSOR_EN) */
 346:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 347:Generated_Source\PSoC6/CapSense_Filter.c ****                 else
 348:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 349:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROXIMITY_SENSOR_EN)
 350:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 351:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 352:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 353:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 354:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel];
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 8


 355:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 356:Generated_Source\PSoC6/CapSense_Filter.c **** 
 357:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 358:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 359:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 360:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_PROX_IIR_BL_N;
 361:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 362:Generated_Source\PSoC6/CapSense_Filter.c **** 
 363:Generated_Source\PSoC6/CapSense_Filter.c ****                         history = CapSense_FtIIR1stOrder(
 364:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 365:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 366:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_PROX_IIR_BL_SHIFT);
 367:Generated_Source\PSoC6/CapSense_Filter.c **** 
 368:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 369:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 370:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 371:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 372:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 373:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 374:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_PROX_SENSOR_EN) */
 375:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 376:Generated_Source\PSoC6/CapSense_Filter.c ****             #else /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 377:Generated_Source\PSoC6/CapSense_Filter.c **** 
 378:Generated_Source\PSoC6/CapSense_Filter.c ****                 /******************************************************************
 379:Generated_Source\PSoC6/CapSense_Filter.c ****                 * This is the place where the bucket algorithm should be implemented.
 380:Generated_Source\PSoC6/CapSense_Filter.c ****                 * The bucket method will be implemented in future Component version.
 381:Generated_Source\PSoC6/CapSense_Filter.c ****                 *******************************************************************/
 382:Generated_Source\PSoC6/CapSense_Filter.c **** 
 383:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 384:Generated_Source\PSoC6/CapSense_Filter.c **** 
 385:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 386:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 387:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (!CapSense_SENSOR_AUTO_RESET_EN) */
 388:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 389:Generated_Source\PSoC6/CapSense_Filter.c **** 
 390:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 391:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Update baseline inversion of every channel in sensor */
 392:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->bslnInv[freqChannel] = ~(ptrSensor->bsln[freqChannel]);
 393:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 394:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 395:Generated_Source\PSoC6/CapSense_Filter.c **** 
 396:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 397:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 398:Generated_Source\PSoC6/CapSense_Filter.c **** }
 399:Generated_Source\PSoC6/CapSense_Filter.c **** 
 400:Generated_Source\PSoC6/CapSense_Filter.c **** 
 401:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 402:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllBaselines
 403:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 404:Generated_Source\PSoC6/CapSense_Filter.c **** *
 405:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 406:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors of all the widgets.
 407:Generated_Source\PSoC6/CapSense_Filter.c **** *
 408:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 409:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the baseline for all the sensors of all the widgets. Also, this function
 410:Generated_Source\PSoC6/CapSense_Filter.c **** *  can be used to re-initialize baselines. CapSense_Start() calls this
 411:Generated_Source\PSoC6/CapSense_Filter.c **** *  API as part of CapSense operation initialization.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 9


 412:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 413:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 414:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 415:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 416:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 417:Generated_Source\PSoC6/CapSense_Filter.c **** *
 418:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 419:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllBaselines(void)
 420:Generated_Source\PSoC6/CapSense_Filter.c **** {
 421:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 422:Generated_Source\PSoC6/CapSense_Filter.c **** 
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 424:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 425:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetBaseline(widgetId);
 426:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 427:Generated_Source\PSoC6/CapSense_Filter.c **** }
 428:Generated_Source\PSoC6/CapSense_Filter.c **** 
 429:Generated_Source\PSoC6/CapSense_Filter.c **** 
 430:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 431:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetBaseline
 432:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 433:Generated_Source\PSoC6/CapSense_Filter.c **** *
 434:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 435:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors in a widget
 436:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the input parameter.
 437:Generated_Source\PSoC6/CapSense_Filter.c **** *
 438:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 439:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for all the sensors of the
 440:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified widget.
 441:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 442:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 443:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 444:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 445:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 446:Generated_Source\PSoC6/CapSense_Filter.c **** *
 447:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 448:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of all the sensors
 449:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 450:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 451:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 452:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 453:Generated_Source\PSoC6/CapSense_Filter.c **** *
 454:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 455:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetBaseline(uint32 widgetId)
 456:Generated_Source\PSoC6/CapSense_Filter.c **** {
 457:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 458:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 459:Generated_Source\PSoC6/CapSense_Filter.c **** 
 460:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC6/CapSense_Filter.c **** 
 462:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 463:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 464:Generated_Source\PSoC6/CapSense_Filter.c **** 
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 466:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 467:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeSensorBaseline(widgetId, sensorId);
 468:Generated_Source\PSoC6/CapSense_Filter.c ****     }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 10


 469:Generated_Source\PSoC6/CapSense_Filter.c **** }
 470:Generated_Source\PSoC6/CapSense_Filter.c **** 
 471:Generated_Source\PSoC6/CapSense_Filter.c **** 
 472:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 473:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeSensorBaseline
 474:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 475:Generated_Source\PSoC6/CapSense_Filter.c **** *
 476:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 477:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline of a sensor in a widget specified
 478:Generated_Source\PSoC6/CapSense_Filter.c **** *  by the input parameters.
 479:Generated_Source\PSoC6/CapSense_Filter.c **** *
 480:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 481:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 482:Generated_Source\PSoC6/CapSense_Filter.c **** *  a specified widget.
 483:Generated_Source\PSoC6/CapSense_Filter.c **** *
 484:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId
 485:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of the sensor
 486:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 487:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 488:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 489:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 490:Generated_Source\PSoC6/CapSense_Filter.c **** *
 491:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId
 492:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to initialize its
 493:Generated_Source\PSoC6/CapSense_Filter.c **** *  baseline.
 494:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 495:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 496:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 497:Generated_Source\PSoC6/CapSense_Filter.c **** *
 498:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 499:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 500:Generated_Source\PSoC6/CapSense_Filter.c **** {
 501:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 502:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = NULL;
 503:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 504:Generated_Source\PSoC6/CapSense_Filter.c **** 
 505:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 507:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 508:Generated_Source\PSoC6/CapSense_Filter.c **** 
 509:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);
 510:Generated_Source\PSoC6/CapSense_Filter.c **** }
 511:Generated_Source\PSoC6/CapSense_Filter.c **** 
 512:Generated_Source\PSoC6/CapSense_Filter.c **** 
 513:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 514:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaseline
 515:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 516:Generated_Source\PSoC6/CapSense_Filter.c **** *
 517:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 518:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 519:Generated_Source\PSoC6/CapSense_Filter.c **** *
 520:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 521:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 522:Generated_Source\PSoC6/CapSense_Filter.c **** *
 523:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 524:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 525:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 11


 526:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 527:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaseline(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType)
 528:Generated_Source\PSoC6/CapSense_Filter.c **** {
 529:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 530:Generated_Source\PSoC6/CapSense_Filter.c **** 
 531:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline initialization to every channel in sensor */
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 533:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 534:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 535:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 536:Generated_Source\PSoC6/CapSense_Filter.c **** }
 537:Generated_Source\PSoC6/CapSense_Filter.c **** 
 538:Generated_Source\PSoC6/CapSense_Filter.c **** 
 539:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 540:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaselineChannel
 541:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 542:Generated_Source\PSoC6/CapSense_Filter.c **** *
 543:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 544:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 545:Generated_Source\PSoC6/CapSense_Filter.c **** *
 546:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 547:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 548:Generated_Source\PSoC6/CapSense_Filter.c **** *
 549:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 550:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 551:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    channel    Specifies the number of the channel to be initialized.
 552:Generated_Source\PSoC6/CapSense_Filter.c **** *
 553:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaselineChannel(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32
 555:Generated_Source\PSoC6/CapSense_Filter.c **** {
  46              		.loc 1 555 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.LVL0:
 556:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 557:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
  52              		.loc 1 557 0
  53 0000 C9B2     		uxtb	r1, r1
  54              	.LVL1:
  55 0002 0629     		cmp	r1, #6
  56 0004 02D0     		beq	.L3
 558:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 559:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN)
 560:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 561:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
  57              		.loc 1 561 0
  58 0006 8318     		adds	r3, r0, r2
  59 0008 0021     		movs	r1, #0
  60 000a 1971     		strb	r1, [r3, #4]
  61              	.L3:
 562:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 563:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 564:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 565:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 566:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 12


 567:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN)
 568:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 569:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
 570:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 571:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 572:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 573:Generated_Source\PSoC6/CapSense_Filter.c ****     #else
 574:Generated_Source\PSoC6/CapSense_Filter.c ****         /* CapSense_BASELINE_TYPE == CapSense_BUCKET_BASELINE */
 575:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;
 576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 577:Generated_Source\PSoC6/CapSense_Filter.c **** 
 578:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
  62              		.loc 1 578 0
  63 000c 30F81210 		ldrh	r1, [r0, r2, lsl #1]
  64 0010 00EB4203 		add	r3, r0, r2, lsl #1
  65 0014 5980     		strh	r1, [r3, #2]	@ movhi
 579:Generated_Source\PSoC6/CapSense_Filter.c **** 
 580:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 581:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Update baseline inversion of the channel in sensor */
 582:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnInv[channel] = ~(ptrSensor->bsln[channel]);
 583:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 584:Generated_Source\PSoC6/CapSense_Filter.c **** 
 585:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
  66              		.loc 1 585 0
  67 0016 0244     		add	r2, r2, r0
  68              	.LVL2:
  69 0018 0023     		movs	r3, #0
  70 001a 1372     		strb	r3, [r2, #8]
  71 001c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE141:
  74              		.size	CapSense_FtInitializeBaselineChannel, .-CapSense_FtInitializeBaselineChannel
  75 001e 00BF     		.section	.text.CapSense_FtInitializeBaseline,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_FtInitializeBaseline
  78              		.thumb
  79              		.thumb_func
  80              		.type	CapSense_FtInitializeBaseline, %function
  81              	CapSense_FtInitializeBaseline:
  82              	.LFB140:
 528:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
  83              		.loc 1 528 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL3:
  88 0000 70B5     		push	{r4, r5, r6, lr}
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 4, -16
  91              		.cfi_offset 5, -12
  92              		.cfi_offset 6, -8
  93              		.cfi_offset 14, -4
  94 0002 0646     		mov	r6, r0
  95 0004 0D46     		mov	r5, r1
  96              	.LVL4:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
  97              		.loc 1 532 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 13


  98 0006 0123     		movs	r3, #1
  99 0008 05E0     		b	.L5
 100              	.LVL5:
 101              	.L6:
 534:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 102              		.loc 1 534 0
 103 000a 2246     		mov	r2, r4
 104 000c 2946     		mov	r1, r5
 105 000e 3046     		mov	r0, r6
 106 0010 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 107              	.LVL6:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 108              		.loc 1 532 0
 109 0014 2346     		mov	r3, r4
 110              	.LVL7:
 111              	.L5:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 112              		.loc 1 532 0 is_stmt 0 discriminator 1
 113 0016 5C1E     		subs	r4, r3, #1
 114              	.LVL8:
 115 0018 002B     		cmp	r3, #0
 116 001a F6D1     		bne	.L6
 536:Generated_Source\PSoC6/CapSense_Filter.c **** 
 117              		.loc 1 536 0 is_stmt 1
 118 001c 70BD     		pop	{r4, r5, r6, pc}
 119              		.cfi_endproc
 120              	.LFE140:
 121              		.size	CapSense_FtInitializeBaseline, .-CapSense_FtInitializeBaseline
 122 001e 00BF     		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 123              		.align	2
 124              		.global	CapSense_InitializeSensorBaseline
 125              		.thumb
 126              		.thumb_func
 127              		.type	CapSense_InitializeSensorBaseline, %function
 128              	CapSense_InitializeSensorBaseline:
 129              	.LFB139:
 500:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 130              		.loc 1 500 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              	.LVL9:
 135 0000 70B5     		push	{r4, r5, r6, lr}
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 4, -16
 138              		.cfi_offset 5, -12
 139              		.cfi_offset 6, -8
 140              		.cfi_offset 14, -4
 141              	.LVL10:
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 142              		.loc 1 506 0
 143 0002 084D     		ldr	r5, .L10
 144 0004 C300     		lsls	r3, r0, #3
 145 0006 1A1A     		subs	r2, r3, r0
 146 0008 9400     		lsls	r4, r2, #2
 147 000a 2246     		mov	r2, r4
 148 000c 2C44     		add	r4, r4, r5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 14


 149 000e A668     		ldr	r6, [r4, #8]
 150              	.LVL11:
 507:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151              		.loc 1 507 0
 152 0010 01EB8101 		add	r1, r1, r1, lsl #2
 153              	.LVL12:
 154 0014 4C00     		lsls	r4, r1, #1
 155              	.LVL13:
 509:Generated_Source\PSoC6/CapSense_Filter.c **** }
 156              		.loc 1 509 0
 157 0016 2A44     		add	r2, r2, r5
 158 0018 917E     		ldrb	r1, [r2, #26]	@ zero_extendqisi2
 159 001a 3019     		adds	r0, r6, r4
 160              	.LVL14:
 161 001c FFF7FEFF 		bl	CapSense_FtInitializeBaseline
 162              	.LVL15:
 163 0020 70BD     		pop	{r4, r5, r6, pc}
 164              	.LVL16:
 165              	.L11:
 166 0022 00BF     		.align	2
 167              	.L10:
 168 0024 00000000 		.word	CapSense_dsFlash
 169              		.cfi_endproc
 170              	.LFE139:
 171              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 172              		.section	.text.CapSense_InitializeWidgetBaseline,"ax",%progbits
 173              		.align	2
 174              		.global	CapSense_InitializeWidgetBaseline
 175              		.thumb
 176              		.thumb_func
 177              		.type	CapSense_InitializeWidgetBaseline, %function
 178              	CapSense_InitializeWidgetBaseline:
 179              	.LFB138:
 456:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 180              		.loc 1 456 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL17:
 185 0000 38B5     		push	{r3, r4, r5, lr}
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 3, -16
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 5, -8
 190              		.cfi_offset 14, -4
 191 0002 0546     		mov	r5, r0
 192              	.LVL18:
 463:Generated_Source\PSoC6/CapSense_Filter.c **** 
 193              		.loc 1 463 0
 194 0004 C0EBC002 		rsb	r2, r0, r0, lsl #3
 195 0008 9300     		lsls	r3, r2, #2
 196 000a 064A     		ldr	r2, .L16
 197 000c 1344     		add	r3, r3, r2
 198 000e 1B8B     		ldrh	r3, [r3, #24]
 199              	.LVL19:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 200              		.loc 1 465 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 15


 201 0010 04E0     		b	.L13
 202              	.LVL20:
 203              	.L14:
 467:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 204              		.loc 1 467 0
 205 0012 2146     		mov	r1, r4
 206 0014 2846     		mov	r0, r5
 207 0016 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 208              	.LVL21:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 209              		.loc 1 465 0
 210 001a 2346     		mov	r3, r4
 211              	.LVL22:
 212              	.L13:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 213              		.loc 1 465 0 is_stmt 0 discriminator 1
 214 001c 5C1E     		subs	r4, r3, #1
 215              	.LVL23:
 216 001e 002B     		cmp	r3, #0
 217 0020 F7D1     		bne	.L14
 469:Generated_Source\PSoC6/CapSense_Filter.c **** 
 218              		.loc 1 469 0 is_stmt 1
 219 0022 38BD     		pop	{r3, r4, r5, pc}
 220              	.LVL24:
 221              	.L17:
 222              		.align	2
 223              	.L16:
 224 0024 00000000 		.word	CapSense_dsFlash
 225              		.cfi_endproc
 226              	.LFE138:
 227              		.size	CapSense_InitializeWidgetBaseline, .-CapSense_InitializeWidgetBaseline
 228              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 229              		.align	2
 230              		.global	CapSense_InitializeAllBaselines
 231              		.thumb
 232              		.thumb_func
 233              		.type	CapSense_InitializeAllBaselines, %function
 234              	CapSense_InitializeAllBaselines:
 235              	.LFB137:
 420:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 236              		.loc 1 420 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 10B5     		push	{r4, lr}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
 244              	.LVL25:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 245              		.loc 1 423 0
 246 0002 0123     		movs	r3, #1
 247 0004 03E0     		b	.L19
 248              	.LVL26:
 249              	.L20:
 425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 250              		.loc 1 425 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 16


 251 0006 2046     		mov	r0, r4
 252 0008 FFF7FEFF 		bl	CapSense_InitializeWidgetBaseline
 253              	.LVL27:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 254              		.loc 1 423 0
 255 000c 2346     		mov	r3, r4
 256              	.LVL28:
 257              	.L19:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 258              		.loc 1 423 0 is_stmt 0 discriminator 1
 259 000e 5C1E     		subs	r4, r3, #1
 260              	.LVL29:
 261 0010 002B     		cmp	r3, #0
 262 0012 F8D1     		bne	.L20
 427:Generated_Source\PSoC6/CapSense_Filter.c **** 
 263              		.loc 1 427 0 is_stmt 1
 264 0014 10BD     		pop	{r4, pc}
 265              		.cfi_endproc
 266              	.LFE137:
 267              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 268 0016 00BF     		.section	.text.CapSense_FtIIR1stOrder,"ax",%progbits
 269              		.align	2
 270              		.global	CapSense_FtIIR1stOrder
 271              		.thumb
 272              		.thumb_func
 273              		.type	CapSense_FtIIR1stOrder, %function
 274              	CapSense_FtIIR1stOrder:
 275              	.LFB142:
 586:Generated_Source\PSoC6/CapSense_Filter.c **** }
 587:Generated_Source\PSoC6/CapSense_Filter.c **** 
 588:Generated_Source\PSoC6/CapSense_Filter.c **** #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 589:Generated_Source\PSoC6/CapSense_Filter.c ****      (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
 590:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 591:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllFilters
 592:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 593:Generated_Source\PSoC6/CapSense_Filter.c **** *
 594:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 595:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the 
 596:Generated_Source\PSoC6/CapSense_Filter.c **** *  sensors of all the widgets.
 597:Generated_Source\PSoC6/CapSense_Filter.c **** *
 598:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 599:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the raw count filter history for all the sensors of all the 
 600:Generated_Source\PSoC6/CapSense_Filter.c **** *  widgets. Also, this function can be used to re-initialize baselines. 
 601:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_Start() calls this API as part of CapSense 
 602:Generated_Source\PSoC6/CapSense_Filter.c **** *  operation initialization.
 603:Generated_Source\PSoC6/CapSense_Filter.c **** *
 604:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 605:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllFilters(void)
 606:Generated_Source\PSoC6/CapSense_Filter.c **** {
 607:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 608:Generated_Source\PSoC6/CapSense_Filter.c **** 
 609:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 610:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 611:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetFilter(widgetId);
 612:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 613:Generated_Source\PSoC6/CapSense_Filter.c **** }
 614:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 17


 615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetFilter
 617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 618:Generated_Source\PSoC6/CapSense_Filter.c **** *
 619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 620:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 621:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 622:Generated_Source\PSoC6/CapSense_Filter.c **** *
 623:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 624:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 625:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 626:Generated_Source\PSoC6/CapSense_Filter.c **** *
 627:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 628:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the filter history of all 
 629:Generated_Source\PSoC6/CapSense_Filter.c **** *  the sensors in the widget.
 630:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 631:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 632:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 633:Generated_Source\PSoC6/CapSense_Filter.c **** *
 634:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 635:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetFilter(uint32 widgetId)
 636:Generated_Source\PSoC6/CapSense_Filter.c **** {
 637:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 638:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 639:Generated_Source\PSoC6/CapSense_Filter.c **** 
 640:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget;
 641:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 642:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 643:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 644:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
 645:Generated_Source\PSoC6/CapSense_Filter.c ****     
 646:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 647:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam;
 648:Generated_Source\PSoC6/CapSense_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
 649:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 650:Generated_Source\PSoC6/CapSense_Filter.c **** 
 651:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 652:Generated_Source\PSoC6/CapSense_Filter.c **** 
 653:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 654:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrWidgetRam = ptrWidget->ptr2WdgtRam;
 655:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 656:Generated_Source\PSoC6/CapSense_Filter.c **** 
 657:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 658:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 659:Generated_Source\PSoC6/CapSense_Filter.c **** 
 660:Generated_Source\PSoC6/CapSense_Filter.c ****     for (sensorId = sensorsNumber; sensorId-- > 0u;)
 661:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 662:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Find pointer to specified sensor object */
 663:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = ptrWidget->ptr2SnsRam;
 664:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = &ptrSensor[sensorId];
 665:Generated_Source\PSoC6/CapSense_Filter.c **** 
 666:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 667:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to to specified filter sensor object */
 668:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 669:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 670:Generated_Source\PSoC6/CapSense_Filter.c **** 
 671:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 18


 672:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to specified noise envelope sensor object */
 673:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
 674:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
 675:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 676:Generated_Source\PSoC6/CapSense_Filter.c **** 
 677:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 678:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 679:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
 680:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 681:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
 682:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 683:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
 684:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 685:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 686:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 687:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
 688:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 689:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_PROX_RC_FILTER_EN)
 690:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 691:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* #if (0u != CapSense_PROX_RC_FILTER_EN) */
 692:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 693:Generated_Source\PSoC6/CapSense_Filter.c **** 
 694:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 695:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 696:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 697:Generated_Source\PSoC6/CapSense_Filter.c **** 
 698:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 699:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 700:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
 701:Generated_Source\PSoC6/CapSense_Filter.c **** 
 702:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
 703:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgt
 704:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
 705:Generated_Source\PSoC6/CapSense_Filter.c **** 
 706:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ALP_FILTER_EN)
 707:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 708:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 709:Generated_Source\PSoC6/CapSense_Filter.c **** 
 710:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 711:Generated_Source\PSoC6/CapSense_Filter.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
 712:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 713:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 714:Generated_Source\PSoC6/CapSense_Filter.c ****                 SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoi
 715:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 716:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 717:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 718:Generated_Source\PSoC6/CapSense_Filter.c **** }
 719:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 720:Generated_Source\PSoC6/CapSense_Filter.c ****            (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
 721:Generated_Source\PSoC6/CapSense_Filter.c **** 
 722:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 723:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 724:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIR
 725:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 726:Generated_Source\PSoC6/CapSense_Filter.c **** *
 727:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initialize the IIR filter history.
 728:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 19


 729:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initialize the IIR filter history.
 730:Generated_Source\PSoC6/CapSense_Filter.c **** *
 731:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 732:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 733:Generated_Source\PSoC6/CapSense_Filter.c **** *
 734:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 735:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIR(uint32 widgetId, uint32 sensorId)
 736:Generated_Source\PSoC6/CapSense_Filter.c **** {
 737:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 738:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 739:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 740:Generated_Source\PSoC6/CapSense_Filter.c **** 
 741:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 742:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 743:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 744:Generated_Source\PSoC6/CapSense_Filter.c **** 
 745:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 746:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 747:Generated_Source\PSoC6/CapSense_Filter.c **** 
 748:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 749:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 750:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 751:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 752:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 753:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 754:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 755:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 756:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 757:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 758:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 759:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 760:Generated_Source\PSoC6/CapSense_Filter.c **** 
 761:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 762:Generated_Source\PSoC6/CapSense_Filter.c **** }
 763:Generated_Source\PSoC6/CapSense_Filter.c **** 
 764:Generated_Source\PSoC6/CapSense_Filter.c **** 
 765:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 766:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIR
 767:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 768:Generated_Source\PSoC6/CapSense_Filter.c **** *
 769:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the IIR filter algorithm on a sensor indicated by an input
 770:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 771:Generated_Source\PSoC6/CapSense_Filter.c **** *
 772:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the IIR filter algorithm on a sensor indicated by an input
 773:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 774:Generated_Source\PSoC6/CapSense_Filter.c **** *
 775:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 776:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 777:Generated_Source\PSoC6/CapSense_Filter.c **** *
 778:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 779:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIR(uint32 widgetId, uint32 sensorId)
 780:Generated_Source\PSoC6/CapSense_Filter.c **** {
 781:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 782:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 783:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 784:Generated_Source\PSoC6/CapSense_Filter.c **** 
 785:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 20


 786:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 787:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 788:Generated_Source\PSoC6/CapSense_Filter.c **** 
 789:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 790:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 791:Generated_Source\PSoC6/CapSense_Filter.c **** 
 792:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 793:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 794:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 795:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 796:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 797:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 798:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 799:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 800:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 801:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 802:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 803:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 804:Generated_Source\PSoC6/CapSense_Filter.c **** 
 805:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 806:Generated_Source\PSoC6/CapSense_Filter.c **** }
 807:Generated_Source\PSoC6/CapSense_Filter.c **** 
 808:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 809:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIRInternal
 810:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6/CapSense_Filter.c **** *
 812:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the IIR filter history.
 813:Generated_Source\PSoC6/CapSense_Filter.c **** *
 814:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the IIR filter history.
 815:Generated_Source\PSoC6/CapSense_Filter.c **** *
 816:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 817:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 818:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 819:Generated_Source\PSoC6/CapSense_Filter.c **** *
 820:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 821:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 822:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 823:Generated_Source\PSoC6/CapSense_Filter.c **** {
 824:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 825:Generated_Source\PSoC6/CapSense_Filter.c **** 
 826:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 827:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 828:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 829:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 830:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 832:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 833:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = 0u;
 834:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 835:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 836:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 837:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 838:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 839:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 840:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 841:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 842:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 21


 843:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 844:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = 0u;
 845:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 846:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 847:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 848:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 849:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 850:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 851:Generated_Source\PSoC6/CapSense_Filter.c **** }
 852:Generated_Source\PSoC6/CapSense_Filter.c **** 
 853:Generated_Source\PSoC6/CapSense_Filter.c **** 
 854:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 855:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIRInternal
 856:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 857:Generated_Source\PSoC6/CapSense_Filter.c **** *
 858:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Run the IIR filter.
 859:Generated_Source\PSoC6/CapSense_Filter.c **** *
 860:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Run the IIR filter.
 861:Generated_Source\PSoC6/CapSense_Filter.c **** *
 862:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 863:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 864:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 865:Generated_Source\PSoC6/CapSense_Filter.c **** *
 866:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 867:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 868:Generated_Source\PSoC6/CapSense_Filter.c ****                                      CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 869:Generated_Source\PSoC6/CapSense_Filter.c **** {
 870:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 871:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
 872:Generated_Source\PSoC6/CapSense_Filter.c **** 
 873:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 874:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 875:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 876:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 877:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 878:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 879:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHis
 880:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow;
 881:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 882:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 883:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 884:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 885:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 886:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = CY_LO8
 887:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 888:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 889:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 890:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 891:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 892:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 893:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 894:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 895:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 896:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 897:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 898:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 899:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 22


 900:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 901:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 902:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory << CapSen
 903:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow;
 904:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 905:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 906:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 907:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 908:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp >>
 909:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = CY_LO8(temp)
 910:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 911:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 912:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 913:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 914:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 915:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 916:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp);
 917:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 918:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 919:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 920:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 921:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 922:Generated_Source\PSoC6/CapSense_Filter.c **** }
 923:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 924:Generated_Source\PSoC6/CapSense_Filter.c **** 
 925:Generated_Source\PSoC6/CapSense_Filter.c **** 
 926:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 927:Generated_Source\PSoC6/CapSense_Filter.c **** 
 928:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 929:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedian
 930:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 931:Generated_Source\PSoC6/CapSense_Filter.c **** *
 932:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter history.
 933:Generated_Source\PSoC6/CapSense_Filter.c **** *
 934:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter history.
 935:Generated_Source\PSoC6/CapSense_Filter.c **** *
 936:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 937:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 938:Generated_Source\PSoC6/CapSense_Filter.c **** *
 939:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 940:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedian(uint32 widgetId, uint32 sensorId)
 941:Generated_Source\PSoC6/CapSense_Filter.c **** {
 942:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 943:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 944:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 945:Generated_Source\PSoC6/CapSense_Filter.c **** 
 946:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 947:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 948:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 949:Generated_Source\PSoC6/CapSense_Filter.c **** 
 950:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 951:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 952:Generated_Source\PSoC6/CapSense_Filter.c **** 
 953:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 954:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 955:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 956:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 23


 957:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 958:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 959:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 960:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 961:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 962:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 963:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 964:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 965:Generated_Source\PSoC6/CapSense_Filter.c **** 
 966:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 967:Generated_Source\PSoC6/CapSense_Filter.c **** }
 968:Generated_Source\PSoC6/CapSense_Filter.c **** 
 969:Generated_Source\PSoC6/CapSense_Filter.c **** 
 970:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 971:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedian
 972:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 973:Generated_Source\PSoC6/CapSense_Filter.c **** *
 974:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the Median filter algorithm on a sensor indicated by an input
 975:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 976:Generated_Source\PSoC6/CapSense_Filter.c **** *
 977:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the Median filter algorithm on a sensor indicated by an input
 978:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 979:Generated_Source\PSoC6/CapSense_Filter.c **** *
 980:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 981:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 982:Generated_Source\PSoC6/CapSense_Filter.c **** *
 983:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 984:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedian(uint32 widgetId, uint32 sensorId)
 985:Generated_Source\PSoC6/CapSense_Filter.c **** {
 986:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 987:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 988:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 989:Generated_Source\PSoC6/CapSense_Filter.c **** 
 990:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 991:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 992:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 993:Generated_Source\PSoC6/CapSense_Filter.c **** 
 994:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 995:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 996:Generated_Source\PSoC6/CapSense_Filter.c **** 
 997:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 998:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 999:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1000:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1001:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1002:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1003:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1004:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1005:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1006:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1007:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1008:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1009:Generated_Source\PSoC6/CapSense_Filter.c **** 
1010:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1011:Generated_Source\PSoC6/CapSense_Filter.c **** }
1012:Generated_Source\PSoC6/CapSense_Filter.c **** 
1013:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 24


1014:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1015:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedianInternal
1016:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1017:Generated_Source\PSoC6/CapSense_Filter.c **** *
1018:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter.
1019:Generated_Source\PSoC6/CapSense_Filter.c **** *
1020:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter.
1021:Generated_Source\PSoC6/CapSense_Filter.c **** *
1022:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1023:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1024:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1025:Generated_Source\PSoC6/CapSense_Filter.c **** *
1026:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1027:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1028:Generated_Source\PSoC6/CapSense_Filter.c ****                                                CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType
1029:Generated_Source\PSoC6/CapSense_Filter.c **** {
1030:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1031:Generated_Source\PSoC6/CapSense_Filter.c **** 
1032:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1033:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1034:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1035:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1036:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1037:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1038:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = ptrSensor
1039:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1040:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1041:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1042:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1043:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1044:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1045:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = ptrSensorObj->r
1046:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1047:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1048:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1049:Generated_Source\PSoC6/CapSense_Filter.c **** }
1050:Generated_Source\PSoC6/CapSense_Filter.c **** 
1051:Generated_Source\PSoC6/CapSense_Filter.c **** 
1052:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1053:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedianInternal
1054:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1055:Generated_Source\PSoC6/CapSense_Filter.c **** *
1056:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the Median filter.
1057:Generated_Source\PSoC6/CapSense_Filter.c **** *
1058:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the Median filter.
1059:Generated_Source\PSoC6/CapSense_Filter.c **** *
1060:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1061:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1062:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1063:Generated_Source\PSoC6/CapSense_Filter.c **** *
1064:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1065:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1066:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1067:Generated_Source\PSoC6/CapSense_Filter.c **** {
1068:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1069:Generated_Source\PSoC6/CapSense_Filter.c **** 
1070:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN) || \
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 25


1071:Generated_Source\PSoC6/CapSense_Filter.c ****          (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN))
1072:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 temp;
1073:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1074:Generated_Source\PSoC6/CapSense_Filter.c **** 
1075:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1076:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1077:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1078:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1079:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1080:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1081:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1082:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1083:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = \
1084:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u];
1085:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1086:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1087:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1088:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1089:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1090:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1091:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1092:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1093:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1094:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1095:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = \
1096:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u];
1097:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1098:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1099:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1100:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1101:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1102:Generated_Source\PSoC6/CapSense_Filter.c **** }
1103:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1104:Generated_Source\PSoC6/CapSense_Filter.c **** 
1105:Generated_Source\PSoC6/CapSense_Filter.c **** 
1106:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1107:Generated_Source\PSoC6/CapSense_Filter.c **** 
1108:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1109:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverage
1110:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1111:Generated_Source\PSoC6/CapSense_Filter.c **** *
1112:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter history.
1113:Generated_Source\PSoC6/CapSense_Filter.c **** *
1114:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter history.
1115:Generated_Source\PSoC6/CapSense_Filter.c **** *
1116:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1117:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1118:Generated_Source\PSoC6/CapSense_Filter.c **** *
1119:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1120:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverage(uint32 widgetId, uint32 sensorId)
1121:Generated_Source\PSoC6/CapSense_Filter.c **** {
1122:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1123:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1124:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1125:Generated_Source\PSoC6/CapSense_Filter.c **** 
1126:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1127:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 26


1128:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1129:Generated_Source\PSoC6/CapSense_Filter.c **** 
1130:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1131:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1132:Generated_Source\PSoC6/CapSense_Filter.c **** 
1133:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1134:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1135:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1136:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1137:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1138:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1139:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1140:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1141:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1142:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1143:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1144:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1145:Generated_Source\PSoC6/CapSense_Filter.c **** 
1146:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1147:Generated_Source\PSoC6/CapSense_Filter.c **** }
1148:Generated_Source\PSoC6/CapSense_Filter.c **** 
1149:Generated_Source\PSoC6/CapSense_Filter.c **** 
1150:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1151:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverage
1152:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1153:Generated_Source\PSoC6/CapSense_Filter.c **** *
1154:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the average filter algorithm on a sensor indicated by an input
1155:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1156:Generated_Source\PSoC6/CapSense_Filter.c **** *
1157:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the average filter algorithm on a sensor indicated by an input
1158:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1159:Generated_Source\PSoC6/CapSense_Filter.c **** *
1160:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1161:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1162:Generated_Source\PSoC6/CapSense_Filter.c **** *
1163:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1164:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverage(uint32 widgetId, uint32 sensorId)
1165:Generated_Source\PSoC6/CapSense_Filter.c **** {
1166:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1167:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1168:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1169:Generated_Source\PSoC6/CapSense_Filter.c **** 
1170:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1171:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1172:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1173:Generated_Source\PSoC6/CapSense_Filter.c **** 
1174:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1175:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1176:Generated_Source\PSoC6/CapSense_Filter.c **** 
1177:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1178:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1179:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1180:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1181:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1182:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1183:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1184:Generated_Source\PSoC6/CapSense_Filter.c ****     {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 27


1185:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1186:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1187:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1188:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1189:Generated_Source\PSoC6/CapSense_Filter.c **** 
1190:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1191:Generated_Source\PSoC6/CapSense_Filter.c **** }
1192:Generated_Source\PSoC6/CapSense_Filter.c **** 
1193:Generated_Source\PSoC6/CapSense_Filter.c **** 
1194:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1195:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverageInternal
1196:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Filter.c **** *
1198:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter.
1199:Generated_Source\PSoC6/CapSense_Filter.c **** *
1200:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter.
1201:Generated_Source\PSoC6/CapSense_Filter.c **** *
1202:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1203:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1204:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1205:Generated_Source\PSoC6/CapSense_Filter.c **** *
1206:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1207:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1208:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1209:Generated_Source\PSoC6/CapSense_Filter.c **** {
1210:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1211:Generated_Source\PSoC6/CapSense_Filter.c **** 
1212:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1213:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1214:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1216:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1217:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSensorO
1218:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1219:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] = ptrSe
1220:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] = ptrSe
1221:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1222:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1223:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1224:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1225:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1226:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1227:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj->ra
1228:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1229:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] = ptrSens
1230:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] = ptrSens
1231:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1232:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1233:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1234:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1235:Generated_Source\PSoC6/CapSense_Filter.c **** }
1236:Generated_Source\PSoC6/CapSense_Filter.c **** 
1237:Generated_Source\PSoC6/CapSense_Filter.c **** 
1238:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1239:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverageInternal
1240:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1241:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 28


1242:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the average filter.
1243:Generated_Source\PSoC6/CapSense_Filter.c **** *
1244:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the average filter.
1245:Generated_Source\PSoC6/CapSense_Filter.c **** *
1246:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1247:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1248:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1249:Generated_Source\PSoC6/CapSense_Filter.c **** *
1250:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1251:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1252:Generated_Source\PSoC6/CapSense_Filter.c ****                                            CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1253:Generated_Source\PSoC6/CapSense_Filter.c **** {
1254:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1255:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
1256:Generated_Source\PSoC6/CapSense_Filter.c **** 
1257:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1258:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1259:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1260:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1261:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1262:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1263:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1264:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1265:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1266:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1267:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1268:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1269:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1270:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1271:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1272:Generated_Source\PSoC6/CapSense_Filter.c **** 
1273:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] =
1274:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u];
1275:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] =
1276:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0];
1277:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1278:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1279:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1280:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1281:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1282:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1284:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1285:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1286:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1287:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1288:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1289:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1290:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1291:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1292:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1293:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1
1294:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2
1295:Generated_Source\PSoC6/CapSense_Filter.c **** 
1296:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] =
1297:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u];
1298:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] =
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 29


1299:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0];
1300:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1301:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1302:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1303:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1304:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1305:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1306:Generated_Source\PSoC6/CapSense_Filter.c **** }
1307:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1308:Generated_Source\PSoC6/CapSense_Filter.c **** 
1309:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_ALP_FILTER_EN)
1310:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1311:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALP
1312:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1313:Generated_Source\PSoC6/CapSense_Filter.c **** *
1314:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter history.
1315:Generated_Source\PSoC6/CapSense_Filter.c **** *
1316:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter history.
1317:Generated_Source\PSoC6/CapSense_Filter.c **** *
1318:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1319:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1320:Generated_Source\PSoC6/CapSense_Filter.c **** *
1321:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1322:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALP(uint32 widgetId, uint32 sensorId)
1323:Generated_Source\PSoC6/CapSense_Filter.c **** {
1324:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1325:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1326:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1327:Generated_Source\PSoC6/CapSense_Filter.c **** 
1328:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1329:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1330:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1331:Generated_Source\PSoC6/CapSense_Filter.c **** 
1332:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1333:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1334:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1335:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1336:Generated_Source\PSoC6/CapSense_Filter.c **** }
1337:Generated_Source\PSoC6/CapSense_Filter.c **** 
1338:Generated_Source\PSoC6/CapSense_Filter.c **** 
1339:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1340:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALP
1341:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1342:Generated_Source\PSoC6/CapSense_Filter.c **** *
1343:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the ALP filter algorithm on a sensor indicated by an input
1344:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1345:Generated_Source\PSoC6/CapSense_Filter.c **** *
1346:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the ALP filter algorithm on a sensor indicated by an input
1347:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1348:Generated_Source\PSoC6/CapSense_Filter.c **** *
1349:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1350:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1351:Generated_Source\PSoC6/CapSense_Filter.c **** *
1352:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1353:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALP(uint32 widgetId, uint32 sensorId)
1354:Generated_Source\PSoC6/CapSense_Filter.c **** {
1355:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 30


1356:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1357:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1358:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1359:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig = &alpFilterConfig;
1360:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = ptrWidget->ptr2WdgtRam;
1361:Generated_Source\PSoC6/CapSense_Filter.c **** 
1362:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1363:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1364:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1365:Generated_Source\PSoC6/CapSense_Filter.c **** 
1366:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam0 = ptrRamWidget->alpOnTh;
1367:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam1 = ptrRamWidget->alpOffTh;
1368:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam2 = ptrRamWidget->fingerTh;
1369:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam3 = ptrRamWidget->noiseTh;
1370:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam4 = ptrRamWidget->hysteresis;
1371:Generated_Source\PSoC6/CapSense_Filter.c **** 
1372:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1373:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1374:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1375:Generated_Source\PSoC6/CapSense_Filter.c **** 
1376:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1377:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1378:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1379:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1380:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1381:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1382:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1383:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1384:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1385:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1386:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1387:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1388:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, ptrAlpFilterConfig, ptrSensor, (uint32)ptrWidget->wdg
1389:Generated_Source\PSoC6/CapSense_Filter.c **** }
1390:Generated_Source\PSoC6/CapSense_Filter.c **** 
1391:Generated_Source\PSoC6/CapSense_Filter.c **** 
1392:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1393:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALPInternal
1394:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1395:Generated_Source\PSoC6/CapSense_Filter.c **** *
1396:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter.
1397:Generated_Source\PSoC6/CapSense_Filter.c **** *
1398:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter.
1399:Generated_Source\PSoC6/CapSense_Filter.c **** *
1400:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1401:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1402:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1403:Generated_Source\PSoC6/CapSense_Filter.c **** *
1404:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1405:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1406:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1407:Generated_Source\PSoC6/CapSense_Filter.c ****                                             uint32 wdType)
1408:Generated_Source\PSoC6/CapSense_Filter.c **** {
1409:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1410:Generated_Source\PSoC6/CapSense_Filter.c **** 
1411:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1412:Generated_Source\PSoC6/CapSense_Filter.c ****     {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 31


1413:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1414:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1415:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1416:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1417:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1418:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1419:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1420:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1421:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1422:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1423:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1424:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1426:Generated_Source\PSoC6/CapSense_Filter.c **** }
1427:Generated_Source\PSoC6/CapSense_Filter.c **** 
1428:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1429:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_ConfigRunALPInternal
1430:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1431:Generated_Source\PSoC6/CapSense_Filter.c **** *
1432:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Prepares ALP configuration structure and runs the filter.
1433:Generated_Source\PSoC6/CapSense_Filter.c **** *
1434:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Prepares ALP configuration structure and runs the filter.
1435:Generated_Source\PSoC6/CapSense_Filter.c **** *
1436:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1437:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrRamWdgt       The pointer to the RAM widget object.
1438:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1439:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1440:Generated_Source\PSoC6/CapSense_Filter.c **** *
1441:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1442:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_ConfigRunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1443:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1444:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1445:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1446:Generated_Source\PSoC6/CapSense_Filter.c **** {
1447:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1448:Generated_Source\PSoC6/CapSense_Filter.c **** 
1449:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam0 = ptrRamWdgt->alpOnTh;
1450:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam1 = ptrRamWdgt->alpOffTh;
1451:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam2 = ptrRamWdgt->fingerTh;
1452:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam3 = ptrRamWdgt->noiseTh;
1453:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam4 = ptrRamWdgt->hysteresis;
1454:Generated_Source\PSoC6/CapSense_Filter.c **** 
1455:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, &alpFilterConfig, ptrSensorObj, wdType);
1456:Generated_Source\PSoC6/CapSense_Filter.c **** }
1457:Generated_Source\PSoC6/CapSense_Filter.c **** 
1458:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1459:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALPInternal
1460:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1461:Generated_Source\PSoC6/CapSense_Filter.c **** *
1462:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the ALP filter.
1463:Generated_Source\PSoC6/CapSense_Filter.c **** *
1464:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the ALP filter.
1465:Generated_Source\PSoC6/CapSense_Filter.c **** *
1466:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1467:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrAlpFilterConfig The pointer to the filter configuration object of the sensor.
1468:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1469:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 32


1470:Generated_Source\PSoC6/CapSense_Filter.c **** *
1471:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1472:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1473:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig,
1474:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1475:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1476:Generated_Source\PSoC6/CapSense_Filter.c **** {
1477:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1478:Generated_Source\PSoC6/CapSense_Filter.c **** 
1479:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1480:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1481:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1482:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1483:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1484:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1485:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1486:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1487:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1488:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1489:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1490:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1491:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1492:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1493:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1494:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1495:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1496:Generated_Source\PSoC6/CapSense_Filter.c **** }
1497:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_ALP_FILTER_EN) */
1498:Generated_Source\PSoC6/CapSense_Filter.c **** 
1499:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1500:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1501:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFilters
1502:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1503:Generated_Source\PSoC6/CapSense_Filter.c **** *
1504:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1505:Generated_Source\PSoC6/CapSense_Filter.c **** *
1506:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1507:Generated_Source\PSoC6/CapSense_Filter.c **** *
1508:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of a widget to update the IIR filter history.*
1509:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of a sensor in the widget to update the IIR
1510:Generated_Source\PSoC6/CapSense_Filter.c **** *           filter history.
1511:Generated_Source\PSoC6/CapSense_Filter.c **** *
1512:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1513:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1514:Generated_Source\PSoC6/CapSense_Filter.c **** {
1515:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1516:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1517:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1518:Generated_Source\PSoC6/CapSense_Filter.c **** 
1519:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1520:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1521:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1522:Generated_Source\PSoC6/CapSense_Filter.c **** 
1523:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1524:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1525:Generated_Source\PSoC6/CapSense_Filter.c **** 
1526:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 33


1527:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1528:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
1529:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1530:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
1531:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrRegular[sensorId];
1532:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1533:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1534:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1535:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1536:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
1537:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1538:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_PROX_RC_FILTER_EN)
1539:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrProx[sensorId];
1540:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1541:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1542:Generated_Source\PSoC6/CapSense_Filter.c **** 
1543:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1544:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ALP_FILTER_EN)
1545:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_ConfigRunALPInternal(ptrFilterHistObj, ptrWidget->ptr2WdgtRam, ptrSensor, (uint32)
1546:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1547:Generated_Source\PSoC6/CapSense_Filter.c **** }
1548:Generated_Source\PSoC6/CapSense_Filter.c **** 
1549:Generated_Source\PSoC6/CapSense_Filter.c **** 
1550:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1551:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFiltersInternal
1552:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1553:Generated_Source\PSoC6/CapSense_Filter.c **** *
1554:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1555:Generated_Source\PSoC6/CapSense_Filter.c **** *
1556:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1557:Generated_Source\PSoC6/CapSense_Filter.c **** *
1558:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1559:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1560:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1561:Generated_Source\PSoC6/CapSense_Filter.c **** *
1562:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1563:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFiltersInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1564:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1565:Generated_Source\PSoC6/CapSense_Filter.c **** {
1566:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
1567:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1568:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1569:Generated_Source\PSoC6/CapSense_Filter.c **** 
1570:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
1571:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1572:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
1573:Generated_Source\PSoC6/CapSense_Filter.c **** 
1574:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1575:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1577:Generated_Source\PSoC6/CapSense_Filter.c **** }
1578:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1579:Generated_Source\PSoC6/CapSense_Filter.c **** 
1580:Generated_Source\PSoC6/CapSense_Filter.c **** 
1581:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1582:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1583:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunNoiseEnvelope
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 34


1584:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1585:Generated_Source\PSoC6/CapSense_Filter.c **** *
1586:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the noise envelope  filter algorithm on a sensor indicated by
1587:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1588:Generated_Source\PSoC6/CapSense_Filter.c **** *
1589:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the noise envelope  filter algorithm on a sensor indicated by
1590:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1591:Generated_Source\PSoC6/CapSense_Filter.c **** *
1592:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1593:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1594:Generated_Source\PSoC6/CapSense_Filter.c **** *
1595:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1596:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1597:Generated_Source\PSoC6/CapSense_Filter.c **** {
1598:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1599:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1600:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1601:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1602:Generated_Source\PSoC6/CapSense_Filter.c **** 
1603:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1604:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1605:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1606:Generated_Source\PSoC6/CapSense_Filter.c **** 
1607:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1608:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1609:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1610:Generated_Source\PSoC6/CapSense_Filter.c **** 
1611:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1612:Generated_Source\PSoC6/CapSense_Filter.c **** }
1613:Generated_Source\PSoC6/CapSense_Filter.c **** 
1614:Generated_Source\PSoC6/CapSense_Filter.c **** 
1615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeNoiseEnvelope
1617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1618:Generated_Source\PSoC6/CapSense_Filter.c **** *
1619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the noise-envelope filter
1620:Generated_Source\PSoC6/CapSense_Filter.c **** *
1621:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the noise-envelope filter
1622:Generated_Source\PSoC6/CapSense_Filter.c **** *
1623:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1624:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1625:Generated_Source\PSoC6/CapSense_Filter.c **** *
1626:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1627:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1628:Generated_Source\PSoC6/CapSense_Filter.c **** {
1629:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1630:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1631:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1632:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1633:Generated_Source\PSoC6/CapSense_Filter.c **** 
1634:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1635:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1636:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1637:Generated_Source\PSoC6/CapSense_Filter.c **** 
1638:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1639:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1640:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 35


1641:Generated_Source\PSoC6/CapSense_Filter.c **** 
1642:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1643:Generated_Source\PSoC6/CapSense_Filter.c **** }
1644:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1645:Generated_Source\PSoC6/CapSense_Filter.c **** 
1646:Generated_Source\PSoC6/CapSense_Filter.c **** 
1647:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDI
1648:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1649:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtMedian
1650:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1651:Generated_Source\PSoC6/CapSense_Filter.c **** *
1652:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the median value from the three passed arguments.
1653:Generated_Source\PSoC6/CapSense_Filter.c **** *
1654:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the median value from the three passed arguments.
1655:Generated_Source\PSoC6/CapSense_Filter.c **** *
1656:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x1 The first value to be compared.
1657:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x2 The second value to be compared.
1658:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x3 The third value to be compared.
1659:Generated_Source\PSoC6/CapSense_Filter.c **** *
1660:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the median value of input arguments.
1661:Generated_Source\PSoC6/CapSense_Filter.c **** *
1662:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1663:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1664:Generated_Source\PSoC6/CapSense_Filter.c **** {
1665:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 tmp;
1666:Generated_Source\PSoC6/CapSense_Filter.c **** 
1667:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x1 > x2)
1668:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1669:Generated_Source\PSoC6/CapSense_Filter.c ****         tmp = x2;
1670:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x1;
1671:Generated_Source\PSoC6/CapSense_Filter.c ****         x1 = tmp;
1672:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1673:Generated_Source\PSoC6/CapSense_Filter.c **** 
1674:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x2 > x3)
1675:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1676:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x3;
1677:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1678:Generated_Source\PSoC6/CapSense_Filter.c **** 
1679:Generated_Source\PSoC6/CapSense_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1680:Generated_Source\PSoC6/CapSense_Filter.c **** }
1681:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /*CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_
1682:Generated_Source\PSoC6/CapSense_Filter.c **** 
1683:Generated_Source\PSoC6/CapSense_Filter.c **** 
1684:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1685:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtIIR1stOrder
1686:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1687:Generated_Source\PSoC6/CapSense_Filter.c **** *
1688:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the filtered data by the IIR 1-st order algorithm
1689:Generated_Source\PSoC6/CapSense_Filter.c **** *
1690:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the filtered data by the IIR 1-st order algorithm
1691:Generated_Source\PSoC6/CapSense_Filter.c **** *
1692:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    input      The data to be filtered.
1693:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    prevOutput The previous filtered data.
1694:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    n          The IIR filter coefficient (n/256).
1695:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    shift      The parameter is used to shift input data to have free LSB
1696:Generated_Source\PSoC6/CapSense_Filter.c **** *                       bits for a fraction storage of the filter output calculation.
1697:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 36


1698:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the filtered data.
1699:Generated_Source\PSoC6/CapSense_Filter.c **** *
1700:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1701:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1702:Generated_Source\PSoC6/CapSense_Filter.c **** {
 276              		.loc 1 1702 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL30:
1703:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 filteredOutput;
1704:Generated_Source\PSoC6/CapSense_Filter.c **** 
1705:Generated_Source\PSoC6/CapSense_Filter.c ****     /*
1706:Generated_Source\PSoC6/CapSense_Filter.c ****     * n - IIR filter coefficient (n/256)
1707:Generated_Source\PSoC6/CapSense_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1708:Generated_Source\PSoC6/CapSense_Filter.c ****     * for fraction storage of filter output calculation
1709:Generated_Source\PSoC6/CapSense_Filter.c ****     */
1710:Generated_Source\PSoC6/CapSense_Filter.c ****     filteredOutput = ((n * (input << shift)) + ((CapSense_IIR_COEFFICIENT_K - n) * prevOutput)) >> 
 282              		.loc 1 1710 0
 283 0000 00FA03F3 		lsl	r3, r0, r3
 284              	.LVL31:
 285 0004 C2F58070 		rsb	r0, r2, #256
 286              	.LVL32:
 287 0008 01FB00F1 		mul	r1, r1, r0
 288              	.LVL33:
 289 000c 02FB0310 		mla	r0, r2, r3, r1
 290              	.LVL34:
1711:Generated_Source\PSoC6/CapSense_Filter.c **** 
1712:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1713:Generated_Source\PSoC6/CapSense_Filter.c ****     return filteredOutput;
1714:Generated_Source\PSoC6/CapSense_Filter.c **** }
 291              		.loc 1 1714 0
 292 0010 000A     		lsrs	r0, r0, #8
 293              	.LVL35:
 294 0012 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE142:
 297              		.size	CapSense_FtIIR1stOrder, .-CapSense_FtIIR1stOrder
 298              		.section	.text.CapSense_FtUpdateBaseline,"ax",%progbits
 299              		.align	2
 300              		.global	CapSense_FtUpdateBaseline
 301              		.thumb
 302              		.thumb_func
 303              		.type	CapSense_FtUpdateBaseline, %function
 304              	CapSense_FtUpdateBaseline:
 305              	.LFB136:
 259:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 306              		.loc 1 259 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              	.LVL36:
 311 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 312              		.cfi_def_cfa_offset 24
 313              		.cfi_offset 4, -24
 314              		.cfi_offset 5, -20
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 37


 315              		.cfi_offset 6, -16
 316              		.cfi_offset 7, -12
 317              		.cfi_offset 8, -8
 318              		.cfi_offset 14, -4
 319 0004 0646     		mov	r6, r0
 320 0006 0D46     		mov	r5, r1
 321 0008 1746     		mov	r7, r2
 322              	.LVL37:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 323              		.loc 1 271 0
 324 000a 0123     		movs	r3, #1
 325 000c 42E0     		b	.L24
 326              	.LVL38:
 327              	.L31:
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 328              		.loc 1 283 0
 329 000e 35F81400 		ldrh	r0, [r5, r4, lsl #1]
 330 0012 05EB4403 		add	r3, r5, r4, lsl #1
 331 0016 5988     		ldrh	r1, [r3, #2]
 332 0018 8842     		cmp	r0, r1
 333 001a 07D3     		bcc	.L25
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 334              		.loc 1 285 0
 335 001c 431A     		subs	r3, r0, r1
 336              	.LVL39:
 287:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 337              		.loc 1 287 0
 338 001e 2A19     		adds	r2, r5, r4
 339 0020 4FF0000E 		mov	lr, #0
 340 0024 82F808E0 		strb	lr, [r2, #8]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 341              		.loc 1 286 0
 342 0028 0122     		movs	r2, #1
 343 002a 01E0     		b	.L26
 344              	.LVL40:
 345              	.L25:
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 346              		.loc 1 291 0
 347 002c 0B1A     		subs	r3, r1, r0
 348              	.LVL41:
 292:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 349              		.loc 1 292 0
 350 002e 0022     		movs	r2, #0
 351              	.LVL42:
 352              	.L26:
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 353              		.loc 1 296 0
 354 0030 92B9     		cbnz	r2, .L27
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 355              		.loc 1 296 0 is_stmt 0 discriminator 1
 356 0032 96F805E0 		ldrb	lr, [r6, #5]	@ zero_extendqisi2
 357 0036 7345     		cmp	r3, lr
 358 0038 0ED9     		bls	.L27
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 359              		.loc 1 298 0 is_stmt 1
 360 003a 2B19     		adds	r3, r5, r4
 361              	.LVL43:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 38


 362 003c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 363 003e 327A     		ldrb	r2, [r6, #8]	@ zero_extendqisi2
 364              	.LVL44:
 365 0040 9342     		cmp	r3, r2
 366 0042 05D3     		bcc	.L28
 300:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 367              		.loc 1 300 0
 368 0044 2246     		mov	r2, r4
 369 0046 3946     		mov	r1, r7
 370 0048 2846     		mov	r0, r5
 371 004a FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 372              	.LVL45:
 373 004e 20E0     		b	.L29
 374              	.L28:
 304:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 375              		.loc 1 304 0
 376 0050 2A19     		adds	r2, r5, r4
 377 0052 0133     		adds	r3, r3, #1
 378 0054 1372     		strb	r3, [r2, #8]
 379 0056 1CE0     		b	.L29
 380              	.LVL46:
 381              	.L27:
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 382              		.loc 1 311 0
 383 0058 96F804E0 		ldrb	lr, [r6, #4]	@ zero_extendqisi2
 384 005c 7345     		cmp	r3, lr
 385 005e 04D9     		bls	.L30
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 386              		.loc 1 312 0 discriminator 1
 387 0060 96F805E0 		ldrb	lr, [r6, #5]	@ zero_extendqisi2
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 388              		.loc 1 311 0 discriminator 1
 389 0064 7345     		cmp	r3, lr
 390 0066 14D8     		bhi	.L29
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 391              		.loc 1 312 0
 392 0068 9AB9     		cbnz	r2, .L29
 393              	.L30:
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 394              		.loc 1 318 0
 395 006a FBB2     		uxtb	r3, r7
 396              	.LVL47:
 397 006c 062B     		cmp	r3, #6
 398 006e 10D0     		beq	.L29
 399              	.LVL48:
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 400              		.loc 1 323 0
 401 0070 05EB0408 		add	r8, r5, r4
 402 0074 98F804E0 		ldrb	lr, [r8, #4]	@ zero_extendqisi2
 403              	.LVL49:
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 404              		.loc 1 334 0
 405 0078 0823     		movs	r3, #8
 406 007a 0122     		movs	r2, #1
 407              	.LVL50:
 408 007c 4EEA0121 		orr	r1, lr, r1, lsl #8
 409              	.LVL51:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 39


 410 0080 FFF7FEFF 		bl	CapSense_FtIIR1stOrder
 411              	.LVL52:
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 412              		.loc 1 340 0
 413 0084 C0F30F22 		ubfx	r2, r0, #8, #16
 414 0088 05EB4403 		add	r3, r5, r4, lsl #1
 415 008c 5A80     		strh	r2, [r3, #2]	@ movhi
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 416              		.loc 1 341 0
 417 008e 88F80400 		strb	r0, [r8, #4]
 418              	.LVL53:
 419              	.L29:
 420 0092 2346     		mov	r3, r4
 421              	.LVL54:
 422              	.L24:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 423              		.loc 1 271 0 discriminator 1
 424 0094 5C1E     		subs	r4, r3, #1
 425              	.LVL55:
 426 0096 002B     		cmp	r3, #0
 427 0098 B9D1     		bne	.L31
 398:Generated_Source\PSoC6/CapSense_Filter.c **** 
 428              		.loc 1 398 0
 429 009a 0020     		movs	r0, #0
 430 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 431              		.cfi_endproc
 432              	.LFE136:
 433              		.size	CapSense_FtUpdateBaseline, .-CapSense_FtUpdateBaseline
 434              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 435              		.align	2
 436              		.global	CapSense_UpdateSensorBaseline
 437              		.thumb
 438              		.thumb_func
 439              		.type	CapSense_UpdateSensorBaseline, %function
 440              	CapSense_UpdateSensorBaseline:
 441              	.LFB135:
 201:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 442              		.loc 1 201 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              	.LVL56:
 447 0000 70B5     		push	{r4, r5, r6, lr}
 448              		.cfi_def_cfa_offset 16
 449              		.cfi_offset 4, -16
 450              		.cfi_offset 5, -12
 451              		.cfi_offset 6, -8
 452              		.cfi_offset 14, -4
 453              	.LVL57:
 206:Generated_Source\PSoC6/CapSense_Filter.c **** 
 454              		.loc 1 206 0
 455 0002 074E     		ldr	r6, .L35
 456 0004 C200     		lsls	r2, r0, #3
 457 0006 141A     		subs	r4, r2, r0
 458 0008 A300     		lsls	r3, r4, #2
 459 000a 3344     		add	r3, r3, r6
 460              	.LVL58:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 40


 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 461              		.loc 1 209 0
 462 000c 9C68     		ldr	r4, [r3, #8]
 463              	.LVL59:
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 464              		.loc 1 210 0
 465 000e 01EB8101 		add	r1, r1, r1, lsl #2
 466              	.LVL60:
 467 0012 4D00     		lsls	r5, r1, #1
 468              	.LVL61:
 211:Generated_Source\PSoC6/CapSense_Filter.c **** 
 469              		.loc 1 211 0
 470 0014 9A7E     		ldrb	r2, [r3, #26]	@ zero_extendqisi2
 471 0016 6119     		adds	r1, r4, r5
 472              	.LVL62:
 473 0018 5868     		ldr	r0, [r3, #4]
 474              	.LVL63:
 475 001a FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 476              	.LVL64:
 222:Generated_Source\PSoC6/CapSense_Filter.c **** 
 477              		.loc 1 222 0
 478 001e 70BD     		pop	{r4, r5, r6, pc}
 479              	.LVL65:
 480              	.L36:
 481              		.align	2
 482              	.L35:
 483 0020 00000000 		.word	CapSense_dsFlash
 484              		.cfi_endproc
 485              	.LFE135:
 486              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 487              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 488              		.align	2
 489              		.global	CapSense_UpdateWidgetBaseline
 490              		.thumb
 491              		.thumb_func
 492              		.type	CapSense_UpdateWidgetBaseline, %function
 493              	CapSense_UpdateWidgetBaseline:
 494              	.LFB134:
 144:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 495              		.loc 1 144 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              	.LVL66:
 500 0000 70B5     		push	{r4, r5, r6, lr}
 501              		.cfi_def_cfa_offset 16
 502              		.cfi_offset 4, -16
 503              		.cfi_offset 5, -12
 504              		.cfi_offset 6, -8
 505              		.cfi_offset 14, -4
 506 0002 0646     		mov	r6, r0
 507              	.LVL67:
 152:Generated_Source\PSoC6/CapSense_Filter.c **** 
 508              		.loc 1 152 0
 509 0004 C0EBC002 		rsb	r2, r0, r0, lsl #3
 510 0008 9300     		lsls	r3, r2, #2
 511 000a 084A     		ldr	r2, .L41
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 41


 512 000c 1344     		add	r3, r3, r2
 513 000e 1B8B     		ldrh	r3, [r3, #24]
 514              	.LVL68:
 149:Generated_Source\PSoC6/CapSense_Filter.c **** 
 515              		.loc 1 149 0
 516 0010 0025     		movs	r5, #0
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 517              		.loc 1 154 0
 518 0012 05E0     		b	.L38
 519              	.LVL69:
 520              	.L39:
 156:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 521              		.loc 1 156 0
 522 0014 2146     		mov	r1, r4
 523 0016 3046     		mov	r0, r6
 524 0018 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 525              	.LVL70:
 526 001c 0543     		orrs	r5, r5, r0
 527              	.LVL71:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 528              		.loc 1 154 0
 529 001e 2346     		mov	r3, r4
 530              	.LVL72:
 531              	.L38:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 532              		.loc 1 154 0 is_stmt 0 discriminator 1
 533 0020 5C1E     		subs	r4, r3, #1
 534              	.LVL73:
 535 0022 002B     		cmp	r3, #0
 536 0024 F6D1     		bne	.L39
 160:Generated_Source\PSoC6/CapSense_Filter.c **** 
 537              		.loc 1 160 0 is_stmt 1
 538 0026 2846     		mov	r0, r5
 539 0028 70BD     		pop	{r4, r5, r6, pc}
 540              	.LVL74:
 541              	.L42:
 542 002a 00BF     		.align	2
 543              	.L41:
 544 002c 00000000 		.word	CapSense_dsFlash
 545              		.cfi_endproc
 546              	.LFE134:
 547              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 548              		.section	.text.CapSense_UpdateAllBaselines,"ax",%progbits
 549              		.align	2
 550              		.global	CapSense_UpdateAllBaselines
 551              		.thumb
 552              		.thumb_func
 553              		.type	CapSense_UpdateAllBaselines, %function
 554              	CapSense_UpdateAllBaselines:
 555              	.LFB133:
  99:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 556              		.loc 1 99 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560 0000 38B5     		push	{r3, r4, r5, lr}
 561              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 42


 562              		.cfi_offset 3, -16
 563              		.cfi_offset 4, -12
 564              		.cfi_offset 5, -8
 565              		.cfi_offset 14, -4
 566              	.LVL75:
 101:Generated_Source\PSoC6/CapSense_Filter.c **** 
 567              		.loc 1 101 0
 568 0002 0024     		movs	r4, #0
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 569              		.loc 1 103 0
 570 0004 0123     		movs	r3, #1
 571 0006 04E0     		b	.L44
 572              	.LVL76:
 573              	.L45:
 105:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 574              		.loc 1 105 0
 575 0008 2846     		mov	r0, r5
 576 000a FFF7FEFF 		bl	CapSense_UpdateWidgetBaseline
 577              	.LVL77:
 578 000e 0443     		orrs	r4, r4, r0
 579              	.LVL78:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 580              		.loc 1 103 0
 581 0010 2B46     		mov	r3, r5
 582              	.LVL79:
 583              	.L44:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 584              		.loc 1 103 0 is_stmt 0 discriminator 1
 585 0012 5D1E     		subs	r5, r3, #1
 586              	.LVL80:
 587 0014 002B     		cmp	r3, #0
 588 0016 F7D1     		bne	.L45
 109:Generated_Source\PSoC6/CapSense_Filter.c **** 
 589              		.loc 1 109 0 is_stmt 1
 590 0018 2046     		mov	r0, r4
 591 001a 38BD     		pop	{r3, r4, r5, pc}
 592              		.cfi_endproc
 593              	.LFE133:
 594              		.size	CapSense_UpdateAllBaselines, .-CapSense_UpdateAllBaselines
 595              		.text
 596              	.Letext0:
 597              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 598              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 599              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 600              		.file 5 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 601              		.file 6 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 602              		.file 7 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 603              		.section	.debug_info,"",%progbits
 604              	.Ldebug_info0:
 605 0000 15080000 		.4byte	0x815
 606 0004 0400     		.2byte	0x4
 607 0006 00000000 		.4byte	.Ldebug_abbrev0
 608 000a 04       		.byte	0x4
 609 000b 01       		.uleb128 0x1
 610 000c 48010000 		.4byte	.LASF95
 611 0010 0C       		.byte	0xc
 612 0011 2E030000 		.4byte	.LASF96
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 43


 613 0015 9F000000 		.4byte	.LASF97
 614 0019 00000000 		.4byte	.Ldebug_ranges0+0
 615 001d 00000000 		.4byte	0
 616 0021 00000000 		.4byte	.Ldebug_line0
 617 0025 02       		.uleb128 0x2
 618 0026 04       		.byte	0x4
 619 0027 05       		.byte	0x5
 620 0028 696E7400 		.ascii	"int\000"
 621 002c 03       		.uleb128 0x3
 622 002d 04       		.byte	0x4
 623 002e 07       		.byte	0x7
 624 002f 48040000 		.4byte	.LASF0
 625 0033 03       		.uleb128 0x3
 626 0034 08       		.byte	0x8
 627 0035 05       		.byte	0x5
 628 0036 03030000 		.4byte	.LASF1
 629 003a 03       		.uleb128 0x3
 630 003b 08       		.byte	0x8
 631 003c 04       		.byte	0x4
 632 003d D9030000 		.4byte	.LASF2
 633 0041 03       		.uleb128 0x3
 634 0042 01       		.byte	0x1
 635 0043 06       		.byte	0x6
 636 0044 07040000 		.4byte	.LASF3
 637 0048 04       		.uleb128 0x4
 638 0049 86030000 		.4byte	.LASF6
 639 004d 02       		.byte	0x2
 640 004e 1D       		.byte	0x1d
 641 004f 53000000 		.4byte	0x53
 642 0053 03       		.uleb128 0x3
 643 0054 01       		.byte	0x1
 644 0055 08       		.byte	0x8
 645 0056 E5030000 		.4byte	.LASF4
 646 005a 03       		.uleb128 0x3
 647 005b 02       		.byte	0x2
 648 005c 05       		.byte	0x5
 649 005d 95000000 		.4byte	.LASF5
 650 0061 04       		.uleb128 0x4
 651 0062 2A020000 		.4byte	.LASF7
 652 0066 02       		.byte	0x2
 653 0067 2B       		.byte	0x2b
 654 0068 6C000000 		.4byte	0x6c
 655 006c 03       		.uleb128 0x3
 656 006d 02       		.byte	0x2
 657 006e 07       		.byte	0x7
 658 006f BC040000 		.4byte	.LASF8
 659 0073 04       		.uleb128 0x4
 660 0074 33050000 		.4byte	.LASF9
 661 0078 02       		.byte	0x2
 662 0079 3F       		.byte	0x3f
 663 007a 7E000000 		.4byte	0x7e
 664 007e 03       		.uleb128 0x3
 665 007f 04       		.byte	0x4
 666 0080 05       		.byte	0x5
 667 0081 16030000 		.4byte	.LASF10
 668 0085 04       		.uleb128 0x4
 669 0086 0A020000 		.4byte	.LASF11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 44


 670 008a 02       		.byte	0x2
 671 008b 41       		.byte	0x41
 672 008c 90000000 		.4byte	0x90
 673 0090 03       		.uleb128 0x3
 674 0091 04       		.byte	0x4
 675 0092 07       		.byte	0x7
 676 0093 B3050000 		.4byte	.LASF12
 677 0097 03       		.uleb128 0x3
 678 0098 08       		.byte	0x8
 679 0099 07       		.byte	0x7
 680 009a 1B040000 		.4byte	.LASF13
 681 009e 04       		.uleb128 0x4
 682 009f 87020000 		.4byte	.LASF14
 683 00a3 03       		.byte	0x3
 684 00a4 18       		.byte	0x18
 685 00a5 48000000 		.4byte	0x48
 686 00a9 04       		.uleb128 0x4
 687 00aa 55040000 		.4byte	.LASF15
 688 00ae 03       		.byte	0x3
 689 00af 24       		.byte	0x24
 690 00b0 61000000 		.4byte	0x61
 691 00b4 04       		.uleb128 0x4
 692 00b5 13040000 		.4byte	.LASF16
 693 00b9 03       		.byte	0x3
 694 00ba 2C       		.byte	0x2c
 695 00bb 73000000 		.4byte	0x73
 696 00bf 04       		.uleb128 0x4
 697 00c0 32040000 		.4byte	.LASF17
 698 00c4 03       		.byte	0x3
 699 00c5 30       		.byte	0x30
 700 00c6 85000000 		.4byte	0x85
 701 00ca 03       		.uleb128 0x3
 702 00cb 04       		.byte	0x4
 703 00cc 07       		.byte	0x7
 704 00cd 57030000 		.4byte	.LASF18
 705 00d1 03       		.uleb128 0x3
 706 00d2 01       		.byte	0x1
 707 00d3 08       		.byte	0x8
 708 00d4 11030000 		.4byte	.LASF19
 709 00d8 03       		.uleb128 0x3
 710 00d9 04       		.byte	0x4
 711 00da 04       		.byte	0x4
 712 00db FD020000 		.4byte	.LASF20
 713 00df 03       		.uleb128 0x3
 714 00e0 08       		.byte	0x8
 715 00e1 04       		.byte	0x4
 716 00e2 CA050000 		.4byte	.LASF21
 717 00e6 05       		.uleb128 0x5
 718 00e7 FD030000 		.4byte	.LASF22
 719 00eb 04       		.byte	0x4
 720 00ec E703     		.2byte	0x3e7
 721 00ee BF000000 		.4byte	0xbf
 722 00f2 05       		.uleb128 0x5
 723 00f3 8F020000 		.4byte	.LASF23
 724 00f7 04       		.byte	0x4
 725 00f8 EA03     		.2byte	0x3ea
 726 00fa 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 45


 727 00fe 05       		.uleb128 0x5
 728 00ff 52020000 		.4byte	.LASF24
 729 0103 04       		.byte	0x4
 730 0104 EB03     		.2byte	0x3eb
 731 0106 A9000000 		.4byte	0xa9
 732 010a 05       		.uleb128 0x5
 733 010b AC050000 		.4byte	.LASF25
 734 010f 04       		.byte	0x4
 735 0110 EC03     		.2byte	0x3ec
 736 0112 BF000000 		.4byte	0xbf
 737 0116 04       		.uleb128 0x4
 738 0117 60030000 		.4byte	.LASF26
 739 011b 05       		.byte	0x5
 740 011c D8       		.byte	0xd8
 741 011d FE000000 		.4byte	0xfe
 742 0121 04       		.uleb128 0x4
 743 0122 16000000 		.4byte	.LASF27
 744 0126 05       		.byte	0x5
 745 0127 DC       		.byte	0xdc
 746 0128 F2000000 		.4byte	0xf2
 747 012c 06       		.uleb128 0x6
 748 012d 01       		.byte	0x1
 749 012e 53000000 		.4byte	0x53
 750 0132 06       		.byte	0x6
 751 0133 61       		.byte	0x61
 752 0134 5D010000 		.4byte	0x15d
 753 0138 07       		.uleb128 0x7
 754 0139 35020000 		.4byte	.LASF28
 755 013d 01       		.byte	0x1
 756 013e 07       		.uleb128 0x7
 757 013f A0040000 		.4byte	.LASF29
 758 0143 02       		.byte	0x2
 759 0144 07       		.uleb128 0x7
 760 0145 87050000 		.4byte	.LASF30
 761 0149 03       		.byte	0x3
 762 014a 07       		.uleb128 0x7
 763 014b FA050000 		.4byte	.LASF31
 764 014f 04       		.byte	0x4
 765 0150 07       		.uleb128 0x7
 766 0151 FD000000 		.4byte	.LASF32
 767 0155 05       		.byte	0x5
 768 0156 07       		.uleb128 0x7
 769 0157 E5020000 		.4byte	.LASF33
 770 015b 06       		.byte	0x6
 771 015c 00       		.byte	0
 772 015d 04       		.uleb128 0x4
 773 015e D9050000 		.4byte	.LASF34
 774 0162 06       		.byte	0x6
 775 0163 68       		.byte	0x68
 776 0164 2C010000 		.4byte	0x12c
 777 0168 08       		.uleb128 0x8
 778 0169 0E       		.byte	0xe
 779 016a 06       		.byte	0x6
 780 016b 8C       		.byte	0x8c
 781 016c E9010000 		.4byte	0x1e9
 782 0170 09       		.uleb128 0x9
 783 0171 28050000 		.4byte	.LASF35
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 46


 784 0175 06       		.byte	0x6
 785 0176 92       		.byte	0x92
 786 0177 FE000000 		.4byte	0xfe
 787 017b 00       		.byte	0
 788 017c 09       		.uleb128 0x9
 789 017d 9B030000 		.4byte	.LASF36
 790 0181 06       		.byte	0x6
 791 0182 97       		.byte	0x97
 792 0183 16010000 		.4byte	0x116
 793 0187 02       		.byte	0x2
 794 0188 09       		.uleb128 0x9
 795 0189 4A020000 		.4byte	.LASF37
 796 018d 06       		.byte	0x6
 797 018e 9C       		.byte	0x9c
 798 018f F2000000 		.4byte	0xf2
 799 0193 04       		.byte	0x4
 800 0194 09       		.uleb128 0x9
 801 0195 38010000 		.4byte	.LASF38
 802 0199 06       		.byte	0x6
 803 019a A1       		.byte	0xa1
 804 019b F2000000 		.4byte	0xf2
 805 019f 05       		.byte	0x5
 806 01a0 09       		.uleb128 0x9
 807 01a1 CE030000 		.4byte	.LASF39
 808 01a5 06       		.byte	0x6
 809 01a6 A6       		.byte	0xa6
 810 01a7 F2000000 		.4byte	0xf2
 811 01ab 06       		.byte	0x6
 812 01ac 09       		.uleb128 0x9
 813 01ad 90030000 		.4byte	.LASF40
 814 01b1 06       		.byte	0x6
 815 01b2 AB       		.byte	0xab
 816 01b3 F2000000 		.4byte	0xf2
 817 01b7 07       		.byte	0x7
 818 01b8 09       		.uleb128 0x9
 819 01b9 51000000 		.4byte	.LASF41
 820 01bd 06       		.byte	0x6
 821 01be B2       		.byte	0xb2
 822 01bf 21010000 		.4byte	0x121
 823 01c3 08       		.byte	0x8
 824 01c4 09       		.uleb128 0x9
 825 01c5 8D000000 		.4byte	.LASF42
 826 01c9 06       		.byte	0x6
 827 01ca BA       		.byte	0xba
 828 01cb E9010000 		.4byte	0x1e9
 829 01cf 09       		.byte	0x9
 830 01d0 09       		.uleb128 0x9
 831 01d1 A2020000 		.4byte	.LASF43
 832 01d5 06       		.byte	0x6
 833 01d6 C3       		.byte	0xc3
 834 01d7 FE000000 		.4byte	0xfe
 835 01db 0A       		.byte	0xa
 836 01dc 09       		.uleb128 0x9
 837 01dd 1D020000 		.4byte	.LASF44
 838 01e1 06       		.byte	0x6
 839 01e2 C8       		.byte	0xc8
 840 01e3 F2000000 		.4byte	0xf2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 47


 841 01e7 0C       		.byte	0xc
 842 01e8 00       		.byte	0
 843 01e9 0A       		.uleb128 0xa
 844 01ea F2000000 		.4byte	0xf2
 845 01ee F9010000 		.4byte	0x1f9
 846 01f2 0B       		.uleb128 0xb
 847 01f3 CA000000 		.4byte	0xca
 848 01f7 00       		.byte	0
 849 01f8 00       		.byte	0
 850 01f9 04       		.uleb128 0x4
 851 01fa 6E060000 		.4byte	.LASF45
 852 01fe 06       		.byte	0x6
 853 01ff C9       		.byte	0xc9
 854 0200 68010000 		.4byte	0x168
 855 0204 0C       		.uleb128 0xc
 856 0205 0A       		.byte	0xa
 857 0206 06       		.byte	0x6
 858 0207 1D01     		.2byte	0x11d
 859 0209 5C020000 		.4byte	0x25c
 860 020d 0D       		.uleb128 0xd
 861 020e 72617700 		.ascii	"raw\000"
 862 0212 06       		.byte	0x6
 863 0213 2201     		.2byte	0x122
 864 0215 5C020000 		.4byte	0x25c
 865 0219 00       		.byte	0
 866 021a 0E       		.uleb128 0xe
 867 021b 38000000 		.4byte	.LASF46
 868 021f 06       		.byte	0x6
 869 0220 2701     		.2byte	0x127
 870 0222 5C020000 		.4byte	0x25c
 871 0226 02       		.byte	0x2
 872 0227 0E       		.uleb128 0xe
 873 0228 D1050000 		.4byte	.LASF47
 874 022c 06       		.byte	0x6
 875 022d 2D01     		.2byte	0x12d
 876 022f E9010000 		.4byte	0x1e9
 877 0233 04       		.byte	0x4
 878 0234 0E       		.uleb128 0xe
 879 0235 5C000000 		.4byte	.LASF48
 880 0239 06       		.byte	0x6
 881 023a 3201     		.2byte	0x132
 882 023c 16010000 		.4byte	0x116
 883 0240 06       		.byte	0x6
 884 0241 0E       		.uleb128 0xe
 885 0242 78030000 		.4byte	.LASF49
 886 0246 06       		.byte	0x6
 887 0247 3701     		.2byte	0x137
 888 0249 6C020000 		.4byte	0x26c
 889 024d 08       		.byte	0x8
 890 024e 0E       		.uleb128 0xe
 891 024f 01050000 		.4byte	.LASF50
 892 0253 06       		.byte	0x6
 893 0254 3D01     		.2byte	0x13d
 894 0256 E9010000 		.4byte	0x1e9
 895 025a 09       		.byte	0x9
 896 025b 00       		.byte	0
 897 025c 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 48


 898 025d FE000000 		.4byte	0xfe
 899 0261 6C020000 		.4byte	0x26c
 900 0265 0B       		.uleb128 0xb
 901 0266 CA000000 		.4byte	0xca
 902 026a 00       		.byte	0
 903 026b 00       		.byte	0
 904 026c 0A       		.uleb128 0xa
 905 026d 21010000 		.4byte	0x121
 906 0271 7C020000 		.4byte	0x27c
 907 0275 0B       		.uleb128 0xb
 908 0276 CA000000 		.4byte	0xca
 909 027a 00       		.byte	0
 910 027b 00       		.byte	0
 911 027c 05       		.uleb128 0x5
 912 027d 6A040000 		.4byte	.LASF51
 913 0281 06       		.byte	0x6
 914 0282 3E01     		.2byte	0x13e
 915 0284 04020000 		.4byte	0x204
 916 0288 0C       		.uleb128 0xc
 917 0289 1C       		.byte	0x1c
 918 028a 06       		.byte	0x6
 919 028b F701     		.2byte	0x1f7
 920 028d 07030000 		.4byte	0x307
 921 0291 0E       		.uleb128 0xe
 922 0292 97060000 		.4byte	.LASF52
 923 0296 06       		.byte	0x6
 924 0297 0002     		.2byte	0x200
 925 0299 07030000 		.4byte	0x307
 926 029d 00       		.byte	0
 927 029e 0E       		.uleb128 0xe
 928 029f 6D050000 		.4byte	.LASF53
 929 02a3 06       		.byte	0x6
 930 02a4 0702     		.2byte	0x207
 931 02a6 0E030000 		.4byte	0x30e
 932 02aa 04       		.byte	0x4
 933 02ab 0E       		.uleb128 0xe
 934 02ac 16060000 		.4byte	.LASF54
 935 02b0 06       		.byte	0x6
 936 02b1 0D02     		.2byte	0x20d
 937 02b3 10030000 		.4byte	0x310
 938 02b7 08       		.byte	0x8
 939 02b8 0E       		.uleb128 0xe
 940 02b9 43060000 		.4byte	.LASF55
 941 02bd 06       		.byte	0x6
 942 02be 1202     		.2byte	0x212
 943 02c0 0E030000 		.4byte	0x30e
 944 02c4 0C       		.byte	0xc
 945 02c5 0E       		.uleb128 0xe
 946 02c6 77020000 		.4byte	.LASF56
 947 02ca 06       		.byte	0x6
 948 02cb 1902     		.2byte	0x219
 949 02cd 16030000 		.4byte	0x316
 950 02d1 10       		.byte	0x10
 951 02d2 0E       		.uleb128 0xe
 952 02d3 3B040000 		.4byte	.LASF57
 953 02d7 06       		.byte	0x6
 954 02d8 1E02     		.2byte	0x21e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 49


 955 02da 0A010000 		.4byte	0x10a
 956 02de 14       		.byte	0x14
 957 02df 0E       		.uleb128 0xe
 958 02e0 61000000 		.4byte	.LASF58
 959 02e4 06       		.byte	0x6
 960 02e5 2502     		.2byte	0x225
 961 02e7 FE000000 		.4byte	0xfe
 962 02eb 18       		.byte	0x18
 963 02ec 0E       		.uleb128 0xe
 964 02ed 25030000 		.4byte	.LASF59
 965 02f1 06       		.byte	0x6
 966 02f2 3002     		.2byte	0x230
 967 02f4 F2000000 		.4byte	0xf2
 968 02f8 1A       		.byte	0x1a
 969 02f9 0E       		.uleb128 0xe
 970 02fa A4030000 		.4byte	.LASF60
 971 02fe 06       		.byte	0x6
 972 02ff 3802     		.2byte	0x238
 973 0301 F2000000 		.4byte	0xf2
 974 0305 1B       		.byte	0x1b
 975 0306 00       		.byte	0
 976 0307 0F       		.uleb128 0xf
 977 0308 04       		.byte	0x4
 978 0309 0D030000 		.4byte	0x30d
 979 030d 10       		.uleb128 0x10
 980 030e 11       		.uleb128 0x11
 981 030f 04       		.byte	0x4
 982 0310 0F       		.uleb128 0xf
 983 0311 04       		.byte	0x4
 984 0312 7C020000 		.4byte	0x27c
 985 0316 0F       		.uleb128 0xf
 986 0317 04       		.byte	0x4
 987 0318 F2000000 		.4byte	0xf2
 988 031c 05       		.uleb128 0x5
 989 031d 14010000 		.4byte	.LASF61
 990 0321 06       		.byte	0x6
 991 0322 3902     		.2byte	0x239
 992 0324 88020000 		.4byte	0x288
 993 0328 0C       		.uleb128 0xc
 994 0329 1C       		.byte	0x1c
 995 032a 06       		.byte	0x6
 996 032b 3F02     		.2byte	0x23f
 997 032d 3F030000 		.4byte	0x33f
 998 0331 0E       		.uleb128 0xe
 999 0332 53060000 		.4byte	.LASF62
 1000 0336 06       		.byte	0x6
 1001 0337 4402     		.2byte	0x244
 1002 0339 3F030000 		.4byte	0x33f
 1003 033d 00       		.byte	0
 1004 033e 00       		.byte	0
 1005 033f 0A       		.uleb128 0xa
 1006 0340 1C030000 		.4byte	0x31c
 1007 0344 4F030000 		.4byte	0x34f
 1008 0348 0B       		.uleb128 0xb
 1009 0349 CA000000 		.4byte	0xca
 1010 034d 00       		.byte	0
 1011 034e 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 50


 1012 034f 05       		.uleb128 0x5
 1013 0350 00000000 		.4byte	.LASF63
 1014 0354 06       		.byte	0x6
 1015 0355 4502     		.2byte	0x245
 1016 0357 28030000 		.4byte	0x328
 1017 035b 12       		.uleb128 0x12
 1018 035c EB040000 		.4byte	.LASF98
 1019 0360 01       		.byte	0x1
 1020 0361 3F       		.byte	0x3f
 1021 0362 00000000 		.4byte	.LFB132
 1022 0366 02000000 		.4byte	.LFE132-.LFB132
 1023 036a 01       		.uleb128 0x1
 1024 036b 9C       		.byte	0x9c
 1025 036c 13       		.uleb128 0x13
 1026 036d A9020000 		.4byte	.LASF67
 1027 0371 01       		.byte	0x1
 1028 0372 2A02     		.2byte	0x22a
 1029 0374 00000000 		.4byte	.LFB141
 1030 0378 1E000000 		.4byte	.LFE141-.LFB141
 1031 037c 01       		.uleb128 0x1
 1032 037d 9C       		.byte	0x9c
 1033 037e B1030000 		.4byte	0x3b1
 1034 0382 14       		.uleb128 0x14
 1035 0383 A4060000 		.4byte	.LASF64
 1036 0387 01       		.byte	0x1
 1037 0388 2A02     		.2byte	0x22a
 1038 038a 10030000 		.4byte	0x310
 1039 038e 01       		.uleb128 0x1
 1040 038f 50       		.byte	0x50
 1041 0390 15       		.uleb128 0x15
 1042 0391 41010000 		.4byte	.LASF65
 1043 0395 01       		.byte	0x1
 1044 0396 2A02     		.2byte	0x22a
 1045 0398 0A010000 		.4byte	0x10a
 1046 039c 00000000 		.4byte	.LLST0
 1047 03a0 15       		.uleb128 0x15
 1048 03a1 3D050000 		.4byte	.LASF66
 1049 03a5 01       		.byte	0x1
 1050 03a6 2A02     		.2byte	0x22a
 1051 03a8 0A010000 		.4byte	0x10a
 1052 03ac 21000000 		.4byte	.LLST1
 1053 03b0 00       		.byte	0
 1054 03b1 13       		.uleb128 0x13
 1055 03b2 0A050000 		.4byte	.LASF68
 1056 03b6 01       		.byte	0x1
 1057 03b7 0F02     		.2byte	0x20f
 1058 03b9 00000000 		.4byte	.LFB140
 1059 03bd 1E000000 		.4byte	.LFE140-.LFB140
 1060 03c1 01       		.uleb128 0x1
 1061 03c2 9C       		.byte	0x9c
 1062 03c3 14040000 		.4byte	0x414
 1063 03c7 15       		.uleb128 0x15
 1064 03c8 A4060000 		.4byte	.LASF64
 1065 03cc 01       		.byte	0x1
 1066 03cd 0F02     		.2byte	0x20f
 1067 03cf 10030000 		.4byte	0x310
 1068 03d3 42000000 		.4byte	.LLST2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 51


 1069 03d7 15       		.uleb128 0x15
 1070 03d8 41010000 		.4byte	.LASF65
 1071 03dc 01       		.byte	0x1
 1072 03dd 0F02     		.2byte	0x20f
 1073 03df 0A010000 		.4byte	0x10a
 1074 03e3 60000000 		.4byte	.LLST3
 1075 03e7 16       		.uleb128 0x16
 1076 03e8 5E040000 		.4byte	.LASF72
 1077 03ec 01       		.byte	0x1
 1078 03ed 1102     		.2byte	0x211
 1079 03ef 0A010000 		.4byte	0x10a
 1080 03f3 7E000000 		.4byte	.LLST4
 1081 03f7 17       		.uleb128 0x17
 1082 03f8 14000000 		.4byte	.LVL6
 1083 03fc 6C030000 		.4byte	0x36c
 1084 0400 18       		.uleb128 0x18
 1085 0401 01       		.uleb128 0x1
 1086 0402 50       		.byte	0x50
 1087 0403 02       		.uleb128 0x2
 1088 0404 76       		.byte	0x76
 1089 0405 00       		.sleb128 0
 1090 0406 18       		.uleb128 0x18
 1091 0407 01       		.uleb128 0x1
 1092 0408 51       		.byte	0x51
 1093 0409 02       		.uleb128 0x2
 1094 040a 75       		.byte	0x75
 1095 040b 00       		.sleb128 0
 1096 040c 18       		.uleb128 0x18
 1097 040d 01       		.uleb128 0x1
 1098 040e 52       		.byte	0x52
 1099 040f 02       		.uleb128 0x2
 1100 0410 74       		.byte	0x74
 1101 0411 00       		.sleb128 0
 1102 0412 00       		.byte	0
 1103 0413 00       		.byte	0
 1104 0414 13       		.uleb128 0x13
 1105 0415 AC030000 		.4byte	.LASF69
 1106 0419 01       		.byte	0x1
 1107 041a F301     		.2byte	0x1f3
 1108 041c 00000000 		.4byte	.LFB139
 1109 0420 28000000 		.4byte	.LFE139-.LFB139
 1110 0424 01       		.uleb128 0x1
 1111 0425 9C       		.byte	0x9c
 1112 0426 93040000 		.4byte	0x493
 1113 042a 15       		.uleb128 0x15
 1114 042b A3050000 		.4byte	.LASF70
 1115 042f 01       		.byte	0x1
 1116 0430 F301     		.2byte	0x1f3
 1117 0432 0A010000 		.4byte	0x10a
 1118 0436 B3000000 		.4byte	.LLST5
 1119 043a 15       		.uleb128 0x15
 1120 043b 3D000000 		.4byte	.LASF71
 1121 043f 01       		.byte	0x1
 1122 0440 F301     		.2byte	0x1f3
 1123 0442 0A010000 		.4byte	0x10a
 1124 0446 D4000000 		.4byte	.LLST6
 1125 044a 16       		.uleb128 0x16
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 52


 1126 044b A4060000 		.4byte	.LASF64
 1127 044f 01       		.byte	0x1
 1128 0450 F501     		.2byte	0x1f5
 1129 0452 10030000 		.4byte	0x310
 1130 0456 F5000000 		.4byte	.LLST7
 1131 045a 19       		.uleb128 0x19
 1132 045b F3030000 		.4byte	.LASF75
 1133 045f 01       		.byte	0x1
 1134 0460 F601     		.2byte	0x1f6
 1135 0462 93040000 		.4byte	0x493
 1136 0466 17       		.uleb128 0x17
 1137 0467 20000000 		.4byte	.LVL15
 1138 046b B1030000 		.4byte	0x3b1
 1139 046f 18       		.uleb128 0x18
 1140 0470 01       		.uleb128 0x1
 1141 0471 50       		.byte	0x50
 1142 0472 05       		.uleb128 0x5
 1143 0473 76       		.byte	0x76
 1144 0474 00       		.sleb128 0
 1145 0475 74       		.byte	0x74
 1146 0476 00       		.sleb128 0
 1147 0477 22       		.byte	0x22
 1148 0478 18       		.uleb128 0x18
 1149 0479 01       		.uleb128 0x1
 1150 047a 51       		.byte	0x51
 1151 047b 15       		.uleb128 0x15
 1152 047c F3       		.byte	0xf3
 1153 047d 01       		.uleb128 0x1
 1154 047e 50       		.byte	0x50
 1155 047f 33       		.byte	0x33
 1156 0480 24       		.byte	0x24
 1157 0481 F3       		.byte	0xf3
 1158 0482 01       		.uleb128 0x1
 1159 0483 50       		.byte	0x50
 1160 0484 1C       		.byte	0x1c
 1161 0485 32       		.byte	0x32
 1162 0486 24       		.byte	0x24
 1163 0487 75       		.byte	0x75
 1164 0488 00       		.sleb128 0
 1165 0489 22       		.byte	0x22
 1166 048a 23       		.byte	0x23
 1167 048b 1A       		.uleb128 0x1a
 1168 048c 94       		.byte	0x94
 1169 048d 01       		.byte	0x1
 1170 048e 08       		.byte	0x8
 1171 048f FF       		.byte	0xff
 1172 0490 1A       		.byte	0x1a
 1173 0491 00       		.byte	0
 1174 0492 00       		.byte	0
 1175 0493 0F       		.uleb128 0xf
 1176 0494 04       		.byte	0x4
 1177 0495 99040000 		.4byte	0x499
 1178 0499 1A       		.uleb128 0x1a
 1179 049a 1C030000 		.4byte	0x31c
 1180 049e 13       		.uleb128 0x13
 1181 049f 21060000 		.4byte	.LASF73
 1182 04a3 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 53


 1183 04a4 C701     		.2byte	0x1c7
 1184 04a6 00000000 		.4byte	.LFB138
 1185 04aa 28000000 		.4byte	.LFE138-.LFB138
 1186 04ae 01       		.uleb128 0x1
 1187 04af 9C       		.byte	0x9c
 1188 04b0 07050000 		.4byte	0x507
 1189 04b4 15       		.uleb128 0x15
 1190 04b5 A3050000 		.4byte	.LASF70
 1191 04b9 01       		.byte	0x1
 1192 04ba C701     		.2byte	0x1c7
 1193 04bc 0A010000 		.4byte	0x10a
 1194 04c0 3F010000 		.4byte	.LLST8
 1195 04c4 16       		.uleb128 0x16
 1196 04c5 3D000000 		.4byte	.LASF71
 1197 04c9 01       		.byte	0x1
 1198 04ca C901     		.2byte	0x1c9
 1199 04cc 0A010000 		.4byte	0x10a
 1200 04d0 6B010000 		.4byte	.LLST9
 1201 04d4 16       		.uleb128 0x16
 1202 04d5 5F050000 		.4byte	.LASF74
 1203 04d9 01       		.byte	0x1
 1204 04da CA01     		.2byte	0x1ca
 1205 04dc 0A010000 		.4byte	0x10a
 1206 04e0 9F010000 		.4byte	.LLST10
 1207 04e4 19       		.uleb128 0x19
 1208 04e5 F3030000 		.4byte	.LASF75
 1209 04e9 01       		.byte	0x1
 1210 04ea CC01     		.2byte	0x1cc
 1211 04ec 93040000 		.4byte	0x493
 1212 04f0 17       		.uleb128 0x17
 1213 04f1 1A000000 		.4byte	.LVL21
 1214 04f5 14040000 		.4byte	0x414
 1215 04f9 18       		.uleb128 0x18
 1216 04fa 01       		.uleb128 0x1
 1217 04fb 50       		.byte	0x50
 1218 04fc 02       		.uleb128 0x2
 1219 04fd 75       		.byte	0x75
 1220 04fe 00       		.sleb128 0
 1221 04ff 18       		.uleb128 0x18
 1222 0500 01       		.uleb128 0x1
 1223 0501 51       		.byte	0x51
 1224 0502 02       		.uleb128 0x2
 1225 0503 74       		.byte	0x74
 1226 0504 00       		.sleb128 0
 1227 0505 00       		.byte	0
 1228 0506 00       		.byte	0
 1229 0507 13       		.uleb128 0x13
 1230 0508 6D000000 		.4byte	.LASF76
 1231 050c 01       		.byte	0x1
 1232 050d A301     		.2byte	0x1a3
 1233 050f 00000000 		.4byte	.LFB137
 1234 0513 16000000 		.4byte	.LFE137-.LFB137
 1235 0517 01       		.uleb128 0x1
 1236 0518 9C       		.byte	0x9c
 1237 0519 3E050000 		.4byte	0x53e
 1238 051d 16       		.uleb128 0x16
 1239 051e A3050000 		.4byte	.LASF70
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 54


 1240 0522 01       		.byte	0x1
 1241 0523 A501     		.2byte	0x1a5
 1242 0525 0A010000 		.4byte	0x10a
 1243 0529 B2010000 		.4byte	.LLST11
 1244 052d 17       		.uleb128 0x17
 1245 052e 0C000000 		.4byte	.LVL27
 1246 0532 9E040000 		.4byte	0x49e
 1247 0536 18       		.uleb128 0x18
 1248 0537 01       		.uleb128 0x1
 1249 0538 50       		.byte	0x50
 1250 0539 02       		.uleb128 0x2
 1251 053a 74       		.byte	0x74
 1252 053b 00       		.sleb128 0
 1253 053c 00       		.byte	0
 1254 053d 00       		.byte	0
 1255 053e 1B       		.uleb128 0x1b
 1256 053f CE020000 		.4byte	.LASF81
 1257 0543 01       		.byte	0x1
 1258 0544 A506     		.2byte	0x6a5
 1259 0546 0A010000 		.4byte	0x10a
 1260 054a 00000000 		.4byte	.LFB142
 1261 054e 14000000 		.4byte	.LFE142-.LFB142
 1262 0552 01       		.uleb128 0x1
 1263 0553 9C       		.byte	0x9c
 1264 0554 A5050000 		.4byte	0x5a5
 1265 0558 15       		.uleb128 0x15
 1266 0559 F7000000 		.4byte	.LASF77
 1267 055d 01       		.byte	0x1
 1268 055e A506     		.2byte	0x6a5
 1269 0560 0A010000 		.4byte	0x10a
 1270 0564 E7010000 		.4byte	.LLST12
 1271 0568 15       		.uleb128 0x15
 1272 0569 EF050000 		.4byte	.LASF78
 1273 056d 01       		.byte	0x1
 1274 056e A506     		.2byte	0x6a5
 1275 0570 0A010000 		.4byte	0x10a
 1276 0574 08020000 		.4byte	.LLST13
 1277 0578 1C       		.uleb128 0x1c
 1278 0579 6E00     		.ascii	"n\000"
 1279 057b 01       		.byte	0x1
 1280 057c A506     		.2byte	0x6a5
 1281 057e 0A010000 		.4byte	0x10a
 1282 0582 01       		.uleb128 0x1
 1283 0583 52       		.byte	0x52
 1284 0584 15       		.uleb128 0x15
 1285 0585 1F030000 		.4byte	.LASF79
 1286 0589 01       		.byte	0x1
 1287 058a A506     		.2byte	0x6a5
 1288 058c 0A010000 		.4byte	0x10a
 1289 0590 29020000 		.4byte	.LLST14
 1290 0594 16       		.uleb128 0x16
 1291 0595 FB010000 		.4byte	.LASF80
 1292 0599 01       		.byte	0x1
 1293 059a A706     		.2byte	0x6a7
 1294 059c 0A010000 		.4byte	0x10a
 1295 05a0 4A020000 		.4byte	.LLST15
 1296 05a4 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 55


 1297 05a5 1D       		.uleb128 0x1d
 1298 05a6 45050000 		.4byte	.LASF82
 1299 05aa 01       		.byte	0x1
 1300 05ab FF       		.byte	0xff
 1301 05ac 0A010000 		.4byte	0x10a
 1302 05b0 00000000 		.4byte	.LFB136
 1303 05b4 A0000000 		.4byte	.LFE136-.LFB136
 1304 05b8 01       		.uleb128 0x1
 1305 05b9 9C       		.byte	0x9c
 1306 05ba 80060000 		.4byte	0x680
 1307 05be 15       		.uleb128 0x15
 1308 05bf 95020000 		.4byte	.LASF83
 1309 05c3 01       		.byte	0x1
 1310 05c4 0001     		.2byte	0x100
 1311 05c6 80060000 		.4byte	0x680
 1312 05ca 6C020000 		.4byte	.LLST16
 1313 05ce 15       		.uleb128 0x15
 1314 05cf A4060000 		.4byte	.LASF64
 1315 05d3 01       		.byte	0x1
 1316 05d4 0101     		.2byte	0x101
 1317 05d6 10030000 		.4byte	0x310
 1318 05da 8A020000 		.4byte	.LLST17
 1319 05de 15       		.uleb128 0x15
 1320 05df 41010000 		.4byte	.LASF65
 1321 05e3 01       		.byte	0x1
 1322 05e4 0201     		.2byte	0x102
 1323 05e6 0A010000 		.4byte	0x10a
 1324 05ea A8020000 		.4byte	.LLST18
 1325 05ee 16       		.uleb128 0x16
 1326 05ef C5050000 		.4byte	.LASF84
 1327 05f3 01       		.byte	0x1
 1328 05f4 0401     		.2byte	0x104
 1329 05f6 0A010000 		.4byte	0x10a
 1330 05fa C6020000 		.4byte	.LLST19
 1331 05fe 16       		.uleb128 0x16
 1332 05ff 2D010000 		.4byte	.LASF85
 1333 0603 01       		.byte	0x1
 1334 0604 0501     		.2byte	0x105
 1335 0606 0A010000 		.4byte	0x10a
 1336 060a FC020000 		.4byte	.LLST20
 1337 060e 16       		.uleb128 0x16
 1338 060f 5E040000 		.4byte	.LASF72
 1339 0613 01       		.byte	0x1
 1340 0614 0601     		.2byte	0x106
 1341 0616 0A010000 		.4byte	0x10a
 1342 061a 25030000 		.4byte	.LLST21
 1343 061e 16       		.uleb128 0x16
 1344 061f 79050000 		.4byte	.LASF86
 1345 0623 01       		.byte	0x1
 1346 0624 0701     		.2byte	0x107
 1347 0626 0A010000 		.4byte	0x10a
 1348 062a 5A030000 		.4byte	.LLST22
 1349 062e 1E       		.uleb128 0x1e
 1350 062f 31000000 		.4byte	.LASF87
 1351 0633 01       		.byte	0x1
 1352 0634 0801     		.2byte	0x108
 1353 0636 0A010000 		.4byte	0x10a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 56


 1354 063a 00       		.byte	0
 1355 063b 16       		.uleb128 0x16
 1356 063c 15020000 		.4byte	.LASF88
 1357 0640 01       		.byte	0x1
 1358 0641 0B01     		.2byte	0x10b
 1359 0643 0A010000 		.4byte	0x10a
 1360 0647 6E030000 		.4byte	.LLST23
 1361 064b 1F       		.uleb128 0x1f
 1362 064c 4E000000 		.4byte	.LVL45
 1363 0650 6C030000 		.4byte	0x36c
 1364 0654 6B060000 		.4byte	0x66b
 1365 0658 18       		.uleb128 0x18
 1366 0659 01       		.uleb128 0x1
 1367 065a 50       		.byte	0x50
 1368 065b 02       		.uleb128 0x2
 1369 065c 75       		.byte	0x75
 1370 065d 00       		.sleb128 0
 1371 065e 18       		.uleb128 0x18
 1372 065f 01       		.uleb128 0x1
 1373 0660 51       		.byte	0x51
 1374 0661 02       		.uleb128 0x2
 1375 0662 77       		.byte	0x77
 1376 0663 00       		.sleb128 0
 1377 0664 18       		.uleb128 0x18
 1378 0665 01       		.uleb128 0x1
 1379 0666 52       		.byte	0x52
 1380 0667 02       		.uleb128 0x2
 1381 0668 74       		.byte	0x74
 1382 0669 00       		.sleb128 0
 1383 066a 00       		.byte	0
 1384 066b 17       		.uleb128 0x17
 1385 066c 84000000 		.4byte	.LVL52
 1386 0670 3E050000 		.4byte	0x53e
 1387 0674 18       		.uleb128 0x18
 1388 0675 01       		.uleb128 0x1
 1389 0676 52       		.byte	0x52
 1390 0677 01       		.uleb128 0x1
 1391 0678 31       		.byte	0x31
 1392 0679 18       		.uleb128 0x18
 1393 067a 01       		.uleb128 0x1
 1394 067b 53       		.byte	0x53
 1395 067c 01       		.uleb128 0x1
 1396 067d 38       		.byte	0x38
 1397 067e 00       		.byte	0
 1398 067f 00       		.byte	0
 1399 0680 0F       		.uleb128 0xf
 1400 0681 04       		.byte	0x4
 1401 0682 F9010000 		.4byte	0x1f9
 1402 0686 1D       		.uleb128 0x1d
 1403 0687 59020000 		.4byte	.LASF89
 1404 068b 01       		.byte	0x1
 1405 068c C8       		.byte	0xc8
 1406 068d E6000000 		.4byte	0xe6
 1407 0691 00000000 		.4byte	.LFB135
 1408 0695 24000000 		.4byte	.LFE135-.LFB135
 1409 0699 01       		.uleb128 0x1
 1410 069a 9C       		.byte	0x9c
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 57


 1411 069b 37070000 		.4byte	0x737
 1412 069f 20       		.uleb128 0x20
 1413 06a0 A3050000 		.4byte	.LASF70
 1414 06a4 01       		.byte	0x1
 1415 06a5 C8       		.byte	0xc8
 1416 06a6 0A010000 		.4byte	0x10a
 1417 06aa AD030000 		.4byte	.LLST24
 1418 06ae 20       		.uleb128 0x20
 1419 06af 3D000000 		.4byte	.LASF71
 1420 06b3 01       		.byte	0x1
 1421 06b4 C8       		.byte	0xc8
 1422 06b5 0A010000 		.4byte	0x10a
 1423 06b9 CE030000 		.4byte	.LLST25
 1424 06bd 21       		.uleb128 0x21
 1425 06be 31000000 		.4byte	.LASF87
 1426 06c2 01       		.byte	0x1
 1427 06c3 CA       		.byte	0xca
 1428 06c4 0A010000 		.4byte	0x10a
 1429 06c8 EF030000 		.4byte	.LLST26
 1430 06cc 21       		.uleb128 0x21
 1431 06cd A4060000 		.4byte	.LASF64
 1432 06d1 01       		.byte	0x1
 1433 06d2 CC       		.byte	0xcc
 1434 06d3 10030000 		.4byte	0x310
 1435 06d7 0E040000 		.4byte	.LLST27
 1436 06db 22       		.uleb128 0x22
 1437 06dc F3030000 		.4byte	.LASF75
 1438 06e0 01       		.byte	0x1
 1439 06e1 CD       		.byte	0xcd
 1440 06e2 93040000 		.4byte	0x493
 1441 06e6 21       		.uleb128 0x21
 1442 06e7 95020000 		.4byte	.LASF83
 1443 06eb 01       		.byte	0x1
 1444 06ec CE       		.byte	0xce
 1445 06ed 80060000 		.4byte	0x680
 1446 06f1 58040000 		.4byte	.LLST28
 1447 06f5 17       		.uleb128 0x17
 1448 06f6 1E000000 		.4byte	.LVL64
 1449 06fa A5050000 		.4byte	0x5a5
 1450 06fe 18       		.uleb128 0x18
 1451 06ff 01       		.uleb128 0x1
 1452 0700 50       		.byte	0x50
 1453 0701 11       		.uleb128 0x11
 1454 0702 F3       		.byte	0xf3
 1455 0703 01       		.uleb128 0x1
 1456 0704 50       		.byte	0x50
 1457 0705 33       		.byte	0x33
 1458 0706 24       		.byte	0x24
 1459 0707 F3       		.byte	0xf3
 1460 0708 01       		.uleb128 0x1
 1461 0709 50       		.byte	0x50
 1462 070a 1C       		.byte	0x1c
 1463 070b 32       		.byte	0x32
 1464 070c 24       		.byte	0x24
 1465 070d 76       		.byte	0x76
 1466 070e 00       		.sleb128 0
 1467 070f 22       		.byte	0x22
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 58


 1468 0710 23       		.byte	0x23
 1469 0711 04       		.uleb128 0x4
 1470 0712 06       		.byte	0x6
 1471 0713 18       		.uleb128 0x18
 1472 0714 01       		.uleb128 0x1
 1473 0715 51       		.byte	0x51
 1474 0716 05       		.uleb128 0x5
 1475 0717 74       		.byte	0x74
 1476 0718 00       		.sleb128 0
 1477 0719 75       		.byte	0x75
 1478 071a 00       		.sleb128 0
 1479 071b 22       		.byte	0x22
 1480 071c 18       		.uleb128 0x18
 1481 071d 01       		.uleb128 0x1
 1482 071e 52       		.byte	0x52
 1483 071f 15       		.uleb128 0x15
 1484 0720 F3       		.byte	0xf3
 1485 0721 01       		.uleb128 0x1
 1486 0722 50       		.byte	0x50
 1487 0723 33       		.byte	0x33
 1488 0724 24       		.byte	0x24
 1489 0725 F3       		.byte	0xf3
 1490 0726 01       		.uleb128 0x1
 1491 0727 50       		.byte	0x50
 1492 0728 1C       		.byte	0x1c
 1493 0729 32       		.byte	0x32
 1494 072a 24       		.byte	0x24
 1495 072b 76       		.byte	0x76
 1496 072c 00       		.sleb128 0
 1497 072d 22       		.byte	0x22
 1498 072e 23       		.byte	0x23
 1499 072f 1A       		.uleb128 0x1a
 1500 0730 94       		.byte	0x94
 1501 0731 01       		.byte	0x1
 1502 0732 08       		.byte	0x8
 1503 0733 FF       		.byte	0xff
 1504 0734 1A       		.byte	0x1a
 1505 0735 00       		.byte	0
 1506 0736 00       		.byte	0
 1507 0737 1D       		.uleb128 0x1d
 1508 0738 82040000 		.4byte	.LASF90
 1509 073c 01       		.byte	0x1
 1510 073d 8F       		.byte	0x8f
 1511 073e E6000000 		.4byte	0xe6
 1512 0742 00000000 		.4byte	.LFB134
 1513 0746 30000000 		.4byte	.LFE134-.LFB134
 1514 074a 01       		.uleb128 0x1
 1515 074b 9C       		.byte	0x9c
 1516 074c AE070000 		.4byte	0x7ae
 1517 0750 20       		.uleb128 0x20
 1518 0751 A3050000 		.4byte	.LASF70
 1519 0755 01       		.byte	0x1
 1520 0756 8F       		.byte	0x8f
 1521 0757 0A010000 		.4byte	0x10a
 1522 075b 86040000 		.4byte	.LLST29
 1523 075f 21       		.uleb128 0x21
 1524 0760 3D000000 		.4byte	.LASF71
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 59


 1525 0764 01       		.byte	0x1
 1526 0765 91       		.byte	0x91
 1527 0766 0A010000 		.4byte	0x10a
 1528 076a B2040000 		.4byte	.LLST30
 1529 076e 21       		.uleb128 0x21
 1530 076f 5F050000 		.4byte	.LASF74
 1531 0773 01       		.byte	0x1
 1532 0774 92       		.byte	0x92
 1533 0775 0A010000 		.4byte	0x10a
 1534 0779 F3040000 		.4byte	.LLST31
 1535 077d 22       		.uleb128 0x22
 1536 077e F3030000 		.4byte	.LASF75
 1537 0782 01       		.byte	0x1
 1538 0783 94       		.byte	0x94
 1539 0784 93040000 		.4byte	0x493
 1540 0788 21       		.uleb128 0x21
 1541 0789 46000000 		.4byte	.LASF91
 1542 078d 01       		.byte	0x1
 1543 078e 95       		.byte	0x95
 1544 078f E6000000 		.4byte	0xe6
 1545 0793 06050000 		.4byte	.LLST32
 1546 0797 17       		.uleb128 0x17
 1547 0798 1C000000 		.4byte	.LVL70
 1548 079c 86060000 		.4byte	0x686
 1549 07a0 18       		.uleb128 0x18
 1550 07a1 01       		.uleb128 0x1
 1551 07a2 50       		.byte	0x50
 1552 07a3 02       		.uleb128 0x2
 1553 07a4 76       		.byte	0x76
 1554 07a5 00       		.sleb128 0
 1555 07a6 18       		.uleb128 0x18
 1556 07a7 01       		.uleb128 0x1
 1557 07a8 51       		.byte	0x51
 1558 07a9 02       		.uleb128 0x2
 1559 07aa 74       		.byte	0x74
 1560 07ab 00       		.sleb128 0
 1561 07ac 00       		.byte	0
 1562 07ad 00       		.byte	0
 1563 07ae 1D       		.uleb128 0x1d
 1564 07af CF040000 		.4byte	.LASF92
 1565 07b3 01       		.byte	0x1
 1566 07b4 62       		.byte	0x62
 1567 07b5 E6000000 		.4byte	0xe6
 1568 07b9 00000000 		.4byte	.LFB133
 1569 07bd 1C000000 		.4byte	.LFE133-.LFB133
 1570 07c1 01       		.uleb128 0x1
 1571 07c2 9C       		.byte	0x9c
 1572 07c3 F6070000 		.4byte	0x7f6
 1573 07c7 21       		.uleb128 0x21
 1574 07c8 A3050000 		.4byte	.LASF70
 1575 07cc 01       		.byte	0x1
 1576 07cd 64       		.byte	0x64
 1577 07ce 0A010000 		.4byte	0x10a
 1578 07d2 30050000 		.4byte	.LLST33
 1579 07d6 21       		.uleb128 0x21
 1580 07d7 46000000 		.4byte	.LASF91
 1581 07db 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 60


 1582 07dc 65       		.byte	0x65
 1583 07dd E6000000 		.4byte	0xe6
 1584 07e1 65050000 		.4byte	.LLST34
 1585 07e5 17       		.uleb128 0x17
 1586 07e6 0E000000 		.4byte	.LVL77
 1587 07ea 37070000 		.4byte	0x737
 1588 07ee 18       		.uleb128 0x18
 1589 07ef 01       		.uleb128 0x1
 1590 07f0 50       		.byte	0x50
 1591 07f1 02       		.uleb128 0x2
 1592 07f2 75       		.byte	0x75
 1593 07f3 00       		.sleb128 0
 1594 07f4 00       		.byte	0
 1595 07f5 00       		.byte	0
 1596 07f6 23       		.uleb128 0x23
 1597 07f7 8A060000 		.4byte	.LASF93
 1598 07fb 07       		.byte	0x7
 1599 07fc F907     		.2byte	0x7f9
 1600 07fe 02080000 		.4byte	0x802
 1601 0802 24       		.uleb128 0x24
 1602 0803 B4000000 		.4byte	0xb4
 1603 0807 23       		.uleb128 0x23
 1604 0808 5D060000 		.4byte	.LASF94
 1605 080c 06       		.byte	0x6
 1606 080d D303     		.2byte	0x3d3
 1607 080f 13080000 		.4byte	0x813
 1608 0813 1A       		.uleb128 0x1a
 1609 0814 4F030000 		.4byte	0x34f
 1610 0818 00       		.byte	0
 1611              		.section	.debug_abbrev,"",%progbits
 1612              	.Ldebug_abbrev0:
 1613 0000 01       		.uleb128 0x1
 1614 0001 11       		.uleb128 0x11
 1615 0002 01       		.byte	0x1
 1616 0003 25       		.uleb128 0x25
 1617 0004 0E       		.uleb128 0xe
 1618 0005 13       		.uleb128 0x13
 1619 0006 0B       		.uleb128 0xb
 1620 0007 03       		.uleb128 0x3
 1621 0008 0E       		.uleb128 0xe
 1622 0009 1B       		.uleb128 0x1b
 1623 000a 0E       		.uleb128 0xe
 1624 000b 55       		.uleb128 0x55
 1625 000c 17       		.uleb128 0x17
 1626 000d 11       		.uleb128 0x11
 1627 000e 01       		.uleb128 0x1
 1628 000f 10       		.uleb128 0x10
 1629 0010 17       		.uleb128 0x17
 1630 0011 00       		.byte	0
 1631 0012 00       		.byte	0
 1632 0013 02       		.uleb128 0x2
 1633 0014 24       		.uleb128 0x24
 1634 0015 00       		.byte	0
 1635 0016 0B       		.uleb128 0xb
 1636 0017 0B       		.uleb128 0xb
 1637 0018 3E       		.uleb128 0x3e
 1638 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 61


 1639 001a 03       		.uleb128 0x3
 1640 001b 08       		.uleb128 0x8
 1641 001c 00       		.byte	0
 1642 001d 00       		.byte	0
 1643 001e 03       		.uleb128 0x3
 1644 001f 24       		.uleb128 0x24
 1645 0020 00       		.byte	0
 1646 0021 0B       		.uleb128 0xb
 1647 0022 0B       		.uleb128 0xb
 1648 0023 3E       		.uleb128 0x3e
 1649 0024 0B       		.uleb128 0xb
 1650 0025 03       		.uleb128 0x3
 1651 0026 0E       		.uleb128 0xe
 1652 0027 00       		.byte	0
 1653 0028 00       		.byte	0
 1654 0029 04       		.uleb128 0x4
 1655 002a 16       		.uleb128 0x16
 1656 002b 00       		.byte	0
 1657 002c 03       		.uleb128 0x3
 1658 002d 0E       		.uleb128 0xe
 1659 002e 3A       		.uleb128 0x3a
 1660 002f 0B       		.uleb128 0xb
 1661 0030 3B       		.uleb128 0x3b
 1662 0031 0B       		.uleb128 0xb
 1663 0032 49       		.uleb128 0x49
 1664 0033 13       		.uleb128 0x13
 1665 0034 00       		.byte	0
 1666 0035 00       		.byte	0
 1667 0036 05       		.uleb128 0x5
 1668 0037 16       		.uleb128 0x16
 1669 0038 00       		.byte	0
 1670 0039 03       		.uleb128 0x3
 1671 003a 0E       		.uleb128 0xe
 1672 003b 3A       		.uleb128 0x3a
 1673 003c 0B       		.uleb128 0xb
 1674 003d 3B       		.uleb128 0x3b
 1675 003e 05       		.uleb128 0x5
 1676 003f 49       		.uleb128 0x49
 1677 0040 13       		.uleb128 0x13
 1678 0041 00       		.byte	0
 1679 0042 00       		.byte	0
 1680 0043 06       		.uleb128 0x6
 1681 0044 04       		.uleb128 0x4
 1682 0045 01       		.byte	0x1
 1683 0046 0B       		.uleb128 0xb
 1684 0047 0B       		.uleb128 0xb
 1685 0048 49       		.uleb128 0x49
 1686 0049 13       		.uleb128 0x13
 1687 004a 3A       		.uleb128 0x3a
 1688 004b 0B       		.uleb128 0xb
 1689 004c 3B       		.uleb128 0x3b
 1690 004d 0B       		.uleb128 0xb
 1691 004e 01       		.uleb128 0x1
 1692 004f 13       		.uleb128 0x13
 1693 0050 00       		.byte	0
 1694 0051 00       		.byte	0
 1695 0052 07       		.uleb128 0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 62


 1696 0053 28       		.uleb128 0x28
 1697 0054 00       		.byte	0
 1698 0055 03       		.uleb128 0x3
 1699 0056 0E       		.uleb128 0xe
 1700 0057 1C       		.uleb128 0x1c
 1701 0058 0B       		.uleb128 0xb
 1702 0059 00       		.byte	0
 1703 005a 00       		.byte	0
 1704 005b 08       		.uleb128 0x8
 1705 005c 13       		.uleb128 0x13
 1706 005d 01       		.byte	0x1
 1707 005e 0B       		.uleb128 0xb
 1708 005f 0B       		.uleb128 0xb
 1709 0060 3A       		.uleb128 0x3a
 1710 0061 0B       		.uleb128 0xb
 1711 0062 3B       		.uleb128 0x3b
 1712 0063 0B       		.uleb128 0xb
 1713 0064 01       		.uleb128 0x1
 1714 0065 13       		.uleb128 0x13
 1715 0066 00       		.byte	0
 1716 0067 00       		.byte	0
 1717 0068 09       		.uleb128 0x9
 1718 0069 0D       		.uleb128 0xd
 1719 006a 00       		.byte	0
 1720 006b 03       		.uleb128 0x3
 1721 006c 0E       		.uleb128 0xe
 1722 006d 3A       		.uleb128 0x3a
 1723 006e 0B       		.uleb128 0xb
 1724 006f 3B       		.uleb128 0x3b
 1725 0070 0B       		.uleb128 0xb
 1726 0071 49       		.uleb128 0x49
 1727 0072 13       		.uleb128 0x13
 1728 0073 38       		.uleb128 0x38
 1729 0074 0B       		.uleb128 0xb
 1730 0075 00       		.byte	0
 1731 0076 00       		.byte	0
 1732 0077 0A       		.uleb128 0xa
 1733 0078 01       		.uleb128 0x1
 1734 0079 01       		.byte	0x1
 1735 007a 49       		.uleb128 0x49
 1736 007b 13       		.uleb128 0x13
 1737 007c 01       		.uleb128 0x1
 1738 007d 13       		.uleb128 0x13
 1739 007e 00       		.byte	0
 1740 007f 00       		.byte	0
 1741 0080 0B       		.uleb128 0xb
 1742 0081 21       		.uleb128 0x21
 1743 0082 00       		.byte	0
 1744 0083 49       		.uleb128 0x49
 1745 0084 13       		.uleb128 0x13
 1746 0085 2F       		.uleb128 0x2f
 1747 0086 0B       		.uleb128 0xb
 1748 0087 00       		.byte	0
 1749 0088 00       		.byte	0
 1750 0089 0C       		.uleb128 0xc
 1751 008a 13       		.uleb128 0x13
 1752 008b 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 63


 1753 008c 0B       		.uleb128 0xb
 1754 008d 0B       		.uleb128 0xb
 1755 008e 3A       		.uleb128 0x3a
 1756 008f 0B       		.uleb128 0xb
 1757 0090 3B       		.uleb128 0x3b
 1758 0091 05       		.uleb128 0x5
 1759 0092 01       		.uleb128 0x1
 1760 0093 13       		.uleb128 0x13
 1761 0094 00       		.byte	0
 1762 0095 00       		.byte	0
 1763 0096 0D       		.uleb128 0xd
 1764 0097 0D       		.uleb128 0xd
 1765 0098 00       		.byte	0
 1766 0099 03       		.uleb128 0x3
 1767 009a 08       		.uleb128 0x8
 1768 009b 3A       		.uleb128 0x3a
 1769 009c 0B       		.uleb128 0xb
 1770 009d 3B       		.uleb128 0x3b
 1771 009e 05       		.uleb128 0x5
 1772 009f 49       		.uleb128 0x49
 1773 00a0 13       		.uleb128 0x13
 1774 00a1 38       		.uleb128 0x38
 1775 00a2 0B       		.uleb128 0xb
 1776 00a3 00       		.byte	0
 1777 00a4 00       		.byte	0
 1778 00a5 0E       		.uleb128 0xe
 1779 00a6 0D       		.uleb128 0xd
 1780 00a7 00       		.byte	0
 1781 00a8 03       		.uleb128 0x3
 1782 00a9 0E       		.uleb128 0xe
 1783 00aa 3A       		.uleb128 0x3a
 1784 00ab 0B       		.uleb128 0xb
 1785 00ac 3B       		.uleb128 0x3b
 1786 00ad 05       		.uleb128 0x5
 1787 00ae 49       		.uleb128 0x49
 1788 00af 13       		.uleb128 0x13
 1789 00b0 38       		.uleb128 0x38
 1790 00b1 0B       		.uleb128 0xb
 1791 00b2 00       		.byte	0
 1792 00b3 00       		.byte	0
 1793 00b4 0F       		.uleb128 0xf
 1794 00b5 0F       		.uleb128 0xf
 1795 00b6 00       		.byte	0
 1796 00b7 0B       		.uleb128 0xb
 1797 00b8 0B       		.uleb128 0xb
 1798 00b9 49       		.uleb128 0x49
 1799 00ba 13       		.uleb128 0x13
 1800 00bb 00       		.byte	0
 1801 00bc 00       		.byte	0
 1802 00bd 10       		.uleb128 0x10
 1803 00be 26       		.uleb128 0x26
 1804 00bf 00       		.byte	0
 1805 00c0 00       		.byte	0
 1806 00c1 00       		.byte	0
 1807 00c2 11       		.uleb128 0x11
 1808 00c3 0F       		.uleb128 0xf
 1809 00c4 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 64


 1810 00c5 0B       		.uleb128 0xb
 1811 00c6 0B       		.uleb128 0xb
 1812 00c7 00       		.byte	0
 1813 00c8 00       		.byte	0
 1814 00c9 12       		.uleb128 0x12
 1815 00ca 2E       		.uleb128 0x2e
 1816 00cb 00       		.byte	0
 1817 00cc 3F       		.uleb128 0x3f
 1818 00cd 19       		.uleb128 0x19
 1819 00ce 03       		.uleb128 0x3
 1820 00cf 0E       		.uleb128 0xe
 1821 00d0 3A       		.uleb128 0x3a
 1822 00d1 0B       		.uleb128 0xb
 1823 00d2 3B       		.uleb128 0x3b
 1824 00d3 0B       		.uleb128 0xb
 1825 00d4 27       		.uleb128 0x27
 1826 00d5 19       		.uleb128 0x19
 1827 00d6 11       		.uleb128 0x11
 1828 00d7 01       		.uleb128 0x1
 1829 00d8 12       		.uleb128 0x12
 1830 00d9 06       		.uleb128 0x6
 1831 00da 40       		.uleb128 0x40
 1832 00db 18       		.uleb128 0x18
 1833 00dc 9742     		.uleb128 0x2117
 1834 00de 19       		.uleb128 0x19
 1835 00df 00       		.byte	0
 1836 00e0 00       		.byte	0
 1837 00e1 13       		.uleb128 0x13
 1838 00e2 2E       		.uleb128 0x2e
 1839 00e3 01       		.byte	0x1
 1840 00e4 3F       		.uleb128 0x3f
 1841 00e5 19       		.uleb128 0x19
 1842 00e6 03       		.uleb128 0x3
 1843 00e7 0E       		.uleb128 0xe
 1844 00e8 3A       		.uleb128 0x3a
 1845 00e9 0B       		.uleb128 0xb
 1846 00ea 3B       		.uleb128 0x3b
 1847 00eb 05       		.uleb128 0x5
 1848 00ec 27       		.uleb128 0x27
 1849 00ed 19       		.uleb128 0x19
 1850 00ee 11       		.uleb128 0x11
 1851 00ef 01       		.uleb128 0x1
 1852 00f0 12       		.uleb128 0x12
 1853 00f1 06       		.uleb128 0x6
 1854 00f2 40       		.uleb128 0x40
 1855 00f3 18       		.uleb128 0x18
 1856 00f4 9742     		.uleb128 0x2117
 1857 00f6 19       		.uleb128 0x19
 1858 00f7 01       		.uleb128 0x1
 1859 00f8 13       		.uleb128 0x13
 1860 00f9 00       		.byte	0
 1861 00fa 00       		.byte	0
 1862 00fb 14       		.uleb128 0x14
 1863 00fc 05       		.uleb128 0x5
 1864 00fd 00       		.byte	0
 1865 00fe 03       		.uleb128 0x3
 1866 00ff 0E       		.uleb128 0xe
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 65


 1867 0100 3A       		.uleb128 0x3a
 1868 0101 0B       		.uleb128 0xb
 1869 0102 3B       		.uleb128 0x3b
 1870 0103 05       		.uleb128 0x5
 1871 0104 49       		.uleb128 0x49
 1872 0105 13       		.uleb128 0x13
 1873 0106 02       		.uleb128 0x2
 1874 0107 18       		.uleb128 0x18
 1875 0108 00       		.byte	0
 1876 0109 00       		.byte	0
 1877 010a 15       		.uleb128 0x15
 1878 010b 05       		.uleb128 0x5
 1879 010c 00       		.byte	0
 1880 010d 03       		.uleb128 0x3
 1881 010e 0E       		.uleb128 0xe
 1882 010f 3A       		.uleb128 0x3a
 1883 0110 0B       		.uleb128 0xb
 1884 0111 3B       		.uleb128 0x3b
 1885 0112 05       		.uleb128 0x5
 1886 0113 49       		.uleb128 0x49
 1887 0114 13       		.uleb128 0x13
 1888 0115 02       		.uleb128 0x2
 1889 0116 17       		.uleb128 0x17
 1890 0117 00       		.byte	0
 1891 0118 00       		.byte	0
 1892 0119 16       		.uleb128 0x16
 1893 011a 34       		.uleb128 0x34
 1894 011b 00       		.byte	0
 1895 011c 03       		.uleb128 0x3
 1896 011d 0E       		.uleb128 0xe
 1897 011e 3A       		.uleb128 0x3a
 1898 011f 0B       		.uleb128 0xb
 1899 0120 3B       		.uleb128 0x3b
 1900 0121 05       		.uleb128 0x5
 1901 0122 49       		.uleb128 0x49
 1902 0123 13       		.uleb128 0x13
 1903 0124 02       		.uleb128 0x2
 1904 0125 17       		.uleb128 0x17
 1905 0126 00       		.byte	0
 1906 0127 00       		.byte	0
 1907 0128 17       		.uleb128 0x17
 1908 0129 898201   		.uleb128 0x4109
 1909 012c 01       		.byte	0x1
 1910 012d 11       		.uleb128 0x11
 1911 012e 01       		.uleb128 0x1
 1912 012f 31       		.uleb128 0x31
 1913 0130 13       		.uleb128 0x13
 1914 0131 00       		.byte	0
 1915 0132 00       		.byte	0
 1916 0133 18       		.uleb128 0x18
 1917 0134 8A8201   		.uleb128 0x410a
 1918 0137 00       		.byte	0
 1919 0138 02       		.uleb128 0x2
 1920 0139 18       		.uleb128 0x18
 1921 013a 9142     		.uleb128 0x2111
 1922 013c 18       		.uleb128 0x18
 1923 013d 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 66


 1924 013e 00       		.byte	0
 1925 013f 19       		.uleb128 0x19
 1926 0140 34       		.uleb128 0x34
 1927 0141 00       		.byte	0
 1928 0142 03       		.uleb128 0x3
 1929 0143 0E       		.uleb128 0xe
 1930 0144 3A       		.uleb128 0x3a
 1931 0145 0B       		.uleb128 0xb
 1932 0146 3B       		.uleb128 0x3b
 1933 0147 05       		.uleb128 0x5
 1934 0148 49       		.uleb128 0x49
 1935 0149 13       		.uleb128 0x13
 1936 014a 00       		.byte	0
 1937 014b 00       		.byte	0
 1938 014c 1A       		.uleb128 0x1a
 1939 014d 26       		.uleb128 0x26
 1940 014e 00       		.byte	0
 1941 014f 49       		.uleb128 0x49
 1942 0150 13       		.uleb128 0x13
 1943 0151 00       		.byte	0
 1944 0152 00       		.byte	0
 1945 0153 1B       		.uleb128 0x1b
 1946 0154 2E       		.uleb128 0x2e
 1947 0155 01       		.byte	0x1
 1948 0156 3F       		.uleb128 0x3f
 1949 0157 19       		.uleb128 0x19
 1950 0158 03       		.uleb128 0x3
 1951 0159 0E       		.uleb128 0xe
 1952 015a 3A       		.uleb128 0x3a
 1953 015b 0B       		.uleb128 0xb
 1954 015c 3B       		.uleb128 0x3b
 1955 015d 05       		.uleb128 0x5
 1956 015e 27       		.uleb128 0x27
 1957 015f 19       		.uleb128 0x19
 1958 0160 49       		.uleb128 0x49
 1959 0161 13       		.uleb128 0x13
 1960 0162 11       		.uleb128 0x11
 1961 0163 01       		.uleb128 0x1
 1962 0164 12       		.uleb128 0x12
 1963 0165 06       		.uleb128 0x6
 1964 0166 40       		.uleb128 0x40
 1965 0167 18       		.uleb128 0x18
 1966 0168 9742     		.uleb128 0x2117
 1967 016a 19       		.uleb128 0x19
 1968 016b 01       		.uleb128 0x1
 1969 016c 13       		.uleb128 0x13
 1970 016d 00       		.byte	0
 1971 016e 00       		.byte	0
 1972 016f 1C       		.uleb128 0x1c
 1973 0170 05       		.uleb128 0x5
 1974 0171 00       		.byte	0
 1975 0172 03       		.uleb128 0x3
 1976 0173 08       		.uleb128 0x8
 1977 0174 3A       		.uleb128 0x3a
 1978 0175 0B       		.uleb128 0xb
 1979 0176 3B       		.uleb128 0x3b
 1980 0177 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 67


 1981 0178 49       		.uleb128 0x49
 1982 0179 13       		.uleb128 0x13
 1983 017a 02       		.uleb128 0x2
 1984 017b 18       		.uleb128 0x18
 1985 017c 00       		.byte	0
 1986 017d 00       		.byte	0
 1987 017e 1D       		.uleb128 0x1d
 1988 017f 2E       		.uleb128 0x2e
 1989 0180 01       		.byte	0x1
 1990 0181 3F       		.uleb128 0x3f
 1991 0182 19       		.uleb128 0x19
 1992 0183 03       		.uleb128 0x3
 1993 0184 0E       		.uleb128 0xe
 1994 0185 3A       		.uleb128 0x3a
 1995 0186 0B       		.uleb128 0xb
 1996 0187 3B       		.uleb128 0x3b
 1997 0188 0B       		.uleb128 0xb
 1998 0189 27       		.uleb128 0x27
 1999 018a 19       		.uleb128 0x19
 2000 018b 49       		.uleb128 0x49
 2001 018c 13       		.uleb128 0x13
 2002 018d 11       		.uleb128 0x11
 2003 018e 01       		.uleb128 0x1
 2004 018f 12       		.uleb128 0x12
 2005 0190 06       		.uleb128 0x6
 2006 0191 40       		.uleb128 0x40
 2007 0192 18       		.uleb128 0x18
 2008 0193 9742     		.uleb128 0x2117
 2009 0195 19       		.uleb128 0x19
 2010 0196 01       		.uleb128 0x1
 2011 0197 13       		.uleb128 0x13
 2012 0198 00       		.byte	0
 2013 0199 00       		.byte	0
 2014 019a 1E       		.uleb128 0x1e
 2015 019b 34       		.uleb128 0x34
 2016 019c 00       		.byte	0
 2017 019d 03       		.uleb128 0x3
 2018 019e 0E       		.uleb128 0xe
 2019 019f 3A       		.uleb128 0x3a
 2020 01a0 0B       		.uleb128 0xb
 2021 01a1 3B       		.uleb128 0x3b
 2022 01a2 05       		.uleb128 0x5
 2023 01a3 49       		.uleb128 0x49
 2024 01a4 13       		.uleb128 0x13
 2025 01a5 1C       		.uleb128 0x1c
 2026 01a6 0B       		.uleb128 0xb
 2027 01a7 00       		.byte	0
 2028 01a8 00       		.byte	0
 2029 01a9 1F       		.uleb128 0x1f
 2030 01aa 898201   		.uleb128 0x4109
 2031 01ad 01       		.byte	0x1
 2032 01ae 11       		.uleb128 0x11
 2033 01af 01       		.uleb128 0x1
 2034 01b0 31       		.uleb128 0x31
 2035 01b1 13       		.uleb128 0x13
 2036 01b2 01       		.uleb128 0x1
 2037 01b3 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 68


 2038 01b4 00       		.byte	0
 2039 01b5 00       		.byte	0
 2040 01b6 20       		.uleb128 0x20
 2041 01b7 05       		.uleb128 0x5
 2042 01b8 00       		.byte	0
 2043 01b9 03       		.uleb128 0x3
 2044 01ba 0E       		.uleb128 0xe
 2045 01bb 3A       		.uleb128 0x3a
 2046 01bc 0B       		.uleb128 0xb
 2047 01bd 3B       		.uleb128 0x3b
 2048 01be 0B       		.uleb128 0xb
 2049 01bf 49       		.uleb128 0x49
 2050 01c0 13       		.uleb128 0x13
 2051 01c1 02       		.uleb128 0x2
 2052 01c2 17       		.uleb128 0x17
 2053 01c3 00       		.byte	0
 2054 01c4 00       		.byte	0
 2055 01c5 21       		.uleb128 0x21
 2056 01c6 34       		.uleb128 0x34
 2057 01c7 00       		.byte	0
 2058 01c8 03       		.uleb128 0x3
 2059 01c9 0E       		.uleb128 0xe
 2060 01ca 3A       		.uleb128 0x3a
 2061 01cb 0B       		.uleb128 0xb
 2062 01cc 3B       		.uleb128 0x3b
 2063 01cd 0B       		.uleb128 0xb
 2064 01ce 49       		.uleb128 0x49
 2065 01cf 13       		.uleb128 0x13
 2066 01d0 02       		.uleb128 0x2
 2067 01d1 17       		.uleb128 0x17
 2068 01d2 00       		.byte	0
 2069 01d3 00       		.byte	0
 2070 01d4 22       		.uleb128 0x22
 2071 01d5 34       		.uleb128 0x34
 2072 01d6 00       		.byte	0
 2073 01d7 03       		.uleb128 0x3
 2074 01d8 0E       		.uleb128 0xe
 2075 01d9 3A       		.uleb128 0x3a
 2076 01da 0B       		.uleb128 0xb
 2077 01db 3B       		.uleb128 0x3b
 2078 01dc 0B       		.uleb128 0xb
 2079 01dd 49       		.uleb128 0x49
 2080 01de 13       		.uleb128 0x13
 2081 01df 00       		.byte	0
 2082 01e0 00       		.byte	0
 2083 01e1 23       		.uleb128 0x23
 2084 01e2 34       		.uleb128 0x34
 2085 01e3 00       		.byte	0
 2086 01e4 03       		.uleb128 0x3
 2087 01e5 0E       		.uleb128 0xe
 2088 01e6 3A       		.uleb128 0x3a
 2089 01e7 0B       		.uleb128 0xb
 2090 01e8 3B       		.uleb128 0x3b
 2091 01e9 05       		.uleb128 0x5
 2092 01ea 49       		.uleb128 0x49
 2093 01eb 13       		.uleb128 0x13
 2094 01ec 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 69


 2095 01ed 19       		.uleb128 0x19
 2096 01ee 3C       		.uleb128 0x3c
 2097 01ef 19       		.uleb128 0x19
 2098 01f0 00       		.byte	0
 2099 01f1 00       		.byte	0
 2100 01f2 24       		.uleb128 0x24
 2101 01f3 35       		.uleb128 0x35
 2102 01f4 00       		.byte	0
 2103 01f5 49       		.uleb128 0x49
 2104 01f6 13       		.uleb128 0x13
 2105 01f7 00       		.byte	0
 2106 01f8 00       		.byte	0
 2107 01f9 00       		.byte	0
 2108              		.section	.debug_loc,"",%progbits
 2109              	.Ldebug_loc0:
 2110              	.LLST0:
 2111 0000 00000000 		.4byte	.LVL0
 2112 0004 02000000 		.4byte	.LVL1
 2113 0008 0100     		.2byte	0x1
 2114 000a 51       		.byte	0x51
 2115 000b 02000000 		.4byte	.LVL1
 2116 000f 1E000000 		.4byte	.LFE141
 2117 0013 0400     		.2byte	0x4
 2118 0015 F3       		.byte	0xf3
 2119 0016 01       		.uleb128 0x1
 2120 0017 51       		.byte	0x51
 2121 0018 9F       		.byte	0x9f
 2122 0019 00000000 		.4byte	0
 2123 001d 00000000 		.4byte	0
 2124              	.LLST1:
 2125 0021 00000000 		.4byte	.LVL0
 2126 0025 18000000 		.4byte	.LVL2
 2127 0029 0100     		.2byte	0x1
 2128 002b 52       		.byte	0x52
 2129 002c 18000000 		.4byte	.LVL2
 2130 0030 1E000000 		.4byte	.LFE141
 2131 0034 0400     		.2byte	0x4
 2132 0036 F3       		.byte	0xf3
 2133 0037 01       		.uleb128 0x1
 2134 0038 52       		.byte	0x52
 2135 0039 9F       		.byte	0x9f
 2136 003a 00000000 		.4byte	0
 2137 003e 00000000 		.4byte	0
 2138              	.LLST2:
 2139 0042 00000000 		.4byte	.LVL3
 2140 0046 0A000000 		.4byte	.LVL5
 2141 004a 0100     		.2byte	0x1
 2142 004c 50       		.byte	0x50
 2143 004d 0A000000 		.4byte	.LVL5
 2144 0051 1E000000 		.4byte	.LFE140
 2145 0055 0100     		.2byte	0x1
 2146 0057 56       		.byte	0x56
 2147 0058 00000000 		.4byte	0
 2148 005c 00000000 		.4byte	0
 2149              	.LLST3:
 2150 0060 00000000 		.4byte	.LVL3
 2151 0064 0A000000 		.4byte	.LVL5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 70


 2152 0068 0100     		.2byte	0x1
 2153 006a 51       		.byte	0x51
 2154 006b 0A000000 		.4byte	.LVL5
 2155 006f 1E000000 		.4byte	.LFE140
 2156 0073 0100     		.2byte	0x1
 2157 0075 55       		.byte	0x55
 2158 0076 00000000 		.4byte	0
 2159 007a 00000000 		.4byte	0
 2160              	.LLST4:
 2161 007e 06000000 		.4byte	.LVL4
 2162 0082 0A000000 		.4byte	.LVL5
 2163 0086 0200     		.2byte	0x2
 2164 0088 31       		.byte	0x31
 2165 0089 9F       		.byte	0x9f
 2166 008a 0A000000 		.4byte	.LVL5
 2167 008e 16000000 		.4byte	.LVL7
 2168 0092 0100     		.2byte	0x1
 2169 0094 54       		.byte	0x54
 2170 0095 16000000 		.4byte	.LVL7
 2171 0099 18000000 		.4byte	.LVL8
 2172 009d 0100     		.2byte	0x1
 2173 009f 53       		.byte	0x53
 2174 00a0 18000000 		.4byte	.LVL8
 2175 00a4 1E000000 		.4byte	.LFE140
 2176 00a8 0100     		.2byte	0x1
 2177 00aa 54       		.byte	0x54
 2178 00ab 00000000 		.4byte	0
 2179 00af 00000000 		.4byte	0
 2180              	.LLST5:
 2181 00b3 00000000 		.4byte	.LVL9
 2182 00b7 1C000000 		.4byte	.LVL14
 2183 00bb 0100     		.2byte	0x1
 2184 00bd 50       		.byte	0x50
 2185 00be 1C000000 		.4byte	.LVL14
 2186 00c2 28000000 		.4byte	.LFE139
 2187 00c6 0400     		.2byte	0x4
 2188 00c8 F3       		.byte	0xf3
 2189 00c9 01       		.uleb128 0x1
 2190 00ca 50       		.byte	0x50
 2191 00cb 9F       		.byte	0x9f
 2192 00cc 00000000 		.4byte	0
 2193 00d0 00000000 		.4byte	0
 2194              	.LLST6:
 2195 00d4 00000000 		.4byte	.LVL9
 2196 00d8 14000000 		.4byte	.LVL12
 2197 00dc 0100     		.2byte	0x1
 2198 00de 51       		.byte	0x51
 2199 00df 14000000 		.4byte	.LVL12
 2200 00e3 28000000 		.4byte	.LFE139
 2201 00e7 0400     		.2byte	0x4
 2202 00e9 F3       		.byte	0xf3
 2203 00ea 01       		.uleb128 0x1
 2204 00eb 51       		.byte	0x51
 2205 00ec 9F       		.byte	0x9f
 2206 00ed 00000000 		.4byte	0
 2207 00f1 00000000 		.4byte	0
 2208              	.LLST7:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 71


 2209 00f5 02000000 		.4byte	.LVL10
 2210 00f9 10000000 		.4byte	.LVL11
 2211 00fd 0200     		.2byte	0x2
 2212 00ff 30       		.byte	0x30
 2213 0100 9F       		.byte	0x9f
 2214 0101 10000000 		.4byte	.LVL11
 2215 0105 16000000 		.4byte	.LVL13
 2216 0109 0100     		.2byte	0x1
 2217 010b 56       		.byte	0x56
 2218 010c 16000000 		.4byte	.LVL13
 2219 0110 1C000000 		.4byte	.LVL14
 2220 0114 0600     		.2byte	0x6
 2221 0116 76       		.byte	0x76
 2222 0117 00       		.sleb128 0
 2223 0118 74       		.byte	0x74
 2224 0119 00       		.sleb128 0
 2225 011a 22       		.byte	0x22
 2226 011b 9F       		.byte	0x9f
 2227 011c 1C000000 		.4byte	.LVL14
 2228 0120 1F000000 		.4byte	.LVL15-1
 2229 0124 0100     		.2byte	0x1
 2230 0126 50       		.byte	0x50
 2231 0127 1F000000 		.4byte	.LVL15-1
 2232 012b 22000000 		.4byte	.LVL16
 2233 012f 0600     		.2byte	0x6
 2234 0131 76       		.byte	0x76
 2235 0132 00       		.sleb128 0
 2236 0133 74       		.byte	0x74
 2237 0134 00       		.sleb128 0
 2238 0135 22       		.byte	0x22
 2239 0136 9F       		.byte	0x9f
 2240 0137 00000000 		.4byte	0
 2241 013b 00000000 		.4byte	0
 2242              	.LLST8:
 2243 013f 00000000 		.4byte	.LVL17
 2244 0143 12000000 		.4byte	.LVL20
 2245 0147 0100     		.2byte	0x1
 2246 0149 50       		.byte	0x50
 2247 014a 12000000 		.4byte	.LVL20
 2248 014e 24000000 		.4byte	.LVL24
 2249 0152 0100     		.2byte	0x1
 2250 0154 55       		.byte	0x55
 2251 0155 24000000 		.4byte	.LVL24
 2252 0159 28000000 		.4byte	.LFE138
 2253 015d 0400     		.2byte	0x4
 2254 015f F3       		.byte	0xf3
 2255 0160 01       		.uleb128 0x1
 2256 0161 50       		.byte	0x50
 2257 0162 9F       		.byte	0x9f
 2258 0163 00000000 		.4byte	0
 2259 0167 00000000 		.4byte	0
 2260              	.LLST9:
 2261 016b 10000000 		.4byte	.LVL19
 2262 016f 12000000 		.4byte	.LVL20
 2263 0173 0100     		.2byte	0x1
 2264 0175 53       		.byte	0x53
 2265 0176 12000000 		.4byte	.LVL20
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 72


 2266 017a 1C000000 		.4byte	.LVL22
 2267 017e 0100     		.2byte	0x1
 2268 0180 54       		.byte	0x54
 2269 0181 1C000000 		.4byte	.LVL22
 2270 0185 1E000000 		.4byte	.LVL23
 2271 0189 0100     		.2byte	0x1
 2272 018b 53       		.byte	0x53
 2273 018c 1E000000 		.4byte	.LVL23
 2274 0190 24000000 		.4byte	.LVL24
 2275 0194 0100     		.2byte	0x1
 2276 0196 54       		.byte	0x54
 2277 0197 00000000 		.4byte	0
 2278 019b 00000000 		.4byte	0
 2279              	.LLST10:
 2280 019f 10000000 		.4byte	.LVL19
 2281 01a3 12000000 		.4byte	.LVL20
 2282 01a7 0100     		.2byte	0x1
 2283 01a9 53       		.byte	0x53
 2284 01aa 00000000 		.4byte	0
 2285 01ae 00000000 		.4byte	0
 2286              	.LLST11:
 2287 01b2 02000000 		.4byte	.LVL25
 2288 01b6 06000000 		.4byte	.LVL26
 2289 01ba 0200     		.2byte	0x2
 2290 01bc 31       		.byte	0x31
 2291 01bd 9F       		.byte	0x9f
 2292 01be 06000000 		.4byte	.LVL26
 2293 01c2 0E000000 		.4byte	.LVL28
 2294 01c6 0100     		.2byte	0x1
 2295 01c8 54       		.byte	0x54
 2296 01c9 0E000000 		.4byte	.LVL28
 2297 01cd 10000000 		.4byte	.LVL29
 2298 01d1 0100     		.2byte	0x1
 2299 01d3 53       		.byte	0x53
 2300 01d4 10000000 		.4byte	.LVL29
 2301 01d8 16000000 		.4byte	.LFE137
 2302 01dc 0100     		.2byte	0x1
 2303 01de 54       		.byte	0x54
 2304 01df 00000000 		.4byte	0
 2305 01e3 00000000 		.4byte	0
 2306              	.LLST12:
 2307 01e7 00000000 		.4byte	.LVL30
 2308 01eb 08000000 		.4byte	.LVL32
 2309 01ef 0100     		.2byte	0x1
 2310 01f1 50       		.byte	0x50
 2311 01f2 08000000 		.4byte	.LVL32
 2312 01f6 14000000 		.4byte	.LFE142
 2313 01fa 0400     		.2byte	0x4
 2314 01fc F3       		.byte	0xf3
 2315 01fd 01       		.uleb128 0x1
 2316 01fe 50       		.byte	0x50
 2317 01ff 9F       		.byte	0x9f
 2318 0200 00000000 		.4byte	0
 2319 0204 00000000 		.4byte	0
 2320              	.LLST13:
 2321 0208 00000000 		.4byte	.LVL30
 2322 020c 0C000000 		.4byte	.LVL33
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 73


 2323 0210 0100     		.2byte	0x1
 2324 0212 51       		.byte	0x51
 2325 0213 0C000000 		.4byte	.LVL33
 2326 0217 14000000 		.4byte	.LFE142
 2327 021b 0400     		.2byte	0x4
 2328 021d F3       		.byte	0xf3
 2329 021e 01       		.uleb128 0x1
 2330 021f 51       		.byte	0x51
 2331 0220 9F       		.byte	0x9f
 2332 0221 00000000 		.4byte	0
 2333 0225 00000000 		.4byte	0
 2334              	.LLST14:
 2335 0229 00000000 		.4byte	.LVL30
 2336 022d 04000000 		.4byte	.LVL31
 2337 0231 0100     		.2byte	0x1
 2338 0233 53       		.byte	0x53
 2339 0234 04000000 		.4byte	.LVL31
 2340 0238 14000000 		.4byte	.LFE142
 2341 023c 0400     		.2byte	0x4
 2342 023e F3       		.byte	0xf3
 2343 023f 01       		.uleb128 0x1
 2344 0240 53       		.byte	0x53
 2345 0241 9F       		.byte	0x9f
 2346 0242 00000000 		.4byte	0
 2347 0246 00000000 		.4byte	0
 2348              	.LLST15:
 2349 024a 10000000 		.4byte	.LVL34
 2350 024e 12000000 		.4byte	.LVL35
 2351 0252 0500     		.2byte	0x5
 2352 0254 70       		.byte	0x70
 2353 0255 00       		.sleb128 0
 2354 0256 38       		.byte	0x38
 2355 0257 25       		.byte	0x25
 2356 0258 9F       		.byte	0x9f
 2357 0259 12000000 		.4byte	.LVL35
 2358 025d 14000000 		.4byte	.LFE142
 2359 0261 0100     		.2byte	0x1
 2360 0263 50       		.byte	0x50
 2361 0264 00000000 		.4byte	0
 2362 0268 00000000 		.4byte	0
 2363              	.LLST16:
 2364 026c 00000000 		.4byte	.LVL36
 2365 0270 0E000000 		.4byte	.LVL38
 2366 0274 0100     		.2byte	0x1
 2367 0276 50       		.byte	0x50
 2368 0277 0E000000 		.4byte	.LVL38
 2369 027b A0000000 		.4byte	.LFE136
 2370 027f 0100     		.2byte	0x1
 2371 0281 56       		.byte	0x56
 2372 0282 00000000 		.4byte	0
 2373 0286 00000000 		.4byte	0
 2374              	.LLST17:
 2375 028a 00000000 		.4byte	.LVL36
 2376 028e 0E000000 		.4byte	.LVL38
 2377 0292 0100     		.2byte	0x1
 2378 0294 51       		.byte	0x51
 2379 0295 0E000000 		.4byte	.LVL38
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 74


 2380 0299 A0000000 		.4byte	.LFE136
 2381 029d 0100     		.2byte	0x1
 2382 029f 55       		.byte	0x55
 2383 02a0 00000000 		.4byte	0
 2384 02a4 00000000 		.4byte	0
 2385              	.LLST18:
 2386 02a8 00000000 		.4byte	.LVL36
 2387 02ac 0E000000 		.4byte	.LVL38
 2388 02b0 0100     		.2byte	0x1
 2389 02b2 52       		.byte	0x52
 2390 02b3 0E000000 		.4byte	.LVL38
 2391 02b7 A0000000 		.4byte	.LFE136
 2392 02bb 0100     		.2byte	0x1
 2393 02bd 57       		.byte	0x57
 2394 02be 00000000 		.4byte	0
 2395 02c2 00000000 		.4byte	0
 2396              	.LLST19:
 2397 02c6 1E000000 		.4byte	.LVL39
 2398 02ca 2C000000 		.4byte	.LVL40
 2399 02ce 0200     		.2byte	0x2
 2400 02d0 31       		.byte	0x31
 2401 02d1 9F       		.byte	0x9f
 2402 02d2 2E000000 		.4byte	.LVL41
 2403 02d6 30000000 		.4byte	.LVL42
 2404 02da 0200     		.2byte	0x2
 2405 02dc 30       		.byte	0x30
 2406 02dd 9F       		.byte	0x9f
 2407 02de 30000000 		.4byte	.LVL42
 2408 02e2 40000000 		.4byte	.LVL44
 2409 02e6 0100     		.2byte	0x1
 2410 02e8 52       		.byte	0x52
 2411 02e9 58000000 		.4byte	.LVL46
 2412 02ed 7C000000 		.4byte	.LVL50
 2413 02f1 0100     		.2byte	0x1
 2414 02f3 52       		.byte	0x52
 2415 02f4 00000000 		.4byte	0
 2416 02f8 00000000 		.4byte	0
 2417              	.LLST20:
 2418 02fc 1E000000 		.4byte	.LVL39
 2419 0300 2C000000 		.4byte	.LVL40
 2420 0304 0100     		.2byte	0x1
 2421 0306 53       		.byte	0x53
 2422 0307 2E000000 		.4byte	.LVL41
 2423 030b 3C000000 		.4byte	.LVL43
 2424 030f 0100     		.2byte	0x1
 2425 0311 53       		.byte	0x53
 2426 0312 58000000 		.4byte	.LVL46
 2427 0316 6C000000 		.4byte	.LVL47
 2428 031a 0100     		.2byte	0x1
 2429 031c 53       		.byte	0x53
 2430 031d 00000000 		.4byte	0
 2431 0321 00000000 		.4byte	0
 2432              	.LLST21:
 2433 0325 0A000000 		.4byte	.LVL37
 2434 0329 0E000000 		.4byte	.LVL38
 2435 032d 0200     		.2byte	0x2
 2436 032f 31       		.byte	0x31
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 75


 2437 0330 9F       		.byte	0x9f
 2438 0331 0E000000 		.4byte	.LVL38
 2439 0335 94000000 		.4byte	.LVL54
 2440 0339 0100     		.2byte	0x1
 2441 033b 54       		.byte	0x54
 2442 033c 94000000 		.4byte	.LVL54
 2443 0340 96000000 		.4byte	.LVL55
 2444 0344 0100     		.2byte	0x1
 2445 0346 53       		.byte	0x53
 2446 0347 96000000 		.4byte	.LVL55
 2447 034b A0000000 		.4byte	.LFE136
 2448 034f 0100     		.2byte	0x1
 2449 0351 54       		.byte	0x54
 2450 0352 00000000 		.4byte	0
 2451 0356 00000000 		.4byte	0
 2452              	.LLST22:
 2453 035a 78000000 		.4byte	.LVL49
 2454 035e 92000000 		.4byte	.LVL53
 2455 0362 0200     		.2byte	0x2
 2456 0364 31       		.byte	0x31
 2457 0365 9F       		.byte	0x9f
 2458 0366 00000000 		.4byte	0
 2459 036a 00000000 		.4byte	0
 2460              	.LLST23:
 2461 036e 70000000 		.4byte	.LVL48
 2462 0372 78000000 		.4byte	.LVL49
 2463 0376 0500     		.2byte	0x5
 2464 0378 71       		.byte	0x71
 2465 0379 00       		.sleb128 0
 2466 037a 38       		.byte	0x38
 2467 037b 24       		.byte	0x24
 2468 037c 9F       		.byte	0x9f
 2469 037d 78000000 		.4byte	.LVL49
 2470 0381 80000000 		.4byte	.LVL51
 2471 0385 0800     		.2byte	0x8
 2472 0387 71       		.byte	0x71
 2473 0388 00       		.sleb128 0
 2474 0389 38       		.byte	0x38
 2475 038a 24       		.byte	0x24
 2476 038b 7E       		.byte	0x7e
 2477 038c 00       		.sleb128 0
 2478 038d 21       		.byte	0x21
 2479 038e 9F       		.byte	0x9f
 2480 038f 80000000 		.4byte	.LVL51
 2481 0393 83000000 		.4byte	.LVL52-1
 2482 0397 0100     		.2byte	0x1
 2483 0399 51       		.byte	0x51
 2484 039a 84000000 		.4byte	.LVL52
 2485 039e 92000000 		.4byte	.LVL53
 2486 03a2 0100     		.2byte	0x1
 2487 03a4 50       		.byte	0x50
 2488 03a5 00000000 		.4byte	0
 2489 03a9 00000000 		.4byte	0
 2490              	.LLST24:
 2491 03ad 00000000 		.4byte	.LVL56
 2492 03b1 1A000000 		.4byte	.LVL63
 2493 03b5 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 76


 2494 03b7 50       		.byte	0x50
 2495 03b8 1A000000 		.4byte	.LVL63
 2496 03bc 24000000 		.4byte	.LFE135
 2497 03c0 0400     		.2byte	0x4
 2498 03c2 F3       		.byte	0xf3
 2499 03c3 01       		.uleb128 0x1
 2500 03c4 50       		.byte	0x50
 2501 03c5 9F       		.byte	0x9f
 2502 03c6 00000000 		.4byte	0
 2503 03ca 00000000 		.4byte	0
 2504              	.LLST25:
 2505 03ce 00000000 		.4byte	.LVL56
 2506 03d2 12000000 		.4byte	.LVL60
 2507 03d6 0100     		.2byte	0x1
 2508 03d8 51       		.byte	0x51
 2509 03d9 12000000 		.4byte	.LVL60
 2510 03dd 24000000 		.4byte	.LFE135
 2511 03e1 0400     		.2byte	0x4
 2512 03e3 F3       		.byte	0xf3
 2513 03e4 01       		.uleb128 0x1
 2514 03e5 51       		.byte	0x51
 2515 03e6 9F       		.byte	0x9f
 2516 03e7 00000000 		.4byte	0
 2517 03eb 00000000 		.4byte	0
 2518              	.LLST26:
 2519 03ef 02000000 		.4byte	.LVL57
 2520 03f3 1E000000 		.4byte	.LVL64
 2521 03f7 0200     		.2byte	0x2
 2522 03f9 30       		.byte	0x30
 2523 03fa 9F       		.byte	0x9f
 2524 03fb 1E000000 		.4byte	.LVL64
 2525 03ff 24000000 		.4byte	.LFE135
 2526 0403 0100     		.2byte	0x1
 2527 0405 50       		.byte	0x50
 2528 0406 00000000 		.4byte	0
 2529 040a 00000000 		.4byte	0
 2530              	.LLST27:
 2531 040e 02000000 		.4byte	.LVL57
 2532 0412 0E000000 		.4byte	.LVL59
 2533 0416 0200     		.2byte	0x2
 2534 0418 30       		.byte	0x30
 2535 0419 9F       		.byte	0x9f
 2536 041a 0E000000 		.4byte	.LVL59
 2537 041e 14000000 		.4byte	.LVL61
 2538 0422 0100     		.2byte	0x1
 2539 0424 54       		.byte	0x54
 2540 0425 14000000 		.4byte	.LVL61
 2541 0429 18000000 		.4byte	.LVL62
 2542 042d 0600     		.2byte	0x6
 2543 042f 74       		.byte	0x74
 2544 0430 00       		.sleb128 0
 2545 0431 75       		.byte	0x75
 2546 0432 00       		.sleb128 0
 2547 0433 22       		.byte	0x22
 2548 0434 9F       		.byte	0x9f
 2549 0435 18000000 		.4byte	.LVL62
 2550 0439 1D000000 		.4byte	.LVL64-1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 77


 2551 043d 0100     		.2byte	0x1
 2552 043f 51       		.byte	0x51
 2553 0440 1D000000 		.4byte	.LVL64-1
 2554 0444 20000000 		.4byte	.LVL65
 2555 0448 0600     		.2byte	0x6
 2556 044a 74       		.byte	0x74
 2557 044b 00       		.sleb128 0
 2558 044c 75       		.byte	0x75
 2559 044d 00       		.sleb128 0
 2560 044e 22       		.byte	0x22
 2561 044f 9F       		.byte	0x9f
 2562 0450 00000000 		.4byte	0
 2563 0454 00000000 		.4byte	0
 2564              	.LLST28:
 2565 0458 0C000000 		.4byte	.LVL58
 2566 045c 1D000000 		.4byte	.LVL64-1
 2567 0460 0200     		.2byte	0x2
 2568 0462 73       		.byte	0x73
 2569 0463 04       		.sleb128 4
 2570 0464 1D000000 		.4byte	.LVL64-1
 2571 0468 20000000 		.4byte	.LVL65
 2572 046c 1000     		.2byte	0x10
 2573 046e F3       		.byte	0xf3
 2574 046f 01       		.uleb128 0x1
 2575 0470 50       		.byte	0x50
 2576 0471 33       		.byte	0x33
 2577 0472 24       		.byte	0x24
 2578 0473 F3       		.byte	0xf3
 2579 0474 01       		.uleb128 0x1
 2580 0475 50       		.byte	0x50
 2581 0476 1C       		.byte	0x1c
 2582 0477 32       		.byte	0x32
 2583 0478 24       		.byte	0x24
 2584 0479 76       		.byte	0x76
 2585 047a 00       		.sleb128 0
 2586 047b 22       		.byte	0x22
 2587 047c 23       		.byte	0x23
 2588 047d 04       		.uleb128 0x4
 2589 047e 00000000 		.4byte	0
 2590 0482 00000000 		.4byte	0
 2591              	.LLST29:
 2592 0486 00000000 		.4byte	.LVL66
 2593 048a 14000000 		.4byte	.LVL69
 2594 048e 0100     		.2byte	0x1
 2595 0490 50       		.byte	0x50
 2596 0491 14000000 		.4byte	.LVL69
 2597 0495 2A000000 		.4byte	.LVL74
 2598 0499 0100     		.2byte	0x1
 2599 049b 56       		.byte	0x56
 2600 049c 2A000000 		.4byte	.LVL74
 2601 04a0 30000000 		.4byte	.LFE134
 2602 04a4 0400     		.2byte	0x4
 2603 04a6 F3       		.byte	0xf3
 2604 04a7 01       		.uleb128 0x1
 2605 04a8 50       		.byte	0x50
 2606 04a9 9F       		.byte	0x9f
 2607 04aa 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 78


 2608 04ae 00000000 		.4byte	0
 2609              	.LLST30:
 2610 04b2 10000000 		.4byte	.LVL68
 2611 04b6 14000000 		.4byte	.LVL69
 2612 04ba 0100     		.2byte	0x1
 2613 04bc 53       		.byte	0x53
 2614 04bd 14000000 		.4byte	.LVL69
 2615 04c1 20000000 		.4byte	.LVL72
 2616 04c5 0100     		.2byte	0x1
 2617 04c7 54       		.byte	0x54
 2618 04c8 20000000 		.4byte	.LVL72
 2619 04cc 22000000 		.4byte	.LVL73
 2620 04d0 0100     		.2byte	0x1
 2621 04d2 53       		.byte	0x53
 2622 04d3 22000000 		.4byte	.LVL73
 2623 04d7 2A000000 		.4byte	.LVL74
 2624 04db 0100     		.2byte	0x1
 2625 04dd 54       		.byte	0x54
 2626 04de 2A000000 		.4byte	.LVL74
 2627 04e2 30000000 		.4byte	.LFE134
 2628 04e6 0300     		.2byte	0x3
 2629 04e8 73       		.byte	0x73
 2630 04e9 7F       		.sleb128 -1
 2631 04ea 9F       		.byte	0x9f
 2632 04eb 00000000 		.4byte	0
 2633 04ef 00000000 		.4byte	0
 2634              	.LLST31:
 2635 04f3 10000000 		.4byte	.LVL68
 2636 04f7 14000000 		.4byte	.LVL69
 2637 04fb 0100     		.2byte	0x1
 2638 04fd 53       		.byte	0x53
 2639 04fe 00000000 		.4byte	0
 2640 0502 00000000 		.4byte	0
 2641              	.LLST32:
 2642 0506 04000000 		.4byte	.LVL67
 2643 050a 14000000 		.4byte	.LVL69
 2644 050e 0200     		.2byte	0x2
 2645 0510 30       		.byte	0x30
 2646 0511 9F       		.byte	0x9f
 2647 0512 14000000 		.4byte	.LVL69
 2648 0516 2A000000 		.4byte	.LVL74
 2649 051a 0100     		.2byte	0x1
 2650 051c 55       		.byte	0x55
 2651 051d 2A000000 		.4byte	.LVL74
 2652 0521 30000000 		.4byte	.LFE134
 2653 0525 0100     		.2byte	0x1
 2654 0527 50       		.byte	0x50
 2655 0528 00000000 		.4byte	0
 2656 052c 00000000 		.4byte	0
 2657              	.LLST33:
 2658 0530 02000000 		.4byte	.LVL75
 2659 0534 08000000 		.4byte	.LVL76
 2660 0538 0200     		.2byte	0x2
 2661 053a 31       		.byte	0x31
 2662 053b 9F       		.byte	0x9f
 2663 053c 08000000 		.4byte	.LVL76
 2664 0540 12000000 		.4byte	.LVL79
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 79


 2665 0544 0100     		.2byte	0x1
 2666 0546 55       		.byte	0x55
 2667 0547 12000000 		.4byte	.LVL79
 2668 054b 14000000 		.4byte	.LVL80
 2669 054f 0100     		.2byte	0x1
 2670 0551 53       		.byte	0x53
 2671 0552 14000000 		.4byte	.LVL80
 2672 0556 1C000000 		.4byte	.LFE133
 2673 055a 0100     		.2byte	0x1
 2674 055c 55       		.byte	0x55
 2675 055d 00000000 		.4byte	0
 2676 0561 00000000 		.4byte	0
 2677              	.LLST34:
 2678 0565 02000000 		.4byte	.LVL75
 2679 0569 08000000 		.4byte	.LVL76
 2680 056d 0200     		.2byte	0x2
 2681 056f 30       		.byte	0x30
 2682 0570 9F       		.byte	0x9f
 2683 0571 08000000 		.4byte	.LVL76
 2684 0575 1C000000 		.4byte	.LFE133
 2685 0579 0100     		.2byte	0x1
 2686 057b 54       		.byte	0x54
 2687 057c 00000000 		.4byte	0
 2688 0580 00000000 		.4byte	0
 2689              		.section	.debug_aranges,"",%progbits
 2690 0000 6C000000 		.4byte	0x6c
 2691 0004 0200     		.2byte	0x2
 2692 0006 00000000 		.4byte	.Ldebug_info0
 2693 000a 04       		.byte	0x4
 2694 000b 00       		.byte	0
 2695 000c 0000     		.2byte	0
 2696 000e 0000     		.2byte	0
 2697 0010 00000000 		.4byte	.LFB132
 2698 0014 02000000 		.4byte	.LFE132-.LFB132
 2699 0018 00000000 		.4byte	.LFB141
 2700 001c 1E000000 		.4byte	.LFE141-.LFB141
 2701 0020 00000000 		.4byte	.LFB140
 2702 0024 1E000000 		.4byte	.LFE140-.LFB140
 2703 0028 00000000 		.4byte	.LFB139
 2704 002c 28000000 		.4byte	.LFE139-.LFB139
 2705 0030 00000000 		.4byte	.LFB138
 2706 0034 28000000 		.4byte	.LFE138-.LFB138
 2707 0038 00000000 		.4byte	.LFB137
 2708 003c 16000000 		.4byte	.LFE137-.LFB137
 2709 0040 00000000 		.4byte	.LFB142
 2710 0044 14000000 		.4byte	.LFE142-.LFB142
 2711 0048 00000000 		.4byte	.LFB136
 2712 004c A0000000 		.4byte	.LFE136-.LFB136
 2713 0050 00000000 		.4byte	.LFB135
 2714 0054 24000000 		.4byte	.LFE135-.LFB135
 2715 0058 00000000 		.4byte	.LFB134
 2716 005c 30000000 		.4byte	.LFE134-.LFB134
 2717 0060 00000000 		.4byte	.LFB133
 2718 0064 1C000000 		.4byte	.LFE133-.LFB133
 2719 0068 00000000 		.4byte	0
 2720 006c 00000000 		.4byte	0
 2721              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 80


 2722              	.Ldebug_ranges0:
 2723 0000 00000000 		.4byte	.LFB132
 2724 0004 02000000 		.4byte	.LFE132
 2725 0008 00000000 		.4byte	.LFB141
 2726 000c 1E000000 		.4byte	.LFE141
 2727 0010 00000000 		.4byte	.LFB140
 2728 0014 1E000000 		.4byte	.LFE140
 2729 0018 00000000 		.4byte	.LFB139
 2730 001c 28000000 		.4byte	.LFE139
 2731 0020 00000000 		.4byte	.LFB138
 2732 0024 28000000 		.4byte	.LFE138
 2733 0028 00000000 		.4byte	.LFB137
 2734 002c 16000000 		.4byte	.LFE137
 2735 0030 00000000 		.4byte	.LFB142
 2736 0034 14000000 		.4byte	.LFE142
 2737 0038 00000000 		.4byte	.LFB136
 2738 003c A0000000 		.4byte	.LFE136
 2739 0040 00000000 		.4byte	.LFB135
 2740 0044 24000000 		.4byte	.LFE135
 2741 0048 00000000 		.4byte	.LFB134
 2742 004c 30000000 		.4byte	.LFE134
 2743 0050 00000000 		.4byte	.LFB133
 2744 0054 1C000000 		.4byte	.LFE133
 2745 0058 00000000 		.4byte	0
 2746 005c 00000000 		.4byte	0
 2747              		.section	.debug_line,"",%progbits
 2748              	.Ldebug_line0:
 2749 0000 2A030000 		.section	.debug_str,"MS",%progbits,1
 2749      0200F301 
 2749      00000201 
 2749      FB0E0D00 
 2749      01010101 
 2750              	.LASF63:
 2751 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2751      656E7365 
 2751      5F464C41 
 2751      53485F53 
 2751      54525543 
 2752              	.LASF27:
 2753 0016 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2753      656E7365 
 2753      5F4C4F57 
 2753      5F42534C 
 2753      4E5F5253 
 2754              	.LASF87:
 2755 0031 72657375 		.ascii	"result\000"
 2755      6C7400
 2756              	.LASF46:
 2757 0038 62736C6E 		.ascii	"bsln\000"
 2757      00
 2758              	.LASF71:
 2759 003d 73656E73 		.ascii	"sensorId\000"
 2759      6F724964 
 2759      00
 2760              	.LASF91:
 2761 0046 62736C6E 		.ascii	"bslnStatus\000"
 2761      53746174 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 81


 2761      757300
 2762              	.LASF41:
 2763 0051 6C6F7742 		.ascii	"lowBslnRst\000"
 2763      736C6E52 
 2763      737400
 2764              	.LASF48:
 2765 005c 64696666 		.ascii	"diff\000"
 2765      00
 2766              	.LASF58:
 2767 0061 746F7461 		.ascii	"totalNumSns\000"
 2767      6C4E756D 
 2767      536E7300 
 2768              	.LASF76:
 2769 006d 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2769      656E7365 
 2769      5F496E69 
 2769      7469616C 
 2769      697A6541 
 2770              	.LASF42:
 2771 008d 69646163 		.ascii	"idacMod\000"
 2771      4D6F6400 
 2772              	.LASF5:
 2773 0095 73686F72 		.ascii	"short int\000"
 2773      7420696E 
 2773      7400
 2774              	.LASF97:
 2775 009f 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 2775      635C4461 
 2775      74615C56 
 2775      53636F64 
 2775      655C4749 
 2776 00cc 65735C45 		.ascii	"es\\Example_CapSense\\Onethinx_Creator.cydsn\000"
 2776      78616D70 
 2776      6C655F43 
 2776      61705365 
 2776      6E73655C 
 2777              	.LASF77:
 2778 00f7 696E7075 		.ascii	"input\000"
 2778      7400
 2779              	.LASF32:
 2780 00fd 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2780      656E7365 
 2780      5F57445F 
 2780      544F5543 
 2780      48504144 
 2781              	.LASF61:
 2782 0114 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2782      656E7365 
 2782      5F464C41 
 2782      53485F57 
 2782      445F5354 
 2783              	.LASF85:
 2784 012d 64696666 		.ascii	"difference\000"
 2784      6572656E 
 2784      636500
 2785              	.LASF38:
 2786 0138 6E4E6F69 		.ascii	"nNoiseTh\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 82


 2786      73655468 
 2786      00
 2787              	.LASF65:
 2788 0141 77645479 		.ascii	"wdType\000"
 2788      706500
 2789              	.LASF95:
 2790 0148 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2790      43313120 
 2790      352E342E 
 2790      31203230 
 2790      31363036 
 2791 017b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2791      20726576 
 2791      6973696F 
 2791      6E203233 
 2791      37373135 
 2792 01ae 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 2792      70202D6D 
 2792      6670753D 
 2792      66707634 
 2792      2D73702D 
 2793 01e1 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2793      6F6E7320 
 2793      2D666661 
 2793      742D6C74 
 2793      6F2D6F62 
 2794              	.LASF80:
 2795 01fb 66696C74 		.ascii	"filteredOutput\000"
 2795      65726564 
 2795      4F757470 
 2795      757400
 2796              	.LASF11:
 2797 020a 5F5F7569 		.ascii	"__uint32_t\000"
 2797      6E743332 
 2797      5F7400
 2798              	.LASF88:
 2799 0215 68697374 		.ascii	"history\000"
 2799      6F727900 
 2800              	.LASF44:
 2801 021d 736E7343 		.ascii	"snsClkSource\000"
 2801      6C6B536F 
 2801      75726365 
 2801      00
 2802              	.LASF7:
 2803 022a 5F5F7569 		.ascii	"__uint16_t\000"
 2803      6E743136 
 2803      5F7400
 2804              	.LASF28:
 2805 0235 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2805      656E7365 
 2805      5F57445F 
 2805      42555454 
 2805      4F4E5F45 
 2806              	.LASF37:
 2807 024a 6E6F6973 		.ascii	"noiseTh\000"
 2807      65546800 
 2808              	.LASF24:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 83


 2809 0252 75696E74 		.ascii	"uint16\000"
 2809      313600
 2810              	.LASF89:
 2811 0259 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2811      656E7365 
 2811      5F557064 
 2811      61746553 
 2811      656E736F 
 2812              	.LASF56:
 2813 0277 70747232 		.ascii	"ptr2DebounceArr\000"
 2813      4465626F 
 2813      756E6365 
 2813      41727200 
 2814              	.LASF14:
 2815 0287 75696E74 		.ascii	"uint8_t\000"
 2815      385F7400 
 2816              	.LASF23:
 2817 028f 75696E74 		.ascii	"uint8\000"
 2817      3800
 2818              	.LASF83:
 2819 0295 70747257 		.ascii	"ptrWidgetRam\000"
 2819      69646765 
 2819      7452616D 
 2819      00
 2820              	.LASF43:
 2821 02a2 736E7343 		.ascii	"snsClk\000"
 2821      6C6B00
 2822              	.LASF67:
 2823 02a9 43617053 		.ascii	"CapSense_FtInitializeBaselineChannel\000"
 2823      656E7365 
 2823      5F467449 
 2823      6E697469 
 2823      616C697A 
 2824              	.LASF81:
 2825 02ce 43617053 		.ascii	"CapSense_FtIIR1stOrder\000"
 2825      656E7365 
 2825      5F467449 
 2825      49523173 
 2825      744F7264 
 2826              	.LASF33:
 2827 02e5 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2827      656E7365 
 2827      5F57445F 
 2827      50524F58 
 2827      494D4954 
 2828              	.LASF20:
 2829 02fd 666C6F61 		.ascii	"float\000"
 2829      7400
 2830              	.LASF1:
 2831 0303 6C6F6E67 		.ascii	"long long int\000"
 2831      206C6F6E 
 2831      6720696E 
 2831      7400
 2832              	.LASF19:
 2833 0311 63686172 		.ascii	"char\000"
 2833      00
 2834              	.LASF10:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 84


 2835 0316 6C6F6E67 		.ascii	"long int\000"
 2835      20696E74 
 2835      00
 2836              	.LASF79:
 2837 031f 73686966 		.ascii	"shift\000"
 2837      7400
 2838              	.LASF59:
 2839 0325 77646774 		.ascii	"wdgtType\000"
 2839      54797065 
 2839      00
 2840              	.LASF96:
 2841 032e 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Filter.c\000"
 2841      72617465 
 2841      645F536F 
 2841      75726365 
 2841      5C50536F 
 2842              	.LASF18:
 2843 0357 73697A65 		.ascii	"sizetype\000"
 2843      74797065 
 2843      00
 2844              	.LASF26:
 2845 0360 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2845      656E7365 
 2845      5F544852 
 2845      4553484F 
 2845      4C445F54 
 2846              	.LASF49:
 2847 0378 6E656742 		.ascii	"negBslnRstCnt\000"
 2847      736C6E52 
 2847      7374436E 
 2847      7400
 2848              	.LASF6:
 2849 0386 5F5F7569 		.ascii	"__uint8_t\000"
 2849      6E74385F 
 2849      7400
 2850              	.LASF40:
 2851 0390 6F6E4465 		.ascii	"onDebounce\000"
 2851      626F756E 
 2851      636500
 2852              	.LASF36:
 2853 039b 66696E67 		.ascii	"fingerTh\000"
 2853      65725468 
 2853      00
 2854              	.LASF60:
 2855 03a4 6E756D43 		.ascii	"numCols\000"
 2855      6F6C7300 
 2856              	.LASF69:
 2857 03ac 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2857      656E7365 
 2857      5F496E69 
 2857      7469616C 
 2857      697A6553 
 2858              	.LASF39:
 2859 03ce 68797374 		.ascii	"hysteresis\000"
 2859      65726573 
 2859      697300
 2860              	.LASF2:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 85


 2861 03d9 6C6F6E67 		.ascii	"long double\000"
 2861      20646F75 
 2861      626C6500 
 2862              	.LASF4:
 2863 03e5 756E7369 		.ascii	"unsigned char\000"
 2863      676E6564 
 2863      20636861 
 2863      7200
 2864              	.LASF75:
 2865 03f3 70747257 		.ascii	"ptrWidget\000"
 2865      69646765 
 2865      7400
 2866              	.LASF22:
 2867 03fd 63795F73 		.ascii	"cy_status\000"
 2867      74617475 
 2867      7300
 2868              	.LASF3:
 2869 0407 7369676E 		.ascii	"signed char\000"
 2869      65642063 
 2869      68617200 
 2870              	.LASF16:
 2871 0413 696E7433 		.ascii	"int32_t\000"
 2871      325F7400 
 2872              	.LASF13:
 2873 041b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2873      206C6F6E 
 2873      6720756E 
 2873      7369676E 
 2873      65642069 
 2874              	.LASF17:
 2875 0432 75696E74 		.ascii	"uint32_t\000"
 2875      33325F74 
 2875      00
 2876              	.LASF57:
 2877 043b 73746174 		.ascii	"staticConfig\000"
 2877      6963436F 
 2877      6E666967 
 2877      00
 2878              	.LASF0:
 2879 0448 756E7369 		.ascii	"unsigned int\000"
 2879      676E6564 
 2879      20696E74 
 2879      00
 2880              	.LASF15:
 2881 0455 75696E74 		.ascii	"uint16_t\000"
 2881      31365F74 
 2881      00
 2882              	.LASF72:
 2883 045e 66726571 		.ascii	"freqChannel\000"
 2883      4368616E 
 2883      6E656C00 
 2884              	.LASF51:
 2885 046a 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2885      656E7365 
 2885      5F52414D 
 2885      5F534E53 
 2885      5F535452 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 86


 2886              	.LASF90:
 2887 0482 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 2887      656E7365 
 2887      5F557064 
 2887      61746557 
 2887      69646765 
 2888              	.LASF29:
 2889 04a0 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2889      656E7365 
 2889      5F57445F 
 2889      4C494E45 
 2889      41525F53 
 2890              	.LASF8:
 2891 04bc 73686F72 		.ascii	"short unsigned int\000"
 2891      7420756E 
 2891      7369676E 
 2891      65642069 
 2891      6E7400
 2892              	.LASF92:
 2893 04cf 43617053 		.ascii	"CapSense_UpdateAllBaselines\000"
 2893      656E7365 
 2893      5F557064 
 2893      61746541 
 2893      6C6C4261 
 2894              	.LASF98:
 2895 04eb 43617053 		.ascii	"CapSense_FtInitialize\000"
 2895      656E7365 
 2895      5F467449 
 2895      6E697469 
 2895      616C697A 
 2896              	.LASF50:
 2897 0501 69646163 		.ascii	"idacComp\000"
 2897      436F6D70 
 2897      00
 2898              	.LASF68:
 2899 050a 43617053 		.ascii	"CapSense_FtInitializeBaseline\000"
 2899      656E7365 
 2899      5F467449 
 2899      6E697469 
 2899      616C697A 
 2900              	.LASF35:
 2901 0528 7265736F 		.ascii	"resolution\000"
 2901      6C757469 
 2901      6F6E00
 2902              	.LASF9:
 2903 0533 5F5F696E 		.ascii	"__int32_t\000"
 2903      7433325F 
 2903      7400
 2904              	.LASF66:
 2905 053d 6368616E 		.ascii	"channel\000"
 2905      6E656C00 
 2906              	.LASF82:
 2907 0545 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2907      656E7365 
 2907      5F467455 
 2907      70646174 
 2907      65426173 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 87


 2908              	.LASF74:
 2909 055f 73656E73 		.ascii	"sensorsNumber\000"
 2909      6F72734E 
 2909      756D6265 
 2909      7200
 2910              	.LASF53:
 2911 056d 70747232 		.ascii	"ptr2WdgtRam\000"
 2911      57646774 
 2911      52616D00 
 2912              	.LASF86:
 2913 0579 62617365 		.ascii	"baselineCoeff\000"
 2913      6C696E65 
 2913      436F6566 
 2913      6600
 2914              	.LASF30:
 2915 0587 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2915      656E7365 
 2915      5F57445F 
 2915      52414449 
 2915      414C5F53 
 2916              	.LASF70:
 2917 05a3 77696467 		.ascii	"widgetId\000"
 2917      65744964 
 2917      00
 2918              	.LASF25:
 2919 05ac 75696E74 		.ascii	"uint32\000"
 2919      333200
 2920              	.LASF12:
 2921 05b3 6C6F6E67 		.ascii	"long unsigned int\000"
 2921      20756E73 
 2921      69676E65 
 2921      6420696E 
 2921      7400
 2922              	.LASF84:
 2923 05c5 7369676E 		.ascii	"sign\000"
 2923      00
 2924              	.LASF21:
 2925 05ca 646F7562 		.ascii	"double\000"
 2925      6C6500
 2926              	.LASF47:
 2927 05d1 62736C6E 		.ascii	"bslnExt\000"
 2927      45787400 
 2928              	.LASF34:
 2929 05d9 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 2929      656E7365 
 2929      5F57445F 
 2929      54595045 
 2929      5F454E55 
 2930              	.LASF78:
 2931 05ef 70726576 		.ascii	"prevOutput\000"
 2931      4F757470 
 2931      757400
 2932              	.LASF31:
 2933 05fa 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2933      656E7365 
 2933      5F57445F 
 2933      4D415452 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccNJWBOD.s 			page 88


 2933      49585F42 
 2934              	.LASF54:
 2935 0616 70747232 		.ascii	"ptr2SnsRam\000"
 2935      536E7352 
 2935      616D00
 2936              	.LASF73:
 2937 0621 43617053 		.ascii	"CapSense_InitializeWidgetBaseline\000"
 2937      656E7365 
 2937      5F496E69 
 2937      7469616C 
 2937      697A6557 
 2938              	.LASF55:
 2939 0643 70747232 		.ascii	"ptr2FltrHistory\000"
 2939      466C7472 
 2939      48697374 
 2939      6F727900 
 2940              	.LASF62:
 2941 0653 77646774 		.ascii	"wdgtArray\000"
 2941      41727261 
 2941      7900
 2942              	.LASF94:
 2943 065d 43617053 		.ascii	"CapSense_dsFlash\000"
 2943      656E7365 
 2943      5F647346 
 2943      6C617368 
 2943      00
 2944              	.LASF45:
 2945 066e 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2945      656E7365 
 2945      5F52414D 
 2945      5F57445F 
 2945      42415345 
 2946              	.LASF93:
 2947 068a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2947      52784275 
 2947      66666572 
 2947      00
 2948              	.LASF52:
 2949 0697 70747232 		.ascii	"ptr2SnsFlash\000"
 2949      536E7346 
 2949      6C617368 
 2949      00
 2950              	.LASF64:
 2951 06a4 70747253 		.ascii	"ptrSensor\000"
 2951      656E736F 
 2951      7200
 2952              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
