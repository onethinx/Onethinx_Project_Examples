ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"CapSense_Processing.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.CapSense_DpInitialize,"ax",%progbits
  21              		.align	2
  22              		.global	CapSense_DpInitialize
  23              		.thumb
  24              		.thumb_func
  25              		.type	CapSense_DpInitialize, %function
  26              	CapSense_DpInitialize:
  27              	.LFB132:
  28              		.file 1 "Generated_Source\\PSoC6\\CapSense_Processing.c"
   1:Generated_Source\PSoC6/CapSense_Processing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Processing.c **** * \file CapSense_Processing.c
   3:Generated_Source\PSoC6/CapSense_Processing.c **** * \version 3.0
   4:Generated_Source\PSoC6/CapSense_Processing.c **** *
   5:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Processing.c **** *   This file provides the source code for the Data Processing module APIs
   7:Generated_Source\PSoC6/CapSense_Processing.c **** *   of the Component. The Data Processing module is responsible for the
   8:Generated_Source\PSoC6/CapSense_Processing.c **** *   low level raw counts processing provided by the sensing module, maintaining
   9:Generated_Source\PSoC6/CapSense_Processing.c **** *   baseline and difference values and performing high-level widget processing
  10:Generated_Source\PSoC6/CapSense_Processing.c **** *   like updating button status or calculating slider position.
  11:Generated_Source\PSoC6/CapSense_Processing.c **** *
  12:Generated_Source\PSoC6/CapSense_Processing.c **** * \see CapSense v3.0 Datasheet
  13:Generated_Source\PSoC6/CapSense_Processing.c **** *
  14:Generated_Source\PSoC6/CapSense_Processing.c **** *//*****************************************************************************
  15:Generated_Source\PSoC6/CapSense_Processing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  16:Generated_Source\PSoC6/CapSense_Processing.c **** ********************************************************************************
  17:Generated_Source\PSoC6/CapSense_Processing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  18:Generated_Source\PSoC6/CapSense_Processing.c **** * protected by and subject to worldwide patent protection (United States and
  19:Generated_Source\PSoC6/CapSense_Processing.c **** * foreign), United States copyright laws and international treaty provisions.
  20:Generated_Source\PSoC6/CapSense_Processing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  21:Generated_Source\PSoC6/CapSense_Processing.c **** * license to copy, use, modify, create derivative works of, and compile the
  22:Generated_Source\PSoC6/CapSense_Processing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  23:Generated_Source\PSoC6/CapSense_Processing.c **** * custom software in support of licensee product to be used only in conjunction
  24:Generated_Source\PSoC6/CapSense_Processing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  25:Generated_Source\PSoC6/CapSense_Processing.c **** * Any reproduction, modification, translation, compilation, or representation of
  26:Generated_Source\PSoC6/CapSense_Processing.c **** * this software except as specified above is prohibited without the express
  27:Generated_Source\PSoC6/CapSense_Processing.c **** * written permission of Cypress.
  28:Generated_Source\PSoC6/CapSense_Processing.c **** *
  29:Generated_Source\PSoC6/CapSense_Processing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 2


  30:Generated_Source\PSoC6/CapSense_Processing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  31:Generated_Source\PSoC6/CapSense_Processing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  32:Generated_Source\PSoC6/CapSense_Processing.c **** * Cypress reserves the right to make changes without further notice to the
  33:Generated_Source\PSoC6/CapSense_Processing.c **** * materials described herein. Cypress does not assume any liability arising out
  34:Generated_Source\PSoC6/CapSense_Processing.c **** * of the application or use of any product or circuit described herein. Cypress
  35:Generated_Source\PSoC6/CapSense_Processing.c **** * does not authorize its products for use as critical components in life-support
  36:Generated_Source\PSoC6/CapSense_Processing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  37:Generated_Source\PSoC6/CapSense_Processing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  38:Generated_Source\PSoC6/CapSense_Processing.c **** * support systems application implies that the manufacturer assumes all risk of
  39:Generated_Source\PSoC6/CapSense_Processing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  40:Generated_Source\PSoC6/CapSense_Processing.c **** * limited by and subject to the applicable Cypress software license agreement.
  41:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
  42:Generated_Source\PSoC6/CapSense_Processing.c **** 
  43:Generated_Source\PSoC6/CapSense_Processing.c **** #include "syslib/cy_syslib.h"
  44:Generated_Source\PSoC6/CapSense_Processing.c **** #include <stddef.h>
  45:Generated_Source\PSoC6/CapSense_Processing.c **** #include <string.h>
  46:Generated_Source\PSoC6/CapSense_Processing.c **** #include "CapSense_Configuration.h"
  47:Generated_Source\PSoC6/CapSense_Processing.c **** #include "CapSense_Processing.h"
  48:Generated_Source\PSoC6/CapSense_Processing.c **** #include "CapSense_Filter.h"
  49:Generated_Source\PSoC6/CapSense_Processing.c **** 
  50:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CENTROID_EN)
  51:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_Centroid_LL.h"
  52:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* (0 != CapSense_CENTROID_EN) */
  53:Generated_Source\PSoC6/CapSense_Processing.c **** 
  54:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  55:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_SmartSense_LL.h"
  56:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  57:Generated_Source\PSoC6/CapSense_Processing.c **** 
  58:Generated_Source\PSoC6/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  59:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_SelfTest.h"
  60:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  61:Generated_Source\PSoC6/CapSense_Processing.c **** 
  62:Generated_Source\PSoC6/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
  63:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_AdvancedCentroid_LL.h"
  64:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  65:Generated_Source\PSoC6/CapSense_Processing.c **** 
  66:Generated_Source\PSoC6/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
  67:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_AdaptiveFilter_LL.h"
  68:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  69:Generated_Source\PSoC6/CapSense_Processing.c **** 
  70:Generated_Source\PSoC6/CapSense_Processing.c **** #if(CapSense_ENABLE == CapSense_BALLISTIC_MULTIPLIER_EN)
  71:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_Gesture.h"
  72:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  73:Generated_Source\PSoC6/CapSense_Processing.c **** 
  74:Generated_Source\PSoC6/CapSense_Processing.c **** /**************************************************************************************************
  75:Generated_Source\PSoC6/CapSense_Processing.c **** * Local definition
  76:Generated_Source\PSoC6/CapSense_Processing.c **** ***************************************************************************************************
  77:Generated_Source\PSoC6/CapSense_Processing.c **** 
  78:Generated_Source\PSoC6/CapSense_Processing.c **** /* UINT32 constant with all odd bits set. It is used by the processing function of the Proximity wi
  79:Generated_Source\PSoC6/CapSense_Processing.c **** *  determine type of the status bit: odd bits report proximity status; even bits report touch statu
  80:Generated_Source\PSoC6/CapSense_Processing.c **** */
  81:Generated_Source\PSoC6/CapSense_Processing.c **** #define UINT32_ODD_BITS_CONST       (0x55555555u)
  82:Generated_Source\PSoC6/CapSense_Processing.c **** 
  83:Generated_Source\PSoC6/CapSense_Processing.c **** /* Default value for the Off Debounce counter when the Off Debounce is disabled */
  84:Generated_Source\PSoC6/CapSense_Processing.c **** #define DEFAULT_OFF_DEBOUNCE_VALUE  (1u)
  85:Generated_Source\PSoC6/CapSense_Processing.c **** #define PERCENTAGE_100              (100u)
  86:Generated_Source\PSoC6/CapSense_Processing.c **** #define TEMP_BUFFER_MSB_SHIFT       (16)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 3


  87:Generated_Source\PSoC6/CapSense_Processing.c **** 
  88:Generated_Source\PSoC6/CapSense_Processing.c **** /**************************************************************************************************
  89:Generated_Source\PSoC6/CapSense_Processing.c **** * Local variables
  90:Generated_Source\PSoC6/CapSense_Processing.c **** ***************************************************************************************************
  91:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
  92:Generated_Source\PSoC6/CapSense_Processing.c ****     static uint16 deconvRowData[CapSense_CSX_MAX_TX_PHASE_LENGTH];
  93:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  94:Generated_Source\PSoC6/CapSense_Processing.c **** 
  95:Generated_Source\PSoC6/CapSense_Processing.c **** 
  96:Generated_Source\PSoC6/CapSense_Processing.c **** /**************************************************************************************************
  97:Generated_Source\PSoC6/CapSense_Processing.c **** * Static Function Prototypes
  98:Generated_Source\PSoC6/CapSense_Processing.c **** ***************************************************************************************************
  99:Generated_Source\PSoC6/CapSense_Processing.c **** /**
 100:Generated_Source\PSoC6/CapSense_Processing.c **** * \cond SECTION_CYSENSE_INTERNAL
 101:Generated_Source\PSoC6/CapSense_Processing.c **** * \addtogroup group_cysense_internal
 102:Generated_Source\PSoC6/CapSense_Processing.c **** * \{
 103:Generated_Source\PSoC6/CapSense_Processing.c **** */
 104:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_LINEAR_SLIDERS)
 105:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void DpUpdateLinSlider(
 106:Generated_Source\PSoC6/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 107:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 108:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 109:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_LINEAR_SLIDERS) */
 110:Generated_Source\PSoC6/CapSense_Processing.c **** 
 111:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_RADIAL_SLIDERS)
 112:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void DpUpdateRadSlider(
 113:Generated_Source\PSoC6/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 114:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt,
 115:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 116:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_RADIAL_SLIDERS) */
 117:Generated_Source\PSoC6/CapSense_Processing.c **** 
 118:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 119:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 120:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 121:Generated_Source\PSoC6/CapSense_Processing.c **** 
 122:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 123:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 124:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 125:Generated_Source\PSoC6/CapSense_Processing.c **** 
 126:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 127:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 128:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 129:Generated_Source\PSoC6/CapSense_Processing.c **** 
 130:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 131:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 132:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 133:Generated_Source\PSoC6/CapSense_Processing.c **** 
 134:Generated_Source\PSoC6/CapSense_Processing.c **** /** \}
 135:Generated_Source\PSoC6/CapSense_Processing.c **** * \endcond */
 136:Generated_Source\PSoC6/CapSense_Processing.c **** 
 137:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 138:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 139:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdTouchpad
 140:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 141:Generated_Source\PSoC6/CapSense_Processing.c **** *
 142:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 143:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the CSD touchpad widget.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 4


 144:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the position data to NONE
 145:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Initializes the position filter history if enabled.
 146:Generated_Source\PSoC6/CapSense_Processing.c **** *
 147:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 148:Generated_Source\PSoC6/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 149:Generated_Source\PSoC6/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 150:Generated_Source\PSoC6/CapSense_Processing.c **** *
 151:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 152:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 153:Generated_Source\PSoC6/CapSense_Processing.c **** {
 154:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 155:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 touchIndex;
 156:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif
 157:Generated_Source\PSoC6/CapSense_Processing.c **** 
 158:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_TOUCHPAD_STRUCT *ptrWdTouchpad;
 159:Generated_Source\PSoC6/CapSense_Processing.c **** 
 160:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 161:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 162:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 163:Generated_Source\PSoC6/CapSense_Processing.c **** 
 164:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 165:Generated_Source\PSoC6/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 166:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 167:Generated_Source\PSoC6/CapSense_Processing.c **** 
 168:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
 169:Generated_Source\PSoC6/CapSense_Processing.c **** 
 170:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset position data */
 171:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 172:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 173:Generated_Source\PSoC6/CapSense_Processing.c ****             if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_5X5_MASK))
 174:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 175:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif
 176:Generated_Source\PSoC6/CapSense_Processing.c **** 
 177:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->position.touchNum = 0u;
 178:Generated_Source\PSoC6/CapSense_Processing.c **** 
 179:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 180:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 181:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 182:Generated_Source\PSoC6/CapSense_Processing.c **** 
 183:Generated_Source\PSoC6/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < ADVANCED_CENTROID_MAX_TOUCHES; touchIndex++)
 184:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 185:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].x = ADVANCED_CENTROID_POSITION_NONE;
 186:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].y = ADVANCED_CENTROID_POSITION_NONE;
 187:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zX = ADVANCED_CENTROID_POSITION_NONE;
 188:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zY = ADVANCED_CENTROID_POSITION_NONE;
 189:Generated_Source\PSoC6/CapSense_Processing.c **** 
 190:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Clear position filter history data if available */
 191:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 192:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrHistory)
 193:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 194:Generated_Source\PSoC6/CapSense_Processing.c ****                     CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, 
 195:Generated_Source\PSoC6/CapSense_Processing.c ****                     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 196:Generated_Source\PSoC6/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 197:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 198:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 199:Generated_Source\PSoC6/CapSense_Processing.c ****                     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 200:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 5


 201:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 202:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 203:Generated_Source\PSoC6/CapSense_Processing.c **** 
 204:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 205:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 206:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif
 207:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif
 208:Generated_Source\PSoC6/CapSense_Processing.c **** 
 209:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 210:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_3X3_MASK))
 211:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 212:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->posX = CapSense_TOUCHPAD_POS_NONE;
 213:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->posY = CapSense_TOUCHPAD_POS_NONE;
 214:Generated_Source\PSoC6/CapSense_Processing.c **** 
 215:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Clear position filter history data if available */
 216:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 217:Generated_Source\PSoC6/CapSense_Processing.c ****                 ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 218:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(ptrHistory, CapSense_TOUCHPAD_POS_NONE, CapSense_TOUCHPAD
 219:Generated_Source\PSoC6/CapSense_Processing.c **** 
 220:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 221:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (NULL != ptrHistory)
 222:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 223:Generated_Source\PSoC6/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 224:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory->xPos.posAIIRCoeff = adpContext.coefficient;
 225:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory->yPos.posAIIRCoeff = adpContext.coefficient;
 226:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 227:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 228:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 229:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 230:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif
 231:Generated_Source\PSoC6/CapSense_Processing.c **** }
 232:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 233:Generated_Source\PSoC6/CapSense_Processing.c **** 
 234:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 235:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 236:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsxTouchpad
 237:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 238:Generated_Source\PSoC6/CapSense_Processing.c **** *
 239:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 240:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the CSX touchpad widget i.e. Resets the position data to NONE.
 241:Generated_Source\PSoC6/CapSense_Processing.c **** *
 242:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 243:Generated_Source\PSoC6/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 244:Generated_Source\PSoC6/CapSense_Processing.c **** *
 245:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 246:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 247:Generated_Source\PSoC6/CapSense_Processing.c **** {
 248:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_CSX_TOUCHPAD_STRUCT *ptrWdTouchpad;
 249:Generated_Source\PSoC6/CapSense_Processing.c **** 
 250:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 251:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 touchIndex;
 252:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 253:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 254:Generated_Source\PSoC6/CapSense_Processing.c **** 
 255:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 256:Generated_Source\PSoC6/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 257:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 6


 258:Generated_Source\PSoC6/CapSense_Processing.c **** 
 259:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
 260:Generated_Source\PSoC6/CapSense_Processing.c **** 
 261:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 262:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 263:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 264:Generated_Source\PSoC6/CapSense_Processing.c **** 
 265:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset position data for finger */
 266:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].x = CapSense_TOUCHPAD_POS_NONE;
 267:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].y = CapSense_TOUCHPAD_POS_NONE;
 268:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].z = CY_LO8(CapSense_TOUCHPAD_POS_NONE);
 269:Generated_Source\PSoC6/CapSense_Processing.c **** 
 270:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 1u)
 271:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].x = CapSense_TOUCHPAD_POS_NONE;
 272:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].y = CapSense_TOUCHPAD_POS_NONE;
 273:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].z = CY_LO8(CapSense_TOUCHPAD_POS_NONE);
 274:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 1u) */
 275:Generated_Source\PSoC6/CapSense_Processing.c **** 
 276:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 2u)
 277:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].x = CapSense_TOUCHPAD_POS_NONE;
 278:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].y = CapSense_TOUCHPAD_POS_NONE;
 279:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].z = CY_LO8(CapSense_TOUCHPAD_POS_NONE);
 280:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 2u) */
 281:Generated_Source\PSoC6/CapSense_Processing.c **** 
 282:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 283:Generated_Source\PSoC6/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < CapSense_CSX_MAX_FINGERS; touchIndex++)
 284:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 285:Generated_Source\PSoC6/CapSense_Processing.c ****             if (NULL != ptrHistory)
 286:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 287:Generated_Source\PSoC6/CapSense_Processing.c ****                 /* Clear position filter history data if available */
 288:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, CapS
 289:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 290:Generated_Source\PSoC6/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 291:Generated_Source\PSoC6/CapSense_Processing.c ****                     ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 292:Generated_Source\PSoC6/CapSense_Processing.c ****                     ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 293:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 294:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 295:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 296:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 297:Generated_Source\PSoC6/CapSense_Processing.c **** }
 298:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 299:Generated_Source\PSoC6/CapSense_Processing.c **** 
 300:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 301:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 302:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitSlider
 303:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 304:Generated_Source\PSoC6/CapSense_Processing.c **** *
 305:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 306:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the Radial and Linear Slider widget.
 307:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the position data to NONE
 308:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Initializes the position filter history to NONE if enabled.
 309:Generated_Source\PSoC6/CapSense_Processing.c **** *
 310:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 311:Generated_Source\PSoC6/CapSense_Processing.c **** *  Position data is always reset to the CapSense_SLIDER_POS_NONE value.
 312:Generated_Source\PSoC6/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 313:Generated_Source\PSoC6/CapSense_Processing.c **** *
 314:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 7


 315:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 316:Generated_Source\PSoC6/CapSense_Processing.c **** {
 317:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 idx;
 318:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_SLIDER_STRUCT *ptrWdSlider;
 319:Generated_Source\PSoC6/CapSense_Processing.c **** 
 320:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 321:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_SLIDER_POS_HISTORY_STRUCT *ptrHistory;
 322:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 323:Generated_Source\PSoC6/CapSense_Processing.c **** 
 324:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 325:Generated_Source\PSoC6/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT context;
 326:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 327:Generated_Source\PSoC6/CapSense_Processing.c **** 
 328:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdSlider = ptrFlashWdgt->ptr2WdgtRam;
 329:Generated_Source\PSoC6/CapSense_Processing.c **** 
 330:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset slider position data to NONE */
 331:Generated_Source\PSoC6/CapSense_Processing.c ****     for (idx = 0u; idx < CapSense_NUM_CENTROIDS; idx++)
 332:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 333:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdSlider->position[idx] = CapSense_SLIDER_POS_NONE;
 334:Generated_Source\PSoC6/CapSense_Processing.c **** 
 335:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 336:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 337:Generated_Source\PSoC6/CapSense_Processing.c ****             if (NULL != ptrHistory)
 338:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 339:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_InitPosFiltersSd(&ptrHistory[idx], CapSense_SLIDER_POS_NONE);
 340:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 341:Generated_Source\PSoC6/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdSlider->aiirConfig, &context);
 342:Generated_Source\PSoC6/CapSense_Processing.c ****                     ptrHistory->posAIIRCoeff = context.coefficient;
 343:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 344:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 345:Generated_Source\PSoC6/CapSense_Processing.c **** 
 346:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 347:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 348:Generated_Source\PSoC6/CapSense_Processing.c **** }
 349:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 350:Generated_Source\PSoC6/CapSense_Processing.c **** 
 351:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 352:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 353:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdMatrix
 354:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 355:Generated_Source\PSoC6/CapSense_Processing.c **** *
 356:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 357:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the CSD Matrix Buttons widget.
 358:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the active button position data to NONE.
 359:Generated_Source\PSoC6/CapSense_Processing.c **** *
 360:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 361:Generated_Source\PSoC6/CapSense_Processing.c **** *  Position data is always reset to the CapSense_MATRIX_POS_NONE value.
 362:Generated_Source\PSoC6/CapSense_Processing.c **** *
 363:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 364:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 365:Generated_Source\PSoC6/CapSense_Processing.c **** {
 366:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_MATRIX_STRUCT *ptrRamWdgt;
 367:Generated_Source\PSoC6/CapSense_Processing.c **** 
 368:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_CSD_MATRIX_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 369:Generated_Source\PSoC6/CapSense_Processing.c **** 
 370:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset sensor id, row and col registers in data structure */
 371:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->posRow   = CapSense_MATRIX_POS_NONE;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 8


 372:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->posCol   = CapSense_MATRIX_POS_NONE;
 373:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->posSnsId = CapSense_MATRIX_POS_NONE;
 374:Generated_Source\PSoC6/CapSense_Processing.c **** }
 375:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 376:Generated_Source\PSoC6/CapSense_Processing.c **** 
 377:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 378:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitialize
 379:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 380:Generated_Source\PSoC6/CapSense_Processing.c **** *
 381:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 382:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the data processing FW module:
 383:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the de-bounce counters of all the widgets
 384:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the position filter history for slider and touchpad widgets
 385:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Clears widget and sensor statuses
 386:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Enables all the widgets.
 387:Generated_Source\PSoC6/CapSense_Processing.c **** *
 388:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 389:Generated_Source\PSoC6/CapSense_Processing.c **** *  The Button and Matrix Button widgets have individual de-bounce counter per
 390:Generated_Source\PSoC6/CapSense_Processing.c **** *  sensor for the CSD widgets and per node for the CSX widgets.
 391:Generated_Source\PSoC6/CapSense_Processing.c **** *
 392:Generated_Source\PSoC6/CapSense_Processing.c **** *  The Slider and Touchpad widgets have a single de-bounce counter per widget.
 393:Generated_Source\PSoC6/CapSense_Processing.c **** *
 394:Generated_Source\PSoC6/CapSense_Processing.c **** *  The Proximity widget has two de-bounce counters per sensor. One for the
 395:Generated_Source\PSoC6/CapSense_Processing.c **** *  proximity event and second for the touch event.
 396:Generated_Source\PSoC6/CapSense_Processing.c **** *
 397:Generated_Source\PSoC6/CapSense_Processing.c **** *  All debounce counters during initialization are set to the value of the
 398:Generated_Source\PSoC6/CapSense_Processing.c **** *  onDebounce widget parameter.
 399:Generated_Source\PSoC6/CapSense_Processing.c **** *
 400:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 401:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpInitialize(void)
 402:Generated_Source\PSoC6/CapSense_Processing.c **** {
  29              		.loc 1 402 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 403:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdgtId;
 404:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 405:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT * ptrRamWdgt;
 406:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt;
 407:Generated_Source\PSoC6/CapSense_Processing.c **** 
 408:Generated_Source\PSoC6/CapSense_Processing.c ****     for (wdgtId = 0u; wdgtId < CapSense_WDGT_STATUS_WORDS; wdgtId++)
  40              		.loc 1 408 0
  41 0002 0023     		movs	r3, #0
  42 0004 0AE0     		b	.L2
  43              	.LVL1:
  44              	.L3:
 409:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 410:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Clear widget status */
 411:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdgtId] = 0u;
  45              		.loc 1 411 0 discriminator 3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 9


  46 0006 124A     		ldr	r2, .L9
  47 0008 191D     		adds	r1, r3, #4
  48 000a 02EB8100 		add	r0, r2, r1, lsl #2
  49 000e 0024     		movs	r4, #0
  50 0010 4460     		str	r4, [r0, #4]
 412:Generated_Source\PSoC6/CapSense_Processing.c **** 
 413:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Enable all the widgets */
 414:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtEnable[wdgtId] = 0xFFFFFFFFLu;
  51              		.loc 1 414 0 discriminator 3
  52 0012 4FF0FF30 		mov	r0, #-1
  53 0016 42F82100 		str	r0, [r2, r1, lsl #2]
 408:Generated_Source\PSoC6/CapSense_Processing.c ****     {
  54              		.loc 1 408 0 discriminator 3
  55 001a 0133     		adds	r3, r3, #1
  56              	.LVL2:
  57              	.L2:
 408:Generated_Source\PSoC6/CapSense_Processing.c ****     {
  58              		.loc 1 408 0 is_stmt 0 discriminator 1
  59 001c 002B     		cmp	r3, #0
  60 001e F2D0     		beq	.L3
  61 0020 0C4C     		ldr	r4, .L9+4
  62 0022 0123     		movs	r3, #1
  63              	.LVL3:
  64 0024 0FE0     		b	.L4
  65              	.LVL4:
  66              	.L7:
 415:Generated_Source\PSoC6/CapSense_Processing.c **** 
 416:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Set all the widgets to working state if the Self-Test is not enabled */
 417:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_SELF_TEST_EN)
 418:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_dsRam.wdgtWorking[wdgtId] = 0xFFFFFFFFLu;
 419:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u == CapSense_SELF_TEST_EN) */
 420:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 421:Generated_Source\PSoC6/CapSense_Processing.c **** 
 422:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrFlashWdgt = CapSense_dsFlash.wdgtArray;
 423:Generated_Source\PSoC6/CapSense_Processing.c **** 
 424:Generated_Source\PSoC6/CapSense_Processing.c ****     for (wdgtId = CapSense_TOTAL_WIDGETS; wdgtId-- > 0u; )
 425:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 426:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
  67              		.loc 1 426 0 is_stmt 1
  68 0026 6668     		ldr	r6, [r4, #4]
  69              	.LVL5:
 427:Generated_Source\PSoC6/CapSense_Processing.c ****         widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
  70              		.loc 1 427 0
  71 0028 A27E     		ldrb	r2, [r4, #26]	@ zero_extendqisi2
  72              	.LVL6:
 428:Generated_Source\PSoC6/CapSense_Processing.c **** 
 429:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Clear all sensor statuses */
 430:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.snsStatus[wdgtId] = 0u;
  73              		.loc 1 430 0
  74 002a 094B     		ldr	r3, .L9
  75 002c 2B44     		add	r3, r3, r5
  76 002e 0021     		movs	r1, #0
  77 0030 1976     		strb	r1, [r3, #24]
 431:Generated_Source\PSoC6/CapSense_Processing.c **** 
 432:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Reset de-bounce counters */
 433:Generated_Source\PSoC6/CapSense_Processing.c ****         switch (widgetType)
  78              		.loc 1 433 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 10


  79 0032 012A     		cmp	r2, #1
  80 0034 05D1     		bne	.L5
 434:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 435:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_MATRIX_WIDGET_EN)
 436:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_MATRIX_BUTTON_E:
 437:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 438:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 439:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 440:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_DpInitCsdMatrix(ptrFlashWdgt);
 441:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 442:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 443:Generated_Source\PSoC6/CapSense_Processing.c **** 
 444:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 445:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 446:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 447:Generated_Source\PSoC6/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 448:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 449:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 450:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 451:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 452:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_MATRIX_WIDGET_EN) */
 453:Generated_Source\PSoC6/CapSense_Processing.c **** 
 454:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_BUTTON_WIDGET_EN)
 455:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_BUTTON_E:
 456:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
  81              		.loc 1 456 0
  82 0036 2069     		ldr	r0, [r4, #16]
  83 0038 18B1     		cbz	r0, .L5
 457:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 458:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 459:Generated_Source\PSoC6/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
  84              		.loc 1 459 0
  85 003a 228B     		ldrh	r2, [r4, #24]
  86              	.LVL7:
  87 003c F179     		ldrb	r1, [r6, #7]	@ zero_extendqisi2
  88 003e FFF7FEFF 		bl	memset
  89              	.LVL8:
  90              	.L5:
 460:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 461:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 462:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 463:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 464:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 465:Generated_Source\PSoC6/CapSense_Processing.c **** 
 466:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_SLIDER_WIDGET_EN)
 467:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_LINEAR_SLIDER_E:
 468:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_RADIAL_SLIDER_E:
 469:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 470:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 471:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize single debounce counter of slider */
 472:Generated_Source\PSoC6/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 473:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 474:Generated_Source\PSoC6/CapSense_Processing.c **** 
 475:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_DpInitSlider(ptrFlashWdgt);
 476:Generated_Source\PSoC6/CapSense_Processing.c **** 
 477:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 478:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 11


 479:Generated_Source\PSoC6/CapSense_Processing.c **** 
 480:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_TOUCHPAD_WIDGET_EN)
 481:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_TOUCHPAD_E:
 482:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 483:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 484:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize single debounce counter of touchpad */
 485:Generated_Source\PSoC6/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 486:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 487:Generated_Source\PSoC6/CapSense_Processing.c **** 
 488:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 489:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 490:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 491:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_DpInitCsdTouchpad(ptrFlashWdgt);
 492:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 493:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 494:Generated_Source\PSoC6/CapSense_Processing.c **** 
 495:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 496:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSX_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 497:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 498:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_DpInitCsxTouchpad(ptrFlashWdgt);
 499:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 500:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 501:Generated_Source\PSoC6/CapSense_Processing.c **** 
 502:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 503:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_TOUCHPAD_WIDGET_EN) */
 504:Generated_Source\PSoC6/CapSense_Processing.c **** 
 505:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 506:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_PROXIMITY_E:
 507:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 508:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 509:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 510:Generated_Source\PSoC6/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
 511:Generated_Source\PSoC6/CapSense_Processing.c ****                      */
 512:Generated_Source\PSoC6/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 513:Generated_Source\PSoC6/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 514:Generated_Source\PSoC6/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns * 2u);
 515:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 516:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 517:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
 518:Generated_Source\PSoC6/CapSense_Processing.c **** 
 519:Generated_Source\PSoC6/CapSense_Processing.c ****             default:
 520:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 521:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 522:Generated_Source\PSoC6/CapSense_Processing.c **** 
 523:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move to next widget */
 524:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrFlashWdgt++;
  91              		.loc 1 524 0
  92 0042 1C34     		adds	r4, r4, #28
  93              	.LVL9:
 424:Generated_Source\PSoC6/CapSense_Processing.c ****     {
  94              		.loc 1 424 0
  95 0044 2B46     		mov	r3, r5
  96              	.LVL10:
  97              	.L4:
 424:Generated_Source\PSoC6/CapSense_Processing.c ****     {
  98              		.loc 1 424 0 is_stmt 0 discriminator 1
  99 0046 5D1E     		subs	r5, r3, #1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 12


 100              	.LVL11:
 101 0048 002B     		cmp	r3, #0
 102 004a ECD1     		bne	.L7
 525:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 526:Generated_Source\PSoC6/CapSense_Processing.c **** }
 103              		.loc 1 526 0 is_stmt 1
 104 004c 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL12:
 106              	.L10:
 107 004e 00BF     		.align	2
 108              	.L9:
 109 0050 00000000 		.word	CapSense_dsRam
 110 0054 00000000 		.word	CapSense_dsFlash
 111              		.cfi_endproc
 112              	.LFE132:
 113              		.size	CapSense_DpInitialize, .-CapSense_DpInitialize
 114              		.section	.text.CapSense_DpUpdateDifferences,"ax",%progbits
 115              		.align	2
 116              		.global	CapSense_DpUpdateDifferences
 117              		.thumb
 118              		.thumb_func
 119              		.type	CapSense_DpUpdateDifferences, %function
 120              	CapSense_DpUpdateDifferences:
 121              	.LFB136:
 527:Generated_Source\PSoC6/CapSense_Processing.c **** 
 528:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSX_WIDGETS)
 529:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 530:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetRawCounts
 531:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 532:Generated_Source\PSoC6/CapSense_Processing.c **** *
 533:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 534:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts.
 535:Generated_Source\PSoC6/CapSense_Processing.c **** *
 536:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 537:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts:
 538:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Run Filters
 539:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Update Baselines
 540:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Update Differences
 541:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Update Status.
 542:Generated_Source\PSoC6/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
 543:Generated_Source\PSoC6/CapSense_Processing.c **** *
 544:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 545:Generated_Source\PSoC6/CapSense_Processing.c **** *
 546:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 547:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 548:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 549:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 550:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 551:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 552:Generated_Source\PSoC6/CapSense_Processing.c **** *
 553:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 555:Generated_Source\PSoC6/CapSense_Processing.c **** {
 556:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 result = CY_RET_SUCCESS;
 557:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 widgetType;
 558:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 snsCount;
 559:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 13


 560:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 561:Generated_Source\PSoC6/CapSense_Processing.c **** 
 562:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 563:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 564:Generated_Source\PSoC6/CapSense_Processing.c **** 
 565:Generated_Source\PSoC6/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 566:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 567:Generated_Source\PSoC6/CapSense_Processing.c **** 
 568:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 569:Generated_Source\PSoC6/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 570:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 571:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 572:Generated_Source\PSoC6/CapSense_Processing.c **** 
 573:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Run deconvolution algorithm for the widgets with multiphase TX support */
 574:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
 575:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_MULTIPHASE_TX_MASK))
 576:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 577:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_DpDeconvolution(ptrFlashWdgt);
 578:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 579:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_CSX_MULTIPHASE_TX_EN) */
 580:Generated_Source\PSoC6/CapSense_Processing.c **** 
 581:Generated_Source\PSoC6/CapSense_Processing.c ****     for (;snsCount-- > 0u;)
 582:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 583:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 584:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
 585:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 586:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
 587:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 588:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 589:Generated_Source\PSoC6/CapSense_Processing.c **** 
 590:Generated_Source\PSoC6/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 591:Generated_Source\PSoC6/CapSense_Processing.c **** 
 592:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 593:Generated_Source\PSoC6/CapSense_Processing.c ****             if (CY_RET_SUCCESS != result)
 594:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 595:Generated_Source\PSoC6/CapSense_Processing.c ****                 result = snsCount | CapSense_PROCESS_BASELINE_FAILED;
 596:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 597:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 598:Generated_Source\PSoC6/CapSense_Processing.c **** 
 599:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
 600:Generated_Source\PSoC6/CapSense_Processing.c **** 
 601:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move pointers to the next sensor and filter history objects */
 602:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrSnsTmp++;
 603:Generated_Source\PSoC6/CapSense_Processing.c ****         
 604:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 605:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_INC_REG_FLTR_OBJ(fltrHistV);
 606:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 607:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 608:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 609:Generated_Source\PSoC6/CapSense_Processing.c **** }
 610:Generated_Source\PSoC6/CapSense_Processing.c **** 
 611:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 612:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxSensorRawCountsExt
 613:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 614:Generated_Source\PSoC6/CapSense_Processing.c **** *
 615:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 616:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 14


 617:Generated_Source\PSoC6/CapSense_Processing.c **** *
 618:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 619:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 620:Generated_Source\PSoC6/CapSense_Processing.c **** *
 621:Generated_Source\PSoC6/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 622:Generated_Source\PSoC6/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
 623:Generated_Source\PSoC6/CapSense_Processing.c **** *
 624:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 625:Generated_Source\PSoC6/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the specific RAM Sensor Object.
 626:Generated_Source\PSoC6/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 627:Generated_Source\PSoC6/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 628:Generated_Source\PSoC6/CapSense_Processing.c **** *   The mode parameters can take the following values:
 629:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 630:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 631:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 632:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 633:Generated_Source\PSoC6/CapSense_Processing.c **** *
 634:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 635:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 636:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 637:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 638:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 639:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 640:Generated_Source\PSoC6/CapSense_Processing.c **** *
 641:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 642:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxSensorRawCountsExt(
 643:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 644:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
 645:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 646:Generated_Source\PSoC6/CapSense_Processing.c ****                 uint32 mode)
 647:Generated_Source\PSoC6/CapSense_Processing.c **** {
 648:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  result = CY_RET_SUCCESS;
 649:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 650:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 651:Generated_Source\PSoC6/CapSense_Processing.c **** 
 652:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 653:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 654:Generated_Source\PSoC6/CapSense_Processing.c **** 
 655:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 656:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 657:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 658:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
 659:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 660:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
 661:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 662:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 663:Generated_Source\PSoC6/CapSense_Processing.c ****     #else
 664:Generated_Source\PSoC6/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 665:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 666:Generated_Source\PSoC6/CapSense_Processing.c **** 
 667:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 668:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 669:Generated_Source\PSoC6/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
 670:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 671:Generated_Source\PSoC6/CapSense_Processing.c **** 
 672:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 673:Generated_Source\PSoC6/CapSense_Processing.c ****     {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 15


 674:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
 675:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 676:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 677:Generated_Source\PSoC6/CapSense_Processing.c **** }
 678:Generated_Source\PSoC6/CapSense_Processing.c **** 
 679:Generated_Source\PSoC6/CapSense_Processing.c **** 
 680:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 681:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetStatus
 682:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 683:Generated_Source\PSoC6/CapSense_Processing.c **** *
 684:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 685:Generated_Source\PSoC6/CapSense_Processing.c **** *   Updates the status of the CSX widget in the Data Structure.
 686:Generated_Source\PSoC6/CapSense_Processing.c **** *
 687:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 688:Generated_Source\PSoC6/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 689:Generated_Source\PSoC6/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 690:Generated_Source\PSoC6/CapSense_Processing.c **** *
 691:Generated_Source\PSoC6/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 692:Generated_Source\PSoC6/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 693:Generated_Source\PSoC6/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 694:Generated_Source\PSoC6/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 695:Generated_Source\PSoC6/CapSense_Processing.c **** *
 696:Generated_Source\PSoC6/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 697:Generated_Source\PSoC6/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the CSX Touchpad
 698:Generated_Source\PSoC6/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 699:Generated_Source\PSoC6/CapSense_Processing.c **** *  active.
 700:Generated_Source\PSoC6/CapSense_Processing.c **** *
 701:Generated_Source\PSoC6/CapSense_Processing.c **** * \param widgetId     The widget ID number.
 702:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 703:Generated_Source\PSoC6/CapSense_Processing.c **** *
 704:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 705:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpProcessCsxWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
 706:Generated_Source\PSoC6/CapSense_Processing.c **** {
 707:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 sensorStatus;
 708:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusIndex;
 709:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusMask;
 710:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 711:Generated_Source\PSoC6/CapSense_Processing.c **** 
 712:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 713:Generated_Source\PSoC6/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 714:Generated_Source\PSoC6/CapSense_Processing.c **** 
 715:Generated_Source\PSoC6/CapSense_Processing.c ****     switch (widgetType)
 716:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 717:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 718:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 719:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 720:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 721:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 722:Generated_Source\PSoC6/CapSense_Processing.c **** 
 723:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MATRIX_WIDGET_EN)
 724:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
 725:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 726:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 727:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_MATRIX_WIDGET_EN) */
 728:Generated_Source\PSoC6/CapSense_Processing.c **** 
 729:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 730:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 16


 731:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsxTouchpad(sensorStatus, ptrFlashWdgt);
 732:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 733:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 734:Generated_Source\PSoC6/CapSense_Processing.c **** 
 735:Generated_Source\PSoC6/CapSense_Processing.c ****     default:
 736:Generated_Source\PSoC6/CapSense_Processing.c ****         CY_ASSERT(0 != 0);
 737:Generated_Source\PSoC6/CapSense_Processing.c ****         break;
 738:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 739:Generated_Source\PSoC6/CapSense_Processing.c **** 
 740:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 741:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
 742:Generated_Source\PSoC6/CapSense_Processing.c **** 
 743:Generated_Source\PSoC6/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 744:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
 745:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 746:Generated_Source\PSoC6/CapSense_Processing.c **** 
 747:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
 748:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u == sensorStatus)
 749:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 750:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 751:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 752:Generated_Source\PSoC6/CapSense_Processing.c ****     else
 753:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 754:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 755:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 756:Generated_Source\PSoC6/CapSense_Processing.c **** }
 757:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_CSX_WIDGETS */
 758:Generated_Source\PSoC6/CapSense_Processing.c **** 
 759:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSD_WIDGETS)
 760:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 761:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetRawCounts
 762:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 763:Generated_Source\PSoC6/CapSense_Processing.c **** *
 764:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 765:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts.
 766:Generated_Source\PSoC6/CapSense_Processing.c **** *
 767:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 768:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts:
 769:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Run Filters
 770:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Update Thresholds (FW Auto-tuning)
 771:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Update Baselines
 772:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Update Differences.
 773:Generated_Source\PSoC6/CapSense_Processing.c **** *   The process is applied to all widget's sensors.
 774:Generated_Source\PSoC6/CapSense_Processing.c **** *
 775:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 776:Generated_Source\PSoC6/CapSense_Processing.c **** *
 777:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 778:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 779:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 780:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 781:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 782:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 783:Generated_Source\PSoC6/CapSense_Processing.c **** *
 784:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 785:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 786:Generated_Source\PSoC6/CapSense_Processing.c **** {
 787:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  result = CY_RET_SUCCESS;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 17


 788:Generated_Source\PSoC6/CapSense_Processing.c **** 
 789:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 790:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 bslnTstResult = CY_RET_SUCCESS;
 791:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 792:Generated_Source\PSoC6/CapSense_Processing.c **** 
 793:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 794:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  snsId;
 795:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
 796:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 797:Generated_Source\PSoC6/CapSense_Processing.c **** 
 798:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 799:Generated_Source\PSoC6/CapSense_Processing.c ****         /* The noise envelope data is available only when Full CSD Auto-Tuning is enabled */
 800:Generated_Source\PSoC6/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
 801:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 802:Generated_Source\PSoC6/CapSense_Processing.c ****             uint32  proximityThreshold;
 803:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 804:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 805:Generated_Source\PSoC6/CapSense_Processing.c **** 
 806:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 807:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 808:Generated_Source\PSoC6/CapSense_Processing.c **** 
 809:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Determine if widget type is proximity */
 810:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 isProxWdgt = (CapSense_GET_WIDGET_TYPE(ptrFlashWdgt) == CapSense_WD_PROXIMITY_E) ? 1
 811:Generated_Source\PSoC6/CapSense_Processing.c **** 
 812:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Get pointer to the filter history object */
 813:Generated_Source\PSoC6/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 814:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 815:Generated_Source\PSoC6/CapSense_Processing.c **** 
 816:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 817:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 818:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 819:Generated_Source\PSoC6/CapSense_Processing.c **** 
 820:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 821:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
 822:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 823:Generated_Source\PSoC6/CapSense_Processing.c **** 
 824:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Iterate through all widget's sensors */
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     for(snsId = 0u; snsId < ptrFlashWdgt->totalNumSns; snsId++)
 826:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 827:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Run all enabled filter on specified widget's sensor */
 828:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 829:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
 830:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
 832:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 833:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 834:Generated_Source\PSoC6/CapSense_Processing.c **** 
 835:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Run auto-tuning activities */
 836:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 837:Generated_Source\PSoC6/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(ptrSnsTmp->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
 838:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, snsId);
 839:Generated_Source\PSoC6/CapSense_Processing.c **** 
 840:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
 841:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 842:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
 843:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 844:Generated_Source\PSoC6/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 18


 845:Generated_Source\PSoC6/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
 846:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 847:Generated_Source\PSoC6/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
 848:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 849:Generated_Source\PSoC6/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
 850:Generated_Source\PSoC6/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
 851:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 852:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 853:Generated_Source\PSoC6/CapSense_Processing.c **** 
 854:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Move to next noise-envelope object */
 855:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrNoiseEnvelope++;
 856:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 857:Generated_Source\PSoC6/CapSense_Processing.c **** 
 858:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 859:Generated_Source\PSoC6/CapSense_Processing.c ****             bslnTstResult = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 860:Generated_Source\PSoC6/CapSense_Processing.c ****             if ((CY_RET_SUCCESS != bslnTstResult) && (CY_RET_SUCCESS == result))
 861:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 862:Generated_Source\PSoC6/CapSense_Processing.c ****                 result = snsId | CapSense_PROCESS_BASELINE_FAILED;
 863:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 864:Generated_Source\PSoC6/CapSense_Processing.c ****         #else /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 865:Generated_Source\PSoC6/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 866:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 867:Generated_Source\PSoC6/CapSense_Processing.c **** 
 868:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
 869:Generated_Source\PSoC6/CapSense_Processing.c **** 
 870:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move to next sensor object */
 871:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrSnsTmp++;
 872:Generated_Source\PSoC6/CapSense_Processing.c **** 
 873:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 874:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Move to the next filter history object */
 875:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_INC_FLTR_OBJ_VARIANT(isProxWdgt, fltrHistV);
 876:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 877:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 878:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 879:Generated_Source\PSoC6/CapSense_Processing.c **** }
 880:Generated_Source\PSoC6/CapSense_Processing.c **** 
 881:Generated_Source\PSoC6/CapSense_Processing.c **** 
 882:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 883:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdSensorRawCountsExt
 884:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 885:Generated_Source\PSoC6/CapSense_Processing.c **** *
 886:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 887:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
 888:Generated_Source\PSoC6/CapSense_Processing.c **** *
 889:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 890:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
 891:Generated_Source\PSoC6/CapSense_Processing.c **** *
 892:Generated_Source\PSoC6/CapSense_Processing.c **** *   Note that this API updates data associated only with the sensor. It cannot be used to update
 893:Generated_Source\PSoC6/CapSense_Processing.c **** *   widget status.
 894:Generated_Source\PSoC6/CapSense_Processing.c **** *
 895:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 896:Generated_Source\PSoC6/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the sensor object in RAM.
 897:Generated_Source\PSoC6/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM.
 898:Generated_Source\PSoC6/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 899:Generated_Source\PSoC6/CapSense_Processing.c **** *   The mode parameters can take the following values:
 900:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 901:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 19


 902:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 903:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_CALC_NOISE (0x08) Calculate Noise (only if FW Tuning is enabled)
 904:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_THRESHOLDS (0x10) Update Thresholds (only if FW Tuning is enabled)
 905:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 906:Generated_Source\PSoC6/CapSense_Processing.c **** *
 907:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 908:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 909:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 910:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 911:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 912:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 913:Generated_Source\PSoC6/CapSense_Processing.c **** *
 914:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 915:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdSensorRawCountsExt(
 916:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 917:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
 918:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 919:Generated_Source\PSoC6/CapSense_Processing.c ****                  uint32 mode)
 920:Generated_Source\PSoC6/CapSense_Processing.c **** {
 921:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 result = CY_RET_SUCCESS;
 922:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 923:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 924:Generated_Source\PSoC6/CapSense_Processing.c **** 
 925:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 926:Generated_Source\PSoC6/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
 927:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 928:Generated_Source\PSoC6/CapSense_Processing.c ****             uint32  proximityThreshold;
 929:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 930:Generated_Source\PSoC6/CapSense_Processing.c **** 
 931:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Need to specify pointer to corresponding sensor's noise-envelope object.*/
 932:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
 933:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 934:Generated_Source\PSoC6/CapSense_Processing.c **** 
 935:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 936:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 937:Generated_Source\PSoC6/CapSense_Processing.c **** 
 938:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 939:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 940:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 941:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
 942:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 943:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
 944:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 945:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 946:Generated_Source\PSoC6/CapSense_Processing.c ****     #else
 947:Generated_Source\PSoC6/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 948:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 949:Generated_Source\PSoC6/CapSense_Processing.c **** 
 950:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 951:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_CALC_NOISE))
 952:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 953:Generated_Source\PSoC6/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(curSnsPtr->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
 954:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 955:Generated_Source\PSoC6/CapSense_Processing.c **** 
 956:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_THRESHOLDS))
 957:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 958:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, 0u);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 20


 959:Generated_Source\PSoC6/CapSense_Processing.c **** 
 960:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
 961:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 962:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
 963:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 964:Generated_Source\PSoC6/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
 965:Generated_Source\PSoC6/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
 966:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 967:Generated_Source\PSoC6/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
 968:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 969:Generated_Source\PSoC6/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
 970:Generated_Source\PSoC6/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
 971:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 972:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 973:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 974:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 975:Generated_Source\PSoC6/CapSense_Processing.c **** 
 976:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 977:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 978:Generated_Source\PSoC6/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
 979:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 980:Generated_Source\PSoC6/CapSense_Processing.c **** 
 981:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 982:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 983:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
 984:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 985:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 986:Generated_Source\PSoC6/CapSense_Processing.c **** }
 987:Generated_Source\PSoC6/CapSense_Processing.c **** 
 988:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 989:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetStatus
 990:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 991:Generated_Source\PSoC6/CapSense_Processing.c **** *
 992:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 993:Generated_Source\PSoC6/CapSense_Processing.c **** *  Runs the status processing of the CSD widget and updates it in the Data Structure.
 994:Generated_Source\PSoC6/CapSense_Processing.c **** *
 995:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 996:Generated_Source\PSoC6/CapSense_Processing.c **** *  This API determines the widget type and calls the appropriate low-level processing
 997:Generated_Source\PSoC6/CapSense_Processing.c **** *  function. Based on the returned results it updates the widget and sensor
 998:Generated_Source\PSoC6/CapSense_Processing.c **** *  status in the data structure. Any widget specific registers like the centroid
 999:Generated_Source\PSoC6/CapSense_Processing.c **** *  position are updated directly in the low-level processing function.
1000:Generated_Source\PSoC6/CapSense_Processing.c **** *
1001:Generated_Source\PSoC6/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
1002:Generated_Source\PSoC6/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
1003:Generated_Source\PSoC6/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
1004:Generated_Source\PSoC6/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
1005:Generated_Source\PSoC6/CapSense_Processing.c **** *
1006:Generated_Source\PSoC6/CapSense_Processing.c **** *  The snsStatus register for CSD widgets contains status of each widget sensor
1007:Generated_Source\PSoC6/CapSense_Processing.c **** *  (active/non-active). Each bit corresponds to one sensor. In case of the
1008:Generated_Source\PSoC6/CapSense_Processing.c **** *  Proximity widget two bits are used per sensor: one for proximity status and
1009:Generated_Source\PSoC6/CapSense_Processing.c **** *  second for the touch status.
1010:Generated_Source\PSoC6/CapSense_Processing.c **** *
1011:Generated_Source\PSoC6/CapSense_Processing.c **** * \param widgetId      The widget index number.
1012:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt  The pointer to the Flash widget structure.
1013:Generated_Source\PSoC6/CapSense_Processing.c **** *
1014:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1015:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpProcessCsdWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 21


1016:Generated_Source\PSoC6/CapSense_Processing.c **** {
1017:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 sensorStatus;
1018:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusIndex;
1019:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusMask;
1020:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
1021:Generated_Source\PSoC6/CapSense_Processing.c **** 
1022:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
1023:Generated_Source\PSoC6/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
1024:Generated_Source\PSoC6/CapSense_Processing.c **** 
1025:Generated_Source\PSoC6/CapSense_Processing.c ****     switch (widgetType)
1026:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1027:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
1028:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
1029:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
1030:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1031:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
1032:Generated_Source\PSoC6/CapSense_Processing.c **** 
1033:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_SLIDER_WIDGET_EN)
1034:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_LINEAR_SLIDER_E:
1035:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_RADIAL_SLIDER_E:
1036:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessSlider(sensorStatus, ptrFlashWdgt);
1037:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1038:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
1039:Generated_Source\PSoC6/CapSense_Processing.c **** 
1040:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
1041:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
1042:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdMatrix(sensorStatus, ptrFlashWdgt);
1043:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1044:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
1045:Generated_Source\PSoC6/CapSense_Processing.c **** 
1046:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
1047:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
1048:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdTouchpad(sensorStatus, ptrFlashWdgt);
1049:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_BALLISTIC_MULTIPLIER_EN)
1050:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_RunBallisticMultiplier(widgetId);
1051:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0u != CapSense_BALLISTIC_MULTIPLIER_EN) */
1052:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1053:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1054:Generated_Source\PSoC6/CapSense_Processing.c **** 
1055:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
1056:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
1057:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
1058:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1059:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
1060:Generated_Source\PSoC6/CapSense_Processing.c **** 
1061:Generated_Source\PSoC6/CapSense_Processing.c ****     default:
1062:Generated_Source\PSoC6/CapSense_Processing.c ****         CY_ASSERT(0 != 0);
1063:Generated_Source\PSoC6/CapSense_Processing.c ****         break;
1064:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1065:Generated_Source\PSoC6/CapSense_Processing.c **** 
1066:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
1067:Generated_Source\PSoC6/CapSense_Processing.c **** 
1068:Generated_Source\PSoC6/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
1069:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
1070:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
1071:Generated_Source\PSoC6/CapSense_Processing.c **** 
1072:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 22


1073:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u == sensorStatus)
1074:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1075:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
1076:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1077:Generated_Source\PSoC6/CapSense_Processing.c ****     else
1078:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1079:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
1080:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1081:Generated_Source\PSoC6/CapSense_Processing.c **** }
1082:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
1083:Generated_Source\PSoC6/CapSense_Processing.c **** 
1084:Generated_Source\PSoC6/CapSense_Processing.c **** 
1085:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1086:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
1087:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateThresholds
1088:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
1089:Generated_Source\PSoC6/CapSense_Processing.c **** *
1090:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
1091:Generated_Source\PSoC6/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1092:Generated_Source\PSoC6/CapSense_Processing.c **** *
1093:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
1094:Generated_Source\PSoC6/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1095:Generated_Source\PSoC6/CapSense_Processing.c **** *   This algorithm is a part of Auto-tuning feature.
1096:Generated_Source\PSoC6/CapSense_Processing.c **** *
1097:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrRamWdgt       The pointer to the RAM widget object.
1098:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrNoiseEnvelope The pointer to the noise-envelope object in RAM.
1099:Generated_Source\PSoC6/CapSense_Processing.c **** * \param startFlag        The flag indicates when new widget is processed.
1100:Generated_Source\PSoC6/CapSense_Processing.c **** *
1101:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1102:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpUpdateThresholds(CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1103:Generated_Source\PSoC6/CapSense_Processing.c ****                                          SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope,
1104:Generated_Source\PSoC6/CapSense_Processing.c ****                                          uint32 startFlag)
1105:Generated_Source\PSoC6/CapSense_Processing.c **** {
1106:Generated_Source\PSoC6/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT thresholds;
1107:Generated_Source\PSoC6/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT *ptrThresholds = &thresholds;
1108:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrThresholds->fingerTh = ptrRamWdgt->fingerTh;
1109:Generated_Source\PSoC6/CapSense_Processing.c **** 
1110:Generated_Source\PSoC6/CapSense_Processing.c ****     SmartSense_UpdateThresholds(ptrNoiseEnvelope, ptrThresholds, ptrRamWdgt->sigPFC, startFlag);
1111:Generated_Source\PSoC6/CapSense_Processing.c **** 
1112:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->fingerTh = ptrThresholds->fingerTh;
1113:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->noiseTh = ptrThresholds->noiseTh;
1114:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->nNoiseTh = ptrThresholds->nNoiseTh;
1115:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->hysteresis = ptrThresholds->hysteresis;
1116:Generated_Source\PSoC6/CapSense_Processing.c **** }
1117:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1118:Generated_Source\PSoC6/CapSense_Processing.c **** 
1119:Generated_Source\PSoC6/CapSense_Processing.c **** 
1120:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
1121:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateDifferences
1122:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
1123:Generated_Source\PSoC6/CapSense_Processing.c **** *
1124:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
1125:Generated_Source\PSoC6/CapSense_Processing.c **** *   Calculates new difference values.
1126:Generated_Source\PSoC6/CapSense_Processing.c **** *   Also, executes the multi-frequency scan algorithm if it is enabled.
1127:Generated_Source\PSoC6/CapSense_Processing.c **** *
1128:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
1129:Generated_Source\PSoC6/CapSense_Processing.c **** *   This API calculates the difference between the baseline and raw counts.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 23


1130:Generated_Source\PSoC6/CapSense_Processing.c **** *   If the difference is positive (raw > baseline), and higher than the widget
1131:Generated_Source\PSoC6/CapSense_Processing.c **** *   noise threshold, it is saved into the data structure for further processing.
1132:Generated_Source\PSoC6/CapSense_Processing.c **** *   Otherwise the difference is set to zero. The final difference value is saved
1133:Generated_Source\PSoC6/CapSense_Processing.c **** *   with the subtracted noise threshold value.
1134:Generated_Source\PSoC6/CapSense_Processing.c **** *
1135:Generated_Source\PSoC6/CapSense_Processing.c **** *   If the multi-frequency scan algorithm is enabled, the difference is calculated
1136:Generated_Source\PSoC6/CapSense_Processing.c **** *   for the three sets of data available for each sensor. Then
1137:Generated_Source\PSoC6/CapSense_Processing.c **** *   the median filter selects the final difference value.
1138:Generated_Source\PSoC6/CapSense_Processing.c **** *
1139:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrRamWdgt The pointer to the RAR Widget Object.
1140:Generated_Source\PSoC6/CapSense_Processing.c **** * \param curSnsPtr  The pointer to the sensor object in RAM.
1141:Generated_Source\PSoC6/CapSense_Processing.c **** *
1142:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1143:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpUpdateDifferences(
1144:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1145:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_SNS_STRUCT *curSnsPtr)
1146:Generated_Source\PSoC6/CapSense_Processing.c **** {
 122              		.loc 1 1146 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.LVL13:
 128 0000 30B4     		push	{r4, r5}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 5, -4
 132              	.LVL14:
1147:Generated_Source\PSoC6/CapSense_Processing.c ****     register int32 diffValue = 0;
1148:Generated_Source\PSoC6/CapSense_Processing.c **** 
1149:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1150:Generated_Source\PSoC6/CapSense_Processing.c ****         register int32 diffValue_0 = 0;
1151:Generated_Source\PSoC6/CapSense_Processing.c ****         register int32 diffValue_2 = 0;
1152:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1153:Generated_Source\PSoC6/CapSense_Processing.c **** 
1154:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Calculate difference */
1155:Generated_Source\PSoC6/CapSense_Processing.c ****     diffValue = (int32)curSnsPtr->raw[0u] - (int32)curSnsPtr->bsln[0u];
 133              		.loc 1 1155 0
 134 0002 0B88     		ldrh	r3, [r1]
 135 0004 4A88     		ldrh	r2, [r1, #2]
 136 0006 9C1A     		subs	r4, r3, r2
 137              	.LVL15:
1156:Generated_Source\PSoC6/CapSense_Processing.c **** 
1157:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1158:Generated_Source\PSoC6/CapSense_Processing.c ****         diffValue_0 = (int32)curSnsPtr->raw[1u] - (int32)curSnsPtr->bsln[1u];
1159:Generated_Source\PSoC6/CapSense_Processing.c ****         diffValue_2 = (int32)curSnsPtr->raw[2u] - (int32)curSnsPtr->bsln[2u];
1160:Generated_Source\PSoC6/CapSense_Processing.c **** 
1161:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Find median and put it into [0u] element */
1162:Generated_Source\PSoC6/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1163:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1164:Generated_Source\PSoC6/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1165:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue_0 = diffValue;
1166:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue = swapv;
1167:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1168:Generated_Source\PSoC6/CapSense_Processing.c **** 
1169:Generated_Source\PSoC6/CapSense_Processing.c ****         if (diffValue > diffValue_2)
1170:Generated_Source\PSoC6/CapSense_Processing.c ****         {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 24


1171:Generated_Source\PSoC6/CapSense_Processing.c ****             register int32 swapv = diffValue;
1172:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue = diffValue_2;
1173:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue_2 = swapv;
1174:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1175:Generated_Source\PSoC6/CapSense_Processing.c **** 
1176:Generated_Source\PSoC6/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1177:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1178:Generated_Source\PSoC6/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1179:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue_0 = diffValue;
1180:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue = swapv;
1181:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1182:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1183:Generated_Source\PSoC6/CapSense_Processing.c **** 
1184:Generated_Source\PSoC6/CapSense_Processing.c ****     curSnsPtr->diff = 0u;
 138              		.loc 1 1184 0
 139 0008 0025     		movs	r5, #0
 140 000a CD80     		strh	r5, [r1, #6]	@ movhi
1185:Generated_Source\PSoC6/CapSense_Processing.c **** 
1186:Generated_Source\PSoC6/CapSense_Processing.c ****     if (diffValue > (int32)ptrRamWdgt->noiseTh)
 141              		.loc 1 1186 0
 142 000c 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 143              	.LVL16:
 144 000e 8442     		cmp	r4, r0
 145 0010 00DD     		ble	.L11
1187:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1188:Generated_Source\PSoC6/CapSense_Processing.c ****         curSnsPtr->diff = (CapSense_THRESHOLD_TYPE) diffValue;
 146              		.loc 1 1188 0
 147 0012 CC80     		strh	r4, [r1, #6]	@ movhi
 148              	.L11:
1189:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1190:Generated_Source\PSoC6/CapSense_Processing.c **** }
 149              		.loc 1 1190 0
 150 0014 30BC     		pop	{r4, r5}
 151              		.cfi_restore 5
 152              		.cfi_restore 4
 153              		.cfi_def_cfa_offset 0
 154              	.LVL17:
 155 0016 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE136:
 158              		.size	CapSense_DpUpdateDifferences, .-CapSense_DpUpdateDifferences
 159              		.section	.text.CapSense_DpProcessCsdWidgetRawCounts,"ax",%progbits
 160              		.align	2
 161              		.global	CapSense_DpProcessCsdWidgetRawCounts
 162              		.thumb
 163              		.thumb_func
 164              		.type	CapSense_DpProcessCsdWidgetRawCounts, %function
 165              	CapSense_DpProcessCsdWidgetRawCounts:
 166              	.LFB133:
 786:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  result = CY_RET_SUCCESS;
 167              		.loc 1 786 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              	.LVL18:
 172 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 173              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 25


 174              		.cfi_offset 3, -32
 175              		.cfi_offset 4, -28
 176              		.cfi_offset 5, -24
 177              		.cfi_offset 6, -20
 178              		.cfi_offset 7, -16
 179              		.cfi_offset 8, -12
 180              		.cfi_offset 9, -8
 181              		.cfi_offset 14, -4
 182 0004 0746     		mov	r7, r0
 183              	.LVL19:
 816:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 184              		.loc 1 816 0
 185 0006 8468     		ldr	r4, [r0, #8]
 186              	.LVL20:
 817:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 187              		.loc 1 817 0
 188 0008 4668     		ldr	r6, [r0, #4]
 189              	.LVL21:
 818:Generated_Source\PSoC6/CapSense_Processing.c **** 
 190              		.loc 1 818 0
 191 000a 90F81A90 		ldrb	r9, [r0, #26]	@ zero_extendqisi2
 192              	.LVL22:
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 193              		.loc 1 825 0
 194 000e 0025     		movs	r5, #0
 787:Generated_Source\PSoC6/CapSense_Processing.c **** 
 195              		.loc 1 787 0
 196 0010 A846     		mov	r8, r5
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 197              		.loc 1 825 0
 198 0012 0BE0     		b	.L15
 199              	.LVL23:
 200              	.L16:
 865:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 201              		.loc 1 865 0 discriminator 3
 202 0014 4A46     		mov	r2, r9
 203 0016 2146     		mov	r1, r4
 204 0018 3046     		mov	r0, r6
 205 001a FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 206              	.LVL24:
 207 001e 8046     		mov	r8, r0
 208              	.LVL25:
 868:Generated_Source\PSoC6/CapSense_Processing.c **** 
 209              		.loc 1 868 0 discriminator 3
 210 0020 2146     		mov	r1, r4
 211 0022 3046     		mov	r0, r6
 212              	.LVL26:
 213 0024 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 214              	.LVL27:
 871:Generated_Source\PSoC6/CapSense_Processing.c **** 
 215              		.loc 1 871 0 discriminator 3
 216 0028 0A34     		adds	r4, r4, #10
 217              	.LVL28:
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 218              		.loc 1 825 0 discriminator 3
 219 002a 0135     		adds	r5, r5, #1
 220              	.LVL29:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 26


 221              	.L15:
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 222              		.loc 1 825 0 is_stmt 0 discriminator 1
 223 002c 3B8B     		ldrh	r3, [r7, #24]
 224 002e 9D42     		cmp	r5, r3
 225 0030 F0D3     		bcc	.L16
 879:Generated_Source\PSoC6/CapSense_Processing.c **** 
 226              		.loc 1 879 0 is_stmt 1
 227 0032 4046     		mov	r0, r8
 228 0034 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 229              		.cfi_endproc
 230              	.LFE133:
 231              		.size	CapSense_DpProcessCsdWidgetRawCounts, .-CapSense_DpProcessCsdWidgetRawCounts
 232              		.section	.text.CapSense_DpProcessCsdSensorRawCountsExt,"ax",%progbits
 233              		.align	2
 234              		.global	CapSense_DpProcessCsdSensorRawCountsExt
 235              		.thumb
 236              		.thumb_func
 237              		.type	CapSense_DpProcessCsdSensorRawCountsExt, %function
 238              	CapSense_DpProcessCsdSensorRawCountsExt:
 239              	.LFB134:
 920:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 result = CY_RET_SUCCESS;
 240              		.loc 1 920 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              	.LVL30:
 245 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 246              		.cfi_def_cfa_offset 24
 247              		.cfi_offset 3, -24
 248              		.cfi_offset 4, -20
 249              		.cfi_offset 5, -16
 250              		.cfi_offset 6, -12
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 0F46     		mov	r7, r1
 254 0004 1C46     		mov	r4, r3
 255              	.LVL31:
 935:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 256              		.loc 1 935 0
 257 0006 827E     		ldrb	r2, [r0, #26]	@ zero_extendqisi2
 258              	.LVL32:
 936:Generated_Source\PSoC6/CapSense_Processing.c **** 
 259              		.loc 1 936 0
 260 0008 4668     		ldr	r6, [r0, #4]
 261              	.LVL33:
 976:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 262              		.loc 1 976 0
 263 000a 13F0020F 		tst	r3, #2
 264 000e 04D0     		beq	.L21
 978:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 265              		.loc 1 978 0
 266 0010 3046     		mov	r0, r6
 267              	.LVL34:
 268 0012 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 269              	.LVL35:
 270 0016 0546     		mov	r5, r0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 27


 271              	.LVL36:
 272 0018 00E0     		b	.L19
 273              	.LVL37:
 274              	.L21:
 921:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 275              		.loc 1 921 0
 276 001a 0025     		movs	r5, #0
 277              	.LVL38:
 278              	.L19:
 981:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 279              		.loc 1 981 0
 280 001c 14F0040F 		tst	r4, #4
 281 0020 03D0     		beq	.L20
 983:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 282              		.loc 1 983 0
 283 0022 3946     		mov	r1, r7
 284 0024 3046     		mov	r0, r6
 285 0026 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 286              	.LVL39:
 287              	.L20:
 986:Generated_Source\PSoC6/CapSense_Processing.c **** 
 288              		.loc 1 986 0
 289 002a 2846     		mov	r0, r5
 290 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 291              		.cfi_endproc
 292              	.LFE134:
 293              		.size	CapSense_DpProcessCsdSensorRawCountsExt, .-CapSense_DpProcessCsdSensorRawCountsExt
 294 002e 00BF     		.section	.text.CapSense_DpProcessButton,"ax",%progbits
 295              		.align	2
 296              		.global	CapSense_DpProcessButton
 297              		.thumb
 298              		.thumb_func
 299              		.type	CapSense_DpProcessButton, %function
 300              	CapSense_DpProcessButton:
 301              	.LFB137:
1191:Generated_Source\PSoC6/CapSense_Processing.c **** 
1192:Generated_Source\PSoC6/CapSense_Processing.c **** 
1193:Generated_Source\PSoC6/CapSense_Processing.c **** #if ((0u != CapSense_BUTTON_WIDGET_EN) || (0u != CapSense_CSX_MATRIX_WIDGET_EN))
1194:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
1195:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessButton
1196:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Processing.c **** *
1198:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
1199:Generated_Source\PSoC6/CapSense_Processing.c **** *   Processes the status of the Button widget.
1200:Generated_Source\PSoC6/CapSense_Processing.c **** *
1201:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
1202:Generated_Source\PSoC6/CapSense_Processing.c **** *   This API processes the status of the CSD/CSX Button widget and
1203:Generated_Source\PSoC6/CapSense_Processing.c **** *   CSX Matrix Button widget. It applies the hysteresis and de-bounce algorithm
1204:Generated_Source\PSoC6/CapSense_Processing.c **** *   to each sensor difference value. This API is expected to be called
1205:Generated_Source\PSoC6/CapSense_Processing.c **** *   after each new widget scan. If it is called multiple times for the same
1206:Generated_Source\PSoC6/CapSense_Processing.c **** *   scan data, the de-bounce algorithm will not work properly.
1207:Generated_Source\PSoC6/CapSense_Processing.c **** *
1208:Generated_Source\PSoC6/CapSense_Processing.c **** *   This API does not update any Data Structure registers
1209:Generated_Source\PSoC6/CapSense_Processing.c **** *   except the de-bounce counters.
1210:Generated_Source\PSoC6/CapSense_Processing.c **** *
1211:Generated_Source\PSoC6/CapSense_Processing.c **** * \param currStatus   The current status of the widget sensors.
1212:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 28


1213:Generated_Source\PSoC6/CapSense_Processing.c **** *
1214:Generated_Source\PSoC6/CapSense_Processing.c **** * \return Returns the status of the widget's sensors. Bit #0 - corresponds to Sensor #0.
1215:Generated_Source\PSoC6/CapSense_Processing.c **** *
1216:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1217:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessButton(uint32 currStatus, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1218:Generated_Source\PSoC6/CapSense_Processing.c **** {
 302              		.loc 1 1218 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              	.LVL40:
 307 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 308              		.cfi_def_cfa_offset 20
 309              		.cfi_offset 4, -20
 310              		.cfi_offset 5, -16
 311              		.cfi_offset 6, -12
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
1219:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 snsCnt;
1220:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 snsMask;
1221:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 newStatus;
1222:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 touchTh;
1223:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1224:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1225:Generated_Source\PSoC6/CapSense_Processing.c ****     uint8 * ptrDebounceCnt;
1226:Generated_Source\PSoC6/CapSense_Processing.c **** 
1227:Generated_Source\PSoC6/CapSense_Processing.c ****     snsCnt = ptrFlashWdgt->totalNumSns;
 314              		.loc 1 1227 0
 315 0002 0C8B     		ldrh	r4, [r1, #24]
 316              	.LVL41:
1228:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 317              		.loc 1 1228 0
 318 0004 8D68     		ldr	r5, [r1, #8]
 319              	.LVL42:
1229:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 320              		.loc 1 1229 0
 321 0006 4F68     		ldr	r7, [r1, #4]
 322              	.LVL43:
1230:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
 323              		.loc 1 1230 0
 324 0008 0A69     		ldr	r2, [r1, #16]
 325              	.LVL44:
1231:Generated_Source\PSoC6/CapSense_Processing.c **** 
1232:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Go through all widget's sensors */
1233:Generated_Source\PSoC6/CapSense_Processing.c ****     snsMask = 1Lu;
 326              		.loc 1 1233 0
 327 000a 0123     		movs	r3, #1
1234:Generated_Source\PSoC6/CapSense_Processing.c ****     for (; snsCnt-- > 0u; )
 328              		.loc 1 1234 0
 329 000c 24E0     		b	.L24
 330              	.LVL45:
 331              	.L32:
1235:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1236:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Calculate touch threshold taking into account hysteresis
1237:Generated_Source\PSoC6/CapSense_Processing.c ****            and current sensor state. */
1238:Generated_Source\PSoC6/CapSense_Processing.c ****         touchTh = (0u == (currStatus & snsMask)) ?
1239:Generated_Source\PSoC6/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh + ptrRamWdgt->hysteresis) :
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 29


 332              		.loc 1 1239 0
 333 000e 10EA0304 		ands	r4, r0, r3
 334 0012 03D1     		bne	.L25
 335              		.loc 1 1239 0 is_stmt 0 discriminator 1
 336 0014 7E88     		ldrh	r6, [r7, #2]
 337 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 338 0018 3144     		add	r1, r1, r6
 339 001a 02E0     		b	.L26
 340              	.L25:
1240:Generated_Source\PSoC6/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh - ptrRamWdgt->hysteresis);
 341              		.loc 1 1240 0 is_stmt 1 discriminator 2
 342 001c 7988     		ldrh	r1, [r7, #2]
 343 001e BE79     		ldrb	r6, [r7, #6]	@ zero_extendqisi2
1239:Generated_Source\PSoC6/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh - ptrRamWdgt->hysteresis);
 344              		.loc 1 1239 0 discriminator 2
 345 0020 891B     		subs	r1, r1, r6
 346              	.L26:
 347              	.LVL46:
1241:Generated_Source\PSoC6/CapSense_Processing.c **** 
1242:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Determine new potential sensor state */
1243:Generated_Source\PSoC6/CapSense_Processing.c ****         newStatus = (ptrSnsTmp->diff > touchTh) ? snsMask : 0u;
 348              		.loc 1 1243 0
 349 0022 EE88     		ldrh	r6, [r5, #6]
 350 0024 B142     		cmp	r1, r6
 351 0026 01D3     		bcc	.L33
 352 0028 0021     		movs	r1, #0
 353              	.LVL47:
 354 002a 00E0     		b	.L27
 355              	.LVL48:
 356              	.L33:
 357 002c 1946     		mov	r1, r3
 358              	.LVL49:
 359              	.L27:
1244:Generated_Source\PSoC6/CapSense_Processing.c **** 
1245:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Sensor state changed ? */
1246:Generated_Source\PSoC6/CapSense_Processing.c ****         if (newStatus != (currStatus & snsMask))
 360              		.loc 1 1246 0 discriminator 4
 361 002e A142     		cmp	r1, r4
 362 0030 02D0     		beq	.L28
1247:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1248:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Decrement de-bounce counter */
1249:Generated_Source\PSoC6/CapSense_Processing.c ****             (*ptrDebounceCnt)--;
 363              		.loc 1 1249 0
 364 0032 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 365 0034 013E     		subs	r6, r6, #1
 366 0036 1670     		strb	r6, [r2]
 367              	.L28:
1250:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1251:Generated_Source\PSoC6/CapSense_Processing.c **** 
1252:Generated_Source\PSoC6/CapSense_Processing.c ****         /*
1253:Generated_Source\PSoC6/CapSense_Processing.c ****         *  This piece of code has two objectives:
1254:Generated_Source\PSoC6/CapSense_Processing.c ****         *  1. Reset de-bounce counter if the sensor state did not change.
1255:Generated_Source\PSoC6/CapSense_Processing.c ****         *     (It is possible that during previous processing cycles sensor
1256:Generated_Source\PSoC6/CapSense_Processing.c ****         *     was active and de-bounce counter was decremented.)
1257:Generated_Source\PSoC6/CapSense_Processing.c ****         *  2. Set new sensor state after successful de-bounce.
1258:Generated_Source\PSoC6/CapSense_Processing.c ****         */
1259:Generated_Source\PSoC6/CapSense_Processing.c ****         if ((newStatus == (currStatus & snsMask)) || (0u == (*ptrDebounceCnt)))
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 30


 368              		.loc 1 1259 0
 369 0038 A142     		cmp	r1, r4
 370 003a 01D0     		beq	.L29
 371              		.loc 1 1259 0 is_stmt 0 discriminator 1
 372 003c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 373 003e 3CB9     		cbnz	r4, .L30
 374              	.L29:
1260:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1261:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Set new sensor status */
1262:Generated_Source\PSoC6/CapSense_Processing.c ****             currStatus &= ~snsMask;
 375              		.loc 1 1262 0 is_stmt 1
 376 0040 20EA0300 		bic	r0, r0, r3
 377              	.LVL50:
1263:Generated_Source\PSoC6/CapSense_Processing.c ****             currStatus |= newStatus;
 378              		.loc 1 1263 0
 379 0044 0843     		orrs	r0, r0, r1
 380              	.LVL51:
1264:Generated_Source\PSoC6/CapSense_Processing.c **** 
1265:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Reset de-bounce counter */
1266:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_OFF_DEBOUNCE_EN)
1267:Generated_Source\PSoC6/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : ptrRamWdgt->offDebo
1268:Generated_Source\PSoC6/CapSense_Processing.c ****             #else
1269:Generated_Source\PSoC6/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : DEFAULT_OFF_DEBOUNC
 381              		.loc 1 1269 0
 382 0046 09B9     		cbnz	r1, .L34
 383              		.loc 1 1269 0 is_stmt 0 discriminator 1
 384 0048 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 385              	.LVL52:
 386 004a 00E0     		b	.L31
 387              	.LVL53:
 388              	.L34:
 389              		.loc 1 1269 0
 390 004c 0121     		movs	r1, #1
 391              	.LVL54:
 392              	.L31:
 393              		.loc 1 1269 0 discriminator 4
 394 004e 1170     		strb	r1, [r2]
 395              	.L30:
1270:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* #if (0u != CapSense_OFF_DEBOUNCE_EN) */
1271:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1272:Generated_Source\PSoC6/CapSense_Processing.c **** 
1273:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move mask to the next sensor */
1274:Generated_Source\PSoC6/CapSense_Processing.c ****         snsMask <<= 1u;
 396              		.loc 1 1274 0 is_stmt 1
 397 0050 5B00     		lsls	r3, r3, #1
 398              	.LVL55:
1275:Generated_Source\PSoC6/CapSense_Processing.c **** 
1276:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrSnsTmp++;
 399              		.loc 1 1276 0
 400 0052 0A35     		adds	r5, r5, #10
 401              	.LVL56:
1277:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrDebounceCnt++;
 402              		.loc 1 1277 0
 403 0054 0132     		adds	r2, r2, #1
 404              	.LVL57:
1234:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 405              		.loc 1 1234 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 31


 406 0056 7446     		mov	r4, lr
 407              	.LVL58:
 408              	.L24:
 409 0058 04F1FF3E 		add	lr, r4, #-1
 410              	.LVL59:
 411 005c 002C     		cmp	r4, #0
 412 005e D6D1     		bne	.L32
1278:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1279:Generated_Source\PSoC6/CapSense_Processing.c **** 
1280:Generated_Source\PSoC6/CapSense_Processing.c ****     return currStatus;
1281:Generated_Source\PSoC6/CapSense_Processing.c **** }
 413              		.loc 1 1281 0
 414 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 415              		.cfi_endproc
 416              	.LFE137:
 417              		.size	CapSense_DpProcessButton, .-CapSense_DpProcessButton
 418 0062 00BF     		.section	.text.CapSense_DpProcessCsdWidgetStatus,"ax",%progbits
 419              		.align	2
 420              		.global	CapSense_DpProcessCsdWidgetStatus
 421              		.thumb
 422              		.thumb_func
 423              		.type	CapSense_DpProcessCsdWidgetStatus, %function
 424              	CapSense_DpProcessCsdWidgetStatus:
 425              	.LFB135:
1016:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 sensorStatus;
 426              		.loc 1 1016 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              	.LVL60:
 431 0000 38B5     		push	{r3, r4, r5, lr}
 432              		.cfi_def_cfa_offset 16
 433              		.cfi_offset 3, -16
 434              		.cfi_offset 4, -12
 435              		.cfi_offset 5, -8
 436              		.cfi_offset 14, -4
 437 0002 0446     		mov	r4, r0
1022:Generated_Source\PSoC6/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 438              		.loc 1 1022 0
 439 0004 8A7E     		ldrb	r2, [r1, #26]	@ zero_extendqisi2
 440              	.LVL61:
1023:Generated_Source\PSoC6/CapSense_Processing.c **** 
 441              		.loc 1 1023 0
 442 0006 154B     		ldr	r3, .L44
 443 0008 0344     		add	r3, r3, r0
 444 000a 1D7E     		ldrb	r5, [r3, #24]	@ zero_extendqisi2
 445              	.LVL62:
1025:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 446              		.loc 1 1025 0
 447 000c 012A     		cmp	r2, #1
 448 000e 04D1     		bne	.L42
1029:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 449              		.loc 1 1029 0
 450 0010 2846     		mov	r0, r5
 451              	.LVL63:
 452 0012 FFF7FEFF 		bl	CapSense_DpProcessButton
 453              	.LVL64:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 32


 454 0016 0546     		mov	r5, r0
 455              	.LVL65:
1030:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 456              		.loc 1 1030 0
 457 0018 04E0     		b	.L39
 458              	.LVL66:
 459              	.L42:
1062:Generated_Source\PSoC6/CapSense_Processing.c ****         break;
 460              		.loc 1 1062 0 discriminator 1
 461 001a 40F22641 		movw	r1, #1062
 462              	.LVL67:
 463 001e 1048     		ldr	r0, .L44+4
 464              	.LVL68:
 465 0020 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 466              	.LVL69:
 467              	.L39:
1066:Generated_Source\PSoC6/CapSense_Processing.c **** 
 468              		.loc 1 1066 0
 469 0024 0D4B     		ldr	r3, .L44
 470 0026 2344     		add	r3, r3, r4
 471 0028 1D76     		strb	r5, [r3, #24]
1069:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 472              		.loc 1 1069 0
 473 002a 6209     		lsrs	r2, r4, #5
 474              	.LVL70:
1070:Generated_Source\PSoC6/CapSense_Processing.c **** 
 475              		.loc 1 1070 0
 476 002c 04F01F04 		and	r4, r4, #31
 477              	.LVL71:
 478 0030 0123     		movs	r3, #1
 479 0032 03FA04F4 		lsl	r4, r3, r4
 480              	.LVL72:
1073:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 481              		.loc 1 1073 0
 482 0036 45B9     		cbnz	r5, .L40
1075:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 483              		.loc 1 1075 0
 484 0038 0432     		adds	r2, r2, #4
 485              	.LVL73:
 486 003a 084B     		ldr	r3, .L44
 487 003c 03EB8202 		add	r2, r3, r2, lsl #2
 488              	.LVL74:
 489 0040 5368     		ldr	r3, [r2, #4]
 490 0042 23EA0404 		bic	r4, r3, r4
 491              	.LVL75:
 492 0046 5460     		str	r4, [r2, #4]
 493 0048 38BD     		pop	{r3, r4, r5, pc}
 494              	.LVL76:
 495              	.L40:
1079:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 496              		.loc 1 1079 0
 497 004a 0432     		adds	r2, r2, #4
 498              	.LVL77:
 499 004c 034B     		ldr	r3, .L44
 500 004e 03EB8202 		add	r2, r3, r2, lsl #2
 501              	.LVL78:
 502 0052 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 33


 503 0054 1C43     		orrs	r4, r4, r3
 504              	.LVL79:
 505 0056 5460     		str	r4, [r2, #4]
 506 0058 38BD     		pop	{r3, r4, r5, pc}
 507              	.LVL80:
 508              	.L45:
 509 005a 00BF     		.align	2
 510              	.L44:
 511 005c 00000000 		.word	CapSense_dsRam
 512 0060 00000000 		.word	.LC0
 513              		.cfi_endproc
 514              	.LFE135:
 515              		.size	CapSense_DpProcessCsdWidgetStatus, .-CapSense_DpProcessCsdWidgetStatus
 516              		.section	.rodata.str1.4,"aMS",%progbits,1
 517              		.align	2
 518              	.LC0:
 519 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Processing.c\000"
 519      72617465 
 519      645F536F 
 519      75726365 
 519      5C50536F 
 520              		.text
 521              	.Letext0:
 522              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 523              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 524              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 525              		.file 5 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 526              		.file 6 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 527              		.file 7 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 528              		.file 8 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 529              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 530              		.file 10 "Generated_Source\\PSoC6\\CapSense_Filter.h"
 531              		.section	.debug_info,"",%progbits
 532              	.Ldebug_info0:
 533 0000 A1090000 		.4byte	0x9a1
 534 0004 0400     		.2byte	0x4
 535 0006 00000000 		.4byte	.Ldebug_abbrev0
 536 000a 04       		.byte	0x4
 537 000b 01       		.uleb128 0x1
 538 000c 8C040000 		.4byte	.LASF127
 539 0010 0C       		.byte	0xc
 540 0011 50000000 		.4byte	.LASF128
 541 0015 56020000 		.4byte	.LASF129
 542 0019 00000000 		.4byte	.Ldebug_ranges0+0
 543 001d 00000000 		.4byte	0
 544 0021 00000000 		.4byte	.Ldebug_line0
 545 0025 02       		.uleb128 0x2
 546 0026 01       		.byte	0x1
 547 0027 06       		.byte	0x6
 548 0028 77010000 		.4byte	.LASF0
 549 002c 03       		.uleb128 0x3
 550 002d 31000000 		.4byte	.LASF3
 551 0031 02       		.byte	0x2
 552 0032 1D       		.byte	0x1d
 553 0033 37000000 		.4byte	0x37
 554 0037 02       		.uleb128 0x2
 555 0038 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 34


 556 0039 08       		.byte	0x8
 557 003a D6050000 		.4byte	.LASF1
 558 003e 02       		.uleb128 0x2
 559 003f 02       		.byte	0x2
 560 0040 05       		.byte	0x5
 561 0041 89030000 		.4byte	.LASF2
 562 0045 03       		.uleb128 0x3
 563 0046 8A060000 		.4byte	.LASF4
 564 004a 02       		.byte	0x2
 565 004b 2B       		.byte	0x2b
 566 004c 50000000 		.4byte	0x50
 567 0050 02       		.uleb128 0x2
 568 0051 02       		.byte	0x2
 569 0052 07       		.byte	0x7
 570 0053 1E020000 		.4byte	.LASF5
 571 0057 03       		.uleb128 0x3
 572 0058 B8060000 		.4byte	.LASF6
 573 005c 02       		.byte	0x2
 574 005d 3F       		.byte	0x3f
 575 005e 62000000 		.4byte	0x62
 576 0062 02       		.uleb128 0x2
 577 0063 04       		.byte	0x4
 578 0064 05       		.byte	0x5
 579 0065 DA010000 		.4byte	.LASF7
 580 0069 03       		.uleb128 0x3
 581 006a 43020000 		.4byte	.LASF8
 582 006e 02       		.byte	0x2
 583 006f 41       		.byte	0x41
 584 0070 74000000 		.4byte	0x74
 585 0074 02       		.uleb128 0x2
 586 0075 04       		.byte	0x4
 587 0076 07       		.byte	0x7
 588 0077 0E030000 		.4byte	.LASF9
 589 007b 02       		.uleb128 0x2
 590 007c 08       		.byte	0x8
 591 007d 05       		.byte	0x5
 592 007e 69010000 		.4byte	.LASF10
 593 0082 02       		.uleb128 0x2
 594 0083 08       		.byte	0x8
 595 0084 07       		.byte	0x7
 596 0085 95000000 		.4byte	.LASF11
 597 0089 04       		.uleb128 0x4
 598 008a 04       		.byte	0x4
 599 008b 05       		.byte	0x5
 600 008c 696E7400 		.ascii	"int\000"
 601 0090 02       		.uleb128 0x2
 602 0091 04       		.byte	0x4
 603 0092 07       		.byte	0x7
 604 0093 F1020000 		.4byte	.LASF12
 605 0097 03       		.uleb128 0x3
 606 0098 6D070000 		.4byte	.LASF13
 607 009c 03       		.byte	0x3
 608 009d 18       		.byte	0x18
 609 009e 2C000000 		.4byte	0x2c
 610 00a2 03       		.uleb128 0x3
 611 00a3 FE010000 		.4byte	.LASF14
 612 00a7 03       		.byte	0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 35


 613 00a8 24       		.byte	0x24
 614 00a9 45000000 		.4byte	0x45
 615 00ad 03       		.uleb128 0x3
 616 00ae CE050000 		.4byte	.LASF15
 617 00b2 03       		.byte	0x3
 618 00b3 2C       		.byte	0x2c
 619 00b4 57000000 		.4byte	0x57
 620 00b8 03       		.uleb128 0x3
 621 00b9 4C060000 		.4byte	.LASF16
 622 00bd 03       		.byte	0x3
 623 00be 30       		.byte	0x30
 624 00bf 69000000 		.4byte	0x69
 625 00c3 03       		.uleb128 0x3
 626 00c4 2A000000 		.4byte	.LASF17
 627 00c8 04       		.byte	0x4
 628 00c9 D8       		.byte	0xd8
 629 00ca 90000000 		.4byte	0x90
 630 00ce 02       		.uleb128 0x2
 631 00cf 08       		.byte	0x8
 632 00d0 04       		.byte	0x4
 633 00d1 74060000 		.4byte	.LASF18
 634 00d5 02       		.uleb128 0x2
 635 00d6 04       		.byte	0x4
 636 00d7 07       		.byte	0x7
 637 00d8 7D070000 		.4byte	.LASF19
 638 00dc 05       		.uleb128 0x5
 639 00dd 40030000 		.4byte	.LASF20
 640 00e1 05       		.byte	0x5
 641 00e2 F601     		.2byte	0x1f6
 642 00e4 E8000000 		.4byte	0xe8
 643 00e8 02       		.uleb128 0x2
 644 00e9 01       		.byte	0x1
 645 00ea 08       		.byte	0x8
 646 00eb 80060000 		.4byte	.LASF21
 647 00ef 02       		.uleb128 0x2
 648 00f0 04       		.byte	0x4
 649 00f1 04       		.byte	0x4
 650 00f2 57050000 		.4byte	.LASF22
 651 00f6 02       		.uleb128 0x2
 652 00f7 08       		.byte	0x8
 653 00f8 04       		.byte	0x4
 654 00f9 07020000 		.4byte	.LASF23
 655 00fd 05       		.uleb128 0x5
 656 00fe F8010000 		.4byte	.LASF24
 657 0102 05       		.byte	0x5
 658 0103 EA03     		.2byte	0x3ea
 659 0105 97000000 		.4byte	0x97
 660 0109 05       		.uleb128 0x5
 661 010a 00000000 		.4byte	.LASF25
 662 010e 05       		.byte	0x5
 663 010f EB03     		.2byte	0x3eb
 664 0111 A2000000 		.4byte	0xa2
 665 0115 05       		.uleb128 0x5
 666 0116 31020000 		.4byte	.LASF26
 667 011a 05       		.byte	0x5
 668 011b EC03     		.2byte	0x3ec
 669 011d B8000000 		.4byte	0xb8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 36


 670 0121 05       		.uleb128 0x5
 671 0122 A8010000 		.4byte	.LASF27
 672 0126 05       		.byte	0x5
 673 0127 EF03     		.2byte	0x3ef
 674 0129 AD000000 		.4byte	0xad
 675 012d 06       		.uleb128 0x6
 676 012e 04       		.byte	0x4
 677 012f 03       		.uleb128 0x3
 678 0130 2E010000 		.4byte	.LASF28
 679 0134 06       		.byte	0x6
 680 0135 D8       		.byte	0xd8
 681 0136 09010000 		.4byte	0x109
 682 013a 03       		.uleb128 0x3
 683 013b E5000000 		.4byte	.LASF29
 684 013f 06       		.byte	0x6
 685 0140 DC       		.byte	0xdc
 686 0141 FD000000 		.4byte	0xfd
 687 0145 07       		.uleb128 0x7
 688 0146 01       		.byte	0x1
 689 0147 37000000 		.4byte	0x37
 690 014b 07       		.byte	0x7
 691 014c 61       		.byte	0x61
 692 014d 76010000 		.4byte	0x176
 693 0151 08       		.uleb128 0x8
 694 0152 B9050000 		.4byte	.LASF30
 695 0156 01       		.byte	0x1
 696 0157 08       		.uleb128 0x8
 697 0158 4D010000 		.4byte	.LASF31
 698 015c 02       		.byte	0x2
 699 015d 08       		.uleb128 0x8
 700 015e 5D050000 		.4byte	.LASF32
 701 0162 03       		.byte	0x3
 702 0163 08       		.uleb128 0x8
 703 0164 B9020000 		.4byte	.LASF33
 704 0168 04       		.byte	0x4
 705 0169 08       		.uleb128 0x8
 706 016a 0C060000 		.4byte	.LASF34
 707 016e 05       		.byte	0x5
 708 016f 08       		.uleb128 0x8
 709 0170 B7070000 		.4byte	.LASF35
 710 0174 06       		.byte	0x6
 711 0175 00       		.byte	0
 712 0176 03       		.uleb128 0x3
 713 0177 CD060000 		.4byte	.LASF36
 714 017b 07       		.byte	0x7
 715 017c 68       		.byte	0x68
 716 017d 45010000 		.4byte	0x145
 717 0181 09       		.uleb128 0x9
 718 0182 0E       		.byte	0xe
 719 0183 07       		.byte	0x7
 720 0184 8C       		.byte	0x8c
 721 0185 02020000 		.4byte	0x202
 722 0189 0A       		.uleb128 0xa
 723 018a 86070000 		.4byte	.LASF37
 724 018e 07       		.byte	0x7
 725 018f 92       		.byte	0x92
 726 0190 09010000 		.4byte	0x109
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 37


 727 0194 00       		.byte	0
 728 0195 0A       		.uleb128 0xa
 729 0196 AE070000 		.4byte	.LASF38
 730 019a 07       		.byte	0x7
 731 019b 97       		.byte	0x97
 732 019c 2F010000 		.4byte	0x12f
 733 01a0 02       		.byte	0x2
 734 01a1 0A       		.uleb128 0xa
 735 01a2 38080000 		.4byte	.LASF39
 736 01a6 07       		.byte	0x7
 737 01a7 9C       		.byte	0x9c
 738 01a8 FD000000 		.4byte	0xfd
 739 01ac 04       		.byte	0x4
 740 01ad 0A       		.uleb128 0xa
 741 01ae 28040000 		.4byte	.LASF40
 742 01b2 07       		.byte	0x7
 743 01b3 A1       		.byte	0xa1
 744 01b4 FD000000 		.4byte	0xfd
 745 01b8 05       		.byte	0x5
 746 01b9 0A       		.uleb128 0xa
 747 01ba 38020000 		.4byte	.LASF41
 748 01be 07       		.byte	0x7
 749 01bf A6       		.byte	0xa6
 750 01c0 FD000000 		.4byte	0xfd
 751 01c4 06       		.byte	0x6
 752 01c5 0A       		.uleb128 0xa
 753 01c6 C2060000 		.4byte	.LASF42
 754 01ca 07       		.byte	0x7
 755 01cb AB       		.byte	0xab
 756 01cc FD000000 		.4byte	0xfd
 757 01d0 07       		.byte	0x7
 758 01d1 0A       		.uleb128 0xa
 759 01d2 2B030000 		.4byte	.LASF43
 760 01d6 07       		.byte	0x7
 761 01d7 B2       		.byte	0xb2
 762 01d8 3A010000 		.4byte	0x13a
 763 01dc 08       		.byte	0x8
 764 01dd 0A       		.uleb128 0xa
 765 01de C3030000 		.4byte	.LASF44
 766 01e2 07       		.byte	0x7
 767 01e3 BA       		.byte	0xba
 768 01e4 02020000 		.4byte	0x202
 769 01e8 09       		.byte	0x9
 770 01e9 0A       		.uleb128 0xa
 771 01ea 95060000 		.4byte	.LASF45
 772 01ee 07       		.byte	0x7
 773 01ef C3       		.byte	0xc3
 774 01f0 09010000 		.4byte	0x109
 775 01f4 0A       		.byte	0xa
 776 01f5 0A       		.uleb128 0xa
 777 01f6 91070000 		.4byte	.LASF46
 778 01fa 07       		.byte	0x7
 779 01fb C8       		.byte	0xc8
 780 01fc FD000000 		.4byte	0xfd
 781 0200 0C       		.byte	0xc
 782 0201 00       		.byte	0
 783 0202 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 38


 784 0203 FD000000 		.4byte	0xfd
 785 0207 12020000 		.4byte	0x212
 786 020b 0C       		.uleb128 0xc
 787 020c D5000000 		.4byte	0xd5
 788 0210 00       		.byte	0
 789 0211 00       		.byte	0
 790 0212 03       		.uleb128 0x3
 791 0213 9C060000 		.4byte	.LASF47
 792 0217 07       		.byte	0x7
 793 0218 C9       		.byte	0xc9
 794 0219 81010000 		.4byte	0x181
 795 021d 09       		.uleb128 0x9
 796 021e 0E       		.byte	0xe
 797 021f 07       		.byte	0x7
 798 0220 CE       		.byte	0xce
 799 0221 A0020000 		.4byte	0x2a0
 800 0225 0A       		.uleb128 0xa
 801 0226 86070000 		.4byte	.LASF37
 802 022a 07       		.byte	0x7
 803 022b D4       		.byte	0xd4
 804 022c 09010000 		.4byte	0x109
 805 0230 00       		.byte	0
 806 0231 0A       		.uleb128 0xa
 807 0232 AE070000 		.4byte	.LASF38
 808 0236 07       		.byte	0x7
 809 0237 D9       		.byte	0xd9
 810 0238 2F010000 		.4byte	0x12f
 811 023c 02       		.byte	0x2
 812 023d 0A       		.uleb128 0xa
 813 023e 38080000 		.4byte	.LASF39
 814 0242 07       		.byte	0x7
 815 0243 DE       		.byte	0xde
 816 0244 FD000000 		.4byte	0xfd
 817 0248 04       		.byte	0x4
 818 0249 0A       		.uleb128 0xa
 819 024a 28040000 		.4byte	.LASF40
 820 024e 07       		.byte	0x7
 821 024f E3       		.byte	0xe3
 822 0250 FD000000 		.4byte	0xfd
 823 0254 05       		.byte	0x5
 824 0255 0A       		.uleb128 0xa
 825 0256 38020000 		.4byte	.LASF41
 826 025a 07       		.byte	0x7
 827 025b E8       		.byte	0xe8
 828 025c FD000000 		.4byte	0xfd
 829 0260 06       		.byte	0x6
 830 0261 0A       		.uleb128 0xa
 831 0262 C2060000 		.4byte	.LASF42
 832 0266 07       		.byte	0x7
 833 0267 ED       		.byte	0xed
 834 0268 FD000000 		.4byte	0xfd
 835 026c 07       		.byte	0x7
 836 026d 0A       		.uleb128 0xa
 837 026e 2B030000 		.4byte	.LASF43
 838 0272 07       		.byte	0x7
 839 0273 F4       		.byte	0xf4
 840 0274 3A010000 		.4byte	0x13a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 39


 841 0278 08       		.byte	0x8
 842 0279 0A       		.uleb128 0xa
 843 027a C3030000 		.4byte	.LASF44
 844 027e 07       		.byte	0x7
 845 027f FC       		.byte	0xfc
 846 0280 02020000 		.4byte	0x202
 847 0284 09       		.byte	0x9
 848 0285 0D       		.uleb128 0xd
 849 0286 95060000 		.4byte	.LASF45
 850 028a 07       		.byte	0x7
 851 028b 0501     		.2byte	0x105
 852 028d 09010000 		.4byte	0x109
 853 0291 0A       		.byte	0xa
 854 0292 0D       		.uleb128 0xd
 855 0293 91070000 		.4byte	.LASF46
 856 0297 07       		.byte	0x7
 857 0298 0A01     		.2byte	0x10a
 858 029a FD000000 		.4byte	0xfd
 859 029e 0C       		.byte	0xc
 860 029f 00       		.byte	0
 861 02a0 05       		.uleb128 0x5
 862 02a1 9C030000 		.4byte	.LASF48
 863 02a5 07       		.byte	0x7
 864 02a6 0B01     		.2byte	0x10b
 865 02a8 1D020000 		.4byte	0x21d
 866 02ac 0E       		.uleb128 0xe
 867 02ad 0E       		.byte	0xe
 868 02ae 07       		.byte	0x7
 869 02af 1101     		.2byte	0x111
 870 02b1 C3020000 		.4byte	0x2c3
 871 02b5 0D       		.uleb128 0xd
 872 02b6 A0010000 		.4byte	.LASF49
 873 02ba 07       		.byte	0x7
 874 02bb 1601     		.2byte	0x116
 875 02bd A0020000 		.4byte	0x2a0
 876 02c1 00       		.byte	0
 877 02c2 00       		.byte	0
 878 02c3 05       		.uleb128 0x5
 879 02c4 CF070000 		.4byte	.LASF50
 880 02c8 07       		.byte	0x7
 881 02c9 1701     		.2byte	0x117
 882 02cb AC020000 		.4byte	0x2ac
 883 02cf 0E       		.uleb128 0xe
 884 02d0 0A       		.byte	0xa
 885 02d1 07       		.byte	0x7
 886 02d2 1D01     		.2byte	0x11d
 887 02d4 27030000 		.4byte	0x327
 888 02d8 0F       		.uleb128 0xf
 889 02d9 72617700 		.ascii	"raw\000"
 890 02dd 07       		.byte	0x7
 891 02de 2201     		.2byte	0x122
 892 02e0 27030000 		.4byte	0x327
 893 02e4 00       		.byte	0
 894 02e5 0D       		.uleb128 0xd
 895 02e6 DF020000 		.4byte	.LASF51
 896 02ea 07       		.byte	0x7
 897 02eb 2701     		.2byte	0x127
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 40


 898 02ed 27030000 		.4byte	0x327
 899 02f1 02       		.byte	0x2
 900 02f2 0D       		.uleb128 0xd
 901 02f3 4E020000 		.4byte	.LASF52
 902 02f7 07       		.byte	0x7
 903 02f8 2D01     		.2byte	0x12d
 904 02fa 02020000 		.4byte	0x202
 905 02fe 04       		.byte	0x4
 906 02ff 0D       		.uleb128 0xd
 907 0300 E0000000 		.4byte	.LASF53
 908 0304 07       		.byte	0x7
 909 0305 3201     		.2byte	0x132
 910 0307 2F010000 		.4byte	0x12f
 911 030b 06       		.byte	0x6
 912 030c 0D       		.uleb128 0xd
 913 030d 03070000 		.4byte	.LASF54
 914 0311 07       		.byte	0x7
 915 0312 3701     		.2byte	0x137
 916 0314 37030000 		.4byte	0x337
 917 0318 08       		.byte	0x8
 918 0319 0D       		.uleb128 0xd
 919 031a E3060000 		.4byte	.LASF55
 920 031e 07       		.byte	0x7
 921 031f 3D01     		.2byte	0x13d
 922 0321 02020000 		.4byte	0x202
 923 0325 09       		.byte	0x9
 924 0326 00       		.byte	0
 925 0327 0B       		.uleb128 0xb
 926 0328 09010000 		.4byte	0x109
 927 032c 37030000 		.4byte	0x337
 928 0330 0C       		.uleb128 0xc
 929 0331 D5000000 		.4byte	0xd5
 930 0335 00       		.byte	0
 931 0336 00       		.byte	0
 932 0337 0B       		.uleb128 0xb
 933 0338 3A010000 		.4byte	0x13a
 934 033c 47030000 		.4byte	0x347
 935 0340 0C       		.uleb128 0xc
 936 0341 D5000000 		.4byte	0xd5
 937 0345 00       		.byte	0
 938 0346 00       		.byte	0
 939 0347 05       		.uleb128 0x5
 940 0348 7D000000 		.4byte	.LASF56
 941 034c 07       		.byte	0x7
 942 034d 3E01     		.2byte	0x13e
 943 034f CF020000 		.4byte	0x2cf
 944 0353 0E       		.uleb128 0xe
 945 0354 0A       		.byte	0xa
 946 0355 07       		.byte	0x7
 947 0356 4401     		.2byte	0x144
 948 0358 6A030000 		.4byte	0x36a
 949 035c 0D       		.uleb128 0xd
 950 035d A0010000 		.4byte	.LASF49
 951 0361 07       		.byte	0x7
 952 0362 4901     		.2byte	0x149
 953 0364 6A030000 		.4byte	0x36a
 954 0368 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 41


 955 0369 00       		.byte	0
 956 036a 0B       		.uleb128 0xb
 957 036b 47030000 		.4byte	0x347
 958 036f 7A030000 		.4byte	0x37a
 959 0373 0C       		.uleb128 0xc
 960 0374 D5000000 		.4byte	0xd5
 961 0378 00       		.byte	0
 962 0379 00       		.byte	0
 963 037a 05       		.uleb128 0x5
 964 037b 79050000 		.4byte	.LASF57
 965 037f 07       		.byte	0x7
 966 0380 4A01     		.2byte	0x14a
 967 0382 53030000 		.4byte	0x353
 968 0386 0E       		.uleb128 0xe
 969 0387 3C       		.byte	0x3c
 970 0388 07       		.byte	0x7
 971 0389 5001     		.2byte	0x150
 972 038b 6D040000 		.4byte	0x46d
 973 038f 0D       		.uleb128 0xd
 974 0390 69030000 		.4byte	.LASF58
 975 0394 07       		.byte	0x7
 976 0395 5801     		.2byte	0x158
 977 0397 09010000 		.4byte	0x109
 978 039b 00       		.byte	0
 979 039c 0D       		.uleb128 0xd
 980 039d 93030000 		.4byte	.LASF59
 981 03a1 07       		.byte	0x7
 982 03a2 5D01     		.2byte	0x15d
 983 03a4 09010000 		.4byte	0x109
 984 03a8 02       		.byte	0x2
 985 03a9 0D       		.uleb128 0xd
 986 03aa 4A040000 		.4byte	.LASF60
 987 03ae 07       		.byte	0x7
 988 03af 6201     		.2byte	0x162
 989 03b1 09010000 		.4byte	0x109
 990 03b5 04       		.byte	0x4
 991 03b6 0D       		.uleb128 0xd
 992 03b7 4E050000 		.4byte	.LASF61
 993 03bb 07       		.byte	0x7
 994 03bc 6801     		.2byte	0x168
 995 03be 09010000 		.4byte	0x109
 996 03c2 06       		.byte	0x6
 997 03c3 0D       		.uleb128 0xd
 998 03c4 5B040000 		.4byte	.LASF62
 999 03c8 07       		.byte	0x7
 1000 03c9 6D01     		.2byte	0x16d
 1001 03cb 09010000 		.4byte	0x109
 1002 03cf 08       		.byte	0x8
 1003 03d0 0D       		.uleb128 0xd
 1004 03d1 5C070000 		.4byte	.LASF63
 1005 03d5 07       		.byte	0x7
 1006 03d6 7201     		.2byte	0x172
 1007 03d8 6D040000 		.4byte	0x46d
 1008 03dc 0C       		.byte	0xc
 1009 03dd 0D       		.uleb128 0xd
 1010 03de 20030000 		.4byte	.LASF64
 1011 03e2 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 42


 1012 03e3 7801     		.2byte	0x178
 1013 03e5 72040000 		.4byte	0x472
 1014 03e9 10       		.byte	0x10
 1015 03ea 0D       		.uleb128 0xd
 1016 03eb AE020000 		.4byte	.LASF65
 1017 03ef 07       		.byte	0x7
 1018 03f0 7E01     		.2byte	0x17e
 1019 03f2 72040000 		.4byte	0x472
 1020 03f6 14       		.byte	0x14
 1021 03f7 0D       		.uleb128 0xd
 1022 03f8 D0010000 		.4byte	.LASF66
 1023 03fc 07       		.byte	0x7
 1024 03fd 9001     		.2byte	0x190
 1025 03ff 02020000 		.4byte	0x202
 1026 0403 18       		.byte	0x18
 1027 0404 0D       		.uleb128 0xd
 1028 0405 72030000 		.4byte	.LASF67
 1029 0409 07       		.byte	0x7
 1030 040a 9501     		.2byte	0x195
 1031 040c 09010000 		.4byte	0x109
 1032 0410 1A       		.byte	0x1a
 1033 0411 0D       		.uleb128 0xd
 1034 0412 E3010000 		.4byte	.LASF68
 1035 0416 07       		.byte	0x7
 1036 0417 9A01     		.2byte	0x19a
 1037 0419 FD000000 		.4byte	0xfd
 1038 041d 1C       		.byte	0x1c
 1039 041e 0D       		.uleb128 0xd
 1040 041f 55060000 		.4byte	.LASF69
 1041 0423 07       		.byte	0x7
 1042 0424 9F01     		.2byte	0x19f
 1043 0426 C3020000 		.4byte	0x2c3
 1044 042a 1E       		.byte	0x1e
 1045 042b 0D       		.uleb128 0xd
 1046 042c 61030000 		.4byte	.LASF70
 1047 0430 07       		.byte	0x7
 1048 0431 A401     		.2byte	0x1a4
 1049 0433 7A030000 		.4byte	0x37a
 1050 0437 2C       		.byte	0x2c
 1051 0438 0D       		.uleb128 0xd
 1052 0439 FE020000 		.4byte	.LASF71
 1053 043d 07       		.byte	0x7
 1054 043e A901     		.2byte	0x1a9
 1055 0440 FD000000 		.4byte	0xfd
 1056 0444 36       		.byte	0x36
 1057 0445 0D       		.uleb128 0xd
 1058 0446 0D010000 		.4byte	.LASF72
 1059 044a 07       		.byte	0x7
 1060 044b AE01     		.2byte	0x1ae
 1061 044d FD000000 		.4byte	0xfd
 1062 0451 37       		.byte	0x37
 1063 0452 0D       		.uleb128 0xd
 1064 0453 EB070000 		.4byte	.LASF73
 1065 0457 07       		.byte	0x7
 1066 0458 B301     		.2byte	0x1b3
 1067 045a 09010000 		.4byte	0x109
 1068 045e 38       		.byte	0x38
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 43


 1069 045f 0D       		.uleb128 0xd
 1070 0460 0E020000 		.4byte	.LASF74
 1071 0464 07       		.byte	0x7
 1072 0465 B801     		.2byte	0x1b8
 1073 0467 27030000 		.4byte	0x327
 1074 046b 3A       		.byte	0x3a
 1075 046c 00       		.byte	0
 1076 046d 10       		.uleb128 0x10
 1077 046e 15010000 		.4byte	0x115
 1078 0472 0B       		.uleb128 0xb
 1079 0473 15010000 		.4byte	0x115
 1080 0477 82040000 		.4byte	0x482
 1081 047b 0C       		.uleb128 0xc
 1082 047c D5000000 		.4byte	0xd5
 1083 0480 00       		.byte	0
 1084 0481 00       		.byte	0
 1085 0482 05       		.uleb128 0x5
 1086 0483 96050000 		.4byte	.LASF75
 1087 0487 07       		.byte	0x7
 1088 0488 B901     		.2byte	0x1b9
 1089 048a 86030000 		.4byte	0x386
 1090 048e 0E       		.uleb128 0xe
 1091 048f 1C       		.byte	0x1c
 1092 0490 07       		.byte	0x7
 1093 0491 F701     		.2byte	0x1f7
 1094 0493 0D050000 		.4byte	0x50d
 1095 0497 0D       		.uleb128 0xd
 1096 0498 D3000000 		.4byte	.LASF76
 1097 049c 07       		.byte	0x7
 1098 049d 0002     		.2byte	0x200
 1099 049f 0D050000 		.4byte	0x50d
 1100 04a3 00       		.byte	0
 1101 04a4 0D       		.uleb128 0xd
 1102 04a5 7D030000 		.4byte	.LASF77
 1103 04a9 07       		.byte	0x7
 1104 04aa 0702     		.2byte	0x207
 1105 04ac 2D010000 		.4byte	0x12d
 1106 04b0 04       		.byte	0x4
 1107 04b1 0D       		.uleb128 0xd
 1108 04b2 ED010000 		.4byte	.LASF78
 1109 04b6 07       		.byte	0x7
 1110 04b7 0D02     		.2byte	0x20d
 1111 04b9 14050000 		.4byte	0x514
 1112 04bd 08       		.byte	0x8
 1113 04be 0D       		.uleb128 0xd
 1114 04bf 1A000000 		.4byte	.LASF79
 1115 04c3 07       		.byte	0x7
 1116 04c4 1202     		.2byte	0x212
 1117 04c6 2D010000 		.4byte	0x12d
 1118 04ca 0C       		.byte	0xc
 1119 04cb 0D       		.uleb128 0xd
 1120 04cc 25070000 		.4byte	.LASF80
 1121 04d0 07       		.byte	0x7
 1122 04d1 1902     		.2byte	0x219
 1123 04d3 1A050000 		.4byte	0x51a
 1124 04d7 10       		.byte	0x10
 1125 04d8 0D       		.uleb128 0xd
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 44


 1126 04d9 1B040000 		.4byte	.LASF81
 1127 04dd 07       		.byte	0x7
 1128 04de 1E02     		.2byte	0x21e
 1129 04e0 15010000 		.4byte	0x115
 1130 04e4 14       		.byte	0x14
 1131 04e5 0D       		.uleb128 0xd
 1132 04e6 11070000 		.4byte	.LASF82
 1133 04ea 07       		.byte	0x7
 1134 04eb 2502     		.2byte	0x225
 1135 04ed 09010000 		.4byte	0x109
 1136 04f1 18       		.byte	0x18
 1137 04f2 0D       		.uleb128 0xd
 1138 04f3 52040000 		.4byte	.LASF83
 1139 04f7 07       		.byte	0x7
 1140 04f8 3002     		.2byte	0x230
 1141 04fa FD000000 		.4byte	0xfd
 1142 04fe 1A       		.byte	0x1a
 1143 04ff 0D       		.uleb128 0xd
 1144 0500 CB030000 		.4byte	.LASF84
 1145 0504 07       		.byte	0x7
 1146 0505 3802     		.2byte	0x238
 1147 0507 FD000000 		.4byte	0xfd
 1148 050b 1B       		.byte	0x1b
 1149 050c 00       		.byte	0
 1150 050d 11       		.uleb128 0x11
 1151 050e 04       		.byte	0x4
 1152 050f 13050000 		.4byte	0x513
 1153 0513 12       		.uleb128 0x12
 1154 0514 11       		.uleb128 0x11
 1155 0515 04       		.byte	0x4
 1156 0516 47030000 		.4byte	0x347
 1157 051a 11       		.uleb128 0x11
 1158 051b 04       		.byte	0x4
 1159 051c FD000000 		.4byte	0xfd
 1160 0520 05       		.uleb128 0x5
 1161 0521 E4050000 		.4byte	.LASF85
 1162 0525 07       		.byte	0x7
 1163 0526 3902     		.2byte	0x239
 1164 0528 8E040000 		.4byte	0x48e
 1165 052c 0E       		.uleb128 0xe
 1166 052d 1C       		.byte	0x1c
 1167 052e 07       		.byte	0x7
 1168 052f 3F02     		.2byte	0x23f
 1169 0531 43050000 		.4byte	0x543
 1170 0535 0D       		.uleb128 0xd
 1171 0536 63070000 		.4byte	.LASF86
 1172 053a 07       		.byte	0x7
 1173 053b 4402     		.2byte	0x244
 1174 053d 43050000 		.4byte	0x543
 1175 0541 00       		.byte	0
 1176 0542 00       		.byte	0
 1177 0543 0B       		.uleb128 0xb
 1178 0544 20050000 		.4byte	0x520
 1179 0548 53050000 		.4byte	0x553
 1180 054c 0C       		.uleb128 0xc
 1181 054d D5000000 		.4byte	0xd5
 1182 0551 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 45


 1183 0552 00       		.byte	0
 1184 0553 05       		.uleb128 0x5
 1185 0554 35070000 		.4byte	.LASF87
 1186 0558 07       		.byte	0x7
 1187 0559 4502     		.2byte	0x245
 1188 055b 2C050000 		.4byte	0x52c
 1189 055f 0E       		.uleb128 0xe
 1190 0560 02       		.byte	0x2
 1191 0561 07       		.byte	0x7
 1192 0562 7A02     		.2byte	0x27a
 1193 0564 76050000 		.4byte	0x576
 1194 0568 0D       		.uleb128 0xd
 1195 0569 75070000 		.4byte	.LASF88
 1196 056d 07       		.byte	0x7
 1197 056e 7C02     		.2byte	0x27c
 1198 0570 09010000 		.4byte	0x109
 1199 0574 00       		.byte	0
 1200 0575 00       		.byte	0
 1201 0576 05       		.uleb128 0x5
 1202 0577 F6030000 		.4byte	.LASF89
 1203 057b 07       		.byte	0x7
 1204 057c 7D02     		.2byte	0x27d
 1205 057e 5F050000 		.4byte	0x55f
 1206 0582 0E       		.uleb128 0xe
 1207 0583 02       		.byte	0x2
 1208 0584 07       		.byte	0x7
 1209 0585 8202     		.2byte	0x282
 1210 0587 99050000 		.4byte	0x599
 1211 058b 0D       		.uleb128 0xd
 1212 058c AA050000 		.4byte	.LASF90
 1213 0590 07       		.byte	0x7
 1214 0591 8702     		.2byte	0x287
 1215 0593 99050000 		.4byte	0x599
 1216 0597 00       		.byte	0
 1217 0598 00       		.byte	0
 1218 0599 0B       		.uleb128 0xb
 1219 059a 76050000 		.4byte	0x576
 1220 059e A9050000 		.4byte	0x5a9
 1221 05a2 0C       		.uleb128 0xc
 1222 05a3 D5000000 		.4byte	0xd5
 1223 05a7 00       		.byte	0
 1224 05a8 00       		.byte	0
 1225 05a9 05       		.uleb128 0x5
 1226 05aa 83010000 		.4byte	.LASF91
 1227 05ae 07       		.byte	0x7
 1228 05af 8802     		.2byte	0x288
 1229 05b1 82050000 		.4byte	0x582
 1230 05b5 13       		.uleb128 0x13
 1231 05b6 04       		.byte	0x4
 1232 05b7 07       		.byte	0x7
 1233 05b8 8D02     		.2byte	0x28d
 1234 05ba D7050000 		.4byte	0x5d7
 1235 05be 14       		.uleb128 0x14
 1236 05bf 70747200 		.ascii	"ptr\000"
 1237 05c3 07       		.byte	0x7
 1238 05c4 9202     		.2byte	0x292
 1239 05c6 2D010000 		.4byte	0x12d
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 46


 1240 05ca 15       		.uleb128 0x15
 1241 05cb FE070000 		.4byte	.LASF92
 1242 05cf 07       		.byte	0x7
 1243 05d0 9702     		.2byte	0x297
 1244 05d2 D7050000 		.4byte	0x5d7
 1245 05d6 00       		.byte	0
 1246 05d7 11       		.uleb128 0x11
 1247 05d8 04       		.byte	0x4
 1248 05d9 A9050000 		.4byte	0x5a9
 1249 05dd 05       		.uleb128 0x5
 1250 05de 23060000 		.4byte	.LASF93
 1251 05e2 07       		.byte	0x7
 1252 05e3 9802     		.2byte	0x298
 1253 05e5 B5050000 		.4byte	0x5b5
 1254 05e9 16       		.uleb128 0x16
 1255 05ea 5E060000 		.4byte	.LASF98
 1256 05ee 01       		.byte	0x1
 1257 05ef 9101     		.2byte	0x191
 1258 05f1 00000000 		.4byte	.LFB132
 1259 05f5 58000000 		.4byte	.LFE132-.LFB132
 1260 05f9 01       		.uleb128 0x1
 1261 05fa 9C       		.byte	0x9c
 1262 05fb 49060000 		.4byte	0x649
 1263 05ff 17       		.uleb128 0x17
 1264 0600 46010000 		.4byte	.LASF94
 1265 0604 01       		.byte	0x1
 1266 0605 9301     		.2byte	0x193
 1267 0607 15010000 		.4byte	0x115
 1268 060b 00000000 		.4byte	.LLST0
 1269 060f 17       		.uleb128 0x17
 1270 0610 EB030000 		.4byte	.LASF95
 1271 0614 01       		.byte	0x1
 1272 0615 9401     		.2byte	0x194
 1273 0617 76010000 		.4byte	0x176
 1274 061b 4D000000 		.4byte	.LLST1
 1275 061f 17       		.uleb128 0x17
 1276 0620 D3030000 		.4byte	.LASF96
 1277 0624 01       		.byte	0x1
 1278 0625 9501     		.2byte	0x195
 1279 0627 49060000 		.4byte	0x649
 1280 062b 6C000000 		.4byte	.LLST2
 1281 062f 17       		.uleb128 0x17
 1282 0630 E4020000 		.4byte	.LASF97
 1283 0634 01       		.byte	0x1
 1284 0635 9601     		.2byte	0x196
 1285 0637 4F060000 		.4byte	0x64f
 1286 063b 7F000000 		.4byte	.LLST3
 1287 063f 18       		.uleb128 0x18
 1288 0640 42000000 		.4byte	.LVL8
 1289 0644 82090000 		.4byte	0x982
 1290 0648 00       		.byte	0
 1291 0649 11       		.uleb128 0x11
 1292 064a 04       		.byte	0x4
 1293 064b 12020000 		.4byte	0x212
 1294 064f 11       		.uleb128 0x11
 1295 0650 04       		.byte	0x4
 1296 0651 55060000 		.4byte	0x655
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 47


 1297 0655 19       		.uleb128 0x19
 1298 0656 20050000 		.4byte	0x520
 1299 065a 16       		.uleb128 0x16
 1300 065b B6000000 		.4byte	.LASF99
 1301 065f 01       		.byte	0x1
 1302 0660 7704     		.2byte	0x477
 1303 0662 00000000 		.4byte	.LFB136
 1304 0666 18000000 		.4byte	.LFE136-.LFB136
 1305 066a 01       		.uleb128 0x1
 1306 066b 9C       		.byte	0x9c
 1307 066c 9F060000 		.4byte	0x69f
 1308 0670 1A       		.uleb128 0x1a
 1309 0671 D3030000 		.4byte	.LASF96
 1310 0675 01       		.byte	0x1
 1311 0676 7804     		.2byte	0x478
 1312 0678 49060000 		.4byte	0x649
 1313 067c 92000000 		.4byte	.LLST4
 1314 0680 1B       		.uleb128 0x1b
 1315 0681 AC000000 		.4byte	.LASF100
 1316 0685 01       		.byte	0x1
 1317 0686 7904     		.2byte	0x479
 1318 0688 14050000 		.4byte	0x514
 1319 068c 01       		.uleb128 0x1
 1320 068d 51       		.byte	0x51
 1321 068e 17       		.uleb128 0x17
 1322 068f 4B070000 		.4byte	.LASF101
 1323 0693 01       		.byte	0x1
 1324 0694 7B04     		.2byte	0x47b
 1325 0696 21010000 		.4byte	0x121
 1326 069a B3000000 		.4byte	.LLST5
 1327 069e 00       		.byte	0
 1328 069f 1C       		.uleb128 0x1c
 1329 06a0 67040000 		.4byte	.LASF105
 1330 06a4 01       		.byte	0x1
 1331 06a5 1103     		.2byte	0x311
 1332 06a7 15010000 		.4byte	0x115
 1333 06ab 00000000 		.4byte	.LFB133
 1334 06af 38000000 		.4byte	.LFE133-.LFB133
 1335 06b3 01       		.uleb128 0x1
 1336 06b4 9C       		.byte	0x9c
 1337 06b5 4A070000 		.4byte	0x74a
 1338 06b9 1A       		.uleb128 0x1a
 1339 06ba E4020000 		.4byte	.LASF97
 1340 06be 01       		.byte	0x1
 1341 06bf 1103     		.2byte	0x311
 1342 06c1 4F060000 		.4byte	0x64f
 1343 06c5 E2000000 		.4byte	.LLST6
 1344 06c9 17       		.uleb128 0x17
 1345 06ca 09080000 		.4byte	.LASF102
 1346 06ce 01       		.byte	0x1
 1347 06cf 1303     		.2byte	0x313
 1348 06d1 15010000 		.4byte	0x115
 1349 06d5 00010000 		.4byte	.LLST7
 1350 06d9 1D       		.uleb128 0x1d
 1351 06da EB030000 		.4byte	.LASF95
 1352 06de 01       		.byte	0x1
 1353 06df 1903     		.2byte	0x319
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 48


 1354 06e1 15010000 		.4byte	0x115
 1355 06e5 01       		.uleb128 0x1
 1356 06e6 59       		.byte	0x59
 1357 06e7 17       		.uleb128 0x17
 1358 06e8 A8070000 		.4byte	.LASF103
 1359 06ec 01       		.byte	0x1
 1360 06ed 1A03     		.2byte	0x31a
 1361 06ef 15010000 		.4byte	0x115
 1362 06f3 35010000 		.4byte	.LLST8
 1363 06f7 1D       		.uleb128 0x1d
 1364 06f8 36030000 		.4byte	.LASF104
 1365 06fc 01       		.byte	0x1
 1366 06fd 1B03     		.2byte	0x31b
 1367 06ff 14050000 		.4byte	0x514
 1368 0703 01       		.uleb128 0x1
 1369 0704 54       		.byte	0x54
 1370 0705 1D       		.uleb128 0x1d
 1371 0706 D3030000 		.4byte	.LASF96
 1372 070a 01       		.byte	0x1
 1373 070b 1C03     		.2byte	0x31c
 1374 070d 49060000 		.4byte	0x649
 1375 0711 01       		.uleb128 0x1
 1376 0712 56       		.byte	0x56
 1377 0713 1E       		.uleb128 0x1e
 1378 0714 1E000000 		.4byte	.LVL24
 1379 0718 8D090000 		.4byte	0x98d
 1380 071c 33070000 		.4byte	0x733
 1381 0720 1F       		.uleb128 0x1f
 1382 0721 01       		.uleb128 0x1
 1383 0722 50       		.byte	0x50
 1384 0723 02       		.uleb128 0x2
 1385 0724 76       		.byte	0x76
 1386 0725 00       		.sleb128 0
 1387 0726 1F       		.uleb128 0x1f
 1388 0727 01       		.uleb128 0x1
 1389 0728 51       		.byte	0x51
 1390 0729 02       		.uleb128 0x2
 1391 072a 74       		.byte	0x74
 1392 072b 00       		.sleb128 0
 1393 072c 1F       		.uleb128 0x1f
 1394 072d 01       		.uleb128 0x1
 1395 072e 52       		.byte	0x52
 1396 072f 02       		.uleb128 0x2
 1397 0730 79       		.byte	0x79
 1398 0731 00       		.sleb128 0
 1399 0732 00       		.byte	0
 1400 0733 20       		.uleb128 0x20
 1401 0734 28000000 		.4byte	.LVL27
 1402 0738 5A060000 		.4byte	0x65a
 1403 073c 1F       		.uleb128 0x1f
 1404 073d 01       		.uleb128 0x1
 1405 073e 50       		.byte	0x50
 1406 073f 02       		.uleb128 0x2
 1407 0740 76       		.byte	0x76
 1408 0741 00       		.sleb128 0
 1409 0742 1F       		.uleb128 0x1f
 1410 0743 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 49


 1411 0744 51       		.byte	0x51
 1412 0745 02       		.uleb128 0x2
 1413 0746 74       		.byte	0x74
 1414 0747 00       		.sleb128 0
 1415 0748 00       		.byte	0
 1416 0749 00       		.byte	0
 1417 074a 1C       		.uleb128 0x1c
 1418 074b 10080000 		.4byte	.LASF106
 1419 074f 01       		.byte	0x1
 1420 0750 9303     		.2byte	0x393
 1421 0752 15010000 		.4byte	0x115
 1422 0756 00000000 		.4byte	.LFB134
 1423 075a 2E000000 		.4byte	.LFE134-.LFB134
 1424 075e 01       		.uleb128 0x1
 1425 075f 9C       		.byte	0x9c
 1426 0760 03080000 		.4byte	0x803
 1427 0764 1A       		.uleb128 0x1a
 1428 0765 E4020000 		.4byte	.LASF97
 1429 0769 01       		.byte	0x1
 1430 076a 9403     		.2byte	0x394
 1431 076c 4F060000 		.4byte	0x64f
 1432 0770 54010000 		.4byte	.LLST9
 1433 0774 1A       		.uleb128 0x1a
 1434 0775 AC000000 		.4byte	.LASF100
 1435 0779 01       		.byte	0x1
 1436 077a 9503     		.2byte	0x395
 1437 077c 14050000 		.4byte	0x514
 1438 0780 8E010000 		.4byte	.LLST10
 1439 0784 1A       		.uleb128 0x1a
 1440 0785 D5020000 		.4byte	.LASF107
 1441 0789 01       		.byte	0x1
 1442 078a 9603     		.2byte	0x396
 1443 078c DD050000 		.4byte	0x5dd
 1444 0790 C2010000 		.4byte	.LLST11
 1445 0794 1A       		.uleb128 0x1a
 1446 0795 85060000 		.4byte	.LASF108
 1447 0799 01       		.byte	0x1
 1448 079a 9703     		.2byte	0x397
 1449 079c 15010000 		.4byte	0x115
 1450 07a0 D5010000 		.4byte	.LLST12
 1451 07a4 17       		.uleb128 0x17
 1452 07a5 09080000 		.4byte	.LASF102
 1453 07a9 01       		.byte	0x1
 1454 07aa 9903     		.2byte	0x399
 1455 07ac 15010000 		.4byte	0x115
 1456 07b0 09020000 		.4byte	.LLST13
 1457 07b4 17       		.uleb128 0x17
 1458 07b5 EB030000 		.4byte	.LASF95
 1459 07b9 01       		.byte	0x1
 1460 07ba 9A03     		.2byte	0x39a
 1461 07bc 15010000 		.4byte	0x115
 1462 07c0 3F020000 		.4byte	.LLST14
 1463 07c4 1D       		.uleb128 0x1d
 1464 07c5 D3030000 		.4byte	.LASF96
 1465 07c9 01       		.byte	0x1
 1466 07ca 9B03     		.2byte	0x39b
 1467 07cc 49060000 		.4byte	0x649
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 50


 1468 07d0 01       		.uleb128 0x1
 1469 07d1 56       		.byte	0x56
 1470 07d2 1E       		.uleb128 0x1e
 1471 07d3 16000000 		.4byte	.LVL35
 1472 07d7 8D090000 		.4byte	0x98d
 1473 07db EC070000 		.4byte	0x7ec
 1474 07df 1F       		.uleb128 0x1f
 1475 07e0 01       		.uleb128 0x1
 1476 07e1 50       		.byte	0x50
 1477 07e2 02       		.uleb128 0x2
 1478 07e3 76       		.byte	0x76
 1479 07e4 00       		.sleb128 0
 1480 07e5 1F       		.uleb128 0x1f
 1481 07e6 01       		.uleb128 0x1
 1482 07e7 51       		.byte	0x51
 1483 07e8 02       		.uleb128 0x2
 1484 07e9 77       		.byte	0x77
 1485 07ea 00       		.sleb128 0
 1486 07eb 00       		.byte	0
 1487 07ec 20       		.uleb128 0x20
 1488 07ed 2A000000 		.4byte	.LVL39
 1489 07f1 5A060000 		.4byte	0x65a
 1490 07f5 1F       		.uleb128 0x1f
 1491 07f6 01       		.uleb128 0x1
 1492 07f7 50       		.byte	0x50
 1493 07f8 02       		.uleb128 0x2
 1494 07f9 76       		.byte	0x76
 1495 07fa 00       		.sleb128 0
 1496 07fb 1F       		.uleb128 0x1f
 1497 07fc 01       		.uleb128 0x1
 1498 07fd 51       		.byte	0x51
 1499 07fe 02       		.uleb128 0x2
 1500 07ff 77       		.byte	0x77
 1501 0800 00       		.sleb128 0
 1502 0801 00       		.byte	0
 1503 0802 00       		.byte	0
 1504 0803 1C       		.uleb128 0x1c
 1505 0804 31040000 		.4byte	.LASF109
 1506 0808 01       		.byte	0x1
 1507 0809 C104     		.2byte	0x4c1
 1508 080b 15010000 		.4byte	0x115
 1509 080f 00000000 		.4byte	.LFB137
 1510 0813 62000000 		.4byte	.LFE137-.LFB137
 1511 0817 01       		.uleb128 0x1
 1512 0818 9C       		.byte	0x9c
 1513 0819 A8080000 		.4byte	0x8a8
 1514 081d 1A       		.uleb128 0x1a
 1515 081e 07000000 		.4byte	.LASF110
 1516 0822 01       		.byte	0x1
 1517 0823 C104     		.2byte	0x4c1
 1518 0825 15010000 		.4byte	0x115
 1519 0829 5D020000 		.4byte	.LLST15
 1520 082d 1A       		.uleb128 0x1a
 1521 082e E4020000 		.4byte	.LASF97
 1522 0832 01       		.byte	0x1
 1523 0833 C104     		.2byte	0x4c1
 1524 0835 4F060000 		.4byte	0x64f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 51


 1525 0839 7B020000 		.4byte	.LLST16
 1526 083d 17       		.uleb128 0x17
 1527 083e 3B000000 		.4byte	.LASF111
 1528 0842 01       		.byte	0x1
 1529 0843 C304     		.2byte	0x4c3
 1530 0845 15010000 		.4byte	0x115
 1531 0849 9C020000 		.4byte	.LLST17
 1532 084d 17       		.uleb128 0x17
 1533 084e 12000000 		.4byte	.LASF112
 1534 0852 01       		.byte	0x1
 1535 0853 C404     		.2byte	0x4c4
 1536 0855 15010000 		.4byte	0x115
 1537 0859 D0020000 		.4byte	.LLST18
 1538 085d 17       		.uleb128 0x17
 1539 085e 9E070000 		.4byte	.LASF113
 1540 0862 01       		.byte	0x1
 1541 0863 C504     		.2byte	0x4c5
 1542 0865 15010000 		.4byte	0x115
 1543 0869 EF020000 		.4byte	.LLST19
 1544 086d 17       		.uleb128 0x17
 1545 086e 1D070000 		.4byte	.LASF114
 1546 0872 01       		.byte	0x1
 1547 0873 C604     		.2byte	0x4c6
 1548 0875 15010000 		.4byte	0x115
 1549 0879 0D030000 		.4byte	.LLST20
 1550 087d 1D       		.uleb128 0x1d
 1551 087e 36030000 		.4byte	.LASF104
 1552 0882 01       		.byte	0x1
 1553 0883 C704     		.2byte	0x4c7
 1554 0885 14050000 		.4byte	0x514
 1555 0889 01       		.uleb128 0x1
 1556 088a 55       		.byte	0x55
 1557 088b 1D       		.uleb128 0x1d
 1558 088c D3030000 		.4byte	.LASF96
 1559 0890 01       		.byte	0x1
 1560 0891 C804     		.2byte	0x4c8
 1561 0893 49060000 		.4byte	0x649
 1562 0897 01       		.uleb128 0x1
 1563 0898 57       		.byte	0x57
 1564 0899 1D       		.uleb128 0x1d
 1565 089a FD050000 		.4byte	.LASF115
 1566 089e 01       		.byte	0x1
 1567 089f C904     		.2byte	0x4c9
 1568 08a1 1A050000 		.4byte	0x51a
 1569 08a5 01       		.uleb128 0x1
 1570 08a6 52       		.byte	0x52
 1571 08a7 00       		.byte	0
 1572 08a8 16       		.uleb128 0x16
 1573 08a9 AE010000 		.4byte	.LASF116
 1574 08ad 01       		.byte	0x1
 1575 08ae F703     		.2byte	0x3f7
 1576 08b0 00000000 		.4byte	.LFB135
 1577 08b4 64000000 		.4byte	.LFE135-.LFB135
 1578 08b8 01       		.uleb128 0x1
 1579 08b9 9C       		.byte	0x9c
 1580 08ba 54090000 		.4byte	0x954
 1581 08be 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 52


 1582 08bf BA030000 		.4byte	.LASF117
 1583 08c3 01       		.byte	0x1
 1584 08c4 F703     		.2byte	0x3f7
 1585 08c6 15010000 		.4byte	0x115
 1586 08ca 2B030000 		.4byte	.LLST21
 1587 08ce 1A       		.uleb128 0x1a
 1588 08cf E4020000 		.4byte	.LASF97
 1589 08d3 01       		.byte	0x1
 1590 08d4 F703     		.2byte	0x3f7
 1591 08d6 4F060000 		.4byte	0x64f
 1592 08da 6D030000 		.4byte	.LLST22
 1593 08de 17       		.uleb128 0x17
 1594 08df DE030000 		.4byte	.LASF118
 1595 08e3 01       		.byte	0x1
 1596 08e4 F903     		.2byte	0x3f9
 1597 08e6 15010000 		.4byte	0x115
 1598 08ea A7030000 		.4byte	.LLST23
 1599 08ee 17       		.uleb128 0x17
 1600 08ef 42000000 		.4byte	.LASF119
 1601 08f3 01       		.byte	0x1
 1602 08f4 FA03     		.2byte	0x3fa
 1603 08f6 15010000 		.4byte	0x115
 1604 08fa D0030000 		.4byte	.LLST24
 1605 08fe 17       		.uleb128 0x17
 1606 08ff 3F060000 		.4byte	.LASF120
 1607 0903 01       		.byte	0x1
 1608 0904 FB03     		.2byte	0x3fb
 1609 0906 15010000 		.4byte	0x115
 1610 090a 28040000 		.4byte	.LLST25
 1611 090e 17       		.uleb128 0x17
 1612 090f EB030000 		.4byte	.LASF95
 1613 0913 01       		.byte	0x1
 1614 0914 FC03     		.2byte	0x3fc
 1615 0916 76010000 		.4byte	0x176
 1616 091a 6A040000 		.4byte	.LLST26
 1617 091e 1E       		.uleb128 0x1e
 1618 091f 16000000 		.4byte	.LVL64
 1619 0923 03080000 		.4byte	0x803
 1620 0927 39090000 		.4byte	0x939
 1621 092b 1F       		.uleb128 0x1f
 1622 092c 01       		.uleb128 0x1
 1623 092d 50       		.byte	0x50
 1624 092e 02       		.uleb128 0x2
 1625 092f 75       		.byte	0x75
 1626 0930 00       		.sleb128 0
 1627 0931 1F       		.uleb128 0x1f
 1628 0932 01       		.uleb128 0x1
 1629 0933 51       		.byte	0x51
 1630 0934 03       		.uleb128 0x3
 1631 0935 F3       		.byte	0xf3
 1632 0936 01       		.uleb128 0x1
 1633 0937 51       		.byte	0x51
 1634 0938 00       		.byte	0
 1635 0939 20       		.uleb128 0x20
 1636 093a 24000000 		.4byte	.LVL69
 1637 093e 98090000 		.4byte	0x998
 1638 0942 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 53


 1639 0943 01       		.uleb128 0x1
 1640 0944 50       		.byte	0x50
 1641 0945 05       		.uleb128 0x5
 1642 0946 03       		.byte	0x3
 1643 0947 00000000 		.4byte	.LC0
 1644 094b 1F       		.uleb128 0x1f
 1645 094c 01       		.uleb128 0x1
 1646 094d 51       		.byte	0x51
 1647 094e 03       		.uleb128 0x3
 1648 094f 0A       		.byte	0xa
 1649 0950 2604     		.2byte	0x426
 1650 0952 00       		.byte	0
 1651 0953 00       		.byte	0
 1652 0954 21       		.uleb128 0x21
 1653 0955 00010000 		.4byte	.LASF121
 1654 0959 08       		.byte	0x8
 1655 095a F907     		.2byte	0x7f9
 1656 095c 60090000 		.4byte	0x960
 1657 0960 10       		.uleb128 0x10
 1658 0961 AD000000 		.4byte	0xad
 1659 0965 21       		.uleb128 0x21
 1660 0966 3F050000 		.4byte	.LASF122
 1661 096a 07       		.byte	0x7
 1662 096b D203     		.2byte	0x3d2
 1663 096d 82040000 		.4byte	0x482
 1664 0971 21       		.uleb128 0x21
 1665 0972 1D010000 		.4byte	.LASF123
 1666 0976 07       		.byte	0x7
 1667 0977 D303     		.2byte	0x3d3
 1668 0979 7D090000 		.4byte	0x97d
 1669 097d 19       		.uleb128 0x19
 1670 097e 53050000 		.4byte	0x553
 1671 0982 22       		.uleb128 0x22
 1672 0983 55070000 		.4byte	.LASF124
 1673 0987 55070000 		.4byte	.LASF124
 1674 098b 09       		.byte	0x9
 1675 098c 19       		.byte	0x19
 1676 098d 22       		.uleb128 0x22
 1677 098e 47030000 		.4byte	.LASF125
 1678 0992 47030000 		.4byte	.LASF125
 1679 0996 0A       		.byte	0xa
 1680 0997 70       		.byte	0x70
 1681 0998 23       		.uleb128 0x23
 1682 0999 EC060000 		.4byte	.LASF126
 1683 099d EC060000 		.4byte	.LASF126
 1684 09a1 05       		.byte	0x5
 1685 09a2 9203     		.2byte	0x392
 1686 09a4 00       		.byte	0
 1687              		.section	.debug_abbrev,"",%progbits
 1688              	.Ldebug_abbrev0:
 1689 0000 01       		.uleb128 0x1
 1690 0001 11       		.uleb128 0x11
 1691 0002 01       		.byte	0x1
 1692 0003 25       		.uleb128 0x25
 1693 0004 0E       		.uleb128 0xe
 1694 0005 13       		.uleb128 0x13
 1695 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 54


 1696 0007 03       		.uleb128 0x3
 1697 0008 0E       		.uleb128 0xe
 1698 0009 1B       		.uleb128 0x1b
 1699 000a 0E       		.uleb128 0xe
 1700 000b 55       		.uleb128 0x55
 1701 000c 17       		.uleb128 0x17
 1702 000d 11       		.uleb128 0x11
 1703 000e 01       		.uleb128 0x1
 1704 000f 10       		.uleb128 0x10
 1705 0010 17       		.uleb128 0x17
 1706 0011 00       		.byte	0
 1707 0012 00       		.byte	0
 1708 0013 02       		.uleb128 0x2
 1709 0014 24       		.uleb128 0x24
 1710 0015 00       		.byte	0
 1711 0016 0B       		.uleb128 0xb
 1712 0017 0B       		.uleb128 0xb
 1713 0018 3E       		.uleb128 0x3e
 1714 0019 0B       		.uleb128 0xb
 1715 001a 03       		.uleb128 0x3
 1716 001b 0E       		.uleb128 0xe
 1717 001c 00       		.byte	0
 1718 001d 00       		.byte	0
 1719 001e 03       		.uleb128 0x3
 1720 001f 16       		.uleb128 0x16
 1721 0020 00       		.byte	0
 1722 0021 03       		.uleb128 0x3
 1723 0022 0E       		.uleb128 0xe
 1724 0023 3A       		.uleb128 0x3a
 1725 0024 0B       		.uleb128 0xb
 1726 0025 3B       		.uleb128 0x3b
 1727 0026 0B       		.uleb128 0xb
 1728 0027 49       		.uleb128 0x49
 1729 0028 13       		.uleb128 0x13
 1730 0029 00       		.byte	0
 1731 002a 00       		.byte	0
 1732 002b 04       		.uleb128 0x4
 1733 002c 24       		.uleb128 0x24
 1734 002d 00       		.byte	0
 1735 002e 0B       		.uleb128 0xb
 1736 002f 0B       		.uleb128 0xb
 1737 0030 3E       		.uleb128 0x3e
 1738 0031 0B       		.uleb128 0xb
 1739 0032 03       		.uleb128 0x3
 1740 0033 08       		.uleb128 0x8
 1741 0034 00       		.byte	0
 1742 0035 00       		.byte	0
 1743 0036 05       		.uleb128 0x5
 1744 0037 16       		.uleb128 0x16
 1745 0038 00       		.byte	0
 1746 0039 03       		.uleb128 0x3
 1747 003a 0E       		.uleb128 0xe
 1748 003b 3A       		.uleb128 0x3a
 1749 003c 0B       		.uleb128 0xb
 1750 003d 3B       		.uleb128 0x3b
 1751 003e 05       		.uleb128 0x5
 1752 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 55


 1753 0040 13       		.uleb128 0x13
 1754 0041 00       		.byte	0
 1755 0042 00       		.byte	0
 1756 0043 06       		.uleb128 0x6
 1757 0044 0F       		.uleb128 0xf
 1758 0045 00       		.byte	0
 1759 0046 0B       		.uleb128 0xb
 1760 0047 0B       		.uleb128 0xb
 1761 0048 00       		.byte	0
 1762 0049 00       		.byte	0
 1763 004a 07       		.uleb128 0x7
 1764 004b 04       		.uleb128 0x4
 1765 004c 01       		.byte	0x1
 1766 004d 0B       		.uleb128 0xb
 1767 004e 0B       		.uleb128 0xb
 1768 004f 49       		.uleb128 0x49
 1769 0050 13       		.uleb128 0x13
 1770 0051 3A       		.uleb128 0x3a
 1771 0052 0B       		.uleb128 0xb
 1772 0053 3B       		.uleb128 0x3b
 1773 0054 0B       		.uleb128 0xb
 1774 0055 01       		.uleb128 0x1
 1775 0056 13       		.uleb128 0x13
 1776 0057 00       		.byte	0
 1777 0058 00       		.byte	0
 1778 0059 08       		.uleb128 0x8
 1779 005a 28       		.uleb128 0x28
 1780 005b 00       		.byte	0
 1781 005c 03       		.uleb128 0x3
 1782 005d 0E       		.uleb128 0xe
 1783 005e 1C       		.uleb128 0x1c
 1784 005f 0B       		.uleb128 0xb
 1785 0060 00       		.byte	0
 1786 0061 00       		.byte	0
 1787 0062 09       		.uleb128 0x9
 1788 0063 13       		.uleb128 0x13
 1789 0064 01       		.byte	0x1
 1790 0065 0B       		.uleb128 0xb
 1791 0066 0B       		.uleb128 0xb
 1792 0067 3A       		.uleb128 0x3a
 1793 0068 0B       		.uleb128 0xb
 1794 0069 3B       		.uleb128 0x3b
 1795 006a 0B       		.uleb128 0xb
 1796 006b 01       		.uleb128 0x1
 1797 006c 13       		.uleb128 0x13
 1798 006d 00       		.byte	0
 1799 006e 00       		.byte	0
 1800 006f 0A       		.uleb128 0xa
 1801 0070 0D       		.uleb128 0xd
 1802 0071 00       		.byte	0
 1803 0072 03       		.uleb128 0x3
 1804 0073 0E       		.uleb128 0xe
 1805 0074 3A       		.uleb128 0x3a
 1806 0075 0B       		.uleb128 0xb
 1807 0076 3B       		.uleb128 0x3b
 1808 0077 0B       		.uleb128 0xb
 1809 0078 49       		.uleb128 0x49
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 56


 1810 0079 13       		.uleb128 0x13
 1811 007a 38       		.uleb128 0x38
 1812 007b 0B       		.uleb128 0xb
 1813 007c 00       		.byte	0
 1814 007d 00       		.byte	0
 1815 007e 0B       		.uleb128 0xb
 1816 007f 01       		.uleb128 0x1
 1817 0080 01       		.byte	0x1
 1818 0081 49       		.uleb128 0x49
 1819 0082 13       		.uleb128 0x13
 1820 0083 01       		.uleb128 0x1
 1821 0084 13       		.uleb128 0x13
 1822 0085 00       		.byte	0
 1823 0086 00       		.byte	0
 1824 0087 0C       		.uleb128 0xc
 1825 0088 21       		.uleb128 0x21
 1826 0089 00       		.byte	0
 1827 008a 49       		.uleb128 0x49
 1828 008b 13       		.uleb128 0x13
 1829 008c 2F       		.uleb128 0x2f
 1830 008d 0B       		.uleb128 0xb
 1831 008e 00       		.byte	0
 1832 008f 00       		.byte	0
 1833 0090 0D       		.uleb128 0xd
 1834 0091 0D       		.uleb128 0xd
 1835 0092 00       		.byte	0
 1836 0093 03       		.uleb128 0x3
 1837 0094 0E       		.uleb128 0xe
 1838 0095 3A       		.uleb128 0x3a
 1839 0096 0B       		.uleb128 0xb
 1840 0097 3B       		.uleb128 0x3b
 1841 0098 05       		.uleb128 0x5
 1842 0099 49       		.uleb128 0x49
 1843 009a 13       		.uleb128 0x13
 1844 009b 38       		.uleb128 0x38
 1845 009c 0B       		.uleb128 0xb
 1846 009d 00       		.byte	0
 1847 009e 00       		.byte	0
 1848 009f 0E       		.uleb128 0xe
 1849 00a0 13       		.uleb128 0x13
 1850 00a1 01       		.byte	0x1
 1851 00a2 0B       		.uleb128 0xb
 1852 00a3 0B       		.uleb128 0xb
 1853 00a4 3A       		.uleb128 0x3a
 1854 00a5 0B       		.uleb128 0xb
 1855 00a6 3B       		.uleb128 0x3b
 1856 00a7 05       		.uleb128 0x5
 1857 00a8 01       		.uleb128 0x1
 1858 00a9 13       		.uleb128 0x13
 1859 00aa 00       		.byte	0
 1860 00ab 00       		.byte	0
 1861 00ac 0F       		.uleb128 0xf
 1862 00ad 0D       		.uleb128 0xd
 1863 00ae 00       		.byte	0
 1864 00af 03       		.uleb128 0x3
 1865 00b0 08       		.uleb128 0x8
 1866 00b1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 57


 1867 00b2 0B       		.uleb128 0xb
 1868 00b3 3B       		.uleb128 0x3b
 1869 00b4 05       		.uleb128 0x5
 1870 00b5 49       		.uleb128 0x49
 1871 00b6 13       		.uleb128 0x13
 1872 00b7 38       		.uleb128 0x38
 1873 00b8 0B       		.uleb128 0xb
 1874 00b9 00       		.byte	0
 1875 00ba 00       		.byte	0
 1876 00bb 10       		.uleb128 0x10
 1877 00bc 35       		.uleb128 0x35
 1878 00bd 00       		.byte	0
 1879 00be 49       		.uleb128 0x49
 1880 00bf 13       		.uleb128 0x13
 1881 00c0 00       		.byte	0
 1882 00c1 00       		.byte	0
 1883 00c2 11       		.uleb128 0x11
 1884 00c3 0F       		.uleb128 0xf
 1885 00c4 00       		.byte	0
 1886 00c5 0B       		.uleb128 0xb
 1887 00c6 0B       		.uleb128 0xb
 1888 00c7 49       		.uleb128 0x49
 1889 00c8 13       		.uleb128 0x13
 1890 00c9 00       		.byte	0
 1891 00ca 00       		.byte	0
 1892 00cb 12       		.uleb128 0x12
 1893 00cc 26       		.uleb128 0x26
 1894 00cd 00       		.byte	0
 1895 00ce 00       		.byte	0
 1896 00cf 00       		.byte	0
 1897 00d0 13       		.uleb128 0x13
 1898 00d1 17       		.uleb128 0x17
 1899 00d2 01       		.byte	0x1
 1900 00d3 0B       		.uleb128 0xb
 1901 00d4 0B       		.uleb128 0xb
 1902 00d5 3A       		.uleb128 0x3a
 1903 00d6 0B       		.uleb128 0xb
 1904 00d7 3B       		.uleb128 0x3b
 1905 00d8 05       		.uleb128 0x5
 1906 00d9 01       		.uleb128 0x1
 1907 00da 13       		.uleb128 0x13
 1908 00db 00       		.byte	0
 1909 00dc 00       		.byte	0
 1910 00dd 14       		.uleb128 0x14
 1911 00de 0D       		.uleb128 0xd
 1912 00df 00       		.byte	0
 1913 00e0 03       		.uleb128 0x3
 1914 00e1 08       		.uleb128 0x8
 1915 00e2 3A       		.uleb128 0x3a
 1916 00e3 0B       		.uleb128 0xb
 1917 00e4 3B       		.uleb128 0x3b
 1918 00e5 05       		.uleb128 0x5
 1919 00e6 49       		.uleb128 0x49
 1920 00e7 13       		.uleb128 0x13
 1921 00e8 00       		.byte	0
 1922 00e9 00       		.byte	0
 1923 00ea 15       		.uleb128 0x15
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 58


 1924 00eb 0D       		.uleb128 0xd
 1925 00ec 00       		.byte	0
 1926 00ed 03       		.uleb128 0x3
 1927 00ee 0E       		.uleb128 0xe
 1928 00ef 3A       		.uleb128 0x3a
 1929 00f0 0B       		.uleb128 0xb
 1930 00f1 3B       		.uleb128 0x3b
 1931 00f2 05       		.uleb128 0x5
 1932 00f3 49       		.uleb128 0x49
 1933 00f4 13       		.uleb128 0x13
 1934 00f5 00       		.byte	0
 1935 00f6 00       		.byte	0
 1936 00f7 16       		.uleb128 0x16
 1937 00f8 2E       		.uleb128 0x2e
 1938 00f9 01       		.byte	0x1
 1939 00fa 3F       		.uleb128 0x3f
 1940 00fb 19       		.uleb128 0x19
 1941 00fc 03       		.uleb128 0x3
 1942 00fd 0E       		.uleb128 0xe
 1943 00fe 3A       		.uleb128 0x3a
 1944 00ff 0B       		.uleb128 0xb
 1945 0100 3B       		.uleb128 0x3b
 1946 0101 05       		.uleb128 0x5
 1947 0102 27       		.uleb128 0x27
 1948 0103 19       		.uleb128 0x19
 1949 0104 11       		.uleb128 0x11
 1950 0105 01       		.uleb128 0x1
 1951 0106 12       		.uleb128 0x12
 1952 0107 06       		.uleb128 0x6
 1953 0108 40       		.uleb128 0x40
 1954 0109 18       		.uleb128 0x18
 1955 010a 9742     		.uleb128 0x2117
 1956 010c 19       		.uleb128 0x19
 1957 010d 01       		.uleb128 0x1
 1958 010e 13       		.uleb128 0x13
 1959 010f 00       		.byte	0
 1960 0110 00       		.byte	0
 1961 0111 17       		.uleb128 0x17
 1962 0112 34       		.uleb128 0x34
 1963 0113 00       		.byte	0
 1964 0114 03       		.uleb128 0x3
 1965 0115 0E       		.uleb128 0xe
 1966 0116 3A       		.uleb128 0x3a
 1967 0117 0B       		.uleb128 0xb
 1968 0118 3B       		.uleb128 0x3b
 1969 0119 05       		.uleb128 0x5
 1970 011a 49       		.uleb128 0x49
 1971 011b 13       		.uleb128 0x13
 1972 011c 02       		.uleb128 0x2
 1973 011d 17       		.uleb128 0x17
 1974 011e 00       		.byte	0
 1975 011f 00       		.byte	0
 1976 0120 18       		.uleb128 0x18
 1977 0121 898201   		.uleb128 0x4109
 1978 0124 00       		.byte	0
 1979 0125 11       		.uleb128 0x11
 1980 0126 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 59


 1981 0127 31       		.uleb128 0x31
 1982 0128 13       		.uleb128 0x13
 1983 0129 00       		.byte	0
 1984 012a 00       		.byte	0
 1985 012b 19       		.uleb128 0x19
 1986 012c 26       		.uleb128 0x26
 1987 012d 00       		.byte	0
 1988 012e 49       		.uleb128 0x49
 1989 012f 13       		.uleb128 0x13
 1990 0130 00       		.byte	0
 1991 0131 00       		.byte	0
 1992 0132 1A       		.uleb128 0x1a
 1993 0133 05       		.uleb128 0x5
 1994 0134 00       		.byte	0
 1995 0135 03       		.uleb128 0x3
 1996 0136 0E       		.uleb128 0xe
 1997 0137 3A       		.uleb128 0x3a
 1998 0138 0B       		.uleb128 0xb
 1999 0139 3B       		.uleb128 0x3b
 2000 013a 05       		.uleb128 0x5
 2001 013b 49       		.uleb128 0x49
 2002 013c 13       		.uleb128 0x13
 2003 013d 02       		.uleb128 0x2
 2004 013e 17       		.uleb128 0x17
 2005 013f 00       		.byte	0
 2006 0140 00       		.byte	0
 2007 0141 1B       		.uleb128 0x1b
 2008 0142 05       		.uleb128 0x5
 2009 0143 00       		.byte	0
 2010 0144 03       		.uleb128 0x3
 2011 0145 0E       		.uleb128 0xe
 2012 0146 3A       		.uleb128 0x3a
 2013 0147 0B       		.uleb128 0xb
 2014 0148 3B       		.uleb128 0x3b
 2015 0149 05       		.uleb128 0x5
 2016 014a 49       		.uleb128 0x49
 2017 014b 13       		.uleb128 0x13
 2018 014c 02       		.uleb128 0x2
 2019 014d 18       		.uleb128 0x18
 2020 014e 00       		.byte	0
 2021 014f 00       		.byte	0
 2022 0150 1C       		.uleb128 0x1c
 2023 0151 2E       		.uleb128 0x2e
 2024 0152 01       		.byte	0x1
 2025 0153 3F       		.uleb128 0x3f
 2026 0154 19       		.uleb128 0x19
 2027 0155 03       		.uleb128 0x3
 2028 0156 0E       		.uleb128 0xe
 2029 0157 3A       		.uleb128 0x3a
 2030 0158 0B       		.uleb128 0xb
 2031 0159 3B       		.uleb128 0x3b
 2032 015a 05       		.uleb128 0x5
 2033 015b 27       		.uleb128 0x27
 2034 015c 19       		.uleb128 0x19
 2035 015d 49       		.uleb128 0x49
 2036 015e 13       		.uleb128 0x13
 2037 015f 11       		.uleb128 0x11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 60


 2038 0160 01       		.uleb128 0x1
 2039 0161 12       		.uleb128 0x12
 2040 0162 06       		.uleb128 0x6
 2041 0163 40       		.uleb128 0x40
 2042 0164 18       		.uleb128 0x18
 2043 0165 9742     		.uleb128 0x2117
 2044 0167 19       		.uleb128 0x19
 2045 0168 01       		.uleb128 0x1
 2046 0169 13       		.uleb128 0x13
 2047 016a 00       		.byte	0
 2048 016b 00       		.byte	0
 2049 016c 1D       		.uleb128 0x1d
 2050 016d 34       		.uleb128 0x34
 2051 016e 00       		.byte	0
 2052 016f 03       		.uleb128 0x3
 2053 0170 0E       		.uleb128 0xe
 2054 0171 3A       		.uleb128 0x3a
 2055 0172 0B       		.uleb128 0xb
 2056 0173 3B       		.uleb128 0x3b
 2057 0174 05       		.uleb128 0x5
 2058 0175 49       		.uleb128 0x49
 2059 0176 13       		.uleb128 0x13
 2060 0177 02       		.uleb128 0x2
 2061 0178 18       		.uleb128 0x18
 2062 0179 00       		.byte	0
 2063 017a 00       		.byte	0
 2064 017b 1E       		.uleb128 0x1e
 2065 017c 898201   		.uleb128 0x4109
 2066 017f 01       		.byte	0x1
 2067 0180 11       		.uleb128 0x11
 2068 0181 01       		.uleb128 0x1
 2069 0182 31       		.uleb128 0x31
 2070 0183 13       		.uleb128 0x13
 2071 0184 01       		.uleb128 0x1
 2072 0185 13       		.uleb128 0x13
 2073 0186 00       		.byte	0
 2074 0187 00       		.byte	0
 2075 0188 1F       		.uleb128 0x1f
 2076 0189 8A8201   		.uleb128 0x410a
 2077 018c 00       		.byte	0
 2078 018d 02       		.uleb128 0x2
 2079 018e 18       		.uleb128 0x18
 2080 018f 9142     		.uleb128 0x2111
 2081 0191 18       		.uleb128 0x18
 2082 0192 00       		.byte	0
 2083 0193 00       		.byte	0
 2084 0194 20       		.uleb128 0x20
 2085 0195 898201   		.uleb128 0x4109
 2086 0198 01       		.byte	0x1
 2087 0199 11       		.uleb128 0x11
 2088 019a 01       		.uleb128 0x1
 2089 019b 31       		.uleb128 0x31
 2090 019c 13       		.uleb128 0x13
 2091 019d 00       		.byte	0
 2092 019e 00       		.byte	0
 2093 019f 21       		.uleb128 0x21
 2094 01a0 34       		.uleb128 0x34
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 61


 2095 01a1 00       		.byte	0
 2096 01a2 03       		.uleb128 0x3
 2097 01a3 0E       		.uleb128 0xe
 2098 01a4 3A       		.uleb128 0x3a
 2099 01a5 0B       		.uleb128 0xb
 2100 01a6 3B       		.uleb128 0x3b
 2101 01a7 05       		.uleb128 0x5
 2102 01a8 49       		.uleb128 0x49
 2103 01a9 13       		.uleb128 0x13
 2104 01aa 3F       		.uleb128 0x3f
 2105 01ab 19       		.uleb128 0x19
 2106 01ac 3C       		.uleb128 0x3c
 2107 01ad 19       		.uleb128 0x19
 2108 01ae 00       		.byte	0
 2109 01af 00       		.byte	0
 2110 01b0 22       		.uleb128 0x22
 2111 01b1 2E       		.uleb128 0x2e
 2112 01b2 00       		.byte	0
 2113 01b3 3F       		.uleb128 0x3f
 2114 01b4 19       		.uleb128 0x19
 2115 01b5 3C       		.uleb128 0x3c
 2116 01b6 19       		.uleb128 0x19
 2117 01b7 6E       		.uleb128 0x6e
 2118 01b8 0E       		.uleb128 0xe
 2119 01b9 03       		.uleb128 0x3
 2120 01ba 0E       		.uleb128 0xe
 2121 01bb 3A       		.uleb128 0x3a
 2122 01bc 0B       		.uleb128 0xb
 2123 01bd 3B       		.uleb128 0x3b
 2124 01be 0B       		.uleb128 0xb
 2125 01bf 00       		.byte	0
 2126 01c0 00       		.byte	0
 2127 01c1 23       		.uleb128 0x23
 2128 01c2 2E       		.uleb128 0x2e
 2129 01c3 00       		.byte	0
 2130 01c4 3F       		.uleb128 0x3f
 2131 01c5 19       		.uleb128 0x19
 2132 01c6 3C       		.uleb128 0x3c
 2133 01c7 19       		.uleb128 0x19
 2134 01c8 6E       		.uleb128 0x6e
 2135 01c9 0E       		.uleb128 0xe
 2136 01ca 03       		.uleb128 0x3
 2137 01cb 0E       		.uleb128 0xe
 2138 01cc 3A       		.uleb128 0x3a
 2139 01cd 0B       		.uleb128 0xb
 2140 01ce 3B       		.uleb128 0x3b
 2141 01cf 05       		.uleb128 0x5
 2142 01d0 00       		.byte	0
 2143 01d1 00       		.byte	0
 2144 01d2 00       		.byte	0
 2145              		.section	.debug_loc,"",%progbits
 2146              	.Ldebug_loc0:
 2147              	.LLST0:
 2148 0000 02000000 		.4byte	.LVL0
 2149 0004 06000000 		.4byte	.LVL1
 2150 0008 0200     		.2byte	0x2
 2151 000a 30       		.byte	0x30
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 62


 2152 000b 9F       		.byte	0x9f
 2153 000c 06000000 		.4byte	.LVL1
 2154 0010 24000000 		.4byte	.LVL3
 2155 0014 0100     		.2byte	0x1
 2156 0016 53       		.byte	0x53
 2157 0017 26000000 		.4byte	.LVL4
 2158 001b 46000000 		.4byte	.LVL10
 2159 001f 0100     		.2byte	0x1
 2160 0021 55       		.byte	0x55
 2161 0022 46000000 		.4byte	.LVL10
 2162 0026 48000000 		.4byte	.LVL11
 2163 002a 0100     		.2byte	0x1
 2164 002c 53       		.byte	0x53
 2165 002d 48000000 		.4byte	.LVL11
 2166 0031 4E000000 		.4byte	.LVL12
 2167 0035 0100     		.2byte	0x1
 2168 0037 55       		.byte	0x55
 2169 0038 4E000000 		.4byte	.LVL12
 2170 003c 58000000 		.4byte	.LFE132
 2171 0040 0300     		.2byte	0x3
 2172 0042 73       		.byte	0x73
 2173 0043 7F       		.sleb128 -1
 2174 0044 9F       		.byte	0x9f
 2175 0045 00000000 		.4byte	0
 2176 0049 00000000 		.4byte	0
 2177              	.LLST1:
 2178 004d 2A000000 		.4byte	.LVL6
 2179 0051 3C000000 		.4byte	.LVL7
 2180 0055 0100     		.2byte	0x1
 2181 0057 52       		.byte	0x52
 2182 0058 3C000000 		.4byte	.LVL7
 2183 005c 41000000 		.4byte	.LVL8-1
 2184 0060 0200     		.2byte	0x2
 2185 0062 74       		.byte	0x74
 2186 0063 1A       		.sleb128 26
 2187 0064 00000000 		.4byte	0
 2188 0068 00000000 		.4byte	0
 2189              	.LLST2:
 2190 006c 28000000 		.4byte	.LVL5
 2191 0070 46000000 		.4byte	.LVL10
 2192 0074 0100     		.2byte	0x1
 2193 0076 56       		.byte	0x56
 2194 0077 00000000 		.4byte	0
 2195 007b 00000000 		.4byte	0
 2196              	.LLST3:
 2197 007f 26000000 		.4byte	.LVL4
 2198 0083 4E000000 		.4byte	.LVL12
 2199 0087 0100     		.2byte	0x1
 2200 0089 54       		.byte	0x54
 2201 008a 00000000 		.4byte	0
 2202 008e 00000000 		.4byte	0
 2203              	.LLST4:
 2204 0092 00000000 		.4byte	.LVL13
 2205 0096 0E000000 		.4byte	.LVL16
 2206 009a 0100     		.2byte	0x1
 2207 009c 50       		.byte	0x50
 2208 009d 0E000000 		.4byte	.LVL16
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 63


 2209 00a1 18000000 		.4byte	.LFE136
 2210 00a5 0400     		.2byte	0x4
 2211 00a7 F3       		.byte	0xf3
 2212 00a8 01       		.uleb128 0x1
 2213 00a9 50       		.byte	0x50
 2214 00aa 9F       		.byte	0x9f
 2215 00ab 00000000 		.4byte	0
 2216 00af 00000000 		.4byte	0
 2217              	.LLST5:
 2218 00b3 02000000 		.4byte	.LVL14
 2219 00b7 08000000 		.4byte	.LVL15
 2220 00bb 0200     		.2byte	0x2
 2221 00bd 30       		.byte	0x30
 2222 00be 9F       		.byte	0x9f
 2223 00bf 08000000 		.4byte	.LVL15
 2224 00c3 16000000 		.4byte	.LVL17
 2225 00c7 0100     		.2byte	0x1
 2226 00c9 54       		.byte	0x54
 2227 00ca 16000000 		.4byte	.LVL17
 2228 00ce 18000000 		.4byte	.LFE136
 2229 00d2 0600     		.2byte	0x6
 2230 00d4 73       		.byte	0x73
 2231 00d5 00       		.sleb128 0
 2232 00d6 72       		.byte	0x72
 2233 00d7 00       		.sleb128 0
 2234 00d8 1C       		.byte	0x1c
 2235 00d9 9F       		.byte	0x9f
 2236 00da 00000000 		.4byte	0
 2237 00de 00000000 		.4byte	0
 2238              	.LLST6:
 2239 00e2 00000000 		.4byte	.LVL18
 2240 00e6 14000000 		.4byte	.LVL23
 2241 00ea 0100     		.2byte	0x1
 2242 00ec 50       		.byte	0x50
 2243 00ed 14000000 		.4byte	.LVL23
 2244 00f1 38000000 		.4byte	.LFE133
 2245 00f5 0100     		.2byte	0x1
 2246 00f7 57       		.byte	0x57
 2247 00f8 00000000 		.4byte	0
 2248 00fc 00000000 		.4byte	0
 2249              	.LLST7:
 2250 0100 06000000 		.4byte	.LVL19
 2251 0104 14000000 		.4byte	.LVL23
 2252 0108 0200     		.2byte	0x2
 2253 010a 30       		.byte	0x30
 2254 010b 9F       		.byte	0x9f
 2255 010c 14000000 		.4byte	.LVL23
 2256 0110 20000000 		.4byte	.LVL25
 2257 0114 0100     		.2byte	0x1
 2258 0116 58       		.byte	0x58
 2259 0117 20000000 		.4byte	.LVL25
 2260 011b 24000000 		.4byte	.LVL26
 2261 011f 0100     		.2byte	0x1
 2262 0121 50       		.byte	0x50
 2263 0122 24000000 		.4byte	.LVL26
 2264 0126 38000000 		.4byte	.LFE133
 2265 012a 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 64


 2266 012c 58       		.byte	0x58
 2267 012d 00000000 		.4byte	0
 2268 0131 00000000 		.4byte	0
 2269              	.LLST8:
 2270 0135 0E000000 		.4byte	.LVL22
 2271 0139 14000000 		.4byte	.LVL23
 2272 013d 0200     		.2byte	0x2
 2273 013f 30       		.byte	0x30
 2274 0140 9F       		.byte	0x9f
 2275 0141 14000000 		.4byte	.LVL23
 2276 0145 38000000 		.4byte	.LFE133
 2277 0149 0100     		.2byte	0x1
 2278 014b 55       		.byte	0x55
 2279 014c 00000000 		.4byte	0
 2280 0150 00000000 		.4byte	0
 2281              	.LLST9:
 2282 0154 00000000 		.4byte	.LVL30
 2283 0158 12000000 		.4byte	.LVL34
 2284 015c 0100     		.2byte	0x1
 2285 015e 50       		.byte	0x50
 2286 015f 12000000 		.4byte	.LVL34
 2287 0163 1A000000 		.4byte	.LVL37
 2288 0167 0400     		.2byte	0x4
 2289 0169 F3       		.byte	0xf3
 2290 016a 01       		.uleb128 0x1
 2291 016b 50       		.byte	0x50
 2292 016c 9F       		.byte	0x9f
 2293 016d 1A000000 		.4byte	.LVL37
 2294 0171 1C000000 		.4byte	.LVL38
 2295 0175 0100     		.2byte	0x1
 2296 0177 50       		.byte	0x50
 2297 0178 1C000000 		.4byte	.LVL38
 2298 017c 2E000000 		.4byte	.LFE134
 2299 0180 0400     		.2byte	0x4
 2300 0182 F3       		.byte	0xf3
 2301 0183 01       		.uleb128 0x1
 2302 0184 50       		.byte	0x50
 2303 0185 9F       		.byte	0x9f
 2304 0186 00000000 		.4byte	0
 2305 018a 00000000 		.4byte	0
 2306              	.LLST10:
 2307 018e 00000000 		.4byte	.LVL30
 2308 0192 15000000 		.4byte	.LVL35-1
 2309 0196 0100     		.2byte	0x1
 2310 0198 51       		.byte	0x51
 2311 0199 15000000 		.4byte	.LVL35-1
 2312 019d 1A000000 		.4byte	.LVL37
 2313 01a1 0100     		.2byte	0x1
 2314 01a3 57       		.byte	0x57
 2315 01a4 1A000000 		.4byte	.LVL37
 2316 01a8 1C000000 		.4byte	.LVL38
 2317 01ac 0100     		.2byte	0x1
 2318 01ae 51       		.byte	0x51
 2319 01af 1C000000 		.4byte	.LVL38
 2320 01b3 2E000000 		.4byte	.LFE134
 2321 01b7 0100     		.2byte	0x1
 2322 01b9 57       		.byte	0x57
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 65


 2323 01ba 00000000 		.4byte	0
 2324 01be 00000000 		.4byte	0
 2325              	.LLST11:
 2326 01c2 00000000 		.4byte	.LVL30
 2327 01c6 08000000 		.4byte	.LVL32
 2328 01ca 0100     		.2byte	0x1
 2329 01cc 52       		.byte	0x52
 2330 01cd 00000000 		.4byte	0
 2331 01d1 00000000 		.4byte	0
 2332              	.LLST12:
 2333 01d5 00000000 		.4byte	.LVL30
 2334 01d9 15000000 		.4byte	.LVL35-1
 2335 01dd 0100     		.2byte	0x1
 2336 01df 53       		.byte	0x53
 2337 01e0 15000000 		.4byte	.LVL35-1
 2338 01e4 1A000000 		.4byte	.LVL37
 2339 01e8 0100     		.2byte	0x1
 2340 01ea 54       		.byte	0x54
 2341 01eb 1A000000 		.4byte	.LVL37
 2342 01ef 1C000000 		.4byte	.LVL38
 2343 01f3 0100     		.2byte	0x1
 2344 01f5 53       		.byte	0x53
 2345 01f6 1C000000 		.4byte	.LVL38
 2346 01fa 2E000000 		.4byte	.LFE134
 2347 01fe 0100     		.2byte	0x1
 2348 0200 54       		.byte	0x54
 2349 0201 00000000 		.4byte	0
 2350 0205 00000000 		.4byte	0
 2351              	.LLST13:
 2352 0209 06000000 		.4byte	.LVL31
 2353 020d 18000000 		.4byte	.LVL36
 2354 0211 0200     		.2byte	0x2
 2355 0213 30       		.byte	0x30
 2356 0214 9F       		.byte	0x9f
 2357 0215 18000000 		.4byte	.LVL36
 2358 0219 1A000000 		.4byte	.LVL37
 2359 021d 0100     		.2byte	0x1
 2360 021f 50       		.byte	0x50
 2361 0220 1A000000 		.4byte	.LVL37
 2362 0224 1C000000 		.4byte	.LVL38
 2363 0228 0200     		.2byte	0x2
 2364 022a 30       		.byte	0x30
 2365 022b 9F       		.byte	0x9f
 2366 022c 1C000000 		.4byte	.LVL38
 2367 0230 2E000000 		.4byte	.LFE134
 2368 0234 0100     		.2byte	0x1
 2369 0236 55       		.byte	0x55
 2370 0237 00000000 		.4byte	0
 2371 023b 00000000 		.4byte	0
 2372              	.LLST14:
 2373 023f 08000000 		.4byte	.LVL32
 2374 0243 15000000 		.4byte	.LVL35-1
 2375 0247 0100     		.2byte	0x1
 2376 0249 52       		.byte	0x52
 2377 024a 1A000000 		.4byte	.LVL37
 2378 024e 1C000000 		.4byte	.LVL38
 2379 0252 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 66


 2380 0254 52       		.byte	0x52
 2381 0255 00000000 		.4byte	0
 2382 0259 00000000 		.4byte	0
 2383              	.LLST15:
 2384 025d 00000000 		.4byte	.LVL40
 2385 0261 44000000 		.4byte	.LVL50
 2386 0265 0100     		.2byte	0x1
 2387 0267 50       		.byte	0x50
 2388 0268 44000000 		.4byte	.LVL50
 2389 026c 62000000 		.4byte	.LFE137
 2390 0270 0100     		.2byte	0x1
 2391 0272 50       		.byte	0x50
 2392 0273 00000000 		.4byte	0
 2393 0277 00000000 		.4byte	0
 2394              	.LLST16:
 2395 027b 00000000 		.4byte	.LVL40
 2396 027f 0E000000 		.4byte	.LVL45
 2397 0283 0100     		.2byte	0x1
 2398 0285 51       		.byte	0x51
 2399 0286 0E000000 		.4byte	.LVL45
 2400 028a 62000000 		.4byte	.LFE137
 2401 028e 0400     		.2byte	0x4
 2402 0290 F3       		.byte	0xf3
 2403 0291 01       		.uleb128 0x1
 2404 0292 51       		.byte	0x51
 2405 0293 9F       		.byte	0x9f
 2406 0294 00000000 		.4byte	0
 2407 0298 00000000 		.4byte	0
 2408              	.LLST17:
 2409 029c 04000000 		.4byte	.LVL41
 2410 02a0 0E000000 		.4byte	.LVL45
 2411 02a4 0100     		.2byte	0x1
 2412 02a6 54       		.byte	0x54
 2413 02a7 0E000000 		.4byte	.LVL45
 2414 02ab 58000000 		.4byte	.LVL58
 2415 02af 0100     		.2byte	0x1
 2416 02b1 5E       		.byte	0x5e
 2417 02b2 58000000 		.4byte	.LVL58
 2418 02b6 5C000000 		.4byte	.LVL59
 2419 02ba 0100     		.2byte	0x1
 2420 02bc 54       		.byte	0x54
 2421 02bd 5C000000 		.4byte	.LVL59
 2422 02c1 62000000 		.4byte	.LFE137
 2423 02c5 0100     		.2byte	0x1
 2424 02c7 5E       		.byte	0x5e
 2425 02c8 00000000 		.4byte	0
 2426 02cc 00000000 		.4byte	0
 2427              	.LLST18:
 2428 02d0 0A000000 		.4byte	.LVL44
 2429 02d4 0E000000 		.4byte	.LVL45
 2430 02d8 0200     		.2byte	0x2
 2431 02da 31       		.byte	0x31
 2432 02db 9F       		.byte	0x9f
 2433 02dc 0E000000 		.4byte	.LVL45
 2434 02e0 62000000 		.4byte	.LFE137
 2435 02e4 0100     		.2byte	0x1
 2436 02e6 53       		.byte	0x53
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 67


 2437 02e7 00000000 		.4byte	0
 2438 02eb 00000000 		.4byte	0
 2439              	.LLST19:
 2440 02ef 2E000000 		.4byte	.LVL49
 2441 02f3 4A000000 		.4byte	.LVL52
 2442 02f7 0100     		.2byte	0x1
 2443 02f9 51       		.byte	0x51
 2444 02fa 4C000000 		.4byte	.LVL53
 2445 02fe 4E000000 		.4byte	.LVL54
 2446 0302 0100     		.2byte	0x1
 2447 0304 51       		.byte	0x51
 2448 0305 00000000 		.4byte	0
 2449 0309 00000000 		.4byte	0
 2450              	.LLST20:
 2451 030d 22000000 		.4byte	.LVL46
 2452 0311 2A000000 		.4byte	.LVL47
 2453 0315 0100     		.2byte	0x1
 2454 0317 51       		.byte	0x51
 2455 0318 2C000000 		.4byte	.LVL48
 2456 031c 2E000000 		.4byte	.LVL49
 2457 0320 0100     		.2byte	0x1
 2458 0322 51       		.byte	0x51
 2459 0323 00000000 		.4byte	0
 2460 0327 00000000 		.4byte	0
 2461              	.LLST21:
 2462 032b 00000000 		.4byte	.LVL60
 2463 032f 12000000 		.4byte	.LVL63
 2464 0333 0100     		.2byte	0x1
 2465 0335 50       		.byte	0x50
 2466 0336 12000000 		.4byte	.LVL63
 2467 033a 1A000000 		.4byte	.LVL66
 2468 033e 0100     		.2byte	0x1
 2469 0340 54       		.byte	0x54
 2470 0341 1A000000 		.4byte	.LVL66
 2471 0345 20000000 		.4byte	.LVL68
 2472 0349 0100     		.2byte	0x1
 2473 034b 50       		.byte	0x50
 2474 034c 20000000 		.4byte	.LVL68
 2475 0350 30000000 		.4byte	.LVL71
 2476 0354 0100     		.2byte	0x1
 2477 0356 54       		.byte	0x54
 2478 0357 30000000 		.4byte	.LVL71
 2479 035b 64000000 		.4byte	.LFE135
 2480 035f 0400     		.2byte	0x4
 2481 0361 F3       		.byte	0xf3
 2482 0362 01       		.uleb128 0x1
 2483 0363 50       		.byte	0x50
 2484 0364 9F       		.byte	0x9f
 2485 0365 00000000 		.4byte	0
 2486 0369 00000000 		.4byte	0
 2487              	.LLST22:
 2488 036d 00000000 		.4byte	.LVL60
 2489 0371 15000000 		.4byte	.LVL64-1
 2490 0375 0100     		.2byte	0x1
 2491 0377 51       		.byte	0x51
 2492 0378 15000000 		.4byte	.LVL64-1
 2493 037c 1A000000 		.4byte	.LVL66
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 68


 2494 0380 0400     		.2byte	0x4
 2495 0382 F3       		.byte	0xf3
 2496 0383 01       		.uleb128 0x1
 2497 0384 51       		.byte	0x51
 2498 0385 9F       		.byte	0x9f
 2499 0386 1A000000 		.4byte	.LVL66
 2500 038a 1E000000 		.4byte	.LVL67
 2501 038e 0100     		.2byte	0x1
 2502 0390 51       		.byte	0x51
 2503 0391 1E000000 		.4byte	.LVL67
 2504 0395 64000000 		.4byte	.LFE135
 2505 0399 0400     		.2byte	0x4
 2506 039b F3       		.byte	0xf3
 2507 039c 01       		.uleb128 0x1
 2508 039d 51       		.byte	0x51
 2509 039e 9F       		.byte	0x9f
 2510 039f 00000000 		.4byte	0
 2511 03a3 00000000 		.4byte	0
 2512              	.LLST23:
 2513 03a7 0C000000 		.4byte	.LVL62
 2514 03ab 18000000 		.4byte	.LVL65
 2515 03af 0100     		.2byte	0x1
 2516 03b1 55       		.byte	0x55
 2517 03b2 18000000 		.4byte	.LVL65
 2518 03b6 1A000000 		.4byte	.LVL66
 2519 03ba 0100     		.2byte	0x1
 2520 03bc 50       		.byte	0x50
 2521 03bd 1A000000 		.4byte	.LVL66
 2522 03c1 5A000000 		.4byte	.LVL80
 2523 03c5 0100     		.2byte	0x1
 2524 03c7 55       		.byte	0x55
 2525 03c8 00000000 		.4byte	0
 2526 03cc 00000000 		.4byte	0
 2527              	.LLST24:
 2528 03d0 2C000000 		.4byte	.LVL70
 2529 03d4 3A000000 		.4byte	.LVL73
 2530 03d8 0100     		.2byte	0x1
 2531 03da 52       		.byte	0x52
 2532 03db 3A000000 		.4byte	.LVL73
 2533 03df 40000000 		.4byte	.LVL74
 2534 03e3 0300     		.2byte	0x3
 2535 03e5 72       		.byte	0x72
 2536 03e6 7C       		.sleb128 -4
 2537 03e7 9F       		.byte	0x9f
 2538 03e8 40000000 		.4byte	.LVL74
 2539 03ec 4A000000 		.4byte	.LVL76
 2540 03f0 0600     		.2byte	0x6
 2541 03f2 F3       		.byte	0xf3
 2542 03f3 01       		.uleb128 0x1
 2543 03f4 50       		.byte	0x50
 2544 03f5 35       		.byte	0x35
 2545 03f6 25       		.byte	0x25
 2546 03f7 9F       		.byte	0x9f
 2547 03f8 4A000000 		.4byte	.LVL76
 2548 03fc 4C000000 		.4byte	.LVL77
 2549 0400 0100     		.2byte	0x1
 2550 0402 52       		.byte	0x52
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 69


 2551 0403 4C000000 		.4byte	.LVL77
 2552 0407 52000000 		.4byte	.LVL78
 2553 040b 0300     		.2byte	0x3
 2554 040d 72       		.byte	0x72
 2555 040e 7C       		.sleb128 -4
 2556 040f 9F       		.byte	0x9f
 2557 0410 52000000 		.4byte	.LVL78
 2558 0414 64000000 		.4byte	.LFE135
 2559 0418 0600     		.2byte	0x6
 2560 041a F3       		.byte	0xf3
 2561 041b 01       		.uleb128 0x1
 2562 041c 50       		.byte	0x50
 2563 041d 35       		.byte	0x35
 2564 041e 25       		.byte	0x25
 2565 041f 9F       		.byte	0x9f
 2566 0420 00000000 		.4byte	0
 2567 0424 00000000 		.4byte	0
 2568              	.LLST25:
 2569 0428 36000000 		.4byte	.LVL72
 2570 042c 46000000 		.4byte	.LVL75
 2571 0430 0100     		.2byte	0x1
 2572 0432 54       		.byte	0x54
 2573 0433 46000000 		.4byte	.LVL75
 2574 0437 4A000000 		.4byte	.LVL76
 2575 043b 0800     		.2byte	0x8
 2576 043d 31       		.byte	0x31
 2577 043e F3       		.byte	0xf3
 2578 043f 01       		.uleb128 0x1
 2579 0440 50       		.byte	0x50
 2580 0441 4F       		.byte	0x4f
 2581 0442 1A       		.byte	0x1a
 2582 0443 24       		.byte	0x24
 2583 0444 9F       		.byte	0x9f
 2584 0445 4A000000 		.4byte	.LVL76
 2585 0449 56000000 		.4byte	.LVL79
 2586 044d 0100     		.2byte	0x1
 2587 044f 54       		.byte	0x54
 2588 0450 56000000 		.4byte	.LVL79
 2589 0454 64000000 		.4byte	.LFE135
 2590 0458 0800     		.2byte	0x8
 2591 045a 31       		.byte	0x31
 2592 045b F3       		.byte	0xf3
 2593 045c 01       		.uleb128 0x1
 2594 045d 50       		.byte	0x50
 2595 045e 4F       		.byte	0x4f
 2596 045f 1A       		.byte	0x1a
 2597 0460 24       		.byte	0x24
 2598 0461 9F       		.byte	0x9f
 2599 0462 00000000 		.4byte	0
 2600 0466 00000000 		.4byte	0
 2601              	.LLST26:
 2602 046a 06000000 		.4byte	.LVL61
 2603 046e 15000000 		.4byte	.LVL64-1
 2604 0472 0100     		.2byte	0x1
 2605 0474 52       		.byte	0x52
 2606 0475 1A000000 		.4byte	.LVL66
 2607 0479 23000000 		.4byte	.LVL69-1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 70


 2608 047d 0100     		.2byte	0x1
 2609 047f 52       		.byte	0x52
 2610 0480 00000000 		.4byte	0
 2611 0484 00000000 		.4byte	0
 2612              		.section	.debug_aranges,"",%progbits
 2613 0000 44000000 		.4byte	0x44
 2614 0004 0200     		.2byte	0x2
 2615 0006 00000000 		.4byte	.Ldebug_info0
 2616 000a 04       		.byte	0x4
 2617 000b 00       		.byte	0
 2618 000c 0000     		.2byte	0
 2619 000e 0000     		.2byte	0
 2620 0010 00000000 		.4byte	.LFB132
 2621 0014 58000000 		.4byte	.LFE132-.LFB132
 2622 0018 00000000 		.4byte	.LFB136
 2623 001c 18000000 		.4byte	.LFE136-.LFB136
 2624 0020 00000000 		.4byte	.LFB133
 2625 0024 38000000 		.4byte	.LFE133-.LFB133
 2626 0028 00000000 		.4byte	.LFB134
 2627 002c 2E000000 		.4byte	.LFE134-.LFB134
 2628 0030 00000000 		.4byte	.LFB137
 2629 0034 62000000 		.4byte	.LFE137-.LFB137
 2630 0038 00000000 		.4byte	.LFB135
 2631 003c 64000000 		.4byte	.LFE135-.LFB135
 2632 0040 00000000 		.4byte	0
 2633 0044 00000000 		.4byte	0
 2634              		.section	.debug_ranges,"",%progbits
 2635              	.Ldebug_ranges0:
 2636 0000 00000000 		.4byte	.LFB132
 2637 0004 58000000 		.4byte	.LFE132
 2638 0008 00000000 		.4byte	.LFB136
 2639 000c 18000000 		.4byte	.LFE136
 2640 0010 00000000 		.4byte	.LFB133
 2641 0014 38000000 		.4byte	.LFE133
 2642 0018 00000000 		.4byte	.LFB134
 2643 001c 2E000000 		.4byte	.LFE134
 2644 0020 00000000 		.4byte	.LFB137
 2645 0024 62000000 		.4byte	.LFE137
 2646 0028 00000000 		.4byte	.LFB135
 2647 002c 64000000 		.4byte	.LFE135
 2648 0030 00000000 		.4byte	0
 2649 0034 00000000 		.4byte	0
 2650              		.section	.debug_line,"",%progbits
 2651              	.Ldebug_line0:
 2652 0000 43040000 		.section	.debug_str,"MS",%progbits,1
 2652      02000A03 
 2652      00000201 
 2652      FB0E0D00 
 2652      01010101 
 2653              	.LASF25:
 2654 0000 75696E74 		.ascii	"uint16\000"
 2654      313600
 2655              	.LASF110:
 2656 0007 63757272 		.ascii	"currStatus\000"
 2656      53746174 
 2656      757300
 2657              	.LASF112:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 71


 2658 0012 736E734D 		.ascii	"snsMask\000"
 2658      61736B00 
 2659              	.LASF79:
 2660 001a 70747232 		.ascii	"ptr2FltrHistory\000"
 2660      466C7472 
 2660      48697374 
 2660      6F727900 
 2661              	.LASF17:
 2662 002a 73697A65 		.ascii	"size_t\000"
 2662      5F7400
 2663              	.LASF3:
 2664 0031 5F5F7569 		.ascii	"__uint8_t\000"
 2664      6E74385F 
 2664      7400
 2665              	.LASF111:
 2666 003b 736E7343 		.ascii	"snsCnt\000"
 2666      6E7400
 2667              	.LASF119:
 2668 0042 77645374 		.ascii	"wdStatusIndex\000"
 2668      61747573 
 2668      496E6465 
 2668      7800
 2669              	.LASF128:
 2670 0050 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Processing.c\000"
 2670      72617465 
 2670      645F536F 
 2670      75726365 
 2670      5C50536F 
 2671              	.LASF56:
 2672 007d 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2672      656E7365 
 2672      5F52414D 
 2672      5F534E53 
 2672      5F535452 
 2673              	.LASF11:
 2674 0095 6C6F6E67 		.ascii	"long long unsigned int\000"
 2674      206C6F6E 
 2674      6720756E 
 2674      7369676E 
 2674      65642069 
 2675              	.LASF100:
 2676 00ac 63757253 		.ascii	"curSnsPtr\000"
 2676      6E735074 
 2676      7200
 2677              	.LASF99:
 2678 00b6 43617053 		.ascii	"CapSense_DpUpdateDifferences\000"
 2678      656E7365 
 2678      5F447055 
 2678      70646174 
 2678      65446966 
 2679              	.LASF76:
 2680 00d3 70747232 		.ascii	"ptr2SnsFlash\000"
 2680      536E7346 
 2680      6C617368 
 2680      00
 2681              	.LASF53:
 2682 00e0 64696666 		.ascii	"diff\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 72


 2682      00
 2683              	.LASF29:
 2684 00e5 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2684      656E7365 
 2684      5F4C4F57 
 2684      5F42534C 
 2684      4E5F5253 
 2685              	.LASF121:
 2686 0100 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2686      52784275 
 2686      66666572 
 2686      00
 2687              	.LASF72:
 2688 010d 736E7254 		.ascii	"snrTestSensorId\000"
 2688      65737453 
 2688      656E736F 
 2688      72496400 
 2689              	.LASF123:
 2690 011d 43617053 		.ascii	"CapSense_dsFlash\000"
 2690      656E7365 
 2690      5F647346 
 2690      6C617368 
 2690      00
 2691              	.LASF28:
 2692 012e 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2692      656E7365 
 2692      5F544852 
 2692      4553484F 
 2692      4C445F54 
 2693              	.LASF94:
 2694 0146 77646774 		.ascii	"wdgtId\000"
 2694      496400
 2695              	.LASF31:
 2696 014d 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2696      656E7365 
 2696      5F57445F 
 2696      4C494E45 
 2696      41525F53 
 2697              	.LASF10:
 2698 0169 6C6F6E67 		.ascii	"long long int\000"
 2698      206C6F6E 
 2698      6720696E 
 2698      7400
 2699              	.LASF0:
 2700 0177 7369676E 		.ascii	"signed char\000"
 2700      65642063 
 2700      68617200 
 2701              	.LASF91:
 2702 0183 43617053 		.ascii	"CapSense_REGULAR_FLTR_STRUCT\000"
 2702      656E7365 
 2702      5F524547 
 2702      554C4152 
 2702      5F464C54 
 2703              	.LASF49:
 2704 01a0 62757474 		.ascii	"button0\000"
 2704      6F6E3000 
 2705              	.LASF27:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 73


 2706 01a8 696E7433 		.ascii	"int32\000"
 2706      3200
 2707              	.LASF116:
 2708 01ae 43617053 		.ascii	"CapSense_DpProcessCsdWidgetStatus\000"
 2708      656E7365 
 2708      5F447050 
 2708      726F6365 
 2708      73734373 
 2709              	.LASF66:
 2710 01d0 736E7353 		.ascii	"snsStatus\000"
 2710      74617475 
 2710      7300
 2711              	.LASF7:
 2712 01da 6C6F6E67 		.ascii	"long int\000"
 2712      20696E74 
 2712      00
 2713              	.LASF68:
 2714 01e3 6D6F6443 		.ascii	"modCsdClk\000"
 2714      7364436C 
 2714      6B00
 2715              	.LASF78:
 2716 01ed 70747232 		.ascii	"ptr2SnsRam\000"
 2716      536E7352 
 2716      616D00
 2717              	.LASF24:
 2718 01f8 75696E74 		.ascii	"uint8\000"
 2718      3800
 2719              	.LASF14:
 2720 01fe 75696E74 		.ascii	"uint16_t\000"
 2720      31365F74 
 2720      00
 2721              	.LASF23:
 2722 0207 646F7562 		.ascii	"double\000"
 2722      6C6500
 2723              	.LASF74:
 2724 020e 736E7254 		.ascii	"snrTestRawCount\000"
 2724      65737452 
 2724      6177436F 
 2724      756E7400 
 2725              	.LASF5:
 2726 021e 73686F72 		.ascii	"short unsigned int\000"
 2726      7420756E 
 2726      7369676E 
 2726      65642069 
 2726      6E7400
 2727              	.LASF26:
 2728 0231 75696E74 		.ascii	"uint32\000"
 2728      333200
 2729              	.LASF41:
 2730 0238 68797374 		.ascii	"hysteresis\000"
 2730      65726573 
 2730      697300
 2731              	.LASF8:
 2732 0243 5F5F7569 		.ascii	"__uint32_t\000"
 2732      6E743332 
 2732      5F7400
 2733              	.LASF52:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 74


 2734 024e 62736C6E 		.ascii	"bslnExt\000"
 2734      45787400 
 2735              	.LASF129:
 2736 0256 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 2736      635C4461 
 2736      74615C56 
 2736      53636F64 
 2736      655C4749 
 2737 0283 65735C45 		.ascii	"es\\Example_CapSense\\Onethinx_Creator.cydsn\000"
 2737      78616D70 
 2737      6C655F43 
 2737      61705365 
 2737      6E73655C 
 2738              	.LASF65:
 2739 02ae 77646774 		.ascii	"wdgtStatus\000"
 2739      53746174 
 2739      757300
 2740              	.LASF33:
 2741 02b9 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2741      656E7365 
 2741      5F57445F 
 2741      4D415452 
 2741      49585F42 
 2742              	.LASF107:
 2743 02d5 666C7472 		.ascii	"fltrHistV\000"
 2743      48697374 
 2743      5600
 2744              	.LASF51:
 2745 02df 62736C6E 		.ascii	"bsln\000"
 2745      00
 2746              	.LASF97:
 2747 02e4 70747246 		.ascii	"ptrFlashWdgt\000"
 2747      6C617368 
 2747      57646774 
 2747      00
 2748              	.LASF12:
 2749 02f1 756E7369 		.ascii	"unsigned int\000"
 2749      676E6564 
 2749      20696E74 
 2749      00
 2750              	.LASF71:
 2751 02fe 736E7254 		.ascii	"snrTestWidgetId\000"
 2751      65737457 
 2751      69646765 
 2751      74496400 
 2752              	.LASF9:
 2753 030e 6C6F6E67 		.ascii	"long unsigned int\000"
 2753      20756E73 
 2753      69676E65 
 2753      6420696E 
 2753      7400
 2754              	.LASF64:
 2755 0320 77646774 		.ascii	"wdgtEnable\000"
 2755      456E6162 
 2755      6C6500
 2756              	.LASF43:
 2757 032b 6C6F7742 		.ascii	"lowBslnRst\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 75


 2757      736C6E52 
 2757      737400
 2758              	.LASF104:
 2759 0336 70747253 		.ascii	"ptrSnsTmp\000"
 2759      6E73546D 
 2759      7000
 2760              	.LASF20:
 2761 0340 63686172 		.ascii	"char_t\000"
 2761      5F7400
 2762              	.LASF125:
 2763 0347 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2763      656E7365 
 2763      5F467455 
 2763      70646174 
 2763      65426173 
 2764              	.LASF70:
 2765 0361 736E734C 		.ascii	"snsList\000"
 2765      69737400 
 2766              	.LASF58:
 2767 0369 636F6E66 		.ascii	"configId\000"
 2767      69674964 
 2767      00
 2768              	.LASF67:
 2769 0372 63736430 		.ascii	"csd0Config\000"
 2769      436F6E66 
 2769      696700
 2770              	.LASF77:
 2771 037d 70747232 		.ascii	"ptr2WdgtRam\000"
 2771      57646774 
 2771      52616D00 
 2772              	.LASF2:
 2773 0389 73686F72 		.ascii	"short int\000"
 2773      7420696E 
 2773      7400
 2774              	.LASF59:
 2775 0393 64657669 		.ascii	"deviceId\000"
 2775      63654964 
 2775      00
 2776              	.LASF48:
 2777 039c 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 2777      656E7365 
 2777      5F52414D 
 2777      5F57445F 
 2777      42555454 
 2778              	.LASF117:
 2779 03ba 77696467 		.ascii	"widgetId\000"
 2779      65744964 
 2779      00
 2780              	.LASF44:
 2781 03c3 69646163 		.ascii	"idacMod\000"
 2781      4D6F6400 
 2782              	.LASF84:
 2783 03cb 6E756D43 		.ascii	"numCols\000"
 2783      6F6C7300 
 2784              	.LASF96:
 2785 03d3 70747252 		.ascii	"ptrRamWdgt\000"
 2785      616D5764 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 76


 2785      677400
 2786              	.LASF118:
 2787 03de 73656E73 		.ascii	"sensorStatus\000"
 2787      6F725374 
 2787      61747573 
 2787      00
 2788              	.LASF95:
 2789 03eb 77696467 		.ascii	"widgetType\000"
 2789      65745479 
 2789      706500
 2790              	.LASF89:
 2791 03f6 43617053 		.ascii	"CapSense_REGULAR_FLTR_CHANNEL_STRUCT\000"
 2791      656E7365 
 2791      5F524547 
 2791      554C4152 
 2791      5F464C54 
 2792              	.LASF81:
 2793 041b 73746174 		.ascii	"staticConfig\000"
 2793      6963436F 
 2793      6E666967 
 2793      00
 2794              	.LASF40:
 2795 0428 6E4E6F69 		.ascii	"nNoiseTh\000"
 2795      73655468 
 2795      00
 2796              	.LASF109:
 2797 0431 43617053 		.ascii	"CapSense_DpProcessButton\000"
 2797      656E7365 
 2797      5F447050 
 2797      726F6365 
 2797      73734275 
 2798              	.LASF60:
 2799 044a 6877436C 		.ascii	"hwClock\000"
 2799      6F636B00 
 2800              	.LASF83:
 2801 0452 77646774 		.ascii	"wdgtType\000"
 2801      54797065 
 2801      00
 2802              	.LASF62:
 2803 045b 7363616E 		.ascii	"scanCounter\000"
 2803      436F756E 
 2803      74657200 
 2804              	.LASF105:
 2805 0467 43617053 		.ascii	"CapSense_DpProcessCsdWidgetRawCounts\000"
 2805      656E7365 
 2805      5F447050 
 2805      726F6365 
 2805      73734373 
 2806              	.LASF127:
 2807 048c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2807      43313120 
 2807      352E342E 
 2807      31203230 
 2807      31363036 
 2808 04bf 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2808      20726576 
 2808      6973696F 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 77


 2808      6E203233 
 2808      37373135 
 2809 04f2 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 2809      70202D6D 
 2809      6670753D 
 2809      66707634 
 2809      2D73702D 
 2810 0525 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2810      6F6E7320 
 2810      2D666661 
 2810      742D6C74 
 2810      6F2D6F62 
 2811              	.LASF122:
 2812 053f 43617053 		.ascii	"CapSense_dsRam\000"
 2812      656E7365 
 2812      5F647352 
 2812      616D00
 2813              	.LASF61:
 2814 054e 74756E65 		.ascii	"tunerCmd\000"
 2814      72436D64 
 2814      00
 2815              	.LASF22:
 2816 0557 666C6F61 		.ascii	"float\000"
 2816      7400
 2817              	.LASF32:
 2818 055d 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2818      656E7365 
 2818      5F57445F 
 2818      52414449 
 2818      414C5F53 
 2819              	.LASF57:
 2820 0579 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 2820      656E7365 
 2820      5F52414D 
 2820      5F534E53 
 2820      5F4C4953 
 2821              	.LASF75:
 2822 0596 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 2822      656E7365 
 2822      5F52414D 
 2822      5F535452 
 2822      55435400 
 2823              	.LASF90:
 2824 05aa 72656775 		.ascii	"regularChannel\000"
 2824      6C617243 
 2824      68616E6E 
 2824      656C00
 2825              	.LASF30:
 2826 05b9 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2826      656E7365 
 2826      5F57445F 
 2826      42555454 
 2826      4F4E5F45 
 2827              	.LASF15:
 2828 05ce 696E7433 		.ascii	"int32_t\000"
 2828      325F7400 
 2829              	.LASF1:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 78


 2830 05d6 756E7369 		.ascii	"unsigned char\000"
 2830      676E6564 
 2830      20636861 
 2830      7200
 2831              	.LASF85:
 2832 05e4 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2832      656E7365 
 2832      5F464C41 
 2832      53485F57 
 2832      445F5354 
 2833              	.LASF115:
 2834 05fd 70747244 		.ascii	"ptrDebounceCnt\000"
 2834      65626F75 
 2834      6E636543 
 2834      6E7400
 2835              	.LASF34:
 2836 060c 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2836      656E7365 
 2836      5F57445F 
 2836      544F5543 
 2836      48504144 
 2837              	.LASF93:
 2838 0623 43617053 		.ascii	"CapSense_PTR_FILTER_VARIANT\000"
 2838      656E7365 
 2838      5F505452 
 2838      5F46494C 
 2838      5445525F 
 2839              	.LASF120:
 2840 063f 77645374 		.ascii	"wdStatusMask\000"
 2840      61747573 
 2840      4D61736B 
 2840      00
 2841              	.LASF16:
 2842 064c 75696E74 		.ascii	"uint32_t\000"
 2842      33325F74 
 2842      00
 2843              	.LASF69:
 2844 0655 77646774 		.ascii	"wdgtList\000"
 2844      4C697374 
 2844      00
 2845              	.LASF98:
 2846 065e 43617053 		.ascii	"CapSense_DpInitialize\000"
 2846      656E7365 
 2846      5F447049 
 2846      6E697469 
 2846      616C697A 
 2847              	.LASF18:
 2848 0674 6C6F6E67 		.ascii	"long double\000"
 2848      20646F75 
 2848      626C6500 
 2849              	.LASF21:
 2850 0680 63686172 		.ascii	"char\000"
 2850      00
 2851              	.LASF108:
 2852 0685 6D6F6465 		.ascii	"mode\000"
 2852      00
 2853              	.LASF4:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 79


 2854 068a 5F5F7569 		.ascii	"__uint16_t\000"
 2854      6E743136 
 2854      5F7400
 2855              	.LASF45:
 2856 0695 736E7343 		.ascii	"snsClk\000"
 2856      6C6B00
 2857              	.LASF47:
 2858 069c 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2858      656E7365 
 2858      5F52414D 
 2858      5F57445F 
 2858      42415345 
 2859              	.LASF6:
 2860 06b8 5F5F696E 		.ascii	"__int32_t\000"
 2860      7433325F 
 2860      7400
 2861              	.LASF42:
 2862 06c2 6F6E4465 		.ascii	"onDebounce\000"
 2862      626F756E 
 2862      636500
 2863              	.LASF36:
 2864 06cd 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 2864      656E7365 
 2864      5F57445F 
 2864      54595045 
 2864      5F454E55 
 2865              	.LASF55:
 2866 06e3 69646163 		.ascii	"idacComp\000"
 2866      436F6D70 
 2866      00
 2867              	.LASF126:
 2868 06ec 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 2868      79734C69 
 2868      625F4173 
 2868      73657274 
 2868      4661696C 
 2869              	.LASF54:
 2870 0703 6E656742 		.ascii	"negBslnRstCnt\000"
 2870      736C6E52 
 2870      7374436E 
 2870      7400
 2871              	.LASF82:
 2872 0711 746F7461 		.ascii	"totalNumSns\000"
 2872      6C4E756D 
 2872      536E7300 
 2873              	.LASF114:
 2874 071d 746F7563 		.ascii	"touchTh\000"
 2874      68546800 
 2875              	.LASF80:
 2876 0725 70747232 		.ascii	"ptr2DebounceArr\000"
 2876      4465626F 
 2876      756E6365 
 2876      41727200 
 2877              	.LASF87:
 2878 0735 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2878      656E7365 
 2878      5F464C41 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 80


 2878      53485F53 
 2878      54525543 
 2879              	.LASF101:
 2880 074b 64696666 		.ascii	"diffValue\000"
 2880      56616C75 
 2880      6500
 2881              	.LASF124:
 2882 0755 6D656D73 		.ascii	"memset\000"
 2882      657400
 2883              	.LASF63:
 2884 075c 73746174 		.ascii	"status\000"
 2884      757300
 2885              	.LASF86:
 2886 0763 77646774 		.ascii	"wdgtArray\000"
 2886      41727261 
 2886      7900
 2887              	.LASF13:
 2888 076d 75696E74 		.ascii	"uint8_t\000"
 2888      385F7400 
 2889              	.LASF88:
 2890 0775 6E6F7455 		.ascii	"notUsed\000"
 2890      73656400 
 2891              	.LASF19:
 2892 077d 73697A65 		.ascii	"sizetype\000"
 2892      74797065 
 2892      00
 2893              	.LASF37:
 2894 0786 7265736F 		.ascii	"resolution\000"
 2894      6C757469 
 2894      6F6E00
 2895              	.LASF46:
 2896 0791 736E7343 		.ascii	"snsClkSource\000"
 2896      6C6B536F 
 2896      75726365 
 2896      00
 2897              	.LASF113:
 2898 079e 6E657753 		.ascii	"newStatus\000"
 2898      74617475 
 2898      7300
 2899              	.LASF103:
 2900 07a8 736E7349 		.ascii	"snsId\000"
 2900      6400
 2901              	.LASF38:
 2902 07ae 66696E67 		.ascii	"fingerTh\000"
 2902      65725468 
 2902      00
 2903              	.LASF35:
 2904 07b7 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2904      656E7365 
 2904      5F57445F 
 2904      50524F58 
 2904      494D4954 
 2905              	.LASF50:
 2906 07cf 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 2906      656E7365 
 2906      5F52414D 
 2906      5F57445F 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccVWME8H.s 			page 81


 2906      4C495354 
 2907              	.LASF73:
 2908 07eb 736E7254 		.ascii	"snrTestScanCounter\000"
 2908      65737453 
 2908      63616E43 
 2908      6F756E74 
 2908      657200
 2909              	.LASF92:
 2910 07fe 70747252 		.ascii	"ptrRegular\000"
 2910      6567756C 
 2910      617200
 2911              	.LASF102:
 2912 0809 72657375 		.ascii	"result\000"
 2912      6C7400
 2913              	.LASF106:
 2914 0810 43617053 		.ascii	"CapSense_DpProcessCsdSensorRawCountsExt\000"
 2914      656E7365 
 2914      5F447050 
 2914      726F6365 
 2914      73734373 
 2915              	.LASF39:
 2916 0838 6E6F6973 		.ascii	"noiseTh\000"
 2916      65546800 
 2917              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
