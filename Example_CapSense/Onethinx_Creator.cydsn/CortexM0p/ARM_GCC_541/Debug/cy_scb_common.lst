ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_scb_common.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_SCB_ReadArrayNoCheck,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_SCB_ReadArrayNoCheck
  22              		.code	16
  23              		.thumb_func
  24              		.type	Cy_SCB_ReadArrayNoCheck, %function
  25              	Cy_SCB_ReadArrayNoCheck:
  26              	.LFB131:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_common.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \file cy_scb_common.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \version 2.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Provides common API implementation of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Copyright 2016-2021, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** #include "cy_scb_common.h"
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** #ifdef CY_IP_MXSCB
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** #if defined(__cplusplus)
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** extern "C" {
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** #endif
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_ReadArrayNoCheck
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Reads an array of data out of the SCB receive FIFO without checking if the
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * receive FIFO has enough data elements.
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Before calling this function, make sure that the receive FIFO has enough data
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * elements to be read.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param buffer
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to location to place data read from the receive FIFO.
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The size of the data element defined by the configured data width.
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements read from the receive FIFO.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** void Cy_SCB_ReadArrayNoCheck(CySCB_Type const *base, void *buffer, uint32_t size)
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
  28              		.loc 1 44 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38              	.LVL1:
  39              	.LBB46:
  40              	.LBB47:
  41              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_common.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \file cy_scb_common.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \version 2.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Provides common API declarations of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Copyright 2016-2021, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The Serial Communications Block (SCB) supports three serial communication
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * protocols: Serial Peripheral Interface (SPI), Universal Asynchronous Receiver
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Transmitter (UART), and Inter Integrated Circuit (I2C or IIC). Only one of
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * the protocols is supported by an SCB at any given time.
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The functions and other declarations used in this driver are in cy_scb_spi.h,
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_uart.h, cy_scb_ezi2c.h, cy_scb_i2c.h respectively. Include cy_pdl.h
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common Common
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_ezi2c  EZI2C (SCB)
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_i2c    I2C (SCB)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 3


  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_spi    SPI (SCB)
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_uart   UART (SCB)
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \} */
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Common API for the Serial Communication Block.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This is the common API that provides an interface to the SCB hardware.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The I2C, SPI, and UART drivers use this common API.
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Most users will use individual drivers and do not need to use the common
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * API for the SCB. However, you can use the common SCB API to implement
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a custom driver based on the SCB hardware.
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The functions and other declarations used in this part of the driver are in
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_common.h. You can include either of cy_scb_spi.h, cy_scb_uart.h,
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_ezi2c.h, cy_scb_i2c.h depending on the desired functionality.
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * You can also include cy_pdl.h to get access to all functions and declarations
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * in the PDL.
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_configuration Configuration Considerations
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ********************************************************************************
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This is not a driver and it does not require configuration.
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Refer to the SCB chapter of the technical reference manual (TRM).
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_MISRA MISRA-C Compliance
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * <table class="doxtable">
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>MISRA rule</th>
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Rule Class (Required/Advisory)</th>
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Rule Description</th>
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Description of Deviation(s)</th>
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>11.4</td>
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>A</td>
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>A cast should not be performed between a pointer to object type and
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         a different pointer to object type.</td>
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>The pointer to the buffer memory is void to allow handling of
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         different data types: uint8_t (4-8 bits) or uint16_t (9-16 bits).
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         The cast operation is safe because the configuration is verified
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         before operation is performed.
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         </td>
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * </table>
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_changelog Changelog
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 4


  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * <table class="doxtable">
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td rowspan="2">2.30</td>
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Updated \ref Cy_SCB_I2C_SlaveInterrupt with check if address byte
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *           received.</td>
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Fixed the issue of treating the address byte as data during a repeated start
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         after a write transaction.</td>
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Updated \ref Cy_SCB_UART_GetNumInRingBuffer to take the correct maximum
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *           size of the ring buffer.</td>
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Fixed a possible incorrect return value due to an overflow.</td>
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td rowspan="2">2.20</td>
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Flattened the organization of the driver source code into the single
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         source directory and the single include directory.
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     </td>
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Driver library directory-structure simplification.</td>
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Added register access layer. Use register access macros instead
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         of direct register access using dereferenced pointers.</td>
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Makes register access device-independent, so that the PDL does
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         not need to be recompiled for each supported part number.</td>
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>2.10</td>
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>None.</td>
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>SCB I2C driver updated.</td>
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td rowspan="2"> 2.0</td>
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Added parameters validation for public API.
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Fixed functions which return interrupt status to return only defined
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         set of interrupt statuses.</td>
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>1.0</td>
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Initial version.</td>
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * </table>
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros Macros
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_functions Functions
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_data_structures Data Structures
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #if !defined(CY_SCB_COMMON_H)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 5


 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_COMMON_H
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stdint.h>
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stddef.h>
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stdbool.h>
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_device.h"
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_device_headers.h"
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_syslib.h"
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_syspm.h"
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #ifdef CY_IP_MXSCB
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #if defined(__cplusplus)
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** extern "C" {
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #endif
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                            Function Prototypes
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo    (CySCB_Type const *base);
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level);
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base);
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxSrValid  (CySCB_Type const *base);
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxFifo   (CySCB_Type *base);
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_WriteTxFifo   (CySCB_Type *base, uint32_t data);
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxFifoLevel(CySCB_Type *base, uint32_t level);
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInTxFifo(CySCB_Type const *base);
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxSrValid  (CySCB_Type const *base);
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxComplete  (CySCB_Type const *base);
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxFifo   (CySCB_Type *base);
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetByteMode(CySCB_Type *base, bool byteMode);
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetInterruptCause(CySCB_Type const *base);
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatus(CySCB_Type const *base);
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptMask  (CySCB_Type const *base);
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatusMasked(CySCB_Type const *base);
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatus(CySCB_Type const *base);
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptMask  (CySCB_Type const *base);
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatusMasked(CySCB_Type const *base);
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatus(CySCB_Type const *base);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 6


 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptMask  (CySCB_Type const *base);
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatusMasked(CySCB_Type const *base);
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearMasterInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatus(CySCB_Type const *base);
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptMask  (CySCB_Type const *base);
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatusMasked(CySCB_Type const *base);
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSlaveInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatus(CySCB_Type const *base);
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetI2CInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptMask  (CySCB_Type const *base);
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatusMasked(CySCB_Type const *base);
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearI2CInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatus(CySCB_Type const *base);
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSpiInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptMask  (CySCB_Type const *base);
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatusMasked(CySCB_Type const *base);
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSpiInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                         Internal Function Prototypes
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayNoCheck  (CySCB_Type const *base, void *buffer, uint32_t size);
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_ReadArray         (CySCB_Type const *base, void *buffer, uint32_t size);
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayBlocking (CySCB_Type const *base, void *buffer, uint32_t size);
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_Write             (CySCB_Type *base, uint32_t data);
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayNoCheck (CySCB_Type *base, void *buffer, uint32_t size);
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteArray        (CySCB_Type *base, void *buffer, uint32_t size);
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size);
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteString       (CySCB_Type *base, char_t const string[]);
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteDefaultArrayNoCheck(CySCB_Type *base, uint32_t txData, uint32_t size);
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteDefaultArray (CySCB_Type *base, uint32_t txData, uint32_t size);
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetFifoSize (CySCB_Type const *base);
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_FwBlockReset(CySCB_Type *base);
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsRxDataWidthByte(CySCB_Type const *base);
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxDataWidthByte(CySCB_Type const *base);
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxFifoLevel   (CySCB_Type const *base);
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \endcond */
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_functions */
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                        API Constants
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 7


 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_macros
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Driver major version */
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MAJOR    (2)
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Driver minor version */
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MINOR    (30)
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** SCB driver identifier */
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_ID           CY_PDL_DRV_ID(0x2AU)
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Position for SCB driver sub mode */
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SUB_MODE_Pos (13UL)
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_EZI2C_ID     (0x0UL << CY_SCB_SUB_MODE_Pos)
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ID       (0x1UL << CY_SCB_SUB_MODE_Pos)
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_ID       (0x2UL << CY_SCB_SUB_MODE_Pos)
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_ID      (0x3UL << CY_SCB_SUB_MODE_Pos)
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_intr_cause SCB Interrupt Causes
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from Master interrupt sources */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR SCB_INTR_CAUSE_M_Msk
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from Slave interrupt sources  */
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR  SCB_INTR_CAUSE_S_Msk
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from TX interrupt sources */
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR     SCB_INTR_CAUSE_TX_Msk
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from RX interrupt sources */
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR     SCB_INTR_CAUSE_RX_Msk
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from I2C externally clocked interrupt sources */
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR    SCB_INTR_CAUSE_I2C_EC_Msk
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from SPI externally clocked interrupt sources */
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR    SCB_INTR_CAUSE_SPI_EC_Msk
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_intr_cause */
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_tx_intr TX Interrupt Statuses
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number of data elements in the TX FIFO is less than the value
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 8


 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * of the TX FIFO level
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_LEVEL           SCB_INTR_TX_TRIGGER_Msk
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The TX FIFO is not full */
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_NOT_FULL        SCB_INTR_TX_NOT_FULL_Msk
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The TX FIFO is empty */
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_EMPTY           SCB_INTR_TX_EMPTY_Msk
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to write to a full TX FIFO */
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_OVERFLOW        SCB_INTR_TX_OVERFLOW_Msk
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to read from an empty TX FIFO */
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UNDERFLOW       SCB_INTR_TX_UNDERFLOW_Msk
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The UART transfer is complete: all data elements from the TX FIFO are sent
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_DONE       SCB_INTR_TX_UART_DONE_Msk
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** SmartCard only: UART received a NACK */
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_NACK       SCB_INTR_TX_UART_NACK_Msk
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SmartCard only: the value on the TX line of the UART does not match the
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * value on the RX line
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_ARB_LOST   SCB_INTR_TX_UART_ARB_LOST_Msk
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_tx_intr */
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_rx_intr RX Interrupt Statuses
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number of data elements in the RX FIFO is greater than the value of the
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * RX FIFO level
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_LEVEL             SCB_INTR_RX_TRIGGER_Msk
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The RX FIFO is not empty */
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_NOT_EMPTY         SCB_INTR_RX_NOT_EMPTY_Msk
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The RX FIFO is full */
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_FULL              SCB_INTR_RX_FULL_Msk
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to write to a full RX FIFO */
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_OVERFLOW          SCB_INTR_RX_OVERFLOW_Msk
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to read from an empty RX FIFO */
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UNDERFLOW         SCB_INTR_RX_UNDERFLOW_Msk
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART framing error detected */
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_FRAME_ERROR  SCB_INTR_RX_FRAME_ERROR_Msk
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART parity error detected  */
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_PARITY_ERROR SCB_INTR_RX_PARITY_ERROR_Msk
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 9


 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART break detected */
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_BREAK_DETECT SCB_INTR_RX_BREAK_DETECT_Msk
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_rx_intr */
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_slave_intr Slave Interrupt Statuses
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * I2C slave lost arbitration: the value driven on the SDA line is not the same
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * as the value observed on the SDA line
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ARB_LOST      SCB_INTR_S_I2C_ARB_LOST_Msk
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received a NAK */
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_NACK          SCB_INTR_S_I2C_NACK_Msk
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received  an ACK */
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ACK           SCB_INTR_S_I2C_ACK_Msk
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * A Stop or Repeated Start event for a write transfer intended for this slave
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * was detected.
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_WRITE_STOP    SCB_INTR_S_I2C_WRITE_STOP_Msk
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A Stop or Repeated Start event intended for this slave was detected */
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_STOP          SCB_INTR_S_I2C_STOP_Msk
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received a Start condition */
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_START         SCB_INTR_S_I2C_START_Msk
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received the matching address */
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH    SCB_INTR_S_I2C_ADDR_MATCH_Msk
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C Slave received the general call address */
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_GENERAL_ADDR  SCB_INTR_S_I2C_GENERAL_Msk
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave bus error (detection of unexpected Start or Stop condition) */
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_BUS_ERROR     SCB_INTR_S_I2C_BUS_ERROR_Msk
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI slave select line is deselected at an expected time during an
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SPI transfer.
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_SPI_BUS_ERROR     SCB_INTR_S_SPI_BUS_ERROR_Msk
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_slave_intr */
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_master_intr Master Interrupt Statuses
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master lost arbitration */
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ARB_LOST    SCB_INTR_M_I2C_ARB_LOST_Msk
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master received a NACK */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 10


 429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_NACK        SCB_INTR_M_I2C_NACK_Msk
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master received an ACK */
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ACK         SCB_INTR_M_I2C_ACK_Msk
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master generated a Stop */
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_STOP        SCB_INTR_M_I2C_STOP_Msk
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master bus error (detection of unexpected START or STOP condition)
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_BUS_ERROR   SCB_INTR_M_I2C_BUS_ERROR_Msk
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI master transfer is complete: all data elements transferred from the
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * TX FIFO and TX shift register.
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_SPI_DONE        SCB_INTR_M_SPI_DONE_Msk
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_master_intr */
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_i2c_intr I2C Interrupt Statuses
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Wake up request: the I2C slave received the matching address.
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Note that this interrupt source triggers in active mode.
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_WAKEUP     SCB_INTR_I2C_EC_WAKE_UP_Msk
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_i2c_intr */
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_SpiIntrStatuses SPI Interrupt Statuses
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Wake up request: the SPI slave detects an active edge of the slave select
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * signal. Note that this interrupt source triggers in active mode.
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_WAKEUP     SCB_INTR_SPI_EC_WAKE_UP_Msk
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_SpiIntrStatuses */
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                           Internal Constants
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Default registers values */
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_DEF_VAL         (_VAL2FLD(SCB_CTRL_OVS, 15UL) | \
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_CTRL_MODE, 3UL))
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_DEF_VAL     (_VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_READY_DATA_ACK, 1UL)      | \
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_NOT_READY_DATA_NACK, 1UL) | \
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_GENERAL_IGNORE, 1UL)      | \
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 11


 486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_ADDR_ACK, 1UL)      | \
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_DATA_ACK, 1UL)      | \
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_ADDR_NACK, 1UL) | \
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_DATA_NACK, 1UL))
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_DEF_VAL      (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 3UL)   | \
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_SEL, 1UL)    | \
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SCL_IN_FILT_SEL, 1UL)    | \
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT0_TRIM, 2UL) | \
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT1_TRIM, 2UL) | \
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT2_TRIM, 2UL))
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_DEF_VAL     _VAL2FLD(SCB_SPI_CTRL_MODE, 3UL)
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_CTRL_DEF_VAL    _VAL2FLD(SCB_UART_CTRL_MODE, 3UL)
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_DEF_VAL (_VAL2FLD(SCB_UART_RX_CTRL_STOP_BITS, 2UL) | \
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_UART_RX_CTRL_BREAK_WIDTH, 10UL))
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_DEF_VAL _VAL2FLD(SCB_UART_TX_CTRL_STOP_BITS, 2UL)
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_CTRL_DEF_VAL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, 7UL) | \
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_RX_CTRL_MSB_FIRST,  1UL))
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_CTRL_DEF_VAL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, 7UL) | \
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_TX_CTRL_MSB_FIRST,  1UL))
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SCB CTRL modes */
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_I2C   (0UL)
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_SPI   (1UL)
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_UART  (2UL)
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* The position and mask to set the I2C mode */
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Pos    SCB_I2C_CTRL_SLAVE_MODE_Pos
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Msk    (SCB_I2C_CTRL_SLAVE_MODE_Msk | \
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      SCB_I2C_CTRL_MASTER_MODE_Msk)
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Cypress ID #282226:
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SCB_I2C_CFG_SDA_IN_FILT_TRIM[1]: SCB clock enable (1), clock disable (0).
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_CLK_ENABLE_Msk  (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 2UL))
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* I2C has fixed data width */
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_DATA_WIDTH   (7UL)
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* RX and TX control register values */
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_RX_CTRL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  SCB_RX_CTRL_MSB_FIRST_Msk)
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_TX_CTRL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  SCB_TX_CTRL_MSB_FIRST_Msk | SCB_TX_CTRL_OPEN_DRAIN_Msk)
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* The position and mask to make an address byte */
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Pos  (1UL)
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Msk  (0xFEUL)
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SPI slave select polarity */
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Pos   SCB_SPI_CTRL_SSEL_POLARITY0_Pos
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Msk   (SCB_SPI_CTRL_SSEL_POLARITY0_Msk | \
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 12


 543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY1_Msk | \
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY2_Msk | \
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY3_Msk)
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SPI clock modes: CPHA and CPOL */
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Pos    SCB_SPI_CTRL_CPHA_Pos
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Msk    (SCB_SPI_CTRL_CPHA_Msk | SCB_SPI_CTRL_CPOL_Msk)
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* UART parity and parity enable combination */
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Msk      (SCB_UART_RX_CTRL_PARITY_ENABLED_Msk | \
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                                  SCB_UART_RX_CTRL_PARITY_Msk)
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Pos      SCB_UART_RX_CTRL_PARITY_Pos
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Msk      (SCB_UART_TX_CTRL_PARITY_ENABLED_Msk | \
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                                  SCB_UART_TX_CTRL_PARITY_Msk)
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Pos      SCB_UART_TX_CTRL_PARITY_Pos
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Max number of bits for byte mode */
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_BYTE_WIDTH   (8UL)
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Single unit to wait */
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_WAIT_1_UNIT  (1U)
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Clear interrupt sources */
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CLEAR_ALL_INTR_SRC   (0UL)
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Hardware FIFO size: EZ_DATA_NR / 4 = (512 / 4) = 128 */
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_FIFO_SIZE            (128UL)
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Provides a list of allowed sources */
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_MASK     (CY_SCB_TX_INTR_LEVEL     | CY_SCB_TX_INTR_NOT_FULL  | CY_SCB_TX_IN
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_OVERFLOW  | CY_SCB_TX_INTR_UNDERFLOW | CY_SCB_TX_IN
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INTR_UART_ARB_LOST)
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_MASK     (CY_SCB_RX_INTR_LEVEL             | CY_SCB_RX_INTR_NOT_EMPTY | CY_S
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_OVERFLOW          | CY_SCB_RX_INTR_UNDERFLOW       
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_FRAME_ERROR  | CY_SCB_RX_INTR_UART_PARITY_ERRO
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_BREAK_DETECT)
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_MASK  (CY_SCB_SLAVE_INTR_I2C_ARB_LOST   | CY_SCB_SLAVE_INTR_I2C_NACK | CY
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_WRITE_STOP | CY_SCB_SLAVE_INTR_I2C_STOP | CY
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH | CY_SCB_SLAVE_INTR_I2C_GENERAL_A
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_BUS_ERROR  | CY_SCB_SLAVE_INTR_SPI_BUS_ERROR
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_MASK (CY_SCB_MASTER_INTR_I2C_ARB_LOST  | CY_SCB_MASTER_INTR_I2C_NACK | \
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_ACK       | CY_SCB_MASTER_INTR_I2C_STOP | \
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_BUS_ERROR | CY_SCB_MASTER_INTR_SPI_DONE)
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_MASK    CY_SCB_I2C_INTR_WAKEUP
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_MASK    CY_SCB_SPI_INTR_WAKEUP
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_INTR_VALID(intr, mask)            ( 0UL == ((intr) & ((uint32_t) ~(mask))) )
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level)  ((level) < Cy_SCB_GetFifoSize(base))
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_ADDR_VALID(addr)              ( (0U == ((addr) & 0x80U)) )
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 13


 600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_BUFFER_VALID(buffer, size)        ( (NULL != (buffer)) && ((size) > 0UL) )
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_BUFFER_VALID(buffer, size)    ( (0UL == (size)) ? true : (NULL != (buffer)) )
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \endcond */
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros */
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                       In-line Function Implementation
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ReadRxFifo
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Reads a data element directly out of the RX FIFO.
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function does not check whether the RX FIFO has data before reading it.
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Data from RX FIFO.
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo(CySCB_Type const *base)
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_RX_FIFO_RD(base));
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxFifoLevel
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the RX FIFO level. When there are more data elements in the RX FIFO than
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * this level, the RX FIFO level interrupt is triggered.
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param level
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When there are more data elements in the FIFO than this level, the RX level
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt is triggered.
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level)
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_REG32_CLR_SET(SCB_RX_FIFO_CTRL(base), SCB_RX_FIFO_CTRL_TRIGGER_LEVEL, level);
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 14


 657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetNumInRxFifo
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the number of data elements currently in the RX FIFO.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number or data elements in RX FIFO.
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base)
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_RX_FIFO_STATUS_USED, SCB_RX_FIFO_STATUS(base));
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxSrValid
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the status of the RX FIFO Shift Register valid bit.
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * 1 - RX shift register valid; 0 - RX shift register not valid.
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxSrValid(CySCB_Type const *base)
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_RX_FIFO_STATUS_SR_VALID, SCB_RX_FIFO_STATUS(base));
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearRxFifo
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the RX FIFO and shifter.
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If there is partial data in the shifter, it is cleared and lost.
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearRxFifo(CySCB_Type* base)
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_RX_FIFO_CTRL(base) |= (uint32_t)  SCB_RX_FIFO_CTRL_CLEAR_Msk;
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_RX_FIFO_CTRL(base) &= (uint32_t) ~SCB_RX_FIFO_CTRL_CLEAR_Msk;
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 15


 714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_RX_FIFO_CTRL(base);
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_WriteTxFifo
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes data directly into the TX FIFO.
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function does not check whether the TX FIFO is not full before writing
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * into it.
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param data
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Data to write to the TX FIFO.
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_WriteTxFifo(CySCB_Type* base, uint32_t data)
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_WR(base) = data;
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxFifoLevel
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the TX FIFO level. When there are fewer data elements in the TX FIFO than
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * this level, the TX FIFO level interrupt is triggered.
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param level
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When there are fewer data elements in the FIFO than this level, the TX level
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt is triggered.
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxFifoLevel(CySCB_Type *base, uint32_t level)
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_REG32_CLR_SET(SCB_TX_FIFO_CTRL(base), SCB_TX_FIFO_CTRL_TRIGGER_LEVEL, level);
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetNumInTxFifo
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the number of data elements currently in the TX FIFO.
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 16


 771:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number or data elements in the TX FIFO.
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInTxFifo(CySCB_Type const *base)
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_TX_FIFO_STATUS_USED, SCB_TX_FIFO_STATUS(base));
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxSrValid
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the status of the TX FIFO Shift Register valid bit.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * 1 - TX shift register valid; 0 - TX shift register not valid.
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxSrValid(CySCB_Type const *base)
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_TX_FIFO_STATUS_SR_VALID, SCB_TX_FIFO_STATUS(base));
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsTxComplete
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Checks whether the TX FIFO and Shifter are empty and there is no more data to send.
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Pointer to SPI the SCB instance.
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, transmission complete. If false, transmission is not complete.
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsTxComplete(CySCB_Type const *base)
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****      return (0UL == (Cy_SCB_GetNumInTxFifo(base) + Cy_SCB_GetTxSrValid(base)));
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearTxFifo
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the TX FIFO.
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 17


 828:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX FIFO clear operation also clears the shift register. Thus the shifter
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * could be cleared in the middle of a data element transfer. Thia results in
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * "ones" being sent on the bus for the remainder of the transfer.
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearTxFifo(CySCB_Type *base)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_CTRL(base) |= (uint32_t)  SCB_TX_FIFO_CTRL_CLEAR_Msk;
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_CTRL(base) &= (uint32_t) ~SCB_TX_FIFO_CTRL_CLEAR_Msk;
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_TX_FIFO_CTRL(base);
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetByteMode
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets whether the RX and TX FIFOs are in byte mode.
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The FIFOs are either 16-bit wide or 8-bit wide (byte mode).
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When the FIFO is in byte mode it is twice as deep. See the device datasheet
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * for FIFO depths.
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param byteMode
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, TX and RX FIFOs are 8-bit wide. If false, the FIFOs are 16-bit wide.
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetByteMode(CySCB_Type *base, bool byteMode)
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     if (byteMode)
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     {
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****         SCB_CTRL(base) |=  SCB_CTRL_BYTE_MODE_Msk;
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     }
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     else
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     {
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****         SCB_CTRL(base) &= ~SCB_CTRL_BYTE_MODE_Msk;
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     }
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetInterruptCause
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the mask of bits showing the source of the current triggered
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt. This is useful for modes of operation where an interrupt can
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * be generated by conditions in multiple interrupt source registers.
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The mask with the OR of the following conditions that have been triggered.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 18


 885:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_intr_cause for the set of constants.
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetInterruptCause(CySCB_Type const *base)
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_CAUSE(base));
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptStatus
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt request register. This register contains the current
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the RX interrupt sources.
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the RX interrupt sources. Each constant is a bit field
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * value. The value returned may have multiple bits set to indicate the
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * current status.
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatus(CySCB_Type const *base)
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX(base) & CY_SCB_RX_INTR_MASK);
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxInterruptMask
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the RX interrupt mask register. This register configures which bits
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the RX interrupt request register can trigger an interrupt event.
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled RX interrupt sources.
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr.
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxInterruptMask(CySCB_Type *base, uint32_t interruptMask)
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX_MASK(base) = interruptMask;
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptMask
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 19


 942:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt mask register. This register specifies which bits
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the RX interrupt request register trigger can an interrupt event.
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled RX interrupt sources.
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptMask(CySCB_Type const *base)
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX_MASK(base));
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptStatusMasked
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt masked request register. This register contains
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the RX interrupt request and
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of the enabled RX interrupt sources caused the interrupt event.
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled RX interrupt sources.
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatusMasked(CySCB_Type const *base)
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX_MASKED(base));
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearRxInterrupt
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the RX interrupt sources in the interrupt request register.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The RX interrupt sources to be cleared.
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 20


 999:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_FIFO_LEVEL interrupt source is not cleared when
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    the RX FIFO has more entries than the level.
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_NOT_EMPTY interrupt source is not cleared when the
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    RX FIFO is not empty.
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_FULL interrupt source is not cleared when the
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    RX FIFO is full.
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearRxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX(base) = interruptMask;
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_RX(base);
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxInterrupt
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the RX interrupt sources in the interrupt request register.
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The RX interrupt sources to set in the RX interrupt request register.
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX_SET(base) = interruptMask;
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptStatus
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt request register. This register contains the current
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the TX interrupt sources.
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of TX interrupt sources.
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatus(CySCB_Type const *base)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 21


1056:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX(base) & CY_SCB_TX_INTR_MASK);
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxInterruptMask
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the TX interrupt mask register. This register configures which bits
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the TX interrupt request register can trigger an interrupt event.
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled TX interrupt sources.
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX_MASK(base) = interruptMask;
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptMask
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt mask register. This register specifies which
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits from the TX interrupt request register can trigger an interrupt event.
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled TX interrupt sources.
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptMask(CySCB_Type const *base)
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX_MASK(base));
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptStatusMasked
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt masked request register. This register contains
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the TX interrupt request and
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 22


1113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled TX interrupt sources caused the interrupt event.
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled TX interrupt sources.
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatusMasked(CySCB_Type const *base)
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX_MASKED(base));
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearTxInterrupt
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the TX interrupt sources in the interrupt request register.
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX interrupt sources to be cleared.
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_FIFO_LEVEL interrupt source is not cleared when the
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO has fewer entries than the TX level.
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_NOT_FULL interrupt source is not cleared when the
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO has empty entries in the TX FIFO.
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_EMPTY interrupt source is not cleared when the
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO is empty.
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_UNDERFLOW interrupt source is not cleared when the
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO is empty. Put data into the TX FIFO before clearing it.
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearTxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX(base) = interruptMask;
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_TX(base);
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxInterrupt
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets TX interrupt sources in the interrupt request register.
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 23


1170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX interrupt sources to set in the TX interrupt request register.
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX_SET(base) = interruptMask;
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptStatus
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt request register. This register contains the current
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the master interrupt sources.
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the master interrupt sources.
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatus(CySCB_Type const *base)
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M(base) & CY_SCB_MASTER_INTR_MASK);
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetMasterInterruptMask
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the master interrupt mask register. This register specifies which bits
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the master interrupt request register can trigger an interrupt event.
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to be enable.
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetMasterInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M_MASK(base) = interruptMask;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 24


1227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptMask
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt mask register. This register specifies which bits
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the master interrupt request register can trigger an interrupt event.
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled master interrupt sources.
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptMask(CySCB_Type const *base)
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M_MASK(base));
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptStatusMasked
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt masked request register. This register contains a
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * logical AND of corresponding bits from the master interrupt request and mask
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of the enabled master interrupt sources caused the interrupt
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * event.
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled master interrupt sources.
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatusMasked(CySCB_Type const *base)
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M_MASKED(base));
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearMasterInterrupt
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears master interrupt sources in the interrupt request register.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 25


1284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to be cleared.
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearMasterInterrupt(CySCB_Type *base, uint32_t interruptMask)
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M(base) = interruptMask;
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_M(base);
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetMasterInterrupt
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets master interrupt sources in the interrupt request register.
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to set in the master interrupt request register.
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetMasterInterrupt(CySCB_Type *base, uint32_t interruptMask)
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M_SET(base) = interruptMask;
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptStatus
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt request register. This register contains the current
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the slave interrupt sources.
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the slave interrupt sources.
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatus(CySCB_Type const *base)
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S(base) & CY_SCB_SLAVE_INTR_MASK);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 26


1341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSlaveInterruptMask
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes slave interrupt mask register.
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This register specifies which bits from the slave interrupt request register
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * can trigger an interrupt event.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled slave interrupt sources.
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSlaveInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S_MASK(base) = interruptMask;
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptMask
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt mask register.
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This register specifies which bits from the slave interrupt request register
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * can trigger an interrupt event.
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled slave interrupt sources.
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptMask(CySCB_Type const *base)
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S_MASK(base));
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptStatusMasked
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt masked request register. This register contains a
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * logical AND of corresponding bits from the slave interrupt request and mask
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 27


1398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled slave interrupt sources caused the interrupt
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * event.
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled slave interrupt sources.
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatusMasked(CySCB_Type const *base)
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S_MASKED(base));
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearSlaveInterrupt
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the slave interrupt sources in the interrupt request register.
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Slave interrupt sources to be cleared.
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearSlaveInterrupt(CySCB_Type *base, uint32_t interruptMask)
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S(base) = interruptMask;
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_S(base);
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSlaveInterrupt
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets slave interrupt sources in the interrupt request register.
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The slave interrupt sources to set in the slave interrupt request register
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSlaveInterrupt(CySCB_Type *base, uint32_t interruptMask)
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 28


1455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S_SET(base) = interruptMask;
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptStatus
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt request register. This register contains the
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * current status of the I2C interrupt sources.
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the I2C interrupt sources. Each constant is a bit
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * field value.
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The value returned may have multiple bits set to indicate the current status.
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatus(CySCB_Type const *base)
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC(base) & CY_SCB_I2C_INTR_MASK);
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetI2CInterruptMask
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the I2C interrupt mask register. This register specifies which bits
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the I2C interrupt request register can trigger an interrupt event.
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled I2C interrupt sources.
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetI2CInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_I2C_INTR_MASK));
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_I2C_EC_MASK(base) = interruptMask;
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptMask
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt mask register. This register specifies which bits
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the I2C interrupt request register can trigger an interrupt event.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 29


1512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled I2C interrupt sources.
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr.
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptMask(CySCB_Type const *base)
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC_MASK(base));
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptStatusMasked
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt masked request register. This register contains
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from I2C interrupt request and mask
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled I2C interrupt sources caused the interrupt event.
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled I2C interrupt sources.
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatusMasked(CySCB_Type const *base)
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC_MASKED(base));
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearI2CInterrupt
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears I2C interrupt sources in the interrupt request register.
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The I2C interrupt sources to be cleared.
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearI2CInterrupt(CySCB_Type *base, uint32_t interruptMask)
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_I2C_INTR_MASK));
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 30


1569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_I2C_EC(base) = interruptMask;
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_I2C_EC(base);
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptStatus
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt request register. This register contains the current
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the SPI interrupt sources.
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of SPI interrupt sources. Each constant is a bit field value.
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The value returned may have multiple bits set to indicate the current status
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatus(CySCB_Type const *base)
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC(base) & CY_SCB_SPI_INTR_MASK);
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSpiInterruptMask
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the SPI interrupt mask register. This register specifies which
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits from the SPI interrupt request register can trigger an interrupt event.
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled SPI interrupt sources.
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSpiInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SPI_INTR_MASK));
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_SPI_EC_MASK(base) = interruptMask;
1616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptMask
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt mask register. This register specifies which bits
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the SPI interrupt request register can trigger an interrupt event.
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 31


1626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled SPI interrupt sources.
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptMask(CySCB_Type const *base)
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC_MASK(base));
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptStatusMasked
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt masked request register. This register contains
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the SPI interrupt request and
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled SPI interrupt sources caused the interrupt event.
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled SPI interrupt sources.
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatusMasked(CySCB_Type const *base)
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC_MASKED(base));
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearSpiInterrupt
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears SPI interrupt sources in the interrupt request register.
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI interrupt sources to be cleared.
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearSpiInterrupt(CySCB_Type *base, uint32_t interruptMask)
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SPI_INTR_MASK));
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_SPI_EC(base) = interruptMask;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 32


1683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_SPI_EC(base);
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetFifoSize
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX and TX FIFO depth.
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * FIFO depth.
1698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetFifoSize(CySCB_Type const *base)
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2BOOL(SCB_CTRL_BYTE_MODE, SCB_CTRL(base)) ?
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                 (CY_SCB_FIFO_SIZE) : (CY_SCB_FIFO_SIZE / 2UL));
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsRxDataWidthByte
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns true if the RX data width is a byte (8 bits).
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * True if the RX data width is a byte (8 bits).
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsRxDataWidthByte(CySCB_Type const *base)
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2VAL(SCB_RX_CTRL_DATA_WIDTH, SCB_RX_CTRL(base)) < CY_SCB_BYTE_WIDTH);
  42              		.loc 2 1722 0
  43 0002 C023     		movs	r3, #192
  44 0004 9B00     		lsls	r3, r3, #2
  45 0006 C358     		ldr	r3, [r0, r3]
  46 0008 0F24     		movs	r4, #15
  47 000a 2340     		ands	r3, r4
  48              	.LVL2:
  49              	.LBE47:
  50              	.LBE46:
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t idx;
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     if (Cy_SCB_IsRxDataWidthByte(base))
  51              		.loc 1 47 0
  52 000c 072B     		cmp	r3, #7
  53 000e 07D9     		bls	.L7
  54 0010 0023     		movs	r3, #0
  55 0012 0FE0     		b	.L3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 33


  56              	.LVL3:
  57              	.L4:
  58              	.LBB48:
  59              	.LBB49:
  60              	.LBB50:
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
  61              		.loc 2 632 0 discriminator 3
  62 0014 D024     		movs	r4, #208
  63 0016 A400     		lsls	r4, r4, #2
  64 0018 0459     		ldr	r4, [r0, r4]
  65              	.LVL4:
  66              	.LBE50:
  67              	.LBE49:
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         uint8_t *buf = (uint8_t *) buffer;
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         /* Get data available in RX FIFO */
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         for (idx = 0UL; idx < size; ++idx)
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****             buf[idx] = (uint8_t) Cy_SCB_ReadRxFifo(base);
  68              		.loc 1 54 0 discriminator 3
  69 001a CC54     		strb	r4, [r1, r3]
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
  70              		.loc 1 52 0 discriminator 3
  71 001c 0133     		adds	r3, r3, #1
  72              	.LVL5:
  73 001e 00E0     		b	.L2
  74              	.LVL6:
  75              	.L7:
  76              	.LBE48:
  77 0020 0023     		movs	r3, #0
  78              	.L2:
  79              	.LVL7:
  80              	.LBB51:
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
  81              		.loc 1 52 0 is_stmt 0 discriminator 1
  82 0022 9342     		cmp	r3, r2
  83 0024 F6D3     		bcc	.L4
  84 0026 07E0     		b	.L1
  85              	.L6:
  86              	.LBE51:
  87              	.LBB52:
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         }
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     else
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         uint16_t *buf = (uint16_t *) buffer;
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         /* Get data available in RX FIFO */
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         for (idx = 0UL; idx < size; ++idx)
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****             buf[idx] = (uint16_t) Cy_SCB_ReadRxFifo(base);
  88              		.loc 1 64 0 is_stmt 1 discriminator 3
  89 0028 5C00     		lsls	r4, r3, #1
  90              	.LVL8:
  91              	.LBB53:
  92              	.LBB54:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 34


 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
  93              		.loc 2 632 0 discriminator 3
  94 002a D025     		movs	r5, #208
  95 002c AD00     		lsls	r5, r5, #2
  96 002e 4559     		ldr	r5, [r0, r5]
  97              	.LVL9:
  98              	.LBE54:
  99              	.LBE53:
 100              		.loc 1 64 0 discriminator 3
 101 0030 0D53     		strh	r5, [r1, r4]
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 102              		.loc 1 62 0 discriminator 3
 103 0032 0133     		adds	r3, r3, #1
 104              	.LVL10:
 105              	.L3:
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 106              		.loc 1 62 0 is_stmt 0 discriminator 1
 107 0034 9342     		cmp	r3, r2
 108 0036 F7D3     		bcc	.L6
 109              	.L1:
 110              	.LBE52:
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         }
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 111              		.loc 1 67 0 is_stmt 1
 112              		@ sp needed
 113 0038 30BD     		pop	{r4, r5, pc}
 114              		.cfi_endproc
 115              	.LFE131:
 116              		.size	Cy_SCB_ReadArrayNoCheck, .-Cy_SCB_ReadArrayNoCheck
 117 003a C046     		.section	.text.Cy_SCB_ReadArray,"ax",%progbits
 118              		.align	2
 119              		.global	Cy_SCB_ReadArray
 120              		.code	16
 121              		.thumb_func
 122              		.type	Cy_SCB_ReadArray, %function
 123              	Cy_SCB_ReadArray:
 124              	.LFB132:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_ReadArray
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Reads an array of data out of the SCB receive FIFO.
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * This function does not block; it returns how many data elements are
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * read from the receive FIFO.
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param buffer
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to location to place data read from receive FIFO.
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The item size is defined by the data type, which depends on the configured
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * data width.
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 35


  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements to read from the receive FIFO.
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \return
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements read from the receive FIFO.
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** uint32_t Cy_SCB_ReadArray(CySCB_Type const *base, void *buffer, uint32_t size)
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 125              		.loc 1 94 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL11:
 130 0000 10B5     		push	{r4, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
 134 0002 1400     		movs	r4, r2
 135              	.LVL12:
 136              	.LBB55:
 137              	.LBB56:
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 138              		.loc 2 673 0
 139 0004 C223     		movs	r3, #194
 140 0006 9B00     		lsls	r3, r3, #2
 141 0008 C358     		ldr	r3, [r0, r3]
 142 000a DB05     		lsls	r3, r3, #23
 143 000c DB0D     		lsrs	r3, r3, #23
 144              	.LVL13:
 145              	.LBE56:
 146              	.LBE55:
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Get available items in RX FIFO */
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t numToCopy = Cy_SCB_GetNumInRxFifo(base);
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Adjust items that will be read */
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     if (numToCopy > size)
 147              		.loc 1 99 0
 148 000e 9A42     		cmp	r2, r3
 149 0010 00D3     		bcc	.L9
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 150              		.loc 1 96 0
 151 0012 1C00     		movs	r4, r3
 152              	.L9:
 153              	.LVL14:
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         numToCopy = size;
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Get data available in RX FIFO */
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     Cy_SCB_ReadArrayNoCheck(base, buffer, numToCopy);
 154              		.loc 1 105 0
 155 0014 2200     		movs	r2, r4
 156              	.LVL15:
 157 0016 FFF7FEFF 		bl	Cy_SCB_ReadArrayNoCheck
 158              	.LVL16:
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     return (numToCopy);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 36


 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 159              		.loc 1 108 0
 160 001a 2000     		movs	r0, r4
 161              		@ sp needed
 162              	.LVL17:
 163 001c 10BD     		pop	{r4, pc}
 164              		.cfi_endproc
 165              	.LFE132:
 166              		.size	Cy_SCB_ReadArray, .-Cy_SCB_ReadArray
 167 001e C046     		.section	.text.Cy_SCB_ReadArrayBlocking,"ax",%progbits
 168              		.align	2
 169              		.global	Cy_SCB_ReadArrayBlocking
 170              		.code	16
 171              		.thumb_func
 172              		.type	Cy_SCB_ReadArrayBlocking, %function
 173              	Cy_SCB_ReadArrayBlocking:
 174              	.LFB133:
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_ReadArrayBlocking
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Reads an array of data out of the SCB receive FIFO.
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * This function blocks until the number of data elements specified by the
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * size has been read from the receive FIFO.
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param buffer
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the location to place data read from the receive FIFO.
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The item size is defined by the data type, which depends on the configured
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * data width.
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements to read from receive FIFO.
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** void Cy_SCB_ReadArrayBlocking(CySCB_Type const *base, void *buffer, uint32_t size)
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 175              		.loc 1 132 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              	.LVL18:
 180 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 181              		.cfi_def_cfa_offset 24
 182              		.cfi_offset 3, -24
 183              		.cfi_offset 4, -20
 184              		.cfi_offset 5, -16
 185              		.cfi_offset 6, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 0600     		movs	r6, r0
 189 0004 0D00     		movs	r5, r1
 190 0006 1400     		movs	r4, r2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 37


 191              	.LVL19:
 192              	.LBB57:
 193              	.LBB58:
 194              		.loc 2 1722 0
 195 0008 C023     		movs	r3, #192
 196 000a 9B00     		lsls	r3, r3, #2
 197 000c C358     		ldr	r3, [r0, r3]
 198 000e 0F27     		movs	r7, #15
 199 0010 1F40     		ands	r7, r3
 200              	.LVL20:
 201              	.LBE58:
 202              	.LBE57:
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t numCopied;
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint8_t  *buf = (uint8_t *) buffer;
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     bool     byteMode = Cy_SCB_IsRxDataWidthByte(base);
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Get data from RX FIFO. Stop when the requested size is read. */
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     while (size > 0UL)
 203              		.loc 1 138 0
 204 0012 0BE0     		b	.L11
 205              	.LVL21:
 206              	.L13:
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         numCopied = Cy_SCB_ReadArray(base, (void *) buf, size);
 207              		.loc 1 140 0
 208 0014 2200     		movs	r2, r4
 209 0016 2900     		movs	r1, r5
 210 0018 3000     		movs	r0, r6
 211 001a FFF7FEFF 		bl	Cy_SCB_ReadArray
 212              	.LVL22:
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         buf = &buf[(byteMode ? (numCopied) : (2UL * numCopied))];
 213              		.loc 1 142 0
 214 001e 072F     		cmp	r7, #7
 215 0020 01D9     		bls	.L14
 216              		.loc 1 142 0 is_stmt 0 discriminator 2
 217 0022 4300     		lsls	r3, r0, #1
 218 0024 00E0     		b	.L12
 219              	.L14:
 220              		.loc 1 142 0
 221 0026 0300     		movs	r3, r0
 222              	.L12:
 223              		.loc 1 142 0 discriminator 4
 224 0028 ED18     		adds	r5, r5, r3
 225              	.LVL23:
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         size -= numCopied;
 226              		.loc 1 143 0 is_stmt 1 discriminator 4
 227 002a 241A     		subs	r4, r4, r0
 228              	.LVL24:
 229              	.L11:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 230              		.loc 1 138 0
 231 002c 002C     		cmp	r4, #0
 232 002e F1D1     		bne	.L13
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 233              		.loc 1 145 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 38


 234              		@ sp needed
 235              	.LVL25:
 236              	.LVL26:
 237              	.LVL27:
 238 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 239              		.cfi_endproc
 240              	.LFE133:
 241              		.size	Cy_SCB_ReadArrayBlocking, .-Cy_SCB_ReadArrayBlocking
 242 0032 C046     		.section	.text.Cy_SCB_Write,"ax",%progbits
 243              		.align	2
 244              		.global	Cy_SCB_Write
 245              		.code	16
 246              		.thumb_func
 247              		.type	Cy_SCB_Write, %function
 248              	Cy_SCB_Write:
 249              	.LFB134:
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_Write
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Places a single data element in the SCB transmit FIFO.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * This function does not block. It returns how many data elements are placed
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * in the transmit FIFO.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param data
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Data to put in the transmit FIFO.
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The item size is defined by the data type, which depends on the configured
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * data width.
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \return
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements placed in the transmit FIFO: 0 or 1.
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** uint32_t Cy_SCB_Write(CySCB_Type *base, uint32_t data)
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 250              		.loc 1 169 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL28:
 256              	.LBB59:
 257              	.LBB60:
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                 (CY_SCB_FIFO_SIZE) : (CY_SCB_FIFO_SIZE / 2UL));
 258              		.loc 2 1702 0
 259 0000 0368     		ldr	r3, [r0]
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 260              		.loc 2 1703 0
 261 0002 1B05     		lsls	r3, r3, #20
 262 0004 01D5     		bpl	.L18
 263 0006 8022     		movs	r2, #128
 264 0008 00E0     		b	.L16
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 39


 265              	.L18:
 266 000a 4022     		movs	r2, #64
 267              	.L16:
 268              	.LVL29:
 269              	.LBE60:
 270              	.LBE59:
 271              	.LBB61:
 272              	.LBB62:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 273              		.loc 2 777 0
 274 000c 8223     		movs	r3, #130
 275 000e 9B00     		lsls	r3, r3, #2
 276 0010 C358     		ldr	r3, [r0, r3]
 277 0012 DB05     		lsls	r3, r3, #23
 278 0014 DB0D     		lsrs	r3, r3, #23
 279              	.LVL30:
 280              	.LBE62:
 281              	.LBE61:
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t numCopied = 0UL;
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     if (Cy_SCB_GetFifoSize(base) != Cy_SCB_GetNumInTxFifo(base))
 282              		.loc 1 172 0
 283 0016 9342     		cmp	r3, r2
 284 0018 04D0     		beq	.L19
 285              	.LVL31:
 286              	.LBB63:
 287              	.LBB64:
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 288              		.loc 2 735 0
 289 001a 9023     		movs	r3, #144
 290 001c 9B00     		lsls	r3, r3, #2
 291 001e C150     		str	r1, [r0, r3]
 292              	.LVL32:
 293              	.LBE64:
 294              	.LBE63:
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         Cy_SCB_WriteTxFifo(base, data);
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         numCopied = 1UL;
 295              		.loc 1 176 0
 296 0020 0120     		movs	r0, #1
 297              	.LVL33:
 298 0022 00E0     		b	.L17
 299              	.LVL34:
 300              	.L19:
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 301              		.loc 1 170 0
 302 0024 0020     		movs	r0, #0
 303              	.LVL35:
 304              	.L17:
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     return (numCopied);
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 305              		.loc 1 180 0
 306              		@ sp needed
 307 0026 7047     		bx	lr
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 40


 308              		.cfi_endproc
 309              	.LFE134:
 310              		.size	Cy_SCB_Write, .-Cy_SCB_Write
 311              		.section	.text.Cy_SCB_WriteArrayNoCheck,"ax",%progbits
 312              		.align	2
 313              		.global	Cy_SCB_WriteArrayNoCheck
 314              		.code	16
 315              		.thumb_func
 316              		.type	Cy_SCB_WriteArrayNoCheck, %function
 317              	Cy_SCB_WriteArrayNoCheck:
 318              	.LFB135:
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_WriteArrayNoCheck
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Places an array of data in the SCB transmit FIFO without checking whether the
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * transmit FIFO has enough space.
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Before calling this function, make sure that the transmit FIFO has enough
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * space to put all requested data elements.
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param buffer
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to data to place in the transmit FIFO.
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The item size is defined by the data type, which depends on the configured
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * TX data width.
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements to transmit.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \return
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements placed in the transmit FIFO.
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** void Cy_SCB_WriteArrayNoCheck(CySCB_Type *base, void *buffer, uint32_t size)
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 319              		.loc 1 208 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL36:
 324 0000 30B5     		push	{r4, r5, lr}
 325              		.cfi_def_cfa_offset 12
 326              		.cfi_offset 4, -12
 327              		.cfi_offset 5, -8
 328              		.cfi_offset 14, -4
 329              	.LVL37:
 330              	.LBB65:
 331              	.LBB66:
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsTxDataWidthByte
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 41


1728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns true if the TX data width is a byte (8 bits).
1731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, the TX data width is a byte (8 bits). Otherwise, false.
1737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsTxDataWidthByte(CySCB_Type const *base)
1740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2VAL(SCB_TX_CTRL_DATA_WIDTH, SCB_TX_CTRL(base)) < CY_SCB_BYTE_WIDTH);
 332              		.loc 2 1741 0
 333 0002 8023     		movs	r3, #128
 334 0004 9B00     		lsls	r3, r3, #2
 335 0006 C358     		ldr	r3, [r0, r3]
 336 0008 0F24     		movs	r4, #15
 337 000a 2340     		ands	r3, r4
 338              	.LVL38:
 339              	.LBE66:
 340              	.LBE65:
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t idx;
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     if (Cy_SCB_IsTxDataWidthByte(base))
 341              		.loc 1 211 0
 342 000c 072B     		cmp	r3, #7
 343 000e 07D9     		bls	.L26
 344 0010 0023     		movs	r3, #0
 345 0012 0FE0     		b	.L22
 346              	.LVL39:
 347              	.L23:
 348              	.LBB67:
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         uint8_t *buf = (uint8_t *) buffer;
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         /* Put data into TX FIFO */
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         for (idx = 0UL; idx < size; ++idx)
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****             Cy_SCB_WriteTxFifo(base, (uint32_t) buf[idx]);
 349              		.loc 1 218 0 discriminator 3
 350 0014 CD5C     		ldrb	r5, [r1, r3]
 351              	.LVL40:
 352              	.LBB68:
 353              	.LBB69:
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 354              		.loc 2 735 0 discriminator 3
 355 0016 9024     		movs	r4, #144
 356 0018 A400     		lsls	r4, r4, #2
 357 001a 0551     		str	r5, [r0, r4]
 358              	.LVL41:
 359              	.LBE69:
 360              	.LBE68:
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 361              		.loc 1 216 0 discriminator 3
 362 001c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 42


 363              	.LVL42:
 364 001e 00E0     		b	.L21
 365              	.LVL43:
 366              	.L26:
 367              	.LBE67:
 368 0020 0023     		movs	r3, #0
 369              	.L21:
 370              	.LVL44:
 371              	.LBB70:
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 372              		.loc 1 216 0 is_stmt 0 discriminator 1
 373 0022 9342     		cmp	r3, r2
 374 0024 F6D3     		bcc	.L23
 375 0026 07E0     		b	.L20
 376              	.L25:
 377              	.LBE70:
 378              	.LBB71:
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         }
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     else
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         uint16_t *buf = (uint16_t *) buffer;
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         /* Put data into TX FIFO */
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         for (idx = 0UL; idx < size; ++idx)
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****             Cy_SCB_WriteTxFifo(base, (uint32_t) buf[idx]);
 379              		.loc 1 228 0 is_stmt 1 discriminator 3
 380 0028 5C00     		lsls	r4, r3, #1
 381 002a 655A     		ldrh	r5, [r4, r1]
 382              	.LVL45:
 383              	.LBB72:
 384              	.LBB73:
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 385              		.loc 2 735 0 discriminator 3
 386 002c 9024     		movs	r4, #144
 387 002e A400     		lsls	r4, r4, #2
 388 0030 0551     		str	r5, [r0, r4]
 389              	.LVL46:
 390              	.LBE73:
 391              	.LBE72:
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 392              		.loc 1 226 0 discriminator 3
 393 0032 0133     		adds	r3, r3, #1
 394              	.LVL47:
 395              	.L22:
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 396              		.loc 1 226 0 is_stmt 0 discriminator 1
 397 0034 9342     		cmp	r3, r2
 398 0036 F7D3     		bcc	.L25
 399              	.L20:
 400              	.LBE71:
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         }
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 401              		.loc 1 231 0 is_stmt 1
 402              		@ sp needed
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 43


 403 0038 30BD     		pop	{r4, r5, pc}
 404              		.cfi_endproc
 405              	.LFE135:
 406              		.size	Cy_SCB_WriteArrayNoCheck, .-Cy_SCB_WriteArrayNoCheck
 407 003a C046     		.section	.text.Cy_SCB_WriteArray,"ax",%progbits
 408              		.align	2
 409              		.global	Cy_SCB_WriteArray
 410              		.code	16
 411              		.thumb_func
 412              		.type	Cy_SCB_WriteArray, %function
 413              	Cy_SCB_WriteArray:
 414              	.LFB136:
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_WriteArray
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Places an array of data in the SCB transmit FIFO.
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * This function does not block. It returns how many data elements were
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * placed in the transmit FIFO.
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param buffer
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to data to place in the transmit FIFO.
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The item size is defined by the data type which depends on the configured
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * TX data width.
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements to transmit.
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \return
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements placed in the transmit FIFO.
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** uint32_t Cy_SCB_WriteArray(CySCB_Type *base, void *buffer, uint32_t size)
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 415              		.loc 1 258 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              	.LVL48:
 420 0000 10B5     		push	{r4, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 4, -8
 423              		.cfi_offset 14, -4
 424 0002 1400     		movs	r4, r2
 425              	.LVL49:
 426              	.LBB74:
 427              	.LBB75:
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                 (CY_SCB_FIFO_SIZE) : (CY_SCB_FIFO_SIZE / 2UL));
 428              		.loc 2 1702 0
 429 0004 0368     		ldr	r3, [r0]
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 430              		.loc 2 1703 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 44


 431 0006 1B05     		lsls	r3, r3, #20
 432 0008 01D5     		bpl	.L30
 433 000a 8022     		movs	r2, #128
 434              	.LVL50:
 435 000c 00E0     		b	.L28
 436              	.LVL51:
 437              	.L30:
 438 000e 4022     		movs	r2, #64
 439              	.LVL52:
 440              	.L28:
 441              	.LBE75:
 442              	.LBE74:
 443              	.LBB76:
 444              	.LBB77:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 445              		.loc 2 777 0
 446 0010 8223     		movs	r3, #130
 447 0012 9B00     		lsls	r3, r3, #2
 448 0014 C358     		ldr	r3, [r0, r3]
 449 0016 DB05     		lsls	r3, r3, #23
 450 0018 DB0D     		lsrs	r3, r3, #23
 451              	.LVL53:
 452              	.LBE77:
 453              	.LBE76:
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Get free entries in TX FIFO */
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t numToCopy = Cy_SCB_GetFifoSize(base) - Cy_SCB_GetNumInTxFifo(base);
 454              		.loc 1 260 0
 455 001a D31A     		subs	r3, r2, r3
 456              	.LVL54:
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Adjust the data elements to write */
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     if (numToCopy > size)
 457              		.loc 1 263 0
 458 001c A342     		cmp	r3, r4
 459 001e 00D8     		bhi	.L29
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 460              		.loc 1 260 0
 461 0020 1C00     		movs	r4, r3
 462              	.LVL55:
 463              	.L29:
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         numToCopy = size;
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     Cy_SCB_WriteArrayNoCheck(base, buffer, numToCopy);
 464              		.loc 1 268 0
 465 0022 2200     		movs	r2, r4
 466 0024 FFF7FEFF 		bl	Cy_SCB_WriteArrayNoCheck
 467              	.LVL56:
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     return (numToCopy);
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 468              		.loc 1 271 0
 469 0028 2000     		movs	r0, r4
 470              		@ sp needed
 471              	.LVL57:
 472 002a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 45


 473              		.cfi_endproc
 474              	.LFE136:
 475              		.size	Cy_SCB_WriteArray, .-Cy_SCB_WriteArray
 476              		.section	.text.Cy_SCB_WriteArrayBlocking,"ax",%progbits
 477              		.align	2
 478              		.global	Cy_SCB_WriteArrayBlocking
 479              		.code	16
 480              		.thumb_func
 481              		.type	Cy_SCB_WriteArrayBlocking, %function
 482              	Cy_SCB_WriteArrayBlocking:
 483              	.LFB137:
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_WriteArrayBlocking
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Places an array of data in the transmit FIFO.
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * This function blocks until the number of data elements specified by the size
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * is placed in the transmit FIFO.
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param buffer
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to data to place in transmit FIFO.
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The item size is defined by the data type, which depends on the configured
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * data width.
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements to write into the transmit FIFO.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** void Cy_SCB_WriteArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size)
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 484              		.loc 1 295 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              	.LVL58:
 489 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 490              		.cfi_def_cfa_offset 24
 491              		.cfi_offset 3, -24
 492              		.cfi_offset 4, -20
 493              		.cfi_offset 5, -16
 494              		.cfi_offset 6, -12
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 0600     		movs	r6, r0
 498 0004 0D00     		movs	r5, r1
 499 0006 1400     		movs	r4, r2
 500              	.LVL59:
 501              	.LBB78:
 502              	.LBB79:
 503              		.loc 2 1741 0
 504 0008 8023     		movs	r3, #128
 505 000a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 46


 506 000c C358     		ldr	r3, [r0, r3]
 507 000e 0F27     		movs	r7, #15
 508 0010 1F40     		ands	r7, r3
 509              	.LVL60:
 510              	.LBE79:
 511              	.LBE78:
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t numCopied;
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint8_t  *buf = (uint8_t *) buffer;
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     bool     byteMode = Cy_SCB_IsTxDataWidthByte(base);
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Get data from RX FIFO. Stop when the requested size is read. */
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     while (size > 0UL)
 512              		.loc 1 301 0
 513 0012 0BE0     		b	.L32
 514              	.LVL61:
 515              	.L34:
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         numCopied = Cy_SCB_WriteArray(base, (void *) buf, size);
 516              		.loc 1 303 0
 517 0014 2200     		movs	r2, r4
 518 0016 2900     		movs	r1, r5
 519 0018 3000     		movs	r0, r6
 520 001a FFF7FEFF 		bl	Cy_SCB_WriteArray
 521              	.LVL62:
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         buf = &buf[(byteMode ? (numCopied) : (2UL * numCopied))];
 522              		.loc 1 305 0
 523 001e 072F     		cmp	r7, #7
 524 0020 01D9     		bls	.L35
 525              		.loc 1 305 0 is_stmt 0 discriminator 2
 526 0022 4300     		lsls	r3, r0, #1
 527 0024 00E0     		b	.L33
 528              	.L35:
 529              		.loc 1 305 0
 530 0026 0300     		movs	r3, r0
 531              	.L33:
 532              		.loc 1 305 0 discriminator 4
 533 0028 ED18     		adds	r5, r5, r3
 534              	.LVL63:
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         size -= numCopied;
 535              		.loc 1 306 0 is_stmt 1 discriminator 4
 536 002a 241A     		subs	r4, r4, r0
 537              	.LVL64:
 538              	.L32:
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 539              		.loc 1 301 0
 540 002c 002C     		cmp	r4, #0
 541 002e F1D1     		bne	.L34
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 542              		.loc 1 308 0
 543              		@ sp needed
 544              	.LVL65:
 545              	.LVL66:
 546              	.LVL67:
 547 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 548              		.cfi_endproc
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 47


 549              	.LFE137:
 550              		.size	Cy_SCB_WriteArrayBlocking, .-Cy_SCB_WriteArrayBlocking
 551 0032 C046     		.section	.text.Cy_SCB_WriteString,"ax",%progbits
 552              		.align	2
 553              		.global	Cy_SCB_WriteString
 554              		.code	16
 555              		.thumb_func
 556              		.type	Cy_SCB_WriteString, %function
 557              	Cy_SCB_WriteString:
 558              	.LFB138:
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_WriteString
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Places a NULL terminated string in the transmit FIFO.
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * This function blocks until the entire string is placed in the transmit FIFO.
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param string
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the null terminated string array.
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** void Cy_SCB_WriteString(CySCB_Type *base, char_t const string[])
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 559              		.loc 1 326 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              	.LVL68:
 564 0000 30B5     		push	{r4, r5, lr}
 565              		.cfi_def_cfa_offset 12
 566              		.cfi_offset 4, -12
 567              		.cfi_offset 5, -8
 568              		.cfi_offset 14, -4
 569              	.LVL69:
 570              	.LBB80:
 571              	.LBB81:
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                 (CY_SCB_FIFO_SIZE) : (CY_SCB_FIFO_SIZE / 2UL));
 572              		.loc 2 1702 0
 573 0002 0368     		ldr	r3, [r0]
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 574              		.loc 2 1703 0
 575 0004 1B05     		lsls	r3, r3, #20
 576 0006 01D5     		bpl	.L40
 577 0008 8022     		movs	r2, #128
 578 000a 00E0     		b	.L37
 579              	.L40:
 580 000c 4022     		movs	r2, #64
 581              	.L37:
 582              	.LVL70:
 583              	.LBE81:
 584              	.LBE80:
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t idx = 0UL;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 48


 585              		.loc 1 327 0
 586 000e 0024     		movs	r4, #0
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t fifoSize = Cy_SCB_GetFifoSize(base);
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Put data from TX FIFO. Stop when string is terminated */
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     while (((char_t) 0) != string[idx])
 587              		.loc 1 331 0
 588 0010 0AE0     		b	.L38
 589              	.LVL71:
 590              	.L39:
 591              	.LBB82:
 592              	.LBB83:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 593              		.loc 2 777 0 discriminator 1
 594 0012 8223     		movs	r3, #130
 595 0014 9B00     		lsls	r3, r3, #2
 596 0016 C358     		ldr	r3, [r0, r3]
 597 0018 DB05     		lsls	r3, r3, #23
 598 001a DB0D     		lsrs	r3, r3, #23
 599              	.LVL72:
 600              	.LBE83:
 601              	.LBE82:
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         /* Wait for free space to be available */
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         while (fifoSize == Cy_SCB_GetNumInTxFifo(base))
 602              		.loc 1 334 0 discriminator 1
 603 001c 9A42     		cmp	r2, r3
 604 001e F8D0     		beq	.L39
 605              	.LVL73:
 606              	.LBB84:
 607              	.LBB85:
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 608              		.loc 2 735 0
 609 0020 9023     		movs	r3, #144
 610 0022 9B00     		lsls	r3, r3, #2
 611 0024 C550     		str	r5, [r0, r3]
 612              	.LVL74:
 613              	.LBE85:
 614              	.LBE84:
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         {
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         }
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         Cy_SCB_WriteTxFifo(base, (uint32_t) string[idx]);
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         ++idx;
 615              		.loc 1 339 0
 616 0026 0134     		adds	r4, r4, #1
 617              	.LVL75:
 618              	.L38:
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 619              		.loc 1 331 0
 620 0028 0D5D     		ldrb	r5, [r1, r4]
 621 002a 002D     		cmp	r5, #0
 622 002c F1D1     		bne	.L39
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 623              		.loc 1 341 0
 624              		@ sp needed
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 49


 625              	.LVL76:
 626 002e 30BD     		pop	{r4, r5, pc}
 627              		.cfi_endproc
 628              	.LFE138:
 629              		.size	Cy_SCB_WriteString, .-Cy_SCB_WriteString
 630              		.section	.text.Cy_SCB_WriteDefaultArrayNoCheck,"ax",%progbits
 631              		.align	2
 632              		.global	Cy_SCB_WriteDefaultArrayNoCheck
 633              		.code	16
 634              		.thumb_func
 635              		.type	Cy_SCB_WriteDefaultArrayNoCheck, %function
 636              	Cy_SCB_WriteDefaultArrayNoCheck:
 637              	.LFB139:
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_WriteDefaultArrayNoCheck
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Places a number of the same data elements in the SCB transmit FIFO without
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * checking whether the transmit FIFO has enough space. The data elements is equal
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * to txData parameter.
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Before calling this function, make sure that transmit FIFO has enough space
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * to put all requested data elements.
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param txData
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The data element to transmit repeatedly.
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements to transmit.
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** void Cy_SCB_WriteDefaultArrayNoCheck(CySCB_Type *base, uint32_t txData, uint32_t size)
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 638              		.loc 1 365 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643              	.LVL77:
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     while (size > 0UL)
 644              		.loc 1 366 0
 645 0000 03E0     		b	.L42
 646              	.L43:
 647              	.LVL78:
 648              	.LBB86:
 649              	.LBB87:
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 650              		.loc 2 735 0
 651 0002 9023     		movs	r3, #144
 652 0004 9B00     		lsls	r3, r3, #2
 653 0006 C150     		str	r1, [r0, r3]
 654              	.LVL79:
 655              	.LBE87:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 50


 656              	.LBE86:
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         Cy_SCB_WriteTxFifo(base, txData);
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         --size;
 657              		.loc 1 369 0
 658 0008 013A     		subs	r2, r2, #1
 659              	.LVL80:
 660              	.L42:
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 661              		.loc 1 366 0
 662 000a 002A     		cmp	r2, #0
 663 000c F9D1     		bne	.L43
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 664              		.loc 1 371 0
 665              		@ sp needed
 666 000e 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE139:
 669              		.size	Cy_SCB_WriteDefaultArrayNoCheck, .-Cy_SCB_WriteDefaultArrayNoCheck
 670              		.section	.text.Cy_SCB_WriteDefaultArray,"ax",%progbits
 671              		.align	2
 672              		.global	Cy_SCB_WriteDefaultArray
 673              		.code	16
 674              		.thumb_func
 675              		.type	Cy_SCB_WriteDefaultArray, %function
 676              	Cy_SCB_WriteDefaultArray:
 677              	.LFB140:
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** /*******************************************************************************
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Function Name: Cy_SCB_WriteDefaultArray
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** ****************************************************************************//**
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * Places a number of the same data elements in the SCB transmit FIFO.
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The data elements is equal to the txData parameter.
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param base
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The pointer to the SCB instance.
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param txData
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The data element to transmit repeatedly.
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \param size
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements to transmit.
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * \return
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** * The number of data elements placed in the transmit FIFO.
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** *******************************************************************************/
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** uint32_t Cy_SCB_WriteDefaultArray(CySCB_Type *base, uint32_t txData, uint32_t size)
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** {
 678              		.loc 1 395 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              	.LVL81:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 51


 683 0000 10B5     		push	{r4, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 4, -8
 686              		.cfi_offset 14, -4
 687 0002 1400     		movs	r4, r2
 688              	.LVL82:
 689              	.LBB88:
 690              	.LBB89:
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                 (CY_SCB_FIFO_SIZE) : (CY_SCB_FIFO_SIZE / 2UL));
 691              		.loc 2 1702 0
 692 0004 0368     		ldr	r3, [r0]
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 693              		.loc 2 1703 0
 694 0006 1B05     		lsls	r3, r3, #20
 695 0008 01D5     		bpl	.L47
 696 000a 8022     		movs	r2, #128
 697              	.LVL83:
 698 000c 00E0     		b	.L45
 699              	.LVL84:
 700              	.L47:
 701 000e 4022     		movs	r2, #64
 702              	.LVL85:
 703              	.L45:
 704              	.LBE89:
 705              	.LBE88:
 706              	.LBB90:
 707              	.LBB91:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 708              		.loc 2 777 0
 709 0010 8223     		movs	r3, #130
 710 0012 9B00     		lsls	r3, r3, #2
 711 0014 C358     		ldr	r3, [r0, r3]
 712 0016 DB05     		lsls	r3, r3, #23
 713 0018 DB0D     		lsrs	r3, r3, #23
 714              	.LVL86:
 715              	.LBE91:
 716              	.LBE90:
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Get free entries in TX FIFO */
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     uint32_t numToCopy = Cy_SCB_GetFifoSize(base) - Cy_SCB_GetNumInTxFifo(base);
 717              		.loc 1 397 0
 718 001a D31A     		subs	r3, r2, r3
 719              	.LVL87:
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     /* Adjust data elements to write */
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     if (numToCopy > size)
 720              		.loc 1 400 0
 721 001c A342     		cmp	r3, r4
 722 001e 00D8     		bhi	.L46
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 723              		.loc 1 397 0
 724 0020 1C00     		movs	r4, r3
 725              	.LVL88:
 726              	.L46:
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     {
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****         numToCopy = size;
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     }
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 52


 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     Cy_SCB_WriteDefaultArrayNoCheck(base, txData, numToCopy);
 727              		.loc 1 405 0
 728 0022 2200     		movs	r2, r4
 729 0024 FFF7FEFF 		bl	Cy_SCB_WriteDefaultArrayNoCheck
 730              	.LVL89:
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** 
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c ****     return (numToCopy);
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.c **** }
 731              		.loc 1 408 0
 732 0028 2000     		movs	r0, r4
 733              		@ sp needed
 734              	.LVL90:
 735 002a 10BD     		pop	{r4, pc}
 736              		.cfi_endproc
 737              	.LFE140:
 738              		.size	Cy_SCB_WriteDefaultArray, .-Cy_SCB_WriteDefaultArray
 739              		.text
 740              	.Letext0:
 741              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 742              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 743              		.file 5 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 744              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_scb.h"
 745              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 746              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 747              		.section	.debug_info,"",%progbits
 748              	.Ldebug_info0:
 749 0000 87110000 		.4byte	0x1187
 750 0004 0400     		.2byte	0x4
 751 0006 00000000 		.4byte	.Ldebug_abbrev0
 752 000a 04       		.byte	0x4
 753 000b 01       		.uleb128 0x1
 754 000c 5D010000 		.4byte	.LASF207
 755 0010 0C       		.byte	0xc
 756 0011 4E040000 		.4byte	.LASF208
 757 0015 ED030000 		.4byte	.LASF209
 758 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 759 001d 00000000 		.4byte	0
 760 0021 00000000 		.4byte	.Ldebug_line0
 761 0025 02       		.uleb128 0x2
 762 0026 01       		.byte	0x1
 763 0027 06       		.byte	0x6
 764 0028 19020000 		.4byte	.LASF0
 765 002c 03       		.uleb128 0x3
 766 002d A2000000 		.4byte	.LASF2
 767 0031 03       		.byte	0x3
 768 0032 1D       		.byte	0x1d
 769 0033 37000000 		.4byte	0x37
 770 0037 02       		.uleb128 0x2
 771 0038 01       		.byte	0x1
 772 0039 08       		.byte	0x8
 773 003a CC080000 		.4byte	.LASF1
 774 003e 03       		.uleb128 0x3
 775 003f E3030000 		.4byte	.LASF3
 776 0043 03       		.byte	0x3
 777 0044 29       		.byte	0x29
 778 0045 49000000 		.4byte	0x49
 779 0049 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 53


 780 004a 02       		.byte	0x2
 781 004b 05       		.byte	0x5
 782 004c FD080000 		.4byte	.LASF4
 783 0050 03       		.uleb128 0x3
 784 0051 460A0000 		.4byte	.LASF5
 785 0055 03       		.byte	0x3
 786 0056 2B       		.byte	0x2b
 787 0057 5B000000 		.4byte	0x5b
 788 005b 02       		.uleb128 0x2
 789 005c 02       		.byte	0x2
 790 005d 07       		.byte	0x7
 791 005e C90A0000 		.4byte	.LASF6
 792 0062 02       		.uleb128 0x2
 793 0063 04       		.byte	0x4
 794 0064 05       		.byte	0x5
 795 0065 C6020000 		.4byte	.LASF7
 796 0069 03       		.uleb128 0x3
 797 006a C8030000 		.4byte	.LASF8
 798 006e 03       		.byte	0x3
 799 006f 41       		.byte	0x41
 800 0070 74000000 		.4byte	0x74
 801 0074 02       		.uleb128 0x2
 802 0075 04       		.byte	0x4
 803 0076 07       		.byte	0x7
 804 0077 12050000 		.4byte	.LASF9
 805 007b 02       		.uleb128 0x2
 806 007c 08       		.byte	0x8
 807 007d 05       		.byte	0x5
 808 007e 0B020000 		.4byte	.LASF10
 809 0082 02       		.uleb128 0x2
 810 0083 08       		.byte	0x8
 811 0084 07       		.byte	0x7
 812 0085 7D050000 		.4byte	.LASF11
 813 0089 04       		.uleb128 0x4
 814 008a 04       		.byte	0x4
 815 008b 05       		.byte	0x5
 816 008c 696E7400 		.ascii	"int\000"
 817 0090 02       		.uleb128 0x2
 818 0091 04       		.byte	0x4
 819 0092 07       		.byte	0x7
 820 0093 CD040000 		.4byte	.LASF12
 821 0097 03       		.uleb128 0x3
 822 0098 690B0000 		.4byte	.LASF13
 823 009c 04       		.byte	0x4
 824 009d 18       		.byte	0x18
 825 009e 2C000000 		.4byte	0x2c
 826 00a2 03       		.uleb128 0x3
 827 00a3 03020000 		.4byte	.LASF14
 828 00a7 04       		.byte	0x4
 829 00a8 20       		.byte	0x20
 830 00a9 3E000000 		.4byte	0x3e
 831 00ad 03       		.uleb128 0x3
 832 00ae DA040000 		.4byte	.LASF15
 833 00b2 04       		.byte	0x4
 834 00b3 24       		.byte	0x24
 835 00b4 50000000 		.4byte	0x50
 836 00b8 03       		.uleb128 0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 54


 837 00b9 B5090000 		.4byte	.LASF16
 838 00bd 04       		.byte	0x4
 839 00be 30       		.byte	0x30
 840 00bf 69000000 		.4byte	0x69
 841 00c3 02       		.uleb128 0x2
 842 00c4 08       		.byte	0x8
 843 00c5 04       		.byte	0x4
 844 00c6 ED090000 		.4byte	.LASF17
 845 00ca 05       		.uleb128 0x5
 846 00cb B8000000 		.4byte	0xb8
 847 00cf 06       		.uleb128 0x6
 848 00d0 CA000000 		.4byte	0xca
 849 00d4 07       		.uleb128 0x7
 850 00d5 CF000000 		.4byte	0xcf
 851 00d9 E4000000 		.4byte	0xe4
 852 00dd 08       		.uleb128 0x8
 853 00de E4000000 		.4byte	0xe4
 854 00e2 02       		.byte	0x2
 855 00e3 00       		.byte	0
 856 00e4 02       		.uleb128 0x2
 857 00e5 04       		.byte	0x4
 858 00e6 07       		.byte	0x7
 859 00e7 49070000 		.4byte	.LASF18
 860 00eb 07       		.uleb128 0x7
 861 00ec CF000000 		.4byte	0xcf
 862 00f0 FB000000 		.4byte	0xfb
 863 00f4 08       		.uleb128 0x8
 864 00f5 E4000000 		.4byte	0xe4
 865 00f9 03       		.byte	0x3
 866 00fa 00       		.byte	0
 867 00fb 07       		.uleb128 0x7
 868 00fc CF000000 		.4byte	0xcf
 869 0100 0B010000 		.4byte	0x10b
 870 0104 08       		.uleb128 0x8
 871 0105 E4000000 		.4byte	0xe4
 872 0109 0C       		.byte	0xc
 873 010a 00       		.byte	0
 874 010b 07       		.uleb128 0x7
 875 010c CF000000 		.4byte	0xcf
 876 0110 1B010000 		.4byte	0x11b
 877 0114 08       		.uleb128 0x8
 878 0115 E4000000 		.4byte	0xe4
 879 0119 0B       		.byte	0xb
 880 011a 00       		.byte	0
 881 011b 07       		.uleb128 0x7
 882 011c CF000000 		.4byte	0xcf
 883 0120 2B010000 		.4byte	0x12b
 884 0124 08       		.uleb128 0x8
 885 0125 E4000000 		.4byte	0xe4
 886 0129 1E       		.byte	0x1e
 887 012a 00       		.byte	0
 888 012b 07       		.uleb128 0x7
 889 012c CF000000 		.4byte	0xcf
 890 0130 3B010000 		.4byte	0x13b
 891 0134 08       		.uleb128 0x8
 892 0135 E4000000 		.4byte	0xe4
 893 0139 05       		.byte	0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 55


 894 013a 00       		.byte	0
 895 013b 07       		.uleb128 0x7
 896 013c CF000000 		.4byte	0xcf
 897 0140 4B010000 		.4byte	0x14b
 898 0144 08       		.uleb128 0x8
 899 0145 E4000000 		.4byte	0xe4
 900 0149 7F       		.byte	0x7f
 901 014a 00       		.byte	0
 902 014b 09       		.uleb128 0x9
 903 014c B8       		.byte	0xb8
 904 014d 05       		.byte	0x5
 905 014e 34       		.byte	0x34
 906 014f 5C050000 		.4byte	0x55c
 907 0153 0A       		.uleb128 0xa
 908 0154 F3000000 		.4byte	.LASF19
 909 0158 05       		.byte	0x5
 910 0159 37       		.byte	0x37
 911 015a B8000000 		.4byte	0xb8
 912 015e 00       		.byte	0
 913 015f 0A       		.uleb128 0xa
 914 0160 3A020000 		.4byte	.LASF20
 915 0164 05       		.byte	0x5
 916 0165 38       		.byte	0x38
 917 0166 B8000000 		.4byte	0xb8
 918 016a 04       		.byte	0x4
 919 016b 0A       		.uleb128 0xa
 920 016c EE020000 		.4byte	.LASF21
 921 0170 05       		.byte	0x5
 922 0171 39       		.byte	0x39
 923 0172 B8000000 		.4byte	0xb8
 924 0176 08       		.byte	0x8
 925 0177 0A       		.uleb128 0xa
 926 0178 B5080000 		.4byte	.LASF22
 927 017c 05       		.byte	0x5
 928 017d 3A       		.byte	0x3a
 929 017e B8000000 		.4byte	0xb8
 930 0182 0C       		.byte	0xc
 931 0183 0A       		.uleb128 0xa
 932 0184 45020000 		.4byte	.LASF23
 933 0188 05       		.byte	0x5
 934 0189 3B       		.byte	0x3b
 935 018a B8000000 		.4byte	0xb8
 936 018e 10       		.byte	0x10
 937 018f 0A       		.uleb128 0xa
 938 0190 24090000 		.4byte	.LASF24
 939 0194 05       		.byte	0x5
 940 0195 3C       		.byte	0x3c
 941 0196 B8000000 		.4byte	0xb8
 942 019a 14       		.byte	0x14
 943 019b 0A       		.uleb128 0xa
 944 019c 53050000 		.4byte	.LASF25
 945 01a0 05       		.byte	0x5
 946 01a1 3D       		.byte	0x3d
 947 01a2 B8000000 		.4byte	0xb8
 948 01a6 18       		.byte	0x18
 949 01a7 0A       		.uleb128 0xa
 950 01a8 80000000 		.4byte	.LASF26
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 56


 951 01ac 05       		.byte	0x5
 952 01ad 3E       		.byte	0x3e
 953 01ae B8000000 		.4byte	0xb8
 954 01b2 1C       		.byte	0x1c
 955 01b3 0A       		.uleb128 0xa
 956 01b4 120C0000 		.4byte	.LASF27
 957 01b8 05       		.byte	0x5
 958 01b9 3F       		.byte	0x3f
 959 01ba B8000000 		.4byte	0xb8
 960 01be 20       		.byte	0x20
 961 01bf 0A       		.uleb128 0xa
 962 01c0 FD070000 		.4byte	.LASF28
 963 01c4 05       		.byte	0x5
 964 01c5 40       		.byte	0x40
 965 01c6 B8000000 		.4byte	0xb8
 966 01ca 24       		.byte	0x24
 967 01cb 0A       		.uleb128 0xa
 968 01cc B9060000 		.4byte	.LASF29
 969 01d0 05       		.byte	0x5
 970 01d1 43       		.byte	0x43
 971 01d2 97000000 		.4byte	0x97
 972 01d6 28       		.byte	0x28
 973 01d7 0A       		.uleb128 0xa
 974 01d8 66000000 		.4byte	.LASF30
 975 01dc 05       		.byte	0x5
 976 01dd 44       		.byte	0x44
 977 01de 97000000 		.4byte	0x97
 978 01e2 29       		.byte	0x29
 979 01e3 0A       		.uleb128 0xa
 980 01e4 080C0000 		.4byte	.LASF31
 981 01e8 05       		.byte	0x5
 982 01e9 45       		.byte	0x45
 983 01ea 97000000 		.4byte	0x97
 984 01ee 2A       		.byte	0x2a
 985 01ef 0A       		.uleb128 0xa
 986 01f0 EF070000 		.4byte	.LASF32
 987 01f4 05       		.byte	0x5
 988 01f5 46       		.byte	0x46
 989 01f6 97000000 		.4byte	0x97
 990 01fa 2B       		.byte	0x2b
 991 01fb 0A       		.uleb128 0xa
 992 01fc 16060000 		.4byte	.LASF33
 993 0200 05       		.byte	0x5
 994 0201 47       		.byte	0x47
 995 0202 97000000 		.4byte	0x97
 996 0206 2C       		.byte	0x2c
 997 0207 0A       		.uleb128 0xa
 998 0208 900A0000 		.4byte	.LASF34
 999 020c 05       		.byte	0x5
 1000 020d 48       		.byte	0x48
 1001 020e 97000000 		.4byte	0x97
 1002 0212 2D       		.byte	0x2d
 1003 0213 0A       		.uleb128 0xa
 1004 0214 4E020000 		.4byte	.LASF35
 1005 0218 05       		.byte	0x5
 1006 0219 49       		.byte	0x49
 1007 021a 97000000 		.4byte	0x97
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 57


 1008 021e 2E       		.byte	0x2e
 1009 021f 0A       		.uleb128 0xa
 1010 0220 36080000 		.4byte	.LASF36
 1011 0224 05       		.byte	0x5
 1012 0225 4A       		.byte	0x4a
 1013 0226 97000000 		.4byte	0x97
 1014 022a 2F       		.byte	0x2f
 1015 022b 0A       		.uleb128 0xa
 1016 022c FE090000 		.4byte	.LASF37
 1017 0230 05       		.byte	0x5
 1018 0231 4B       		.byte	0x4b
 1019 0232 97000000 		.4byte	0x97
 1020 0236 30       		.byte	0x30
 1021 0237 0A       		.uleb128 0xa
 1022 0238 48050000 		.4byte	.LASF38
 1023 023c 05       		.byte	0x5
 1024 023d 4E       		.byte	0x4e
 1025 023e 97000000 		.4byte	0x97
 1026 0242 31       		.byte	0x31
 1027 0243 0A       		.uleb128 0xa
 1028 0244 94000000 		.4byte	.LASF39
 1029 0248 05       		.byte	0x5
 1030 0249 4F       		.byte	0x4f
 1031 024a 97000000 		.4byte	0x97
 1032 024e 32       		.byte	0x32
 1033 024f 0A       		.uleb128 0xa
 1034 0250 C1040000 		.4byte	.LASF40
 1035 0254 05       		.byte	0x5
 1036 0255 50       		.byte	0x50
 1037 0256 97000000 		.4byte	0x97
 1038 025a 33       		.byte	0x33
 1039 025b 0A       		.uleb128 0xa
 1040 025c 68070000 		.4byte	.LASF41
 1041 0260 05       		.byte	0x5
 1042 0261 51       		.byte	0x51
 1043 0262 97000000 		.4byte	0x97
 1044 0266 34       		.byte	0x34
 1045 0267 0A       		.uleb128 0xa
 1046 0268 0D0B0000 		.4byte	.LASF42
 1047 026c 05       		.byte	0x5
 1048 026d 52       		.byte	0x52
 1049 026e A2000000 		.4byte	0xa2
 1050 0272 36       		.byte	0x36
 1051 0273 0A       		.uleb128 0xa
 1052 0274 13030000 		.4byte	.LASF43
 1053 0278 05       		.byte	0x5
 1054 0279 53       		.byte	0x53
 1055 027a A2000000 		.4byte	0xa2
 1056 027e 38       		.byte	0x38
 1057 027f 0A       		.uleb128 0xa
 1058 0280 370B0000 		.4byte	.LASF44
 1059 0284 05       		.byte	0x5
 1060 0285 54       		.byte	0x54
 1061 0286 A2000000 		.4byte	0xa2
 1062 028a 3A       		.byte	0x3a
 1063 028b 0A       		.uleb128 0xa
 1064 028c F90B0000 		.4byte	.LASF45
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 58


 1065 0290 05       		.byte	0x5
 1066 0291 55       		.byte	0x55
 1067 0292 97000000 		.4byte	0x97
 1068 0296 3C       		.byte	0x3c
 1069 0297 0A       		.uleb128 0xa
 1070 0298 3A030000 		.4byte	.LASF46
 1071 029c 05       		.byte	0x5
 1072 029d 56       		.byte	0x56
 1073 029e 97000000 		.4byte	0x97
 1074 02a2 3D       		.byte	0x3d
 1075 02a3 0A       		.uleb128 0xa
 1076 02a4 63090000 		.4byte	.LASF47
 1077 02a8 05       		.byte	0x5
 1078 02a9 57       		.byte	0x57
 1079 02aa 97000000 		.4byte	0x97
 1080 02ae 3E       		.byte	0x3e
 1081 02af 0A       		.uleb128 0xa
 1082 02b0 74000000 		.4byte	.LASF48
 1083 02b4 05       		.byte	0x5
 1084 02b5 58       		.byte	0x58
 1085 02b6 97000000 		.4byte	0x97
 1086 02ba 3F       		.byte	0x3f
 1087 02bb 0A       		.uleb128 0xa
 1088 02bc 08080000 		.4byte	.LASF49
 1089 02c0 05       		.byte	0x5
 1090 02c1 59       		.byte	0x59
 1091 02c2 97000000 		.4byte	0x97
 1092 02c6 40       		.byte	0x40
 1093 02c7 0A       		.uleb128 0xa
 1094 02c8 D3030000 		.4byte	.LASF50
 1095 02cc 05       		.byte	0x5
 1096 02cd 5A       		.byte	0x5a
 1097 02ce 97000000 		.4byte	0x97
 1098 02d2 41       		.byte	0x41
 1099 02d3 0A       		.uleb128 0xa
 1100 02d4 62060000 		.4byte	.LASF51
 1101 02d8 05       		.byte	0x5
 1102 02d9 5B       		.byte	0x5b
 1103 02da 97000000 		.4byte	0x97
 1104 02de 42       		.byte	0x42
 1105 02df 0A       		.uleb128 0xa
 1106 02e0 D6070000 		.4byte	.LASF52
 1107 02e4 05       		.byte	0x5
 1108 02e5 5C       		.byte	0x5c
 1109 02e6 97000000 		.4byte	0x97
 1110 02ea 43       		.byte	0x43
 1111 02eb 0A       		.uleb128 0xa
 1112 02ec F7020000 		.4byte	.LASF53
 1113 02f0 05       		.byte	0x5
 1114 02f1 5D       		.byte	0x5d
 1115 02f2 97000000 		.4byte	0x97
 1116 02f6 44       		.byte	0x44
 1117 02f7 0A       		.uleb128 0xa
 1118 02f8 00000000 		.4byte	.LASF54
 1119 02fc 05       		.byte	0x5
 1120 02fd 5E       		.byte	0x5e
 1121 02fe B8000000 		.4byte	0xb8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 59


 1122 0302 48       		.byte	0x48
 1123 0303 0A       		.uleb128 0xa
 1124 0304 7E030000 		.4byte	.LASF55
 1125 0308 05       		.byte	0x5
 1126 0309 5F       		.byte	0x5f
 1127 030a B8000000 		.4byte	0xb8
 1128 030e 4C       		.byte	0x4c
 1129 030f 0A       		.uleb128 0xa
 1130 0310 730C0000 		.4byte	.LASF56
 1131 0314 05       		.byte	0x5
 1132 0315 60       		.byte	0x60
 1133 0316 97000000 		.4byte	0x97
 1134 031a 50       		.byte	0x50
 1135 031b 0A       		.uleb128 0xa
 1136 031c 4B010000 		.4byte	.LASF57
 1137 0320 05       		.byte	0x5
 1138 0321 61       		.byte	0x61
 1139 0322 97000000 		.4byte	0x97
 1140 0326 51       		.byte	0x51
 1141 0327 0A       		.uleb128 0xa
 1142 0328 4C0B0000 		.4byte	.LASF58
 1143 032c 05       		.byte	0x5
 1144 032d 62       		.byte	0x62
 1145 032e 97000000 		.4byte	0x97
 1146 0332 52       		.byte	0x52
 1147 0333 0A       		.uleb128 0xa
 1148 0334 380C0000 		.4byte	.LASF59
 1149 0338 05       		.byte	0x5
 1150 0339 63       		.byte	0x63
 1151 033a 97000000 		.4byte	0x97
 1152 033e 53       		.byte	0x53
 1153 033f 0A       		.uleb128 0xa
 1154 0340 7B090000 		.4byte	.LASF60
 1155 0344 05       		.byte	0x5
 1156 0345 64       		.byte	0x64
 1157 0346 97000000 		.4byte	0x97
 1158 034a 54       		.byte	0x54
 1159 034b 0A       		.uleb128 0xa
 1160 034c EF010000 		.4byte	.LASF61
 1161 0350 05       		.byte	0x5
 1162 0351 65       		.byte	0x65
 1163 0352 97000000 		.4byte	0x97
 1164 0356 55       		.byte	0x55
 1165 0357 0A       		.uleb128 0xa
 1166 0358 B50A0000 		.4byte	.LASF62
 1167 035c 05       		.byte	0x5
 1168 035d 66       		.byte	0x66
 1169 035e 97000000 		.4byte	0x97
 1170 0362 56       		.byte	0x56
 1171 0363 0A       		.uleb128 0xa
 1172 0364 69050000 		.4byte	.LASF63
 1173 0368 05       		.byte	0x5
 1174 0369 67       		.byte	0x67
 1175 036a 97000000 		.4byte	0x97
 1176 036e 57       		.byte	0x57
 1177 036f 0A       		.uleb128 0xa
 1178 0370 12000000 		.4byte	.LASF64
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 60


 1179 0374 05       		.byte	0x5
 1180 0375 68       		.byte	0x68
 1181 0376 97000000 		.4byte	0x97
 1182 037a 58       		.byte	0x58
 1183 037b 0A       		.uleb128 0xa
 1184 037c E9080000 		.4byte	.LASF65
 1185 0380 05       		.byte	0x5
 1186 0381 69       		.byte	0x69
 1187 0382 97000000 		.4byte	0x97
 1188 0386 59       		.byte	0x59
 1189 0387 0A       		.uleb128 0xa
 1190 0388 52070000 		.4byte	.LASF66
 1191 038c 05       		.byte	0x5
 1192 038d 6E       		.byte	0x6e
 1193 038e AD000000 		.4byte	0xad
 1194 0392 5A       		.byte	0x5a
 1195 0393 0A       		.uleb128 0xa
 1196 0394 DC0A0000 		.4byte	.LASF67
 1197 0398 05       		.byte	0x5
 1198 0399 6F       		.byte	0x6f
 1199 039a AD000000 		.4byte	0xad
 1200 039e 5C       		.byte	0x5c
 1201 039f 0A       		.uleb128 0xa
 1202 03a0 07010000 		.4byte	.LASF68
 1203 03a4 05       		.byte	0x5
 1204 03a5 70       		.byte	0x70
 1205 03a6 97000000 		.4byte	0x97
 1206 03aa 5E       		.byte	0x5e
 1207 03ab 0A       		.uleb128 0xa
 1208 03ac B2030000 		.4byte	.LASF69
 1209 03b0 05       		.byte	0x5
 1210 03b1 71       		.byte	0x71
 1211 03b2 97000000 		.4byte	0x97
 1212 03b6 5F       		.byte	0x5f
 1213 03b7 0A       		.uleb128 0xa
 1214 03b8 C5070000 		.4byte	.LASF70
 1215 03bc 05       		.byte	0x5
 1216 03bd 72       		.byte	0x72
 1217 03be 97000000 		.4byte	0x97
 1218 03c2 60       		.byte	0x60
 1219 03c3 0A       		.uleb128 0xa
 1220 03c4 48080000 		.4byte	.LASF71
 1221 03c8 05       		.byte	0x5
 1222 03c9 73       		.byte	0x73
 1223 03ca B8000000 		.4byte	0xb8
 1224 03ce 64       		.byte	0x64
 1225 03cf 0A       		.uleb128 0xa
 1226 03d0 1D010000 		.4byte	.LASF72
 1227 03d4 05       		.byte	0x5
 1228 03d5 76       		.byte	0x76
 1229 03d6 AD000000 		.4byte	0xad
 1230 03da 68       		.byte	0x68
 1231 03db 0A       		.uleb128 0xa
 1232 03dc 1E070000 		.4byte	.LASF73
 1233 03e0 05       		.byte	0x5
 1234 03e1 77       		.byte	0x77
 1235 03e2 AD000000 		.4byte	0xad
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 61


 1236 03e6 6A       		.byte	0x6a
 1237 03e7 0A       		.uleb128 0xa
 1238 03e8 9E050000 		.4byte	.LASF74
 1239 03ec 05       		.byte	0x5
 1240 03ed 78       		.byte	0x78
 1241 03ee AD000000 		.4byte	0xad
 1242 03f2 6C       		.byte	0x6c
 1243 03f3 0A       		.uleb128 0xa
 1244 03f4 09060000 		.4byte	.LASF75
 1245 03f8 05       		.byte	0x5
 1246 03f9 79       		.byte	0x79
 1247 03fa AD000000 		.4byte	0xad
 1248 03fe 6E       		.byte	0x6e
 1249 03ff 0A       		.uleb128 0xa
 1250 0400 2E090000 		.4byte	.LASF76
 1251 0404 05       		.byte	0x5
 1252 0405 7B       		.byte	0x7b
 1253 0406 97000000 		.4byte	0x97
 1254 040a 70       		.byte	0x70
 1255 040b 0A       		.uleb128 0xa
 1256 040c 25020000 		.4byte	.LASF77
 1257 0410 05       		.byte	0x5
 1258 0411 7C       		.byte	0x7c
 1259 0412 97000000 		.4byte	0x97
 1260 0416 71       		.byte	0x71
 1261 0417 0A       		.uleb128 0xa
 1262 0418 1A0C0000 		.4byte	.LASF78
 1263 041c 05       		.byte	0x5
 1264 041d 7D       		.byte	0x7d
 1265 041e 97000000 		.4byte	0x97
 1266 0422 72       		.byte	0x72
 1267 0423 0A       		.uleb128 0xa
 1268 0424 8F070000 		.4byte	.LASF79
 1269 0428 05       		.byte	0x5
 1270 0429 7E       		.byte	0x7e
 1271 042a 97000000 		.4byte	0x97
 1272 042e 73       		.byte	0x73
 1273 042f 0A       		.uleb128 0xa
 1274 0430 8C030000 		.4byte	.LASF80
 1275 0434 05       		.byte	0x5
 1276 0435 80       		.byte	0x80
 1277 0436 AD000000 		.4byte	0xad
 1278 043a 74       		.byte	0x74
 1279 043b 0A       		.uleb128 0xa
 1280 043c 510A0000 		.4byte	.LASF81
 1281 0440 05       		.byte	0x5
 1282 0441 81       		.byte	0x81
 1283 0442 AD000000 		.4byte	0xad
 1284 0446 76       		.byte	0x76
 1285 0447 0A       		.uleb128 0xa
 1286 0448 25030000 		.4byte	.LASF82
 1287 044c 05       		.byte	0x5
 1288 044d 82       		.byte	0x82
 1289 044e AD000000 		.4byte	0xad
 1290 0452 78       		.byte	0x78
 1291 0453 0A       		.uleb128 0xa
 1292 0454 AC000000 		.4byte	.LASF83
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 62


 1293 0458 05       		.byte	0x5
 1294 0459 83       		.byte	0x83
 1295 045a AD000000 		.4byte	0xad
 1296 045e 7A       		.byte	0x7a
 1297 045f 0A       		.uleb128 0xa
 1298 0460 AA0B0000 		.4byte	.LASF84
 1299 0464 05       		.byte	0x5
 1300 0465 86       		.byte	0x86
 1301 0466 97000000 		.4byte	0x97
 1302 046a 7C       		.byte	0x7c
 1303 046b 0A       		.uleb128 0xa
 1304 046c 1F0B0000 		.4byte	.LASF85
 1305 0470 05       		.byte	0x5
 1306 0471 87       		.byte	0x87
 1307 0472 97000000 		.4byte	0x97
 1308 0476 7D       		.byte	0x7d
 1309 0477 0A       		.uleb128 0xa
 1310 0478 26000000 		.4byte	.LASF86
 1311 047c 05       		.byte	0x5
 1312 047d 88       		.byte	0x88
 1313 047e 97000000 		.4byte	0x97
 1314 0482 7E       		.byte	0x7e
 1315 0483 0A       		.uleb128 0xa
 1316 0484 9E030000 		.4byte	.LASF87
 1317 0488 05       		.byte	0x5
 1318 0489 89       		.byte	0x89
 1319 048a 97000000 		.4byte	0x97
 1320 048e 7F       		.byte	0x7f
 1321 048f 0A       		.uleb128 0xa
 1322 0490 AD040000 		.4byte	.LASF88
 1323 0494 05       		.byte	0x5
 1324 0495 8A       		.byte	0x8a
 1325 0496 97000000 		.4byte	0x97
 1326 049a 80       		.byte	0x80
 1327 049b 0A       		.uleb128 0xa
 1328 049c 99060000 		.4byte	.LASF89
 1329 04a0 05       		.byte	0x5
 1330 04a1 8D       		.byte	0x8d
 1331 04a2 B8000000 		.4byte	0xb8
 1332 04a6 84       		.byte	0x84
 1333 04a7 0A       		.uleb128 0xa
 1334 04a8 C1000000 		.4byte	.LASF90
 1335 04ac 05       		.byte	0x5
 1336 04ad 8E       		.byte	0x8e
 1337 04ae B8000000 		.4byte	0xb8
 1338 04b2 88       		.byte	0x88
 1339 04b3 0A       		.uleb128 0xa
 1340 04b4 950B0000 		.4byte	.LASF91
 1341 04b8 05       		.byte	0x5
 1342 04b9 8F       		.byte	0x8f
 1343 04ba B8000000 		.4byte	0xb8
 1344 04be 8C       		.byte	0x8c
 1345 04bf 0A       		.uleb128 0xa
 1346 04c0 F6060000 		.4byte	.LASF92
 1347 04c4 05       		.byte	0x5
 1348 04c5 90       		.byte	0x90
 1349 04c6 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 63


 1350 04ca 90       		.byte	0x90
 1351 04cb 0A       		.uleb128 0xa
 1352 04cc 98040000 		.4byte	.LASF93
 1353 04d0 05       		.byte	0x5
 1354 04d1 91       		.byte	0x91
 1355 04d2 B8000000 		.4byte	0xb8
 1356 04d6 94       		.byte	0x94
 1357 04d7 0A       		.uleb128 0xa
 1358 04d8 83060000 		.4byte	.LASF94
 1359 04dc 05       		.byte	0x5
 1360 04dd 92       		.byte	0x92
 1361 04de B8000000 		.4byte	0xb8
 1362 04e2 98       		.byte	0x98
 1363 04e3 0A       		.uleb128 0xa
 1364 04e4 E30B0000 		.4byte	.LASF95
 1365 04e8 05       		.byte	0x5
 1366 04e9 93       		.byte	0x93
 1367 04ea B8000000 		.4byte	0xb8
 1368 04ee 9C       		.byte	0x9c
 1369 04ef 0A       		.uleb128 0xa
 1370 04f0 2D010000 		.4byte	.LASF96
 1371 04f4 05       		.byte	0x5
 1372 04f5 94       		.byte	0x94
 1373 04f6 B8000000 		.4byte	0xb8
 1374 04fa A0       		.byte	0xa0
 1375 04fb 0A       		.uleb128 0xa
 1376 04fc 59020000 		.4byte	.LASF97
 1377 0500 05       		.byte	0x5
 1378 0501 95       		.byte	0x95
 1379 0502 AD000000 		.4byte	0xad
 1380 0506 A4       		.byte	0xa4
 1381 0507 0A       		.uleb128 0xa
 1382 0508 6E060000 		.4byte	.LASF98
 1383 050c 05       		.byte	0x5
 1384 050d 96       		.byte	0x96
 1385 050e AD000000 		.4byte	0xad
 1386 0512 A6       		.byte	0xa6
 1387 0513 0A       		.uleb128 0xa
 1388 0514 77080000 		.4byte	.LASF99
 1389 0518 05       		.byte	0x5
 1390 0519 97       		.byte	0x97
 1391 051a AD000000 		.4byte	0xad
 1392 051e A8       		.byte	0xa8
 1393 051f 0A       		.uleb128 0xa
 1394 0520 130A0000 		.4byte	.LASF100
 1395 0524 05       		.byte	0x5
 1396 0525 98       		.byte	0x98
 1397 0526 AD000000 		.4byte	0xad
 1398 052a AA       		.byte	0xaa
 1399 052b 0A       		.uleb128 0xa
 1400 052c BD050000 		.4byte	.LASF101
 1401 0530 05       		.byte	0x5
 1402 0531 99       		.byte	0x99
 1403 0532 AD000000 		.4byte	0xad
 1404 0536 AC       		.byte	0xac
 1405 0537 0A       		.uleb128 0xa
 1406 0538 A6070000 		.4byte	.LASF102
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 64


 1407 053c 05       		.byte	0x5
 1408 053d 9A       		.byte	0x9a
 1409 053e AD000000 		.4byte	0xad
 1410 0542 AE       		.byte	0xae
 1411 0543 0A       		.uleb128 0xa
 1412 0544 15080000 		.4byte	.LASF103
 1413 0548 05       		.byte	0x5
 1414 0549 9D       		.byte	0x9d
 1415 054a AD000000 		.4byte	0xad
 1416 054e B0       		.byte	0xb0
 1417 054f 0A       		.uleb128 0xa
 1418 0550 52000000 		.4byte	.LASF104
 1419 0554 05       		.byte	0x5
 1420 0555 9E       		.byte	0x9e
 1421 0556 B8000000 		.4byte	0xb8
 1422 055a B4       		.byte	0xb4
 1423 055b 00       		.byte	0
 1424 055c 03       		.uleb128 0x3
 1425 055d 2D060000 		.4byte	.LASF105
 1426 0561 05       		.byte	0x5
 1427 0562 9F       		.byte	0x9f
 1428 0563 4B010000 		.4byte	0x14b
 1429 0567 07       		.uleb128 0x7
 1430 0568 CF000000 		.4byte	0xcf
 1431 056c 77050000 		.4byte	0x577
 1432 0570 08       		.uleb128 0x8
 1433 0571 E4000000 		.4byte	0xe4
 1434 0575 0A       		.byte	0xa
 1435 0576 00       		.byte	0
 1436 0577 07       		.uleb128 0x7
 1437 0578 CF000000 		.4byte	0xcf
 1438 057c 87050000 		.4byte	0x587
 1439 0580 08       		.uleb128 0x8
 1440 0581 E4000000 		.4byte	0xe4
 1441 0585 2E       		.byte	0x2e
 1442 0586 00       		.byte	0
 1443 0587 07       		.uleb128 0x7
 1444 0588 CF000000 		.4byte	0xcf
 1445 058c 97050000 		.4byte	0x597
 1446 0590 08       		.uleb128 0x8
 1447 0591 E4000000 		.4byte	0xe4
 1448 0595 2D       		.byte	0x2d
 1449 0596 00       		.byte	0
 1450 0597 07       		.uleb128 0x7
 1451 0598 CA000000 		.4byte	0xca
 1452 059c A8050000 		.4byte	0x5a8
 1453 05a0 0B       		.uleb128 0xb
 1454 05a1 E4000000 		.4byte	0xe4
 1455 05a5 FF01     		.2byte	0x1ff
 1456 05a7 00       		.byte	0
 1457 05a8 07       		.uleb128 0x7
 1458 05a9 CF000000 		.4byte	0xcf
 1459 05ad B8050000 		.4byte	0x5b8
 1460 05b1 08       		.uleb128 0x8
 1461 05b2 E4000000 		.4byte	0xe4
 1462 05b6 62       		.byte	0x62
 1463 05b7 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 65


 1464 05b8 0C       		.uleb128 0xc
 1465 05b9 D00F     		.2byte	0xfd0
 1466 05bb 06       		.byte	0x6
 1467 05bc 21       		.byte	0x21
 1468 05bd 22090000 		.4byte	0x922
 1469 05c1 0A       		.uleb128 0xa
 1470 05c2 1A0B0000 		.4byte	.LASF106
 1471 05c6 06       		.byte	0x6
 1472 05c7 22       		.byte	0x22
 1473 05c8 CA000000 		.4byte	0xca
 1474 05cc 00       		.byte	0
 1475 05cd 0A       		.uleb128 0xa
 1476 05ce 300B0000 		.4byte	.LASF107
 1477 05d2 06       		.byte	0x6
 1478 05d3 23       		.byte	0x23
 1479 05d4 CF000000 		.4byte	0xcf
 1480 05d8 04       		.byte	0x4
 1481 05d9 0A       		.uleb128 0xa
 1482 05da D9060000 		.4byte	.LASF108
 1483 05de 06       		.byte	0x6
 1484 05df 24       		.byte	0x24
 1485 05e0 CA000000 		.4byte	0xca
 1486 05e4 08       		.byte	0x8
 1487 05e5 0A       		.uleb128 0xa
 1488 05e6 AD050000 		.4byte	.LASF109
 1489 05ea 06       		.byte	0x6
 1490 05eb 25       		.byte	0x25
 1491 05ec CF000000 		.4byte	0xcf
 1492 05f0 0C       		.byte	0xc
 1493 05f1 0A       		.uleb128 0xa
 1494 05f2 640A0000 		.4byte	.LASF110
 1495 05f6 06       		.byte	0x6
 1496 05f7 26       		.byte	0x26
 1497 05f8 27090000 		.4byte	0x927
 1498 05fc 10       		.byte	0x10
 1499 05fd 0A       		.uleb128 0xa
 1500 05fe 45040000 		.4byte	.LASF111
 1501 0602 06       		.byte	0x6
 1502 0603 27       		.byte	0x27
 1503 0604 CA000000 		.4byte	0xca
 1504 0608 20       		.byte	0x20
 1505 0609 0A       		.uleb128 0xa
 1506 060a E2090000 		.4byte	.LASF112
 1507 060e 06       		.byte	0x6
 1508 060f 28       		.byte	0x28
 1509 0610 CF000000 		.4byte	0xcf
 1510 0614 24       		.byte	0x24
 1511 0615 0A       		.uleb128 0xa
 1512 0616 59080000 		.4byte	.LASF113
 1513 061a 06       		.byte	0x6
 1514 061b 29       		.byte	0x29
 1515 061c 31090000 		.4byte	0x931
 1516 0620 28       		.byte	0x28
 1517 0621 0A       		.uleb128 0xa
 1518 0622 B4070000 		.4byte	.LASF114
 1519 0626 06       		.byte	0x6
 1520 0627 2A       		.byte	0x2a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 66


 1521 0628 CA000000 		.4byte	0xca
 1522 062c 40       		.byte	0x40
 1523 062d 0A       		.uleb128 0xa
 1524 062e 5C050000 		.4byte	.LASF115
 1525 0632 06       		.byte	0x6
 1526 0633 2B       		.byte	0x2b
 1527 0634 CA000000 		.4byte	0xca
 1528 0638 44       		.byte	0x44
 1529 0639 0A       		.uleb128 0xa
 1530 063a F6040000 		.4byte	.LASF116
 1531 063e 06       		.byte	0x6
 1532 063f 2C       		.byte	0x2c
 1533 0640 CA000000 		.4byte	0xca
 1534 0644 48       		.byte	0x48
 1535 0645 0A       		.uleb128 0xa
 1536 0646 E1050000 		.4byte	.LASF117
 1537 064a 06       		.byte	0x6
 1538 064b 2D       		.byte	0x2d
 1539 064c CF000000 		.4byte	0xcf
 1540 0650 4C       		.byte	0x4c
 1541 0651 0A       		.uleb128 0xa
 1542 0652 E7060000 		.4byte	.LASF118
 1543 0656 06       		.byte	0x6
 1544 0657 2E       		.byte	0x2e
 1545 0658 CA000000 		.4byte	0xca
 1546 065c 50       		.byte	0x50
 1547 065d 0A       		.uleb128 0xa
 1548 065e 59090000 		.4byte	.LASF119
 1549 0662 06       		.byte	0x6
 1550 0663 2F       		.byte	0x2f
 1551 0664 3B090000 		.4byte	0x93b
 1552 0668 54       		.byte	0x54
 1553 0669 0A       		.uleb128 0xa
 1554 066a C3080000 		.4byte	.LASF120
 1555 066e 06       		.byte	0x6
 1556 066f 30       		.byte	0x30
 1557 0670 CA000000 		.4byte	0xca
 1558 0674 60       		.byte	0x60
 1559 0675 0A       		.uleb128 0xa
 1560 0676 89000000 		.4byte	.LASF121
 1561 067a 06       		.byte	0x6
 1562 067b 31       		.byte	0x31
 1563 067c CF000000 		.4byte	0xcf
 1564 0680 64       		.byte	0x64
 1565 0681 0A       		.uleb128 0xa
 1566 0682 710B0000 		.4byte	.LASF122
 1567 0686 06       		.byte	0x6
 1568 0687 32       		.byte	0x32
 1569 0688 CA000000 		.4byte	0xca
 1570 068c 68       		.byte	0x68
 1571 068d 0A       		.uleb128 0xa
 1572 068e 1A090000 		.4byte	.LASF123
 1573 0692 06       		.byte	0x6
 1574 0693 33       		.byte	0x33
 1575 0694 CA000000 		.4byte	0xca
 1576 0698 6C       		.byte	0x6c
 1577 0699 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 67


 1578 069a D9050000 		.4byte	.LASF124
 1579 069e 06       		.byte	0x6
 1580 069f 34       		.byte	0x34
 1581 06a0 CA000000 		.4byte	0xca
 1582 06a4 70       		.byte	0x70
 1583 06a5 0A       		.uleb128 0xa
 1584 06a6 6D080000 		.4byte	.LASF125
 1585 06aa 06       		.byte	0x6
 1586 06ab 35       		.byte	0x35
 1587 06ac 45090000 		.4byte	0x945
 1588 06b0 74       		.byte	0x74
 1589 06b1 0D       		.uleb128 0xd
 1590 06b2 43010000 		.4byte	.LASF126
 1591 06b6 06       		.byte	0x6
 1592 06b7 36       		.byte	0x36
 1593 06b8 CA000000 		.4byte	0xca
 1594 06bc 0002     		.2byte	0x200
 1595 06be 0D       		.uleb128 0xd
 1596 06bf 55060000 		.4byte	.LASF127
 1597 06c3 06       		.byte	0x6
 1598 06c4 37       		.byte	0x37
 1599 06c5 CA000000 		.4byte	0xca
 1600 06c9 0402     		.2byte	0x204
 1601 06cb 0D       		.uleb128 0xd
 1602 06cc D8000000 		.4byte	.LASF128
 1603 06d0 06       		.byte	0x6
 1604 06d1 38       		.byte	0x38
 1605 06d2 CF000000 		.4byte	0xcf
 1606 06d6 0802     		.2byte	0x208
 1607 06d8 0D       		.uleb128 0xd
 1608 06d9 71090000 		.4byte	.LASF129
 1609 06dd 06       		.byte	0x6
 1610 06de 39       		.byte	0x39
 1611 06df 4F090000 		.4byte	0x94f
 1612 06e3 0C02     		.2byte	0x20c
 1613 06e5 0D       		.uleb128 0xd
 1614 06e6 08030000 		.4byte	.LASF130
 1615 06ea 06       		.byte	0x6
 1616 06eb 3A       		.byte	0x3a
 1617 06ec CA000000 		.4byte	0xca
 1618 06f0 4002     		.2byte	0x240
 1619 06f2 0D       		.uleb128 0xd
 1620 06f3 83080000 		.4byte	.LASF131
 1621 06f7 06       		.byte	0x6
 1622 06f8 3B       		.byte	0x3b
 1623 06f9 59090000 		.4byte	0x959
 1624 06fd 4402     		.2byte	0x244
 1625 06ff 0D       		.uleb128 0xd
 1626 0700 300C0000 		.4byte	.LASF132
 1627 0704 06       		.byte	0x6
 1628 0705 3C       		.byte	0x3c
 1629 0706 CA000000 		.4byte	0xca
 1630 070a 0003     		.2byte	0x300
 1631 070c 0D       		.uleb128 0xd
 1632 070d 5C0B0000 		.4byte	.LASF133
 1633 0711 06       		.byte	0x6
 1634 0712 3D       		.byte	0x3d
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 68


 1635 0713 CA000000 		.4byte	0xca
 1636 0717 0403     		.2byte	0x304
 1637 0719 0D       		.uleb128 0xd
 1638 071a 740A0000 		.4byte	.LASF134
 1639 071e 06       		.byte	0x6
 1640 071f 3E       		.byte	0x3e
 1641 0720 CF000000 		.4byte	0xcf
 1642 0724 0803     		.2byte	0x308
 1643 0726 0D       		.uleb128 0xd
 1644 0727 8D080000 		.4byte	.LASF135
 1645 072b 06       		.byte	0x6
 1646 072c 3F       		.byte	0x3f
 1647 072d CF000000 		.4byte	0xcf
 1648 0731 0C03     		.2byte	0x30c
 1649 0733 0D       		.uleb128 0xd
 1650 0734 B0060000 		.4byte	.LASF136
 1651 0738 06       		.byte	0x6
 1652 0739 40       		.byte	0x40
 1653 073a CA000000 		.4byte	0xca
 1654 073e 1003     		.2byte	0x310
 1655 0740 0D       		.uleb128 0xd
 1656 0741 97080000 		.4byte	.LASF137
 1657 0745 06       		.byte	0x6
 1658 0746 41       		.byte	0x41
 1659 0747 63090000 		.4byte	0x963
 1660 074b 1403     		.2byte	0x314
 1661 074d 0D       		.uleb128 0xd
 1662 074e 9D0A0000 		.4byte	.LASF138
 1663 0752 06       		.byte	0x6
 1664 0753 42       		.byte	0x42
 1665 0754 CF000000 		.4byte	0xcf
 1666 0758 4003     		.2byte	0x340
 1667 075a 0D       		.uleb128 0xd
 1668 075b 36050000 		.4byte	.LASF139
 1669 075f 06       		.byte	0x6
 1670 0760 43       		.byte	0x43
 1671 0761 CF000000 		.4byte	0xcf
 1672 0765 4403     		.2byte	0x344
 1673 0767 0D       		.uleb128 0xd
 1674 0768 A1080000 		.4byte	.LASF140
 1675 076c 06       		.byte	0x6
 1676 076d 44       		.byte	0x44
 1677 076e 6D090000 		.4byte	0x96d
 1678 0772 4803     		.2byte	0x348
 1679 0774 0D       		.uleb128 0xd
 1680 0775 01060000 		.4byte	.LASF141
 1681 0779 06       		.byte	0x6
 1682 077a 45       		.byte	0x45
 1683 077b 72090000 		.4byte	0x972
 1684 077f 0004     		.2byte	0x400
 1685 0781 0D       		.uleb128 0xd
 1686 0782 AB080000 		.4byte	.LASF142
 1687 0786 06       		.byte	0x6
 1688 0787 46       		.byte	0x46
 1689 0788 7C090000 		.4byte	0x97c
 1690 078c 000C     		.2byte	0xc00
 1691 078e 0D       		.uleb128 0xd
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 69


 1692 078f CF020000 		.4byte	.LASF143
 1693 0793 06       		.byte	0x6
 1694 0794 47       		.byte	0x47
 1695 0795 CF000000 		.4byte	0xcf
 1696 0799 000E     		.2byte	0xe00
 1697 079b 0D       		.uleb128 0xd
 1698 079c 6E020000 		.4byte	.LASF144
 1699 07a0 06       		.byte	0x6
 1700 07a1 48       		.byte	0x48
 1701 07a2 86090000 		.4byte	0x986
 1702 07a6 040E     		.2byte	0xe04
 1703 07a8 0D       		.uleb128 0xd
 1704 07a9 DA020000 		.4byte	.LASF145
 1705 07ad 06       		.byte	0x6
 1706 07ae 49       		.byte	0x49
 1707 07af CA000000 		.4byte	0xca
 1708 07b3 800E     		.2byte	0xe80
 1709 07b5 0D       		.uleb128 0xd
 1710 07b6 79020000 		.4byte	.LASF146
 1711 07ba 06       		.byte	0x6
 1712 07bb 4A       		.byte	0x4a
 1713 07bc CF000000 		.4byte	0xcf
 1714 07c0 840E     		.2byte	0xe84
 1715 07c2 0D       		.uleb128 0xd
 1716 07c3 D20B0000 		.4byte	.LASF147
 1717 07c7 06       		.byte	0x6
 1718 07c8 4B       		.byte	0x4b
 1719 07c9 CA000000 		.4byte	0xca
 1720 07cd 880E     		.2byte	0xe88
 1721 07cf 0D       		.uleb128 0xd
 1722 07d0 0B070000 		.4byte	.LASF148
 1723 07d4 06       		.byte	0x6
 1724 07d5 4C       		.byte	0x4c
 1725 07d6 CF000000 		.4byte	0xcf
 1726 07da 8C0E     		.2byte	0xe8c
 1727 07dc 0D       		.uleb128 0xd
 1728 07dd 84020000 		.4byte	.LASF149
 1729 07e1 06       		.byte	0x6
 1730 07e2 4D       		.byte	0x4d
 1731 07e3 90090000 		.4byte	0x990
 1732 07e7 900E     		.2byte	0xe90
 1733 07e9 0D       		.uleb128 0xd
 1734 07ea 010B0000 		.4byte	.LASF150
 1735 07ee 06       		.byte	0x6
 1736 07ef 4E       		.byte	0x4e
 1737 07f0 CA000000 		.4byte	0xca
 1738 07f4 C00E     		.2byte	0xec0
 1739 07f6 0D       		.uleb128 0xd
 1740 07f7 8F020000 		.4byte	.LASF151
 1741 07fb 06       		.byte	0x6
 1742 07fc 4F       		.byte	0x4f
 1743 07fd CF000000 		.4byte	0xcf
 1744 0801 C40E     		.2byte	0xec4
 1745 0803 0D       		.uleb128 0xd
 1746 0804 A4090000 		.4byte	.LASF152
 1747 0808 06       		.byte	0x6
 1748 0809 50       		.byte	0x50
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 70


 1749 080a CA000000 		.4byte	0xca
 1750 080e C80E     		.2byte	0xec8
 1751 0810 0D       		.uleb128 0xd
 1752 0811 4A0C0000 		.4byte	.LASF153
 1753 0815 06       		.byte	0x6
 1754 0816 51       		.byte	0x51
 1755 0817 CF000000 		.4byte	0xcf
 1756 081b CC0E     		.2byte	0xecc
 1757 081d 0D       		.uleb128 0xd
 1758 081e 9A020000 		.4byte	.LASF154
 1759 0822 06       		.byte	0x6
 1760 0823 52       		.byte	0x52
 1761 0824 9A090000 		.4byte	0x99a
 1762 0828 D00E     		.2byte	0xed0
 1763 082a 0D       		.uleb128 0xd
 1764 082b BE070000 		.4byte	.LASF155
 1765 082f 06       		.byte	0x6
 1766 0830 53       		.byte	0x53
 1767 0831 CA000000 		.4byte	0xca
 1768 0835 000F     		.2byte	0xf00
 1769 0837 0D       		.uleb128 0xd
 1770 0838 BE090000 		.4byte	.LASF156
 1771 083c 06       		.byte	0x6
 1772 083d 54       		.byte	0x54
 1773 083e CA000000 		.4byte	0xca
 1774 0842 040F     		.2byte	0xf04
 1775 0844 0D       		.uleb128 0xd
 1776 0845 3A0A0000 		.4byte	.LASF157
 1777 0849 06       		.byte	0x6
 1778 084a 55       		.byte	0x55
 1779 084b CA000000 		.4byte	0xca
 1780 084f 080F     		.2byte	0xf08
 1781 0851 0D       		.uleb128 0xd
 1782 0852 CB060000 		.4byte	.LASF158
 1783 0856 06       		.byte	0x6
 1784 0857 56       		.byte	0x56
 1785 0858 CF000000 		.4byte	0xcf
 1786 085c 0C0F     		.2byte	0xf0c
 1787 085e 0D       		.uleb128 0xd
 1788 085f A5020000 		.4byte	.LASF159
 1789 0863 06       		.byte	0x6
 1790 0864 57       		.byte	0x57
 1791 0865 A4090000 		.4byte	0x9a4
 1792 0869 100F     		.2byte	0xf10
 1793 086b 0D       		.uleb128 0xd
 1794 086c E1070000 		.4byte	.LASF160
 1795 0870 06       		.byte	0x6
 1796 0871 58       		.byte	0x58
 1797 0872 CA000000 		.4byte	0xca
 1798 0876 400F     		.2byte	0xf40
 1799 0878 0D       		.uleb128 0xd
 1800 0879 22060000 		.4byte	.LASF161
 1801 087d 06       		.byte	0x6
 1802 087e 59       		.byte	0x59
 1803 087f CA000000 		.4byte	0xca
 1804 0883 440F     		.2byte	0xf44
 1805 0885 0D       		.uleb128 0xd
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 71


 1806 0886 E7000000 		.4byte	.LASF162
 1807 088a 06       		.byte	0x6
 1808 088b 5A       		.byte	0x5a
 1809 088c CA000000 		.4byte	0xca
 1810 0890 480F     		.2byte	0xf48
 1811 0892 0D       		.uleb128 0xd
 1812 0893 4B090000 		.4byte	.LASF163
 1813 0897 06       		.byte	0x6
 1814 0898 5B       		.byte	0x5b
 1815 0899 CF000000 		.4byte	0xcf
 1816 089d 4C0F     		.2byte	0xf4c
 1817 089f 0D       		.uleb128 0xd
 1818 08a0 B0020000 		.4byte	.LASF164
 1819 08a4 06       		.byte	0x6
 1820 08a5 5C       		.byte	0x5c
 1821 08a6 AE090000 		.4byte	0x9ae
 1822 08aa 500F     		.2byte	0xf50
 1823 08ac 0D       		.uleb128 0xd
 1824 08ad 90040000 		.4byte	.LASF165
 1825 08b1 06       		.byte	0x6
 1826 08b2 5D       		.byte	0x5d
 1827 08b3 CA000000 		.4byte	0xca
 1828 08b7 800F     		.2byte	0xf80
 1829 08b9 0D       		.uleb128 0xd
 1830 08ba 2E0A0000 		.4byte	.LASF166
 1831 08be 06       		.byte	0x6
 1832 08bf 5E       		.byte	0x5e
 1833 08c0 CA000000 		.4byte	0xca
 1834 08c4 840F     		.2byte	0xf84
 1835 08c6 0D       		.uleb128 0xd
 1836 08c7 830A0000 		.4byte	.LASF167
 1837 08cb 06       		.byte	0x6
 1838 08cc 5F       		.byte	0x5f
 1839 08cd CA000000 		.4byte	0xca
 1840 08d1 880F     		.2byte	0xf88
 1841 08d3 0D       		.uleb128 0xd
 1842 08d4 DA080000 		.4byte	.LASF168
 1843 08d8 06       		.byte	0x6
 1844 08d9 60       		.byte	0x60
 1845 08da CF000000 		.4byte	0xcf
 1846 08de 8C0F     		.2byte	0xf8c
 1847 08e0 0D       		.uleb128 0xd
 1848 08e1 BB020000 		.4byte	.LASF169
 1849 08e5 06       		.byte	0x6
 1850 08e6 61       		.byte	0x61
 1851 08e7 B8090000 		.4byte	0x9b8
 1852 08eb 900F     		.2byte	0xf90
 1853 08ed 0D       		.uleb128 0xd
 1854 08ee E6020000 		.4byte	.LASF170
 1855 08f2 06       		.byte	0x6
 1856 08f3 62       		.byte	0x62
 1857 08f4 CA000000 		.4byte	0xca
 1858 08f8 C00F     		.2byte	0xfc0
 1859 08fa 0D       		.uleb128 0xd
 1860 08fb E3040000 		.4byte	.LASF171
 1861 08ff 06       		.byte	0x6
 1862 0900 63       		.byte	0x63
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 72


 1863 0901 CA000000 		.4byte	0xca
 1864 0905 C40F     		.2byte	0xfc4
 1865 0907 0D       		.uleb128 0xd
 1866 0908 210A0000 		.4byte	.LASF172
 1867 090c 06       		.byte	0x6
 1868 090d 64       		.byte	0x64
 1869 090e CA000000 		.4byte	0xca
 1870 0912 C80F     		.2byte	0xfc8
 1871 0914 0D       		.uleb128 0xd
 1872 0915 03050000 		.4byte	.LASF173
 1873 0919 06       		.byte	0x6
 1874 091a 65       		.byte	0x65
 1875 091b CF000000 		.4byte	0xcf
 1876 091f CC0F     		.2byte	0xfcc
 1877 0921 00       		.byte	0
 1878 0922 05       		.uleb128 0x5
 1879 0923 EB000000 		.4byte	0xeb
 1880 0927 06       		.uleb128 0x6
 1881 0928 22090000 		.4byte	0x922
 1882 092c 05       		.uleb128 0x5
 1883 092d 2B010000 		.4byte	0x12b
 1884 0931 06       		.uleb128 0x6
 1885 0932 2C090000 		.4byte	0x92c
 1886 0936 05       		.uleb128 0x5
 1887 0937 D4000000 		.4byte	0xd4
 1888 093b 06       		.uleb128 0x6
 1889 093c 36090000 		.4byte	0x936
 1890 0940 05       		.uleb128 0x5
 1891 0941 A8050000 		.4byte	0x5a8
 1892 0945 06       		.uleb128 0x6
 1893 0946 40090000 		.4byte	0x940
 1894 094a 05       		.uleb128 0x5
 1895 094b FB000000 		.4byte	0xfb
 1896 094f 06       		.uleb128 0x6
 1897 0950 4A090000 		.4byte	0x94a
 1898 0954 05       		.uleb128 0x5
 1899 0955 77050000 		.4byte	0x577
 1900 0959 06       		.uleb128 0x6
 1901 095a 54090000 		.4byte	0x954
 1902 095e 05       		.uleb128 0x5
 1903 095f 67050000 		.4byte	0x567
 1904 0963 06       		.uleb128 0x6
 1905 0964 5E090000 		.4byte	0x95e
 1906 0968 05       		.uleb128 0x5
 1907 0969 87050000 		.4byte	0x587
 1908 096d 06       		.uleb128 0x6
 1909 096e 68090000 		.4byte	0x968
 1910 0972 05       		.uleb128 0x5
 1911 0973 97050000 		.4byte	0x597
 1912 0977 05       		.uleb128 0x5
 1913 0978 3B010000 		.4byte	0x13b
 1914 097c 06       		.uleb128 0x6
 1915 097d 77090000 		.4byte	0x977
 1916 0981 05       		.uleb128 0x5
 1917 0982 1B010000 		.4byte	0x11b
 1918 0986 06       		.uleb128 0x6
 1919 0987 81090000 		.4byte	0x981
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 73


 1920 098b 05       		.uleb128 0x5
 1921 098c 0B010000 		.4byte	0x10b
 1922 0990 06       		.uleb128 0x6
 1923 0991 8B090000 		.4byte	0x98b
 1924 0995 05       		.uleb128 0x5
 1925 0996 0B010000 		.4byte	0x10b
 1926 099a 06       		.uleb128 0x6
 1927 099b 95090000 		.4byte	0x995
 1928 099f 05       		.uleb128 0x5
 1929 09a0 0B010000 		.4byte	0x10b
 1930 09a4 06       		.uleb128 0x6
 1931 09a5 9F090000 		.4byte	0x99f
 1932 09a9 05       		.uleb128 0x5
 1933 09aa 0B010000 		.4byte	0x10b
 1934 09ae 06       		.uleb128 0x6
 1935 09af A9090000 		.4byte	0x9a9
 1936 09b3 05       		.uleb128 0x5
 1937 09b4 0B010000 		.4byte	0x10b
 1938 09b8 06       		.uleb128 0x6
 1939 09b9 B3090000 		.4byte	0x9b3
 1940 09bd 03       		.uleb128 0x3
 1941 09be CB050000 		.4byte	.LASF174
 1942 09c2 06       		.byte	0x6
 1943 09c3 66       		.byte	0x66
 1944 09c4 B8050000 		.4byte	0x5b8
 1945 09c8 0E       		.uleb128 0xe
 1946 09c9 5D070000 		.4byte	.LASF175
 1947 09cd 07       		.byte	0x7
 1948 09ce 4F06     		.2byte	0x64f
 1949 09d0 BD090000 		.4byte	0x9bd
 1950 09d4 0E       		.uleb128 0xe
 1951 09d5 EF040000 		.4byte	.LASF176
 1952 09d9 08       		.byte	0x8
 1953 09da F601     		.2byte	0x1f6
 1954 09dc E0090000 		.4byte	0x9e0
 1955 09e0 02       		.uleb128 0x2
 1956 09e1 01       		.byte	0x1
 1957 09e2 08       		.byte	0x8
 1958 09e3 F9090000 		.4byte	.LASF177
 1959 09e7 02       		.uleb128 0x2
 1960 09e8 04       		.byte	0x4
 1961 09e9 04       		.byte	0x4
 1962 09ea 42080000 		.4byte	.LASF178
 1963 09ee 02       		.uleb128 0x2
 1964 09ef 08       		.byte	0x8
 1965 09f0 04       		.byte	0x4
 1966 09f1 1E030000 		.4byte	.LASF179
 1967 09f5 0F       		.uleb128 0xf
 1968 09f6 04       		.byte	0x4
 1969 09f7 10       		.uleb128 0x10
 1970 09f8 8B090000 		.4byte	.LASF181
 1971 09fc 02       		.byte	0x2
 1972 09fd B806     		.2byte	0x6b8
 1973 09ff 150A0000 		.4byte	0xa15
 1974 0a03 03       		.byte	0x3
 1975 0a04 150A0000 		.4byte	0xa15
 1976 0a08 11       		.uleb128 0x11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 74


 1977 0a09 C6060000 		.4byte	.LASF183
 1978 0a0d 02       		.byte	0x2
 1979 0a0e B806     		.2byte	0x6b8
 1980 0a10 1C0A0000 		.4byte	0xa1c
 1981 0a14 00       		.byte	0
 1982 0a15 02       		.uleb128 0x2
 1983 0a16 01       		.byte	0x1
 1984 0a17 02       		.byte	0x2
 1985 0a18 BD080000 		.4byte	.LASF180
 1986 0a1c 12       		.uleb128 0x12
 1987 0a1d 04       		.byte	0x4
 1988 0a1e 220A0000 		.4byte	0xa22
 1989 0a22 06       		.uleb128 0x6
 1990 0a23 C8090000 		.4byte	0x9c8
 1991 0a27 10       		.uleb128 0x10
 1992 0a28 E50A0000 		.4byte	.LASF182
 1993 0a2c 02       		.byte	0x2
 1994 0a2d 7602     		.2byte	0x276
 1995 0a2f B8000000 		.4byte	0xb8
 1996 0a33 03       		.byte	0x3
 1997 0a34 450A0000 		.4byte	0xa45
 1998 0a38 11       		.uleb128 0x11
 1999 0a39 C6060000 		.4byte	.LASF183
 2000 0a3d 02       		.byte	0x2
 2001 0a3e 7602     		.2byte	0x276
 2002 0a40 1C0A0000 		.4byte	0xa1c
 2003 0a44 00       		.byte	0
 2004 0a45 10       		.uleb128 0x10
 2005 0a46 5D0C0000 		.4byte	.LASF184
 2006 0a4a 02       		.byte	0x2
 2007 0a4b 9F02     		.2byte	0x29f
 2008 0a4d B8000000 		.4byte	0xb8
 2009 0a51 03       		.byte	0x3
 2010 0a52 630A0000 		.4byte	0xa63
 2011 0a56 11       		.uleb128 0x11
 2012 0a57 C6060000 		.4byte	.LASF183
 2013 0a5b 02       		.byte	0x2
 2014 0a5c 9F02     		.2byte	0x29f
 2015 0a5e 1C0A0000 		.4byte	0xa1c
 2016 0a62 00       		.byte	0
 2017 0a63 10       		.uleb128 0x10
 2018 0a64 79070000 		.4byte	.LASF185
 2019 0a68 02       		.byte	0x2
 2020 0a69 0703     		.2byte	0x307
 2021 0a6b B8000000 		.4byte	0xb8
 2022 0a6f 03       		.byte	0x3
 2023 0a70 810A0000 		.4byte	0xa81
 2024 0a74 11       		.uleb128 0x11
 2025 0a75 C6060000 		.4byte	.LASF183
 2026 0a79 02       		.byte	0x2
 2027 0a7a 0703     		.2byte	0x307
 2028 0a7c 1C0A0000 		.4byte	0xa1c
 2029 0a80 00       		.byte	0
 2030 0a81 10       		.uleb128 0x10
 2031 0a82 23080000 		.4byte	.LASF186
 2032 0a86 02       		.byte	0x2
 2033 0a87 A406     		.2byte	0x6a4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 75


 2034 0a89 B8000000 		.4byte	0xb8
 2035 0a8d 03       		.byte	0x3
 2036 0a8e 9F0A0000 		.4byte	0xa9f
 2037 0a92 11       		.uleb128 0x11
 2038 0a93 C6060000 		.4byte	.LASF183
 2039 0a97 02       		.byte	0x2
 2040 0a98 A406     		.2byte	0x6a4
 2041 0a9a 1C0A0000 		.4byte	0xa1c
 2042 0a9e 00       		.byte	0
 2043 0a9f 13       		.uleb128 0x13
 2044 0aa0 07090000 		.4byte	.LASF210
 2045 0aa4 02       		.byte	0x2
 2046 0aa5 DD02     		.2byte	0x2dd
 2047 0aa7 03       		.byte	0x3
 2048 0aa8 C50A0000 		.4byte	0xac5
 2049 0aac 11       		.uleb128 0x11
 2050 0aad C6060000 		.4byte	.LASF183
 2051 0ab1 02       		.byte	0x2
 2052 0ab2 DD02     		.2byte	0x2dd
 2053 0ab4 C50A0000 		.4byte	0xac5
 2054 0ab8 11       		.uleb128 0x11
 2055 0ab9 94050000 		.4byte	.LASF187
 2056 0abd 02       		.byte	0x2
 2057 0abe DD02     		.2byte	0x2dd
 2058 0ac0 B8000000 		.4byte	0xb8
 2059 0ac4 00       		.byte	0
 2060 0ac5 12       		.uleb128 0x12
 2061 0ac6 04       		.byte	0x4
 2062 0ac7 C8090000 		.4byte	0x9c8
 2063 0acb 10       		.uleb128 0x10
 2064 0acc 39000000 		.4byte	.LASF188
 2065 0ad0 02       		.byte	0x2
 2066 0ad1 CB06     		.2byte	0x6cb
 2067 0ad3 150A0000 		.4byte	0xa15
 2068 0ad7 03       		.byte	0x3
 2069 0ad8 E90A0000 		.4byte	0xae9
 2070 0adc 11       		.uleb128 0x11
 2071 0add C6060000 		.4byte	.LASF183
 2072 0ae1 02       		.byte	0x2
 2073 0ae2 CB06     		.2byte	0x6cb
 2074 0ae4 1C0A0000 		.4byte	0xa1c
 2075 0ae8 00       		.byte	0
 2076 0ae9 14       		.uleb128 0x14
 2077 0aea 3D060000 		.4byte	.LASF192
 2078 0aee 01       		.byte	0x1
 2079 0aef 2B       		.byte	0x2b
 2080 0af0 00000000 		.4byte	.LFB131
 2081 0af4 3A000000 		.4byte	.LFE131-.LFB131
 2082 0af8 01       		.uleb128 0x1
 2083 0af9 9C       		.byte	0x9c
 2084 0afa AE0B0000 		.4byte	0xbae
 2085 0afe 15       		.uleb128 0x15
 2086 0aff C6060000 		.4byte	.LASF183
 2087 0b03 01       		.byte	0x1
 2088 0b04 2B       		.byte	0x2b
 2089 0b05 1C0A0000 		.4byte	0xa1c
 2090 0b09 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 76


 2091 0b0a 50       		.byte	0x50
 2092 0b0b 15       		.uleb128 0x15
 2093 0b0c 6D0A0000 		.4byte	.LASF189
 2094 0b10 01       		.byte	0x1
 2095 0b11 2B       		.byte	0x2b
 2096 0b12 F5090000 		.4byte	0x9f5
 2097 0b16 01       		.uleb128 0x1
 2098 0b17 51       		.byte	0x51
 2099 0b18 15       		.uleb128 0x15
 2100 0b19 99050000 		.4byte	.LASF190
 2101 0b1d 01       		.byte	0x1
 2102 0b1e 2B       		.byte	0x2b
 2103 0b1f B8000000 		.4byte	0xb8
 2104 0b23 01       		.uleb128 0x1
 2105 0b24 52       		.byte	0x52
 2106 0b25 16       		.uleb128 0x16
 2107 0b26 69647800 		.ascii	"idx\000"
 2108 0b2a 01       		.byte	0x1
 2109 0b2b 2D       		.byte	0x2d
 2110 0b2c B8000000 		.4byte	0xb8
 2111 0b30 00000000 		.4byte	.LLST0
 2112 0b34 17       		.uleb128 0x17
 2113 0b35 F7090000 		.4byte	0x9f7
 2114 0b39 02000000 		.4byte	.LBB46
 2115 0b3d 0A000000 		.4byte	.LBE46-.LBB46
 2116 0b41 01       		.byte	0x1
 2117 0b42 2F       		.byte	0x2f
 2118 0b43 510B0000 		.4byte	0xb51
 2119 0b47 18       		.uleb128 0x18
 2120 0b48 080A0000 		.4byte	0xa08
 2121 0b4c 1E000000 		.4byte	.LLST1
 2122 0b50 00       		.byte	0
 2123 0b51 19       		.uleb128 0x19
 2124 0b52 00000000 		.4byte	.Ldebug_ranges0+0
 2125 0b56 7F0B0000 		.4byte	0xb7f
 2126 0b5a 1A       		.uleb128 0x1a
 2127 0b5b 62756600 		.ascii	"buf\000"
 2128 0b5f 01       		.byte	0x1
 2129 0b60 31       		.byte	0x31
 2130 0b61 AE0B0000 		.4byte	0xbae
 2131 0b65 1B       		.uleb128 0x1b
 2132 0b66 270A0000 		.4byte	0xa27
 2133 0b6a 14000000 		.4byte	.LBB49
 2134 0b6e 06000000 		.4byte	.LBE49-.LBB49
 2135 0b72 01       		.byte	0x1
 2136 0b73 36       		.byte	0x36
 2137 0b74 18       		.uleb128 0x18
 2138 0b75 380A0000 		.4byte	0xa38
 2139 0b79 31000000 		.4byte	.LLST2
 2140 0b7d 00       		.byte	0
 2141 0b7e 00       		.byte	0
 2142 0b7f 1C       		.uleb128 0x1c
 2143 0b80 28000000 		.4byte	.LBB52
 2144 0b84 10000000 		.4byte	.LBE52-.LBB52
 2145 0b88 1A       		.uleb128 0x1a
 2146 0b89 62756600 		.ascii	"buf\000"
 2147 0b8d 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 77


 2148 0b8e 3B       		.byte	0x3b
 2149 0b8f B40B0000 		.4byte	0xbb4
 2150 0b93 1B       		.uleb128 0x1b
 2151 0b94 270A0000 		.4byte	0xa27
 2152 0b98 2A000000 		.4byte	.LBB53
 2153 0b9c 06000000 		.4byte	.LBE53-.LBB53
 2154 0ba0 01       		.byte	0x1
 2155 0ba1 40       		.byte	0x40
 2156 0ba2 18       		.uleb128 0x18
 2157 0ba3 380A0000 		.4byte	0xa38
 2158 0ba7 44000000 		.4byte	.LLST3
 2159 0bab 00       		.byte	0
 2160 0bac 00       		.byte	0
 2161 0bad 00       		.byte	0
 2162 0bae 12       		.uleb128 0x12
 2163 0baf 04       		.byte	0x4
 2164 0bb0 97000000 		.4byte	0x97
 2165 0bb4 12       		.uleb128 0x12
 2166 0bb5 04       		.byte	0x4
 2167 0bb6 AD000000 		.4byte	0xad
 2168 0bba 1D       		.uleb128 0x1d
 2169 0bbb F0050000 		.4byte	.LASF196
 2170 0bbf 01       		.byte	0x1
 2171 0bc0 5D       		.byte	0x5d
 2172 0bc1 B8000000 		.4byte	0xb8
 2173 0bc5 00000000 		.4byte	.LFB132
 2174 0bc9 1E000000 		.4byte	.LFE132-.LFB132
 2175 0bcd 01       		.uleb128 0x1
 2176 0bce 9C       		.byte	0x9c
 2177 0bcf 3D0C0000 		.4byte	0xc3d
 2178 0bd3 1E       		.uleb128 0x1e
 2179 0bd4 C6060000 		.4byte	.LASF183
 2180 0bd8 01       		.byte	0x1
 2181 0bd9 5D       		.byte	0x5d
 2182 0bda 1C0A0000 		.4byte	0xa1c
 2183 0bde 57000000 		.4byte	.LLST4
 2184 0be2 1E       		.uleb128 0x1e
 2185 0be3 6D0A0000 		.4byte	.LASF189
 2186 0be7 01       		.byte	0x1
 2187 0be8 5D       		.byte	0x5d
 2188 0be9 F5090000 		.4byte	0x9f5
 2189 0bed 78000000 		.4byte	.LLST5
 2190 0bf1 1E       		.uleb128 0x1e
 2191 0bf2 99050000 		.4byte	.LASF190
 2192 0bf6 01       		.byte	0x1
 2193 0bf7 5D       		.byte	0x5d
 2194 0bf8 B8000000 		.4byte	0xb8
 2195 0bfc 99000000 		.4byte	.LLST6
 2196 0c00 1F       		.uleb128 0x1f
 2197 0c01 FD000000 		.4byte	.LASF191
 2198 0c05 01       		.byte	0x1
 2199 0c06 60       		.byte	0x60
 2200 0c07 B8000000 		.4byte	0xb8
 2201 0c0b BA000000 		.4byte	.LLST7
 2202 0c0f 17       		.uleb128 0x17
 2203 0c10 450A0000 		.4byte	0xa45
 2204 0c14 04000000 		.4byte	.LBB55
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 78


 2205 0c18 0A000000 		.4byte	.LBE55-.LBB55
 2206 0c1c 01       		.byte	0x1
 2207 0c1d 60       		.byte	0x60
 2208 0c1e 2C0C0000 		.4byte	0xc2c
 2209 0c22 18       		.uleb128 0x18
 2210 0c23 560A0000 		.4byte	0xa56
 2211 0c27 D8000000 		.4byte	.LLST8
 2212 0c2b 00       		.byte	0
 2213 0c2c 20       		.uleb128 0x20
 2214 0c2d 1A000000 		.4byte	.LVL16
 2215 0c31 E90A0000 		.4byte	0xae9
 2216 0c35 21       		.uleb128 0x21
 2217 0c36 01       		.uleb128 0x1
 2218 0c37 52       		.byte	0x52
 2219 0c38 02       		.uleb128 0x2
 2220 0c39 74       		.byte	0x74
 2221 0c3a 00       		.sleb128 0
 2222 0c3b 00       		.byte	0
 2223 0c3c 00       		.byte	0
 2224 0c3d 14       		.uleb128 0x14
 2225 0c3e C9090000 		.4byte	.LASF193
 2226 0c42 01       		.byte	0x1
 2227 0c43 83       		.byte	0x83
 2228 0c44 00000000 		.4byte	.LFB133
 2229 0c48 32000000 		.4byte	.LFE133-.LFB133
 2230 0c4c 01       		.uleb128 0x1
 2231 0c4d 9C       		.byte	0x9c
 2232 0c4e E20C0000 		.4byte	0xce2
 2233 0c52 1E       		.uleb128 0x1e
 2234 0c53 C6060000 		.4byte	.LASF183
 2235 0c57 01       		.byte	0x1
 2236 0c58 83       		.byte	0x83
 2237 0c59 1C0A0000 		.4byte	0xa1c
 2238 0c5d EB000000 		.4byte	.LLST9
 2239 0c61 1E       		.uleb128 0x1e
 2240 0c62 6D0A0000 		.4byte	.LASF189
 2241 0c66 01       		.byte	0x1
 2242 0c67 83       		.byte	0x83
 2243 0c68 F5090000 		.4byte	0x9f5
 2244 0c6c 17010000 		.4byte	.LLST10
 2245 0c70 1E       		.uleb128 0x1e
 2246 0c71 99050000 		.4byte	.LASF190
 2247 0c75 01       		.byte	0x1
 2248 0c76 83       		.byte	0x83
 2249 0c77 B8000000 		.4byte	0xb8
 2250 0c7b 38010000 		.4byte	.LLST11
 2251 0c7f 1F       		.uleb128 0x1f
 2252 0c80 F70A0000 		.4byte	.LASF194
 2253 0c84 01       		.byte	0x1
 2254 0c85 85       		.byte	0x85
 2255 0c86 B8000000 		.4byte	0xb8
 2256 0c8a 56010000 		.4byte	.LLST12
 2257 0c8e 16       		.uleb128 0x16
 2258 0c8f 62756600 		.ascii	"buf\000"
 2259 0c93 01       		.byte	0x1
 2260 0c94 86       		.byte	0x86
 2261 0c95 AE0B0000 		.4byte	0xbae
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 79


 2262 0c99 69010000 		.4byte	.LLST13
 2263 0c9d 22       		.uleb128 0x22
 2264 0c9e 0A0A0000 		.4byte	.LASF195
 2265 0ca2 01       		.byte	0x1
 2266 0ca3 87       		.byte	0x87
 2267 0ca4 150A0000 		.4byte	0xa15
 2268 0ca8 17       		.uleb128 0x17
 2269 0ca9 F7090000 		.4byte	0x9f7
 2270 0cad 08000000 		.4byte	.LBB57
 2271 0cb1 0A000000 		.4byte	.LBE57-.LBB57
 2272 0cb5 01       		.byte	0x1
 2273 0cb6 87       		.byte	0x87
 2274 0cb7 C50C0000 		.4byte	0xcc5
 2275 0cbb 18       		.uleb128 0x18
 2276 0cbc 080A0000 		.4byte	0xa08
 2277 0cc0 87010000 		.4byte	.LLST14
 2278 0cc4 00       		.byte	0
 2279 0cc5 20       		.uleb128 0x20
 2280 0cc6 1E000000 		.4byte	.LVL22
 2281 0cca BA0B0000 		.4byte	0xbba
 2282 0cce 21       		.uleb128 0x21
 2283 0ccf 01       		.uleb128 0x1
 2284 0cd0 50       		.byte	0x50
 2285 0cd1 02       		.uleb128 0x2
 2286 0cd2 76       		.byte	0x76
 2287 0cd3 00       		.sleb128 0
 2288 0cd4 21       		.uleb128 0x21
 2289 0cd5 01       		.uleb128 0x1
 2290 0cd6 51       		.byte	0x51
 2291 0cd7 02       		.uleb128 0x2
 2292 0cd8 75       		.byte	0x75
 2293 0cd9 00       		.sleb128 0
 2294 0cda 21       		.uleb128 0x21
 2295 0cdb 01       		.uleb128 0x1
 2296 0cdc 52       		.byte	0x52
 2297 0cdd 02       		.uleb128 0x2
 2298 0cde 74       		.byte	0x74
 2299 0cdf 00       		.sleb128 0
 2300 0ce0 00       		.byte	0
 2301 0ce1 00       		.byte	0
 2302 0ce2 1D       		.uleb128 0x1d
 2303 0ce3 A80A0000 		.4byte	.LASF197
 2304 0ce7 01       		.byte	0x1
 2305 0ce8 A8       		.byte	0xa8
 2306 0ce9 B8000000 		.4byte	0xb8
 2307 0ced 00000000 		.4byte	.LFB134
 2308 0cf1 28000000 		.4byte	.LFE134-.LFB134
 2309 0cf5 01       		.uleb128 0x1
 2310 0cf6 9C       		.byte	0x9c
 2311 0cf7 830D0000 		.4byte	0xd83
 2312 0cfb 1E       		.uleb128 0x1e
 2313 0cfc C6060000 		.4byte	.LASF183
 2314 0d00 01       		.byte	0x1
 2315 0d01 A8       		.byte	0xa8
 2316 0d02 C50A0000 		.4byte	0xac5
 2317 0d06 9A010000 		.4byte	.LLST15
 2318 0d0a 15       		.uleb128 0x15
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 80


 2319 0d0b 94050000 		.4byte	.LASF187
 2320 0d0f 01       		.byte	0x1
 2321 0d10 A8       		.byte	0xa8
 2322 0d11 B8000000 		.4byte	0xb8
 2323 0d15 01       		.uleb128 0x1
 2324 0d16 51       		.byte	0x51
 2325 0d17 1F       		.uleb128 0x1f
 2326 0d18 F70A0000 		.4byte	.LASF194
 2327 0d1c 01       		.byte	0x1
 2328 0d1d AA       		.byte	0xaa
 2329 0d1e B8000000 		.4byte	0xb8
 2330 0d22 D4010000 		.4byte	.LLST16
 2331 0d26 17       		.uleb128 0x17
 2332 0d27 810A0000 		.4byte	0xa81
 2333 0d2b 00000000 		.4byte	.LBB59
 2334 0d2f 0C000000 		.4byte	.LBE59-.LBB59
 2335 0d33 01       		.byte	0x1
 2336 0d34 AC       		.byte	0xac
 2337 0d35 430D0000 		.4byte	0xd43
 2338 0d39 18       		.uleb128 0x18
 2339 0d3a 920A0000 		.4byte	0xa92
 2340 0d3e 0B020000 		.4byte	.LLST17
 2341 0d42 00       		.byte	0
 2342 0d43 17       		.uleb128 0x17
 2343 0d44 630A0000 		.4byte	0xa63
 2344 0d48 0C000000 		.4byte	.LBB61
 2345 0d4c 0A000000 		.4byte	.LBE61-.LBB61
 2346 0d50 01       		.byte	0x1
 2347 0d51 AC       		.byte	0xac
 2348 0d52 600D0000 		.4byte	0xd60
 2349 0d56 18       		.uleb128 0x18
 2350 0d57 740A0000 		.4byte	0xa74
 2351 0d5b 1E020000 		.4byte	.LLST18
 2352 0d5f 00       		.byte	0
 2353 0d60 1B       		.uleb128 0x1b
 2354 0d61 9F0A0000 		.4byte	0xa9f
 2355 0d65 1A000000 		.4byte	.LBB63
 2356 0d69 06000000 		.4byte	.LBE63-.LBB63
 2357 0d6d 01       		.byte	0x1
 2358 0d6e AE       		.byte	0xae
 2359 0d6f 18       		.uleb128 0x18
 2360 0d70 B80A0000 		.4byte	0xab8
 2361 0d74 31020000 		.4byte	.LLST19
 2362 0d78 18       		.uleb128 0x18
 2363 0d79 AC0A0000 		.4byte	0xaac
 2364 0d7d 44020000 		.4byte	.LLST20
 2365 0d81 00       		.byte	0
 2366 0d82 00       		.byte	0
 2367 0d83 14       		.uleb128 0x14
 2368 0d84 65030000 		.4byte	.LASF198
 2369 0d88 01       		.byte	0x1
 2370 0d89 CF       		.byte	0xcf
 2371 0d8a 00000000 		.4byte	.LFB135
 2372 0d8e 3A000000 		.4byte	.LFE135-.LFB135
 2373 0d92 01       		.uleb128 0x1
 2374 0d93 9C       		.byte	0x9c
 2375 0d94 5A0E0000 		.4byte	0xe5a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 81


 2376 0d98 15       		.uleb128 0x15
 2377 0d99 C6060000 		.4byte	.LASF183
 2378 0d9d 01       		.byte	0x1
 2379 0d9e CF       		.byte	0xcf
 2380 0d9f C50A0000 		.4byte	0xac5
 2381 0da3 01       		.uleb128 0x1
 2382 0da4 50       		.byte	0x50
 2383 0da5 15       		.uleb128 0x15
 2384 0da6 6D0A0000 		.4byte	.LASF189
 2385 0daa 01       		.byte	0x1
 2386 0dab CF       		.byte	0xcf
 2387 0dac F5090000 		.4byte	0x9f5
 2388 0db0 01       		.uleb128 0x1
 2389 0db1 51       		.byte	0x51
 2390 0db2 15       		.uleb128 0x15
 2391 0db3 99050000 		.4byte	.LASF190
 2392 0db7 01       		.byte	0x1
 2393 0db8 CF       		.byte	0xcf
 2394 0db9 B8000000 		.4byte	0xb8
 2395 0dbd 01       		.uleb128 0x1
 2396 0dbe 52       		.byte	0x52
 2397 0dbf 16       		.uleb128 0x16
 2398 0dc0 69647800 		.ascii	"idx\000"
 2399 0dc4 01       		.byte	0x1
 2400 0dc5 D1       		.byte	0xd1
 2401 0dc6 B8000000 		.4byte	0xb8
 2402 0dca 57020000 		.4byte	.LLST21
 2403 0dce 17       		.uleb128 0x17
 2404 0dcf CB0A0000 		.4byte	0xacb
 2405 0dd3 02000000 		.4byte	.LBB65
 2406 0dd7 0A000000 		.4byte	.LBE65-.LBB65
 2407 0ddb 01       		.byte	0x1
 2408 0ddc D3       		.byte	0xd3
 2409 0ddd EB0D0000 		.4byte	0xdeb
 2410 0de1 18       		.uleb128 0x18
 2411 0de2 DC0A0000 		.4byte	0xadc
 2412 0de6 75020000 		.4byte	.LLST22
 2413 0dea 00       		.byte	0
 2414 0deb 19       		.uleb128 0x19
 2415 0dec 18000000 		.4byte	.Ldebug_ranges0+0x18
 2416 0df0 220E0000 		.4byte	0xe22
 2417 0df4 1A       		.uleb128 0x1a
 2418 0df5 62756600 		.ascii	"buf\000"
 2419 0df9 01       		.byte	0x1
 2420 0dfa D5       		.byte	0xd5
 2421 0dfb AE0B0000 		.4byte	0xbae
 2422 0dff 1B       		.uleb128 0x1b
 2423 0e00 9F0A0000 		.4byte	0xa9f
 2424 0e04 16000000 		.4byte	.LBB68
 2425 0e08 06000000 		.4byte	.LBE68-.LBB68
 2426 0e0c 01       		.byte	0x1
 2427 0e0d DA       		.byte	0xda
 2428 0e0e 18       		.uleb128 0x18
 2429 0e0f B80A0000 		.4byte	0xab8
 2430 0e13 88020000 		.4byte	.LLST23
 2431 0e17 18       		.uleb128 0x18
 2432 0e18 AC0A0000 		.4byte	0xaac
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 82


 2433 0e1c 9B020000 		.4byte	.LLST24
 2434 0e20 00       		.byte	0
 2435 0e21 00       		.byte	0
 2436 0e22 1C       		.uleb128 0x1c
 2437 0e23 28000000 		.4byte	.LBB71
 2438 0e27 10000000 		.4byte	.LBE71-.LBB71
 2439 0e2b 1A       		.uleb128 0x1a
 2440 0e2c 62756600 		.ascii	"buf\000"
 2441 0e30 01       		.byte	0x1
 2442 0e31 DF       		.byte	0xdf
 2443 0e32 B40B0000 		.4byte	0xbb4
 2444 0e36 1B       		.uleb128 0x1b
 2445 0e37 9F0A0000 		.4byte	0xa9f
 2446 0e3b 2C000000 		.4byte	.LBB72
 2447 0e3f 06000000 		.4byte	.LBE72-.LBB72
 2448 0e43 01       		.byte	0x1
 2449 0e44 E4       		.byte	0xe4
 2450 0e45 18       		.uleb128 0x18
 2451 0e46 B80A0000 		.4byte	0xab8
 2452 0e4a AE020000 		.4byte	.LLST25
 2453 0e4e 18       		.uleb128 0x18
 2454 0e4f AC0A0000 		.4byte	0xaac
 2455 0e53 C1020000 		.4byte	.LLST26
 2456 0e57 00       		.byte	0
 2457 0e58 00       		.byte	0
 2458 0e59 00       		.byte	0
 2459 0e5a 23       		.uleb128 0x23
 2460 0e5b 24050000 		.4byte	.LASF199
 2461 0e5f 01       		.byte	0x1
 2462 0e60 0101     		.2byte	0x101
 2463 0e62 B8000000 		.4byte	0xb8
 2464 0e66 00000000 		.4byte	.LFB136
 2465 0e6a 2C000000 		.4byte	.LFE136-.LFB136
 2466 0e6e 01       		.uleb128 0x1
 2467 0e6f 9C       		.byte	0x9c
 2468 0e70 010F0000 		.4byte	0xf01
 2469 0e74 24       		.uleb128 0x24
 2470 0e75 C6060000 		.4byte	.LASF183
 2471 0e79 01       		.byte	0x1
 2472 0e7a 0101     		.2byte	0x101
 2473 0e7c C50A0000 		.4byte	0xac5
 2474 0e80 D4020000 		.4byte	.LLST27
 2475 0e84 24       		.uleb128 0x24
 2476 0e85 6D0A0000 		.4byte	.LASF189
 2477 0e89 01       		.byte	0x1
 2478 0e8a 0101     		.2byte	0x101
 2479 0e8c F5090000 		.4byte	0x9f5
 2480 0e90 F5020000 		.4byte	.LLST28
 2481 0e94 24       		.uleb128 0x24
 2482 0e95 99050000 		.4byte	.LASF190
 2483 0e99 01       		.byte	0x1
 2484 0e9a 0101     		.2byte	0x101
 2485 0e9c B8000000 		.4byte	0xb8
 2486 0ea0 16030000 		.4byte	.LLST29
 2487 0ea4 25       		.uleb128 0x25
 2488 0ea5 FD000000 		.4byte	.LASF191
 2489 0ea9 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 83


 2490 0eaa 0401     		.2byte	0x104
 2491 0eac B8000000 		.4byte	0xb8
 2492 0eb0 58030000 		.4byte	.LLST30
 2493 0eb4 26       		.uleb128 0x26
 2494 0eb5 810A0000 		.4byte	0xa81
 2495 0eb9 04000000 		.4byte	.LBB74
 2496 0ebd 0C000000 		.4byte	.LBE74-.LBB74
 2497 0ec1 01       		.byte	0x1
 2498 0ec2 0401     		.2byte	0x104
 2499 0ec4 D20E0000 		.4byte	0xed2
 2500 0ec8 18       		.uleb128 0x18
 2501 0ec9 920A0000 		.4byte	0xa92
 2502 0ecd 81030000 		.4byte	.LLST31
 2503 0ed1 00       		.byte	0
 2504 0ed2 26       		.uleb128 0x26
 2505 0ed3 630A0000 		.4byte	0xa63
 2506 0ed7 10000000 		.4byte	.LBB76
 2507 0edb 0A000000 		.4byte	.LBE76-.LBB76
 2508 0edf 01       		.byte	0x1
 2509 0ee0 0401     		.2byte	0x104
 2510 0ee2 F00E0000 		.4byte	0xef0
 2511 0ee6 18       		.uleb128 0x18
 2512 0ee7 740A0000 		.4byte	0xa74
 2513 0eeb 94030000 		.4byte	.LLST32
 2514 0eef 00       		.byte	0
 2515 0ef0 20       		.uleb128 0x20
 2516 0ef1 28000000 		.4byte	.LVL56
 2517 0ef5 830D0000 		.4byte	0xd83
 2518 0ef9 21       		.uleb128 0x21
 2519 0efa 01       		.uleb128 0x1
 2520 0efb 52       		.byte	0x52
 2521 0efc 02       		.uleb128 0x2
 2522 0efd 74       		.byte	0x74
 2523 0efe 00       		.sleb128 0
 2524 0eff 00       		.byte	0
 2525 0f00 00       		.byte	0
 2526 0f01 27       		.uleb128 0x27
 2527 0f02 7B0B0000 		.4byte	.LASF200
 2528 0f06 01       		.byte	0x1
 2529 0f07 2601     		.2byte	0x126
 2530 0f09 00000000 		.4byte	.LFB137
 2531 0f0d 32000000 		.4byte	.LFE137-.LFB137
 2532 0f11 01       		.uleb128 0x1
 2533 0f12 9C       		.byte	0x9c
 2534 0f13 AE0F0000 		.4byte	0xfae
 2535 0f17 24       		.uleb128 0x24
 2536 0f18 C6060000 		.4byte	.LASF183
 2537 0f1c 01       		.byte	0x1
 2538 0f1d 2601     		.2byte	0x126
 2539 0f1f C50A0000 		.4byte	0xac5
 2540 0f23 A7030000 		.4byte	.LLST33
 2541 0f27 24       		.uleb128 0x24
 2542 0f28 6D0A0000 		.4byte	.LASF189
 2543 0f2c 01       		.byte	0x1
 2544 0f2d 2601     		.2byte	0x126
 2545 0f2f F5090000 		.4byte	0x9f5
 2546 0f33 D3030000 		.4byte	.LLST34
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 84


 2547 0f37 24       		.uleb128 0x24
 2548 0f38 99050000 		.4byte	.LASF190
 2549 0f3c 01       		.byte	0x1
 2550 0f3d 2601     		.2byte	0x126
 2551 0f3f B8000000 		.4byte	0xb8
 2552 0f43 F4030000 		.4byte	.LLST35
 2553 0f47 25       		.uleb128 0x25
 2554 0f48 F70A0000 		.4byte	.LASF194
 2555 0f4c 01       		.byte	0x1
 2556 0f4d 2801     		.2byte	0x128
 2557 0f4f B8000000 		.4byte	0xb8
 2558 0f53 12040000 		.4byte	.LLST36
 2559 0f57 28       		.uleb128 0x28
 2560 0f58 62756600 		.ascii	"buf\000"
 2561 0f5c 01       		.byte	0x1
 2562 0f5d 2901     		.2byte	0x129
 2563 0f5f AE0B0000 		.4byte	0xbae
 2564 0f63 25040000 		.4byte	.LLST37
 2565 0f67 29       		.uleb128 0x29
 2566 0f68 0A0A0000 		.4byte	.LASF195
 2567 0f6c 01       		.byte	0x1
 2568 0f6d 2A01     		.2byte	0x12a
 2569 0f6f 150A0000 		.4byte	0xa15
 2570 0f73 26       		.uleb128 0x26
 2571 0f74 CB0A0000 		.4byte	0xacb
 2572 0f78 08000000 		.4byte	.LBB78
 2573 0f7c 0A000000 		.4byte	.LBE78-.LBB78
 2574 0f80 01       		.byte	0x1
 2575 0f81 2A01     		.2byte	0x12a
 2576 0f83 910F0000 		.4byte	0xf91
 2577 0f87 18       		.uleb128 0x18
 2578 0f88 DC0A0000 		.4byte	0xadc
 2579 0f8c 43040000 		.4byte	.LLST38
 2580 0f90 00       		.byte	0
 2581 0f91 20       		.uleb128 0x20
 2582 0f92 1E000000 		.4byte	.LVL62
 2583 0f96 5A0E0000 		.4byte	0xe5a
 2584 0f9a 21       		.uleb128 0x21
 2585 0f9b 01       		.uleb128 0x1
 2586 0f9c 50       		.byte	0x50
 2587 0f9d 02       		.uleb128 0x2
 2588 0f9e 76       		.byte	0x76
 2589 0f9f 00       		.sleb128 0
 2590 0fa0 21       		.uleb128 0x21
 2591 0fa1 01       		.uleb128 0x1
 2592 0fa2 51       		.byte	0x51
 2593 0fa3 02       		.uleb128 0x2
 2594 0fa4 75       		.byte	0x75
 2595 0fa5 00       		.sleb128 0
 2596 0fa6 21       		.uleb128 0x21
 2597 0fa7 01       		.uleb128 0x1
 2598 0fa8 52       		.byte	0x52
 2599 0fa9 02       		.uleb128 0x2
 2600 0faa 74       		.byte	0x74
 2601 0fab 00       		.sleb128 0
 2602 0fac 00       		.byte	0
 2603 0fad 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 85


 2604 0fae 27       		.uleb128 0x27
 2605 0faf BF0B0000 		.4byte	.LASF201
 2606 0fb3 01       		.byte	0x1
 2607 0fb4 4501     		.2byte	0x145
 2608 0fb6 00000000 		.4byte	.LFB138
 2609 0fba 30000000 		.4byte	.LFE138-.LFB138
 2610 0fbe 01       		.uleb128 0x1
 2611 0fbf 9C       		.byte	0x9c
 2612 0fc0 5C100000 		.4byte	0x105c
 2613 0fc4 2A       		.uleb128 0x2a
 2614 0fc5 C6060000 		.4byte	.LASF183
 2615 0fc9 01       		.byte	0x1
 2616 0fca 4501     		.2byte	0x145
 2617 0fcc C50A0000 		.4byte	0xac5
 2618 0fd0 01       		.uleb128 0x1
 2619 0fd1 50       		.byte	0x50
 2620 0fd2 2A       		.uleb128 0x2a
 2621 0fd3 16010000 		.4byte	.LASF202
 2622 0fd7 01       		.byte	0x1
 2623 0fd8 4501     		.2byte	0x145
 2624 0fda 5C100000 		.4byte	0x105c
 2625 0fde 01       		.uleb128 0x1
 2626 0fdf 51       		.byte	0x51
 2627 0fe0 28       		.uleb128 0x28
 2628 0fe1 69647800 		.ascii	"idx\000"
 2629 0fe5 01       		.byte	0x1
 2630 0fe6 4701     		.2byte	0x147
 2631 0fe8 B8000000 		.4byte	0xb8
 2632 0fec 56040000 		.4byte	.LLST39
 2633 0ff0 29       		.uleb128 0x29
 2634 0ff1 42090000 		.4byte	.LASF203
 2635 0ff5 01       		.byte	0x1
 2636 0ff6 4801     		.2byte	0x148
 2637 0ff8 B8000000 		.4byte	0xb8
 2638 0ffc 26       		.uleb128 0x26
 2639 0ffd 810A0000 		.4byte	0xa81
 2640 1001 02000000 		.4byte	.LBB80
 2641 1005 0C000000 		.4byte	.LBE80-.LBB80
 2642 1009 01       		.byte	0x1
 2643 100a 4801     		.2byte	0x148
 2644 100c 1A100000 		.4byte	0x101a
 2645 1010 18       		.uleb128 0x18
 2646 1011 920A0000 		.4byte	0xa92
 2647 1015 75040000 		.4byte	.LLST40
 2648 1019 00       		.byte	0
 2649 101a 26       		.uleb128 0x26
 2650 101b 630A0000 		.4byte	0xa63
 2651 101f 12000000 		.4byte	.LBB82
 2652 1023 0A000000 		.4byte	.LBE82-.LBB82
 2653 1027 01       		.byte	0x1
 2654 1028 4E01     		.2byte	0x14e
 2655 102a 38100000 		.4byte	0x1038
 2656 102e 18       		.uleb128 0x18
 2657 102f 740A0000 		.4byte	0xa74
 2658 1033 88040000 		.4byte	.LLST41
 2659 1037 00       		.byte	0
 2660 1038 2B       		.uleb128 0x2b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 86


 2661 1039 9F0A0000 		.4byte	0xa9f
 2662 103d 20000000 		.4byte	.LBB84
 2663 1041 06000000 		.4byte	.LBE84-.LBB84
 2664 1045 01       		.byte	0x1
 2665 1046 5201     		.2byte	0x152
 2666 1048 18       		.uleb128 0x18
 2667 1049 B80A0000 		.4byte	0xab8
 2668 104d 9B040000 		.4byte	.LLST42
 2669 1051 18       		.uleb128 0x18
 2670 1052 AC0A0000 		.4byte	0xaac
 2671 1056 AE040000 		.4byte	.LLST43
 2672 105a 00       		.byte	0
 2673 105b 00       		.byte	0
 2674 105c 12       		.uleb128 0x12
 2675 105d 04       		.byte	0x4
 2676 105e 62100000 		.4byte	0x1062
 2677 1062 06       		.uleb128 0x6
 2678 1063 D4090000 		.4byte	0x9d4
 2679 1067 27       		.uleb128 0x27
 2680 1068 45030000 		.4byte	.LASF204
 2681 106c 01       		.byte	0x1
 2682 106d 6C01     		.2byte	0x16c
 2683 106f 00000000 		.4byte	.LFB139
 2684 1073 10000000 		.4byte	.LFE139-.LFB139
 2685 1077 01       		.uleb128 0x1
 2686 1078 9C       		.byte	0x9c
 2687 1079 CD100000 		.4byte	0x10cd
 2688 107d 2A       		.uleb128 0x2a
 2689 107e C6060000 		.4byte	.LASF183
 2690 1082 01       		.byte	0x1
 2691 1083 6C01     		.2byte	0x16c
 2692 1085 C50A0000 		.4byte	0xac5
 2693 1089 01       		.uleb128 0x1
 2694 108a 50       		.byte	0x50
 2695 108b 2A       		.uleb128 0x2a
 2696 108c E8070000 		.4byte	.LASF205
 2697 1090 01       		.byte	0x1
 2698 1091 6C01     		.2byte	0x16c
 2699 1093 B8000000 		.4byte	0xb8
 2700 1097 01       		.uleb128 0x1
 2701 1098 51       		.byte	0x51
 2702 1099 24       		.uleb128 0x24
 2703 109a 99050000 		.4byte	.LASF190
 2704 109e 01       		.byte	0x1
 2705 109f 6C01     		.2byte	0x16c
 2706 10a1 B8000000 		.4byte	0xb8
 2707 10a5 C1040000 		.4byte	.LLST44
 2708 10a9 2B       		.uleb128 0x2b
 2709 10aa 9F0A0000 		.4byte	0xa9f
 2710 10ae 02000000 		.4byte	.LBB86
 2711 10b2 06000000 		.4byte	.LBE86-.LBB86
 2712 10b6 01       		.byte	0x1
 2713 10b7 7001     		.2byte	0x170
 2714 10b9 18       		.uleb128 0x18
 2715 10ba B80A0000 		.4byte	0xab8
 2716 10be DF040000 		.4byte	.LLST45
 2717 10c2 18       		.uleb128 0x18
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 87


 2718 10c3 AC0A0000 		.4byte	0xaac
 2719 10c7 F2040000 		.4byte	.LLST46
 2720 10cb 00       		.byte	0
 2721 10cc 00       		.byte	0
 2722 10cd 23       		.uleb128 0x23
 2723 10ce 30070000 		.4byte	.LASF206
 2724 10d2 01       		.byte	0x1
 2725 10d3 8A01     		.2byte	0x18a
 2726 10d5 B8000000 		.4byte	0xb8
 2727 10d9 00000000 		.4byte	.LFB140
 2728 10dd 2C000000 		.4byte	.LFE140-.LFB140
 2729 10e1 01       		.uleb128 0x1
 2730 10e2 9C       		.byte	0x9c
 2731 10e3 74110000 		.4byte	0x1174
 2732 10e7 24       		.uleb128 0x24
 2733 10e8 C6060000 		.4byte	.LASF183
 2734 10ec 01       		.byte	0x1
 2735 10ed 8A01     		.2byte	0x18a
 2736 10ef C50A0000 		.4byte	0xac5
 2737 10f3 05050000 		.4byte	.LLST47
 2738 10f7 24       		.uleb128 0x24
 2739 10f8 E8070000 		.4byte	.LASF205
 2740 10fc 01       		.byte	0x1
 2741 10fd 8A01     		.2byte	0x18a
 2742 10ff B8000000 		.4byte	0xb8
 2743 1103 26050000 		.4byte	.LLST48
 2744 1107 24       		.uleb128 0x24
 2745 1108 99050000 		.4byte	.LASF190
 2746 110c 01       		.byte	0x1
 2747 110d 8A01     		.2byte	0x18a
 2748 110f B8000000 		.4byte	0xb8
 2749 1113 47050000 		.4byte	.LLST49
 2750 1117 25       		.uleb128 0x25
 2751 1118 FD000000 		.4byte	.LASF191
 2752 111c 01       		.byte	0x1
 2753 111d 8D01     		.2byte	0x18d
 2754 111f B8000000 		.4byte	0xb8
 2755 1123 89050000 		.4byte	.LLST50
 2756 1127 26       		.uleb128 0x26
 2757 1128 810A0000 		.4byte	0xa81
 2758 112c 04000000 		.4byte	.LBB88
 2759 1130 0C000000 		.4byte	.LBE88-.LBB88
 2760 1134 01       		.byte	0x1
 2761 1135 8D01     		.2byte	0x18d
 2762 1137 45110000 		.4byte	0x1145
 2763 113b 18       		.uleb128 0x18
 2764 113c 920A0000 		.4byte	0xa92
 2765 1140 B2050000 		.4byte	.LLST51
 2766 1144 00       		.byte	0
 2767 1145 26       		.uleb128 0x26
 2768 1146 630A0000 		.4byte	0xa63
 2769 114a 10000000 		.4byte	.LBB90
 2770 114e 0A000000 		.4byte	.LBE90-.LBB90
 2771 1152 01       		.byte	0x1
 2772 1153 8D01     		.2byte	0x18d
 2773 1155 63110000 		.4byte	0x1163
 2774 1159 18       		.uleb128 0x18
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 88


 2775 115a 740A0000 		.4byte	0xa74
 2776 115e C5050000 		.4byte	.LLST52
 2777 1162 00       		.byte	0
 2778 1163 20       		.uleb128 0x20
 2779 1164 28000000 		.4byte	.LVL89
 2780 1168 67100000 		.4byte	0x1067
 2781 116c 21       		.uleb128 0x21
 2782 116d 01       		.uleb128 0x1
 2783 116e 52       		.byte	0x52
 2784 116f 02       		.uleb128 0x2
 2785 1170 74       		.byte	0x74
 2786 1171 00       		.sleb128 0
 2787 1172 00       		.byte	0
 2788 1173 00       		.byte	0
 2789 1174 2C       		.uleb128 0x2c
 2790 1175 63080000 		.4byte	.LASF211
 2791 1179 05       		.byte	0x5
 2792 117a A7       		.byte	0xa7
 2793 117b 7F110000 		.4byte	0x117f
 2794 117f 12       		.uleb128 0x12
 2795 1180 04       		.byte	0x4
 2796 1181 85110000 		.4byte	0x1185
 2797 1185 06       		.uleb128 0x6
 2798 1186 5C050000 		.4byte	0x55c
 2799 118a 00       		.byte	0
 2800              		.section	.debug_abbrev,"",%progbits
 2801              	.Ldebug_abbrev0:
 2802 0000 01       		.uleb128 0x1
 2803 0001 11       		.uleb128 0x11
 2804 0002 01       		.byte	0x1
 2805 0003 25       		.uleb128 0x25
 2806 0004 0E       		.uleb128 0xe
 2807 0005 13       		.uleb128 0x13
 2808 0006 0B       		.uleb128 0xb
 2809 0007 03       		.uleb128 0x3
 2810 0008 0E       		.uleb128 0xe
 2811 0009 1B       		.uleb128 0x1b
 2812 000a 0E       		.uleb128 0xe
 2813 000b 55       		.uleb128 0x55
 2814 000c 17       		.uleb128 0x17
 2815 000d 11       		.uleb128 0x11
 2816 000e 01       		.uleb128 0x1
 2817 000f 10       		.uleb128 0x10
 2818 0010 17       		.uleb128 0x17
 2819 0011 00       		.byte	0
 2820 0012 00       		.byte	0
 2821 0013 02       		.uleb128 0x2
 2822 0014 24       		.uleb128 0x24
 2823 0015 00       		.byte	0
 2824 0016 0B       		.uleb128 0xb
 2825 0017 0B       		.uleb128 0xb
 2826 0018 3E       		.uleb128 0x3e
 2827 0019 0B       		.uleb128 0xb
 2828 001a 03       		.uleb128 0x3
 2829 001b 0E       		.uleb128 0xe
 2830 001c 00       		.byte	0
 2831 001d 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 89


 2832 001e 03       		.uleb128 0x3
 2833 001f 16       		.uleb128 0x16
 2834 0020 00       		.byte	0
 2835 0021 03       		.uleb128 0x3
 2836 0022 0E       		.uleb128 0xe
 2837 0023 3A       		.uleb128 0x3a
 2838 0024 0B       		.uleb128 0xb
 2839 0025 3B       		.uleb128 0x3b
 2840 0026 0B       		.uleb128 0xb
 2841 0027 49       		.uleb128 0x49
 2842 0028 13       		.uleb128 0x13
 2843 0029 00       		.byte	0
 2844 002a 00       		.byte	0
 2845 002b 04       		.uleb128 0x4
 2846 002c 24       		.uleb128 0x24
 2847 002d 00       		.byte	0
 2848 002e 0B       		.uleb128 0xb
 2849 002f 0B       		.uleb128 0xb
 2850 0030 3E       		.uleb128 0x3e
 2851 0031 0B       		.uleb128 0xb
 2852 0032 03       		.uleb128 0x3
 2853 0033 08       		.uleb128 0x8
 2854 0034 00       		.byte	0
 2855 0035 00       		.byte	0
 2856 0036 05       		.uleb128 0x5
 2857 0037 35       		.uleb128 0x35
 2858 0038 00       		.byte	0
 2859 0039 49       		.uleb128 0x49
 2860 003a 13       		.uleb128 0x13
 2861 003b 00       		.byte	0
 2862 003c 00       		.byte	0
 2863 003d 06       		.uleb128 0x6
 2864 003e 26       		.uleb128 0x26
 2865 003f 00       		.byte	0
 2866 0040 49       		.uleb128 0x49
 2867 0041 13       		.uleb128 0x13
 2868 0042 00       		.byte	0
 2869 0043 00       		.byte	0
 2870 0044 07       		.uleb128 0x7
 2871 0045 01       		.uleb128 0x1
 2872 0046 01       		.byte	0x1
 2873 0047 49       		.uleb128 0x49
 2874 0048 13       		.uleb128 0x13
 2875 0049 01       		.uleb128 0x1
 2876 004a 13       		.uleb128 0x13
 2877 004b 00       		.byte	0
 2878 004c 00       		.byte	0
 2879 004d 08       		.uleb128 0x8
 2880 004e 21       		.uleb128 0x21
 2881 004f 00       		.byte	0
 2882 0050 49       		.uleb128 0x49
 2883 0051 13       		.uleb128 0x13
 2884 0052 2F       		.uleb128 0x2f
 2885 0053 0B       		.uleb128 0xb
 2886 0054 00       		.byte	0
 2887 0055 00       		.byte	0
 2888 0056 09       		.uleb128 0x9
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 90


 2889 0057 13       		.uleb128 0x13
 2890 0058 01       		.byte	0x1
 2891 0059 0B       		.uleb128 0xb
 2892 005a 0B       		.uleb128 0xb
 2893 005b 3A       		.uleb128 0x3a
 2894 005c 0B       		.uleb128 0xb
 2895 005d 3B       		.uleb128 0x3b
 2896 005e 0B       		.uleb128 0xb
 2897 005f 01       		.uleb128 0x1
 2898 0060 13       		.uleb128 0x13
 2899 0061 00       		.byte	0
 2900 0062 00       		.byte	0
 2901 0063 0A       		.uleb128 0xa
 2902 0064 0D       		.uleb128 0xd
 2903 0065 00       		.byte	0
 2904 0066 03       		.uleb128 0x3
 2905 0067 0E       		.uleb128 0xe
 2906 0068 3A       		.uleb128 0x3a
 2907 0069 0B       		.uleb128 0xb
 2908 006a 3B       		.uleb128 0x3b
 2909 006b 0B       		.uleb128 0xb
 2910 006c 49       		.uleb128 0x49
 2911 006d 13       		.uleb128 0x13
 2912 006e 38       		.uleb128 0x38
 2913 006f 0B       		.uleb128 0xb
 2914 0070 00       		.byte	0
 2915 0071 00       		.byte	0
 2916 0072 0B       		.uleb128 0xb
 2917 0073 21       		.uleb128 0x21
 2918 0074 00       		.byte	0
 2919 0075 49       		.uleb128 0x49
 2920 0076 13       		.uleb128 0x13
 2921 0077 2F       		.uleb128 0x2f
 2922 0078 05       		.uleb128 0x5
 2923 0079 00       		.byte	0
 2924 007a 00       		.byte	0
 2925 007b 0C       		.uleb128 0xc
 2926 007c 13       		.uleb128 0x13
 2927 007d 01       		.byte	0x1
 2928 007e 0B       		.uleb128 0xb
 2929 007f 05       		.uleb128 0x5
 2930 0080 3A       		.uleb128 0x3a
 2931 0081 0B       		.uleb128 0xb
 2932 0082 3B       		.uleb128 0x3b
 2933 0083 0B       		.uleb128 0xb
 2934 0084 01       		.uleb128 0x1
 2935 0085 13       		.uleb128 0x13
 2936 0086 00       		.byte	0
 2937 0087 00       		.byte	0
 2938 0088 0D       		.uleb128 0xd
 2939 0089 0D       		.uleb128 0xd
 2940 008a 00       		.byte	0
 2941 008b 03       		.uleb128 0x3
 2942 008c 0E       		.uleb128 0xe
 2943 008d 3A       		.uleb128 0x3a
 2944 008e 0B       		.uleb128 0xb
 2945 008f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 91


 2946 0090 0B       		.uleb128 0xb
 2947 0091 49       		.uleb128 0x49
 2948 0092 13       		.uleb128 0x13
 2949 0093 38       		.uleb128 0x38
 2950 0094 05       		.uleb128 0x5
 2951 0095 00       		.byte	0
 2952 0096 00       		.byte	0
 2953 0097 0E       		.uleb128 0xe
 2954 0098 16       		.uleb128 0x16
 2955 0099 00       		.byte	0
 2956 009a 03       		.uleb128 0x3
 2957 009b 0E       		.uleb128 0xe
 2958 009c 3A       		.uleb128 0x3a
 2959 009d 0B       		.uleb128 0xb
 2960 009e 3B       		.uleb128 0x3b
 2961 009f 05       		.uleb128 0x5
 2962 00a0 49       		.uleb128 0x49
 2963 00a1 13       		.uleb128 0x13
 2964 00a2 00       		.byte	0
 2965 00a3 00       		.byte	0
 2966 00a4 0F       		.uleb128 0xf
 2967 00a5 0F       		.uleb128 0xf
 2968 00a6 00       		.byte	0
 2969 00a7 0B       		.uleb128 0xb
 2970 00a8 0B       		.uleb128 0xb
 2971 00a9 00       		.byte	0
 2972 00aa 00       		.byte	0
 2973 00ab 10       		.uleb128 0x10
 2974 00ac 2E       		.uleb128 0x2e
 2975 00ad 01       		.byte	0x1
 2976 00ae 03       		.uleb128 0x3
 2977 00af 0E       		.uleb128 0xe
 2978 00b0 3A       		.uleb128 0x3a
 2979 00b1 0B       		.uleb128 0xb
 2980 00b2 3B       		.uleb128 0x3b
 2981 00b3 05       		.uleb128 0x5
 2982 00b4 27       		.uleb128 0x27
 2983 00b5 19       		.uleb128 0x19
 2984 00b6 49       		.uleb128 0x49
 2985 00b7 13       		.uleb128 0x13
 2986 00b8 20       		.uleb128 0x20
 2987 00b9 0B       		.uleb128 0xb
 2988 00ba 01       		.uleb128 0x1
 2989 00bb 13       		.uleb128 0x13
 2990 00bc 00       		.byte	0
 2991 00bd 00       		.byte	0
 2992 00be 11       		.uleb128 0x11
 2993 00bf 05       		.uleb128 0x5
 2994 00c0 00       		.byte	0
 2995 00c1 03       		.uleb128 0x3
 2996 00c2 0E       		.uleb128 0xe
 2997 00c3 3A       		.uleb128 0x3a
 2998 00c4 0B       		.uleb128 0xb
 2999 00c5 3B       		.uleb128 0x3b
 3000 00c6 05       		.uleb128 0x5
 3001 00c7 49       		.uleb128 0x49
 3002 00c8 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 92


 3003 00c9 00       		.byte	0
 3004 00ca 00       		.byte	0
 3005 00cb 12       		.uleb128 0x12
 3006 00cc 0F       		.uleb128 0xf
 3007 00cd 00       		.byte	0
 3008 00ce 0B       		.uleb128 0xb
 3009 00cf 0B       		.uleb128 0xb
 3010 00d0 49       		.uleb128 0x49
 3011 00d1 13       		.uleb128 0x13
 3012 00d2 00       		.byte	0
 3013 00d3 00       		.byte	0
 3014 00d4 13       		.uleb128 0x13
 3015 00d5 2E       		.uleb128 0x2e
 3016 00d6 01       		.byte	0x1
 3017 00d7 03       		.uleb128 0x3
 3018 00d8 0E       		.uleb128 0xe
 3019 00d9 3A       		.uleb128 0x3a
 3020 00da 0B       		.uleb128 0xb
 3021 00db 3B       		.uleb128 0x3b
 3022 00dc 05       		.uleb128 0x5
 3023 00dd 27       		.uleb128 0x27
 3024 00de 19       		.uleb128 0x19
 3025 00df 20       		.uleb128 0x20
 3026 00e0 0B       		.uleb128 0xb
 3027 00e1 01       		.uleb128 0x1
 3028 00e2 13       		.uleb128 0x13
 3029 00e3 00       		.byte	0
 3030 00e4 00       		.byte	0
 3031 00e5 14       		.uleb128 0x14
 3032 00e6 2E       		.uleb128 0x2e
 3033 00e7 01       		.byte	0x1
 3034 00e8 3F       		.uleb128 0x3f
 3035 00e9 19       		.uleb128 0x19
 3036 00ea 03       		.uleb128 0x3
 3037 00eb 0E       		.uleb128 0xe
 3038 00ec 3A       		.uleb128 0x3a
 3039 00ed 0B       		.uleb128 0xb
 3040 00ee 3B       		.uleb128 0x3b
 3041 00ef 0B       		.uleb128 0xb
 3042 00f0 27       		.uleb128 0x27
 3043 00f1 19       		.uleb128 0x19
 3044 00f2 11       		.uleb128 0x11
 3045 00f3 01       		.uleb128 0x1
 3046 00f4 12       		.uleb128 0x12
 3047 00f5 06       		.uleb128 0x6
 3048 00f6 40       		.uleb128 0x40
 3049 00f7 18       		.uleb128 0x18
 3050 00f8 9742     		.uleb128 0x2117
 3051 00fa 19       		.uleb128 0x19
 3052 00fb 01       		.uleb128 0x1
 3053 00fc 13       		.uleb128 0x13
 3054 00fd 00       		.byte	0
 3055 00fe 00       		.byte	0
 3056 00ff 15       		.uleb128 0x15
 3057 0100 05       		.uleb128 0x5
 3058 0101 00       		.byte	0
 3059 0102 03       		.uleb128 0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 93


 3060 0103 0E       		.uleb128 0xe
 3061 0104 3A       		.uleb128 0x3a
 3062 0105 0B       		.uleb128 0xb
 3063 0106 3B       		.uleb128 0x3b
 3064 0107 0B       		.uleb128 0xb
 3065 0108 49       		.uleb128 0x49
 3066 0109 13       		.uleb128 0x13
 3067 010a 02       		.uleb128 0x2
 3068 010b 18       		.uleb128 0x18
 3069 010c 00       		.byte	0
 3070 010d 00       		.byte	0
 3071 010e 16       		.uleb128 0x16
 3072 010f 34       		.uleb128 0x34
 3073 0110 00       		.byte	0
 3074 0111 03       		.uleb128 0x3
 3075 0112 08       		.uleb128 0x8
 3076 0113 3A       		.uleb128 0x3a
 3077 0114 0B       		.uleb128 0xb
 3078 0115 3B       		.uleb128 0x3b
 3079 0116 0B       		.uleb128 0xb
 3080 0117 49       		.uleb128 0x49
 3081 0118 13       		.uleb128 0x13
 3082 0119 02       		.uleb128 0x2
 3083 011a 17       		.uleb128 0x17
 3084 011b 00       		.byte	0
 3085 011c 00       		.byte	0
 3086 011d 17       		.uleb128 0x17
 3087 011e 1D       		.uleb128 0x1d
 3088 011f 01       		.byte	0x1
 3089 0120 31       		.uleb128 0x31
 3090 0121 13       		.uleb128 0x13
 3091 0122 11       		.uleb128 0x11
 3092 0123 01       		.uleb128 0x1
 3093 0124 12       		.uleb128 0x12
 3094 0125 06       		.uleb128 0x6
 3095 0126 58       		.uleb128 0x58
 3096 0127 0B       		.uleb128 0xb
 3097 0128 59       		.uleb128 0x59
 3098 0129 0B       		.uleb128 0xb
 3099 012a 01       		.uleb128 0x1
 3100 012b 13       		.uleb128 0x13
 3101 012c 00       		.byte	0
 3102 012d 00       		.byte	0
 3103 012e 18       		.uleb128 0x18
 3104 012f 05       		.uleb128 0x5
 3105 0130 00       		.byte	0
 3106 0131 31       		.uleb128 0x31
 3107 0132 13       		.uleb128 0x13
 3108 0133 02       		.uleb128 0x2
 3109 0134 17       		.uleb128 0x17
 3110 0135 00       		.byte	0
 3111 0136 00       		.byte	0
 3112 0137 19       		.uleb128 0x19
 3113 0138 0B       		.uleb128 0xb
 3114 0139 01       		.byte	0x1
 3115 013a 55       		.uleb128 0x55
 3116 013b 17       		.uleb128 0x17
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 94


 3117 013c 01       		.uleb128 0x1
 3118 013d 13       		.uleb128 0x13
 3119 013e 00       		.byte	0
 3120 013f 00       		.byte	0
 3121 0140 1A       		.uleb128 0x1a
 3122 0141 34       		.uleb128 0x34
 3123 0142 00       		.byte	0
 3124 0143 03       		.uleb128 0x3
 3125 0144 08       		.uleb128 0x8
 3126 0145 3A       		.uleb128 0x3a
 3127 0146 0B       		.uleb128 0xb
 3128 0147 3B       		.uleb128 0x3b
 3129 0148 0B       		.uleb128 0xb
 3130 0149 49       		.uleb128 0x49
 3131 014a 13       		.uleb128 0x13
 3132 014b 00       		.byte	0
 3133 014c 00       		.byte	0
 3134 014d 1B       		.uleb128 0x1b
 3135 014e 1D       		.uleb128 0x1d
 3136 014f 01       		.byte	0x1
 3137 0150 31       		.uleb128 0x31
 3138 0151 13       		.uleb128 0x13
 3139 0152 11       		.uleb128 0x11
 3140 0153 01       		.uleb128 0x1
 3141 0154 12       		.uleb128 0x12
 3142 0155 06       		.uleb128 0x6
 3143 0156 58       		.uleb128 0x58
 3144 0157 0B       		.uleb128 0xb
 3145 0158 59       		.uleb128 0x59
 3146 0159 0B       		.uleb128 0xb
 3147 015a 00       		.byte	0
 3148 015b 00       		.byte	0
 3149 015c 1C       		.uleb128 0x1c
 3150 015d 0B       		.uleb128 0xb
 3151 015e 01       		.byte	0x1
 3152 015f 11       		.uleb128 0x11
 3153 0160 01       		.uleb128 0x1
 3154 0161 12       		.uleb128 0x12
 3155 0162 06       		.uleb128 0x6
 3156 0163 00       		.byte	0
 3157 0164 00       		.byte	0
 3158 0165 1D       		.uleb128 0x1d
 3159 0166 2E       		.uleb128 0x2e
 3160 0167 01       		.byte	0x1
 3161 0168 3F       		.uleb128 0x3f
 3162 0169 19       		.uleb128 0x19
 3163 016a 03       		.uleb128 0x3
 3164 016b 0E       		.uleb128 0xe
 3165 016c 3A       		.uleb128 0x3a
 3166 016d 0B       		.uleb128 0xb
 3167 016e 3B       		.uleb128 0x3b
 3168 016f 0B       		.uleb128 0xb
 3169 0170 27       		.uleb128 0x27
 3170 0171 19       		.uleb128 0x19
 3171 0172 49       		.uleb128 0x49
 3172 0173 13       		.uleb128 0x13
 3173 0174 11       		.uleb128 0x11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 95


 3174 0175 01       		.uleb128 0x1
 3175 0176 12       		.uleb128 0x12
 3176 0177 06       		.uleb128 0x6
 3177 0178 40       		.uleb128 0x40
 3178 0179 18       		.uleb128 0x18
 3179 017a 9742     		.uleb128 0x2117
 3180 017c 19       		.uleb128 0x19
 3181 017d 01       		.uleb128 0x1
 3182 017e 13       		.uleb128 0x13
 3183 017f 00       		.byte	0
 3184 0180 00       		.byte	0
 3185 0181 1E       		.uleb128 0x1e
 3186 0182 05       		.uleb128 0x5
 3187 0183 00       		.byte	0
 3188 0184 03       		.uleb128 0x3
 3189 0185 0E       		.uleb128 0xe
 3190 0186 3A       		.uleb128 0x3a
 3191 0187 0B       		.uleb128 0xb
 3192 0188 3B       		.uleb128 0x3b
 3193 0189 0B       		.uleb128 0xb
 3194 018a 49       		.uleb128 0x49
 3195 018b 13       		.uleb128 0x13
 3196 018c 02       		.uleb128 0x2
 3197 018d 17       		.uleb128 0x17
 3198 018e 00       		.byte	0
 3199 018f 00       		.byte	0
 3200 0190 1F       		.uleb128 0x1f
 3201 0191 34       		.uleb128 0x34
 3202 0192 00       		.byte	0
 3203 0193 03       		.uleb128 0x3
 3204 0194 0E       		.uleb128 0xe
 3205 0195 3A       		.uleb128 0x3a
 3206 0196 0B       		.uleb128 0xb
 3207 0197 3B       		.uleb128 0x3b
 3208 0198 0B       		.uleb128 0xb
 3209 0199 49       		.uleb128 0x49
 3210 019a 13       		.uleb128 0x13
 3211 019b 02       		.uleb128 0x2
 3212 019c 17       		.uleb128 0x17
 3213 019d 00       		.byte	0
 3214 019e 00       		.byte	0
 3215 019f 20       		.uleb128 0x20
 3216 01a0 898201   		.uleb128 0x4109
 3217 01a3 01       		.byte	0x1
 3218 01a4 11       		.uleb128 0x11
 3219 01a5 01       		.uleb128 0x1
 3220 01a6 31       		.uleb128 0x31
 3221 01a7 13       		.uleb128 0x13
 3222 01a8 00       		.byte	0
 3223 01a9 00       		.byte	0
 3224 01aa 21       		.uleb128 0x21
 3225 01ab 8A8201   		.uleb128 0x410a
 3226 01ae 00       		.byte	0
 3227 01af 02       		.uleb128 0x2
 3228 01b0 18       		.uleb128 0x18
 3229 01b1 9142     		.uleb128 0x2111
 3230 01b3 18       		.uleb128 0x18
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 96


 3231 01b4 00       		.byte	0
 3232 01b5 00       		.byte	0
 3233 01b6 22       		.uleb128 0x22
 3234 01b7 34       		.uleb128 0x34
 3235 01b8 00       		.byte	0
 3236 01b9 03       		.uleb128 0x3
 3237 01ba 0E       		.uleb128 0xe
 3238 01bb 3A       		.uleb128 0x3a
 3239 01bc 0B       		.uleb128 0xb
 3240 01bd 3B       		.uleb128 0x3b
 3241 01be 0B       		.uleb128 0xb
 3242 01bf 49       		.uleb128 0x49
 3243 01c0 13       		.uleb128 0x13
 3244 01c1 00       		.byte	0
 3245 01c2 00       		.byte	0
 3246 01c3 23       		.uleb128 0x23
 3247 01c4 2E       		.uleb128 0x2e
 3248 01c5 01       		.byte	0x1
 3249 01c6 3F       		.uleb128 0x3f
 3250 01c7 19       		.uleb128 0x19
 3251 01c8 03       		.uleb128 0x3
 3252 01c9 0E       		.uleb128 0xe
 3253 01ca 3A       		.uleb128 0x3a
 3254 01cb 0B       		.uleb128 0xb
 3255 01cc 3B       		.uleb128 0x3b
 3256 01cd 05       		.uleb128 0x5
 3257 01ce 27       		.uleb128 0x27
 3258 01cf 19       		.uleb128 0x19
 3259 01d0 49       		.uleb128 0x49
 3260 01d1 13       		.uleb128 0x13
 3261 01d2 11       		.uleb128 0x11
 3262 01d3 01       		.uleb128 0x1
 3263 01d4 12       		.uleb128 0x12
 3264 01d5 06       		.uleb128 0x6
 3265 01d6 40       		.uleb128 0x40
 3266 01d7 18       		.uleb128 0x18
 3267 01d8 9742     		.uleb128 0x2117
 3268 01da 19       		.uleb128 0x19
 3269 01db 01       		.uleb128 0x1
 3270 01dc 13       		.uleb128 0x13
 3271 01dd 00       		.byte	0
 3272 01de 00       		.byte	0
 3273 01df 24       		.uleb128 0x24
 3274 01e0 05       		.uleb128 0x5
 3275 01e1 00       		.byte	0
 3276 01e2 03       		.uleb128 0x3
 3277 01e3 0E       		.uleb128 0xe
 3278 01e4 3A       		.uleb128 0x3a
 3279 01e5 0B       		.uleb128 0xb
 3280 01e6 3B       		.uleb128 0x3b
 3281 01e7 05       		.uleb128 0x5
 3282 01e8 49       		.uleb128 0x49
 3283 01e9 13       		.uleb128 0x13
 3284 01ea 02       		.uleb128 0x2
 3285 01eb 17       		.uleb128 0x17
 3286 01ec 00       		.byte	0
 3287 01ed 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 97


 3288 01ee 25       		.uleb128 0x25
 3289 01ef 34       		.uleb128 0x34
 3290 01f0 00       		.byte	0
 3291 01f1 03       		.uleb128 0x3
 3292 01f2 0E       		.uleb128 0xe
 3293 01f3 3A       		.uleb128 0x3a
 3294 01f4 0B       		.uleb128 0xb
 3295 01f5 3B       		.uleb128 0x3b
 3296 01f6 05       		.uleb128 0x5
 3297 01f7 49       		.uleb128 0x49
 3298 01f8 13       		.uleb128 0x13
 3299 01f9 02       		.uleb128 0x2
 3300 01fa 17       		.uleb128 0x17
 3301 01fb 00       		.byte	0
 3302 01fc 00       		.byte	0
 3303 01fd 26       		.uleb128 0x26
 3304 01fe 1D       		.uleb128 0x1d
 3305 01ff 01       		.byte	0x1
 3306 0200 31       		.uleb128 0x31
 3307 0201 13       		.uleb128 0x13
 3308 0202 11       		.uleb128 0x11
 3309 0203 01       		.uleb128 0x1
 3310 0204 12       		.uleb128 0x12
 3311 0205 06       		.uleb128 0x6
 3312 0206 58       		.uleb128 0x58
 3313 0207 0B       		.uleb128 0xb
 3314 0208 59       		.uleb128 0x59
 3315 0209 05       		.uleb128 0x5
 3316 020a 01       		.uleb128 0x1
 3317 020b 13       		.uleb128 0x13
 3318 020c 00       		.byte	0
 3319 020d 00       		.byte	0
 3320 020e 27       		.uleb128 0x27
 3321 020f 2E       		.uleb128 0x2e
 3322 0210 01       		.byte	0x1
 3323 0211 3F       		.uleb128 0x3f
 3324 0212 19       		.uleb128 0x19
 3325 0213 03       		.uleb128 0x3
 3326 0214 0E       		.uleb128 0xe
 3327 0215 3A       		.uleb128 0x3a
 3328 0216 0B       		.uleb128 0xb
 3329 0217 3B       		.uleb128 0x3b
 3330 0218 05       		.uleb128 0x5
 3331 0219 27       		.uleb128 0x27
 3332 021a 19       		.uleb128 0x19
 3333 021b 11       		.uleb128 0x11
 3334 021c 01       		.uleb128 0x1
 3335 021d 12       		.uleb128 0x12
 3336 021e 06       		.uleb128 0x6
 3337 021f 40       		.uleb128 0x40
 3338 0220 18       		.uleb128 0x18
 3339 0221 9742     		.uleb128 0x2117
 3340 0223 19       		.uleb128 0x19
 3341 0224 01       		.uleb128 0x1
 3342 0225 13       		.uleb128 0x13
 3343 0226 00       		.byte	0
 3344 0227 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 98


 3345 0228 28       		.uleb128 0x28
 3346 0229 34       		.uleb128 0x34
 3347 022a 00       		.byte	0
 3348 022b 03       		.uleb128 0x3
 3349 022c 08       		.uleb128 0x8
 3350 022d 3A       		.uleb128 0x3a
 3351 022e 0B       		.uleb128 0xb
 3352 022f 3B       		.uleb128 0x3b
 3353 0230 05       		.uleb128 0x5
 3354 0231 49       		.uleb128 0x49
 3355 0232 13       		.uleb128 0x13
 3356 0233 02       		.uleb128 0x2
 3357 0234 17       		.uleb128 0x17
 3358 0235 00       		.byte	0
 3359 0236 00       		.byte	0
 3360 0237 29       		.uleb128 0x29
 3361 0238 34       		.uleb128 0x34
 3362 0239 00       		.byte	0
 3363 023a 03       		.uleb128 0x3
 3364 023b 0E       		.uleb128 0xe
 3365 023c 3A       		.uleb128 0x3a
 3366 023d 0B       		.uleb128 0xb
 3367 023e 3B       		.uleb128 0x3b
 3368 023f 05       		.uleb128 0x5
 3369 0240 49       		.uleb128 0x49
 3370 0241 13       		.uleb128 0x13
 3371 0242 00       		.byte	0
 3372 0243 00       		.byte	0
 3373 0244 2A       		.uleb128 0x2a
 3374 0245 05       		.uleb128 0x5
 3375 0246 00       		.byte	0
 3376 0247 03       		.uleb128 0x3
 3377 0248 0E       		.uleb128 0xe
 3378 0249 3A       		.uleb128 0x3a
 3379 024a 0B       		.uleb128 0xb
 3380 024b 3B       		.uleb128 0x3b
 3381 024c 05       		.uleb128 0x5
 3382 024d 49       		.uleb128 0x49
 3383 024e 13       		.uleb128 0x13
 3384 024f 02       		.uleb128 0x2
 3385 0250 18       		.uleb128 0x18
 3386 0251 00       		.byte	0
 3387 0252 00       		.byte	0
 3388 0253 2B       		.uleb128 0x2b
 3389 0254 1D       		.uleb128 0x1d
 3390 0255 01       		.byte	0x1
 3391 0256 31       		.uleb128 0x31
 3392 0257 13       		.uleb128 0x13
 3393 0258 11       		.uleb128 0x11
 3394 0259 01       		.uleb128 0x1
 3395 025a 12       		.uleb128 0x12
 3396 025b 06       		.uleb128 0x6
 3397 025c 58       		.uleb128 0x58
 3398 025d 0B       		.uleb128 0xb
 3399 025e 59       		.uleb128 0x59
 3400 025f 05       		.uleb128 0x5
 3401 0260 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 99


 3402 0261 00       		.byte	0
 3403 0262 2C       		.uleb128 0x2c
 3404 0263 34       		.uleb128 0x34
 3405 0264 00       		.byte	0
 3406 0265 03       		.uleb128 0x3
 3407 0266 0E       		.uleb128 0xe
 3408 0267 3A       		.uleb128 0x3a
 3409 0268 0B       		.uleb128 0xb
 3410 0269 3B       		.uleb128 0x3b
 3411 026a 0B       		.uleb128 0xb
 3412 026b 49       		.uleb128 0x49
 3413 026c 13       		.uleb128 0x13
 3414 026d 3F       		.uleb128 0x3f
 3415 026e 19       		.uleb128 0x19
 3416 026f 3C       		.uleb128 0x3c
 3417 0270 19       		.uleb128 0x19
 3418 0271 00       		.byte	0
 3419 0272 00       		.byte	0
 3420 0273 00       		.byte	0
 3421              		.section	.debug_loc,"",%progbits
 3422              	.Ldebug_loc0:
 3423              	.LLST0:
 3424 0000 14000000 		.4byte	.LVL3
 3425 0004 20000000 		.4byte	.LVL6
 3426 0008 0100     		.2byte	0x1
 3427 000a 53       		.byte	0x53
 3428 000b 22000000 		.4byte	.LVL7
 3429 000f 3A000000 		.4byte	.LFE131
 3430 0013 0100     		.2byte	0x1
 3431 0015 53       		.byte	0x53
 3432 0016 00000000 		.4byte	0
 3433 001a 00000000 		.4byte	0
 3434              	.LLST1:
 3435 001e 02000000 		.4byte	.LVL1
 3436 0022 0C000000 		.4byte	.LVL2
 3437 0026 0100     		.2byte	0x1
 3438 0028 50       		.byte	0x50
 3439 0029 00000000 		.4byte	0
 3440 002d 00000000 		.4byte	0
 3441              	.LLST2:
 3442 0031 14000000 		.4byte	.LVL3
 3443 0035 1A000000 		.4byte	.LVL4
 3444 0039 0100     		.2byte	0x1
 3445 003b 50       		.byte	0x50
 3446 003c 00000000 		.4byte	0
 3447 0040 00000000 		.4byte	0
 3448              	.LLST3:
 3449 0044 2A000000 		.4byte	.LVL8
 3450 0048 30000000 		.4byte	.LVL9
 3451 004c 0100     		.2byte	0x1
 3452 004e 50       		.byte	0x50
 3453 004f 00000000 		.4byte	0
 3454 0053 00000000 		.4byte	0
 3455              	.LLST4:
 3456 0057 00000000 		.4byte	.LVL11
 3457 005b 19000000 		.4byte	.LVL16-1
 3458 005f 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 100


 3459 0061 50       		.byte	0x50
 3460 0062 19000000 		.4byte	.LVL16-1
 3461 0066 1E000000 		.4byte	.LFE132
 3462 006a 0400     		.2byte	0x4
 3463 006c F3       		.byte	0xf3
 3464 006d 01       		.uleb128 0x1
 3465 006e 50       		.byte	0x50
 3466 006f 9F       		.byte	0x9f
 3467 0070 00000000 		.4byte	0
 3468 0074 00000000 		.4byte	0
 3469              	.LLST5:
 3470 0078 00000000 		.4byte	.LVL11
 3471 007c 19000000 		.4byte	.LVL16-1
 3472 0080 0100     		.2byte	0x1
 3473 0082 51       		.byte	0x51
 3474 0083 19000000 		.4byte	.LVL16-1
 3475 0087 1E000000 		.4byte	.LFE132
 3476 008b 0400     		.2byte	0x4
 3477 008d F3       		.byte	0xf3
 3478 008e 01       		.uleb128 0x1
 3479 008f 51       		.byte	0x51
 3480 0090 9F       		.byte	0x9f
 3481 0091 00000000 		.4byte	0
 3482 0095 00000000 		.4byte	0
 3483              	.LLST6:
 3484 0099 00000000 		.4byte	.LVL11
 3485 009d 16000000 		.4byte	.LVL15
 3486 00a1 0100     		.2byte	0x1
 3487 00a3 52       		.byte	0x52
 3488 00a4 16000000 		.4byte	.LVL15
 3489 00a8 1E000000 		.4byte	.LFE132
 3490 00ac 0400     		.2byte	0x4
 3491 00ae F3       		.byte	0xf3
 3492 00af 01       		.uleb128 0x1
 3493 00b0 52       		.byte	0x52
 3494 00b1 9F       		.byte	0x9f
 3495 00b2 00000000 		.4byte	0
 3496 00b6 00000000 		.4byte	0
 3497              	.LLST7:
 3498 00ba 14000000 		.4byte	.LVL14
 3499 00be 1C000000 		.4byte	.LVL17
 3500 00c2 0100     		.2byte	0x1
 3501 00c4 54       		.byte	0x54
 3502 00c5 1C000000 		.4byte	.LVL17
 3503 00c9 1E000000 		.4byte	.LFE132
 3504 00cd 0100     		.2byte	0x1
 3505 00cf 50       		.byte	0x50
 3506 00d0 00000000 		.4byte	0
 3507 00d4 00000000 		.4byte	0
 3508              	.LLST8:
 3509 00d8 04000000 		.4byte	.LVL12
 3510 00dc 0E000000 		.4byte	.LVL13
 3511 00e0 0100     		.2byte	0x1
 3512 00e2 50       		.byte	0x50
 3513 00e3 00000000 		.4byte	0
 3514 00e7 00000000 		.4byte	0
 3515              	.LLST9:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 101


 3516 00eb 00000000 		.4byte	.LVL18
 3517 00ef 14000000 		.4byte	.LVL21
 3518 00f3 0100     		.2byte	0x1
 3519 00f5 50       		.byte	0x50
 3520 00f6 14000000 		.4byte	.LVL21
 3521 00fa 30000000 		.4byte	.LVL27
 3522 00fe 0100     		.2byte	0x1
 3523 0100 56       		.byte	0x56
 3524 0101 30000000 		.4byte	.LVL27
 3525 0105 32000000 		.4byte	.LFE133
 3526 0109 0400     		.2byte	0x4
 3527 010b F3       		.byte	0xf3
 3528 010c 01       		.uleb128 0x1
 3529 010d 50       		.byte	0x50
 3530 010e 9F       		.byte	0x9f
 3531 010f 00000000 		.4byte	0
 3532 0113 00000000 		.4byte	0
 3533              	.LLST10:
 3534 0117 00000000 		.4byte	.LVL18
 3535 011b 14000000 		.4byte	.LVL21
 3536 011f 0100     		.2byte	0x1
 3537 0121 51       		.byte	0x51
 3538 0122 14000000 		.4byte	.LVL21
 3539 0126 32000000 		.4byte	.LFE133
 3540 012a 0400     		.2byte	0x4
 3541 012c F3       		.byte	0xf3
 3542 012d 01       		.uleb128 0x1
 3543 012e 51       		.byte	0x51
 3544 012f 9F       		.byte	0x9f
 3545 0130 00000000 		.4byte	0
 3546 0134 00000000 		.4byte	0
 3547              	.LLST11:
 3548 0138 00000000 		.4byte	.LVL18
 3549 013c 14000000 		.4byte	.LVL21
 3550 0140 0100     		.2byte	0x1
 3551 0142 52       		.byte	0x52
 3552 0143 14000000 		.4byte	.LVL21
 3553 0147 30000000 		.4byte	.LVL25
 3554 014b 0100     		.2byte	0x1
 3555 014d 54       		.byte	0x54
 3556 014e 00000000 		.4byte	0
 3557 0152 00000000 		.4byte	0
 3558              	.LLST12:
 3559 0156 1E000000 		.4byte	.LVL22
 3560 015a 2C000000 		.4byte	.LVL24
 3561 015e 0100     		.2byte	0x1
 3562 0160 50       		.byte	0x50
 3563 0161 00000000 		.4byte	0
 3564 0165 00000000 		.4byte	0
 3565              	.LLST13:
 3566 0169 08000000 		.4byte	.LVL19
 3567 016d 14000000 		.4byte	.LVL21
 3568 0171 0100     		.2byte	0x1
 3569 0173 51       		.byte	0x51
 3570 0174 14000000 		.4byte	.LVL21
 3571 0178 30000000 		.4byte	.LVL26
 3572 017c 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 102


 3573 017e 55       		.byte	0x55
 3574 017f 00000000 		.4byte	0
 3575 0183 00000000 		.4byte	0
 3576              	.LLST14:
 3577 0187 08000000 		.4byte	.LVL19
 3578 018b 12000000 		.4byte	.LVL20
 3579 018f 0100     		.2byte	0x1
 3580 0191 50       		.byte	0x50
 3581 0192 00000000 		.4byte	0
 3582 0196 00000000 		.4byte	0
 3583              	.LLST15:
 3584 019a 00000000 		.4byte	.LVL28
 3585 019e 22000000 		.4byte	.LVL33
 3586 01a2 0100     		.2byte	0x1
 3587 01a4 50       		.byte	0x50
 3588 01a5 22000000 		.4byte	.LVL33
 3589 01a9 24000000 		.4byte	.LVL34
 3590 01ad 0400     		.2byte	0x4
 3591 01af F3       		.byte	0xf3
 3592 01b0 01       		.uleb128 0x1
 3593 01b1 50       		.byte	0x50
 3594 01b2 9F       		.byte	0x9f
 3595 01b3 24000000 		.4byte	.LVL34
 3596 01b7 26000000 		.4byte	.LVL35
 3597 01bb 0100     		.2byte	0x1
 3598 01bd 50       		.byte	0x50
 3599 01be 26000000 		.4byte	.LVL35
 3600 01c2 28000000 		.4byte	.LFE134
 3601 01c6 0400     		.2byte	0x4
 3602 01c8 F3       		.byte	0xf3
 3603 01c9 01       		.uleb128 0x1
 3604 01ca 50       		.byte	0x50
 3605 01cb 9F       		.byte	0x9f
 3606 01cc 00000000 		.4byte	0
 3607 01d0 00000000 		.4byte	0
 3608              	.LLST16:
 3609 01d4 00000000 		.4byte	.LVL28
 3610 01d8 20000000 		.4byte	.LVL32
 3611 01dc 0200     		.2byte	0x2
 3612 01de 30       		.byte	0x30
 3613 01df 9F       		.byte	0x9f
 3614 01e0 20000000 		.4byte	.LVL32
 3615 01e4 24000000 		.4byte	.LVL34
 3616 01e8 0200     		.2byte	0x2
 3617 01ea 31       		.byte	0x31
 3618 01eb 9F       		.byte	0x9f
 3619 01ec 24000000 		.4byte	.LVL34
 3620 01f0 26000000 		.4byte	.LVL35
 3621 01f4 0200     		.2byte	0x2
 3622 01f6 30       		.byte	0x30
 3623 01f7 9F       		.byte	0x9f
 3624 01f8 26000000 		.4byte	.LVL35
 3625 01fc 28000000 		.4byte	.LFE134
 3626 0200 0100     		.2byte	0x1
 3627 0202 50       		.byte	0x50
 3628 0203 00000000 		.4byte	0
 3629 0207 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 103


 3630              	.LLST17:
 3631 020b 00000000 		.4byte	.LVL28
 3632 020f 0C000000 		.4byte	.LVL29
 3633 0213 0100     		.2byte	0x1
 3634 0215 50       		.byte	0x50
 3635 0216 00000000 		.4byte	0
 3636 021a 00000000 		.4byte	0
 3637              	.LLST18:
 3638 021e 0C000000 		.4byte	.LVL29
 3639 0222 16000000 		.4byte	.LVL30
 3640 0226 0100     		.2byte	0x1
 3641 0228 50       		.byte	0x50
 3642 0229 00000000 		.4byte	0
 3643 022d 00000000 		.4byte	0
 3644              	.LLST19:
 3645 0231 1A000000 		.4byte	.LVL31
 3646 0235 20000000 		.4byte	.LVL32
 3647 0239 0100     		.2byte	0x1
 3648 023b 51       		.byte	0x51
 3649 023c 00000000 		.4byte	0
 3650 0240 00000000 		.4byte	0
 3651              	.LLST20:
 3652 0244 1A000000 		.4byte	.LVL31
 3653 0248 20000000 		.4byte	.LVL32
 3654 024c 0100     		.2byte	0x1
 3655 024e 50       		.byte	0x50
 3656 024f 00000000 		.4byte	0
 3657 0253 00000000 		.4byte	0
 3658              	.LLST21:
 3659 0257 14000000 		.4byte	.LVL39
 3660 025b 20000000 		.4byte	.LVL43
 3661 025f 0100     		.2byte	0x1
 3662 0261 53       		.byte	0x53
 3663 0262 22000000 		.4byte	.LVL44
 3664 0266 3A000000 		.4byte	.LFE135
 3665 026a 0100     		.2byte	0x1
 3666 026c 53       		.byte	0x53
 3667 026d 00000000 		.4byte	0
 3668 0271 00000000 		.4byte	0
 3669              	.LLST22:
 3670 0275 02000000 		.4byte	.LVL37
 3671 0279 0C000000 		.4byte	.LVL38
 3672 027d 0100     		.2byte	0x1
 3673 027f 50       		.byte	0x50
 3674 0280 00000000 		.4byte	0
 3675 0284 00000000 		.4byte	0
 3676              	.LLST23:
 3677 0288 16000000 		.4byte	.LVL40
 3678 028c 1C000000 		.4byte	.LVL41
 3679 0290 0100     		.2byte	0x1
 3680 0292 55       		.byte	0x55
 3681 0293 00000000 		.4byte	0
 3682 0297 00000000 		.4byte	0
 3683              	.LLST24:
 3684 029b 16000000 		.4byte	.LVL40
 3685 029f 1C000000 		.4byte	.LVL41
 3686 02a3 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 104


 3687 02a5 50       		.byte	0x50
 3688 02a6 00000000 		.4byte	0
 3689 02aa 00000000 		.4byte	0
 3690              	.LLST25:
 3691 02ae 2C000000 		.4byte	.LVL45
 3692 02b2 32000000 		.4byte	.LVL46
 3693 02b6 0100     		.2byte	0x1
 3694 02b8 55       		.byte	0x55
 3695 02b9 00000000 		.4byte	0
 3696 02bd 00000000 		.4byte	0
 3697              	.LLST26:
 3698 02c1 2C000000 		.4byte	.LVL45
 3699 02c5 32000000 		.4byte	.LVL46
 3700 02c9 0100     		.2byte	0x1
 3701 02cb 50       		.byte	0x50
 3702 02cc 00000000 		.4byte	0
 3703 02d0 00000000 		.4byte	0
 3704              	.LLST27:
 3705 02d4 00000000 		.4byte	.LVL48
 3706 02d8 27000000 		.4byte	.LVL56-1
 3707 02dc 0100     		.2byte	0x1
 3708 02de 50       		.byte	0x50
 3709 02df 27000000 		.4byte	.LVL56-1
 3710 02e3 2C000000 		.4byte	.LFE136
 3711 02e7 0400     		.2byte	0x4
 3712 02e9 F3       		.byte	0xf3
 3713 02ea 01       		.uleb128 0x1
 3714 02eb 50       		.byte	0x50
 3715 02ec 9F       		.byte	0x9f
 3716 02ed 00000000 		.4byte	0
 3717 02f1 00000000 		.4byte	0
 3718              	.LLST28:
 3719 02f5 00000000 		.4byte	.LVL48
 3720 02f9 27000000 		.4byte	.LVL56-1
 3721 02fd 0100     		.2byte	0x1
 3722 02ff 51       		.byte	0x51
 3723 0300 27000000 		.4byte	.LVL56-1
 3724 0304 2C000000 		.4byte	.LFE136
 3725 0308 0400     		.2byte	0x4
 3726 030a F3       		.byte	0xf3
 3727 030b 01       		.uleb128 0x1
 3728 030c 51       		.byte	0x51
 3729 030d 9F       		.byte	0x9f
 3730 030e 00000000 		.4byte	0
 3731 0312 00000000 		.4byte	0
 3732              	.LLST29:
 3733 0316 00000000 		.4byte	.LVL48
 3734 031a 0C000000 		.4byte	.LVL50
 3735 031e 0100     		.2byte	0x1
 3736 0320 52       		.byte	0x52
 3737 0321 0C000000 		.4byte	.LVL50
 3738 0325 0E000000 		.4byte	.LVL51
 3739 0329 0100     		.2byte	0x1
 3740 032b 54       		.byte	0x54
 3741 032c 0E000000 		.4byte	.LVL51
 3742 0330 10000000 		.4byte	.LVL52
 3743 0334 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 105


 3744 0336 52       		.byte	0x52
 3745 0337 10000000 		.4byte	.LVL52
 3746 033b 22000000 		.4byte	.LVL55
 3747 033f 0100     		.2byte	0x1
 3748 0341 54       		.byte	0x54
 3749 0342 22000000 		.4byte	.LVL55
 3750 0346 2C000000 		.4byte	.LFE136
 3751 034a 0400     		.2byte	0x4
 3752 034c F3       		.byte	0xf3
 3753 034d 01       		.uleb128 0x1
 3754 034e 52       		.byte	0x52
 3755 034f 9F       		.byte	0x9f
 3756 0350 00000000 		.4byte	0
 3757 0354 00000000 		.4byte	0
 3758              	.LLST30:
 3759 0358 1C000000 		.4byte	.LVL54
 3760 035c 22000000 		.4byte	.LVL55
 3761 0360 0100     		.2byte	0x1
 3762 0362 53       		.byte	0x53
 3763 0363 22000000 		.4byte	.LVL55
 3764 0367 2A000000 		.4byte	.LVL57
 3765 036b 0100     		.2byte	0x1
 3766 036d 54       		.byte	0x54
 3767 036e 2A000000 		.4byte	.LVL57
 3768 0372 2C000000 		.4byte	.LFE136
 3769 0376 0100     		.2byte	0x1
 3770 0378 50       		.byte	0x50
 3771 0379 00000000 		.4byte	0
 3772 037d 00000000 		.4byte	0
 3773              	.LLST31:
 3774 0381 04000000 		.4byte	.LVL49
 3775 0385 10000000 		.4byte	.LVL52
 3776 0389 0100     		.2byte	0x1
 3777 038b 50       		.byte	0x50
 3778 038c 00000000 		.4byte	0
 3779 0390 00000000 		.4byte	0
 3780              	.LLST32:
 3781 0394 10000000 		.4byte	.LVL52
 3782 0398 1A000000 		.4byte	.LVL53
 3783 039c 0100     		.2byte	0x1
 3784 039e 50       		.byte	0x50
 3785 039f 00000000 		.4byte	0
 3786 03a3 00000000 		.4byte	0
 3787              	.LLST33:
 3788 03a7 00000000 		.4byte	.LVL58
 3789 03ab 14000000 		.4byte	.LVL61
 3790 03af 0100     		.2byte	0x1
 3791 03b1 50       		.byte	0x50
 3792 03b2 14000000 		.4byte	.LVL61
 3793 03b6 30000000 		.4byte	.LVL67
 3794 03ba 0100     		.2byte	0x1
 3795 03bc 56       		.byte	0x56
 3796 03bd 30000000 		.4byte	.LVL67
 3797 03c1 32000000 		.4byte	.LFE137
 3798 03c5 0400     		.2byte	0x4
 3799 03c7 F3       		.byte	0xf3
 3800 03c8 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 106


 3801 03c9 50       		.byte	0x50
 3802 03ca 9F       		.byte	0x9f
 3803 03cb 00000000 		.4byte	0
 3804 03cf 00000000 		.4byte	0
 3805              	.LLST34:
 3806 03d3 00000000 		.4byte	.LVL58
 3807 03d7 14000000 		.4byte	.LVL61
 3808 03db 0100     		.2byte	0x1
 3809 03dd 51       		.byte	0x51
 3810 03de 14000000 		.4byte	.LVL61
 3811 03e2 32000000 		.4byte	.LFE137
 3812 03e6 0400     		.2byte	0x4
 3813 03e8 F3       		.byte	0xf3
 3814 03e9 01       		.uleb128 0x1
 3815 03ea 51       		.byte	0x51
 3816 03eb 9F       		.byte	0x9f
 3817 03ec 00000000 		.4byte	0
 3818 03f0 00000000 		.4byte	0
 3819              	.LLST35:
 3820 03f4 00000000 		.4byte	.LVL58
 3821 03f8 14000000 		.4byte	.LVL61
 3822 03fc 0100     		.2byte	0x1
 3823 03fe 52       		.byte	0x52
 3824 03ff 14000000 		.4byte	.LVL61
 3825 0403 30000000 		.4byte	.LVL65
 3826 0407 0100     		.2byte	0x1
 3827 0409 54       		.byte	0x54
 3828 040a 00000000 		.4byte	0
 3829 040e 00000000 		.4byte	0
 3830              	.LLST36:
 3831 0412 1E000000 		.4byte	.LVL62
 3832 0416 2C000000 		.4byte	.LVL64
 3833 041a 0100     		.2byte	0x1
 3834 041c 50       		.byte	0x50
 3835 041d 00000000 		.4byte	0
 3836 0421 00000000 		.4byte	0
 3837              	.LLST37:
 3838 0425 08000000 		.4byte	.LVL59
 3839 0429 14000000 		.4byte	.LVL61
 3840 042d 0100     		.2byte	0x1
 3841 042f 51       		.byte	0x51
 3842 0430 14000000 		.4byte	.LVL61
 3843 0434 30000000 		.4byte	.LVL66
 3844 0438 0100     		.2byte	0x1
 3845 043a 55       		.byte	0x55
 3846 043b 00000000 		.4byte	0
 3847 043f 00000000 		.4byte	0
 3848              	.LLST38:
 3849 0443 08000000 		.4byte	.LVL59
 3850 0447 12000000 		.4byte	.LVL60
 3851 044b 0100     		.2byte	0x1
 3852 044d 50       		.byte	0x50
 3853 044e 00000000 		.4byte	0
 3854 0452 00000000 		.4byte	0
 3855              	.LLST39:
 3856 0456 02000000 		.4byte	.LVL69
 3857 045a 12000000 		.4byte	.LVL71
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 107


 3858 045e 0200     		.2byte	0x2
 3859 0460 30       		.byte	0x30
 3860 0461 9F       		.byte	0x9f
 3861 0462 12000000 		.4byte	.LVL71
 3862 0466 2E000000 		.4byte	.LVL76
 3863 046a 0100     		.2byte	0x1
 3864 046c 54       		.byte	0x54
 3865 046d 00000000 		.4byte	0
 3866 0471 00000000 		.4byte	0
 3867              	.LLST40:
 3868 0475 02000000 		.4byte	.LVL69
 3869 0479 0E000000 		.4byte	.LVL70
 3870 047d 0100     		.2byte	0x1
 3871 047f 50       		.byte	0x50
 3872 0480 00000000 		.4byte	0
 3873 0484 00000000 		.4byte	0
 3874              	.LLST41:
 3875 0488 12000000 		.4byte	.LVL71
 3876 048c 1C000000 		.4byte	.LVL72
 3877 0490 0100     		.2byte	0x1
 3878 0492 50       		.byte	0x50
 3879 0493 00000000 		.4byte	0
 3880 0497 00000000 		.4byte	0
 3881              	.LLST42:
 3882 049b 20000000 		.4byte	.LVL73
 3883 049f 26000000 		.4byte	.LVL74
 3884 04a3 0100     		.2byte	0x1
 3885 04a5 55       		.byte	0x55
 3886 04a6 00000000 		.4byte	0
 3887 04aa 00000000 		.4byte	0
 3888              	.LLST43:
 3889 04ae 20000000 		.4byte	.LVL73
 3890 04b2 26000000 		.4byte	.LVL74
 3891 04b6 0100     		.2byte	0x1
 3892 04b8 50       		.byte	0x50
 3893 04b9 00000000 		.4byte	0
 3894 04bd 00000000 		.4byte	0
 3895              	.LLST44:
 3896 04c1 00000000 		.4byte	.LVL77
 3897 04c5 0A000000 		.4byte	.LVL80
 3898 04c9 0100     		.2byte	0x1
 3899 04cb 52       		.byte	0x52
 3900 04cc 0A000000 		.4byte	.LVL80
 3901 04d0 10000000 		.4byte	.LFE139
 3902 04d4 0100     		.2byte	0x1
 3903 04d6 52       		.byte	0x52
 3904 04d7 00000000 		.4byte	0
 3905 04db 00000000 		.4byte	0
 3906              	.LLST45:
 3907 04df 02000000 		.4byte	.LVL78
 3908 04e3 08000000 		.4byte	.LVL79
 3909 04e7 0100     		.2byte	0x1
 3910 04e9 51       		.byte	0x51
 3911 04ea 00000000 		.4byte	0
 3912 04ee 00000000 		.4byte	0
 3913              	.LLST46:
 3914 04f2 02000000 		.4byte	.LVL78
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 108


 3915 04f6 08000000 		.4byte	.LVL79
 3916 04fa 0100     		.2byte	0x1
 3917 04fc 50       		.byte	0x50
 3918 04fd 00000000 		.4byte	0
 3919 0501 00000000 		.4byte	0
 3920              	.LLST47:
 3921 0505 00000000 		.4byte	.LVL81
 3922 0509 27000000 		.4byte	.LVL89-1
 3923 050d 0100     		.2byte	0x1
 3924 050f 50       		.byte	0x50
 3925 0510 27000000 		.4byte	.LVL89-1
 3926 0514 2C000000 		.4byte	.LFE140
 3927 0518 0400     		.2byte	0x4
 3928 051a F3       		.byte	0xf3
 3929 051b 01       		.uleb128 0x1
 3930 051c 50       		.byte	0x50
 3931 051d 9F       		.byte	0x9f
 3932 051e 00000000 		.4byte	0
 3933 0522 00000000 		.4byte	0
 3934              	.LLST48:
 3935 0526 00000000 		.4byte	.LVL81
 3936 052a 27000000 		.4byte	.LVL89-1
 3937 052e 0100     		.2byte	0x1
 3938 0530 51       		.byte	0x51
 3939 0531 27000000 		.4byte	.LVL89-1
 3940 0535 2C000000 		.4byte	.LFE140
 3941 0539 0400     		.2byte	0x4
 3942 053b F3       		.byte	0xf3
 3943 053c 01       		.uleb128 0x1
 3944 053d 51       		.byte	0x51
 3945 053e 9F       		.byte	0x9f
 3946 053f 00000000 		.4byte	0
 3947 0543 00000000 		.4byte	0
 3948              	.LLST49:
 3949 0547 00000000 		.4byte	.LVL81
 3950 054b 0C000000 		.4byte	.LVL83
 3951 054f 0100     		.2byte	0x1
 3952 0551 52       		.byte	0x52
 3953 0552 0C000000 		.4byte	.LVL83
 3954 0556 0E000000 		.4byte	.LVL84
 3955 055a 0100     		.2byte	0x1
 3956 055c 54       		.byte	0x54
 3957 055d 0E000000 		.4byte	.LVL84
 3958 0561 10000000 		.4byte	.LVL85
 3959 0565 0100     		.2byte	0x1
 3960 0567 52       		.byte	0x52
 3961 0568 10000000 		.4byte	.LVL85
 3962 056c 22000000 		.4byte	.LVL88
 3963 0570 0100     		.2byte	0x1
 3964 0572 54       		.byte	0x54
 3965 0573 22000000 		.4byte	.LVL88
 3966 0577 2C000000 		.4byte	.LFE140
 3967 057b 0400     		.2byte	0x4
 3968 057d F3       		.byte	0xf3
 3969 057e 01       		.uleb128 0x1
 3970 057f 52       		.byte	0x52
 3971 0580 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 109


 3972 0581 00000000 		.4byte	0
 3973 0585 00000000 		.4byte	0
 3974              	.LLST50:
 3975 0589 1C000000 		.4byte	.LVL87
 3976 058d 22000000 		.4byte	.LVL88
 3977 0591 0100     		.2byte	0x1
 3978 0593 53       		.byte	0x53
 3979 0594 22000000 		.4byte	.LVL88
 3980 0598 2A000000 		.4byte	.LVL90
 3981 059c 0100     		.2byte	0x1
 3982 059e 54       		.byte	0x54
 3983 059f 2A000000 		.4byte	.LVL90
 3984 05a3 2C000000 		.4byte	.LFE140
 3985 05a7 0100     		.2byte	0x1
 3986 05a9 50       		.byte	0x50
 3987 05aa 00000000 		.4byte	0
 3988 05ae 00000000 		.4byte	0
 3989              	.LLST51:
 3990 05b2 04000000 		.4byte	.LVL82
 3991 05b6 10000000 		.4byte	.LVL85
 3992 05ba 0100     		.2byte	0x1
 3993 05bc 50       		.byte	0x50
 3994 05bd 00000000 		.4byte	0
 3995 05c1 00000000 		.4byte	0
 3996              	.LLST52:
 3997 05c5 10000000 		.4byte	.LVL85
 3998 05c9 1A000000 		.4byte	.LVL86
 3999 05cd 0100     		.2byte	0x1
 4000 05cf 50       		.byte	0x50
 4001 05d0 00000000 		.4byte	0
 4002 05d4 00000000 		.4byte	0
 4003              		.section	.debug_aranges,"",%progbits
 4004 0000 64000000 		.4byte	0x64
 4005 0004 0200     		.2byte	0x2
 4006 0006 00000000 		.4byte	.Ldebug_info0
 4007 000a 04       		.byte	0x4
 4008 000b 00       		.byte	0
 4009 000c 0000     		.2byte	0
 4010 000e 0000     		.2byte	0
 4011 0010 00000000 		.4byte	.LFB131
 4012 0014 3A000000 		.4byte	.LFE131-.LFB131
 4013 0018 00000000 		.4byte	.LFB132
 4014 001c 1E000000 		.4byte	.LFE132-.LFB132
 4015 0020 00000000 		.4byte	.LFB133
 4016 0024 32000000 		.4byte	.LFE133-.LFB133
 4017 0028 00000000 		.4byte	.LFB134
 4018 002c 28000000 		.4byte	.LFE134-.LFB134
 4019 0030 00000000 		.4byte	.LFB135
 4020 0034 3A000000 		.4byte	.LFE135-.LFB135
 4021 0038 00000000 		.4byte	.LFB136
 4022 003c 2C000000 		.4byte	.LFE136-.LFB136
 4023 0040 00000000 		.4byte	.LFB137
 4024 0044 32000000 		.4byte	.LFE137-.LFB137
 4025 0048 00000000 		.4byte	.LFB138
 4026 004c 30000000 		.4byte	.LFE138-.LFB138
 4027 0050 00000000 		.4byte	.LFB139
 4028 0054 10000000 		.4byte	.LFE139-.LFB139
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 110


 4029 0058 00000000 		.4byte	.LFB140
 4030 005c 2C000000 		.4byte	.LFE140-.LFB140
 4031 0060 00000000 		.4byte	0
 4032 0064 00000000 		.4byte	0
 4033              		.section	.debug_ranges,"",%progbits
 4034              	.Ldebug_ranges0:
 4035 0000 14000000 		.4byte	.LBB48
 4036 0004 20000000 		.4byte	.LBE48
 4037 0008 22000000 		.4byte	.LBB51
 4038 000c 28000000 		.4byte	.LBE51
 4039 0010 00000000 		.4byte	0
 4040 0014 00000000 		.4byte	0
 4041 0018 14000000 		.4byte	.LBB67
 4042 001c 20000000 		.4byte	.LBE67
 4043 0020 22000000 		.4byte	.LBB70
 4044 0024 28000000 		.4byte	.LBE70
 4045 0028 00000000 		.4byte	0
 4046 002c 00000000 		.4byte	0
 4047 0030 00000000 		.4byte	.LFB131
 4048 0034 3A000000 		.4byte	.LFE131
 4049 0038 00000000 		.4byte	.LFB132
 4050 003c 1E000000 		.4byte	.LFE132
 4051 0040 00000000 		.4byte	.LFB133
 4052 0044 32000000 		.4byte	.LFE133
 4053 0048 00000000 		.4byte	.LFB134
 4054 004c 28000000 		.4byte	.LFE134
 4055 0050 00000000 		.4byte	.LFB135
 4056 0054 3A000000 		.4byte	.LFE135
 4057 0058 00000000 		.4byte	.LFB136
 4058 005c 2C000000 		.4byte	.LFE136
 4059 0060 00000000 		.4byte	.LFB137
 4060 0064 32000000 		.4byte	.LFE137
 4061 0068 00000000 		.4byte	.LFB138
 4062 006c 30000000 		.4byte	.LFE138
 4063 0070 00000000 		.4byte	.LFB139
 4064 0074 10000000 		.4byte	.LFE139
 4065 0078 00000000 		.4byte	.LFB140
 4066 007c 2C000000 		.4byte	.LFE140
 4067 0080 00000000 		.4byte	0
 4068 0084 00000000 		.4byte	0
 4069              		.section	.debug_line,"",%progbits
 4070              	.Ldebug_line0:
 4071 0000 AD040000 		.section	.debug_str,"MS",%progbits,1
 4071      02008002 
 4071      00000201 
 4071      FB0E0D00 
 4071      01010101 
 4072              	.LASF54:
 4073 0000 70726F74 		.ascii	"protBusMasterMask\000"
 4073      4275734D 
 4073      61737465 
 4073      724D6173 
 4073      6B00
 4074              	.LASF64:
 4075 0012 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4075      6843746C 
 4075      4D61696E 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 111


 4075      57733346 
 4075      72657100 
 4076              	.LASF86:
 4077 0026 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4077      50727443 
 4077      6667496E 
 4077      4F666673 
 4077      657400
 4078              	.LASF188:
 4079 0039 43795F53 		.ascii	"Cy_SCB_IsTxDataWidthByte\000"
 4079      43425F49 
 4079      73547844 
 4079      61746157 
 4079      69647468 
 4080              	.LASF104:
 4081 0052 6970634C 		.ascii	"ipcLockStatusOffset\000"
 4081      6F636B53 
 4081      74617475 
 4081      734F6666 
 4081      73657400 
 4082              	.LASF30:
 4083 0066 63727970 		.ascii	"cryptoVersion\000"
 4083      746F5665 
 4083      7273696F 
 4083      6E00
 4084              	.LASF48:
 4085 0074 70657269 		.ascii	"periClockNr\000"
 4085      436C6F63 
 4085      6B4E7200 
 4086              	.LASF26:
 4087 0080 70617373 		.ascii	"passBase\000"
 4087      42617365 
 4087      00
 4088              	.LASF121:
 4089 0089 4932435F 		.ascii	"I2C_STATUS\000"
 4089      53544154 
 4089      555300
 4090              	.LASF39:
 4091 0094 63707573 		.ascii	"cpussIpcIrqNr\000"
 4091      73497063 
 4091      4972714E 
 4091      7200
 4092              	.LASF2:
 4093 00a2 5F5F7569 		.ascii	"__uint8_t\000"
 4093      6E74385F 
 4093      7400
 4094              	.LASF83:
 4095 00ac 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4095      44697632 
 4095      345F3543 
 4095      746C4F66 
 4095      66736574 
 4096              	.LASF90:
 4097 00c1 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 4097      73436D34 
 4097      436C6F63 
 4097      6B43746C 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 112


 4097      4F666673 
 4098              	.LASF128:
 4099 00d8 54585F46 		.ascii	"TX_FIFO_STATUS\000"
 4099      49464F5F 
 4099      53544154 
 4099      555300
 4100              	.LASF162:
 4101 00e7 494E5452 		.ascii	"INTR_S_MASK\000"
 4101      5F535F4D 
 4101      41534B00 
 4102              	.LASF19:
 4103 00f3 63707573 		.ascii	"cpussBase\000"
 4103      73426173 
 4103      6500
 4104              	.LASF191:
 4105 00fd 6E756D54 		.ascii	"numToCopy\000"
 4105      6F436F70 
 4105      7900
 4106              	.LASF68:
 4107 0107 64774368 		.ascii	"dwChCtlPrioPos\000"
 4107      43746C50 
 4107      72696F50 
 4107      6F7300
 4108              	.LASF202:
 4109 0116 73747269 		.ascii	"string\000"
 4109      6E6700
 4110              	.LASF72:
 4111 011d 70657269 		.ascii	"periTrCmdOffset\000"
 4111      5472436D 
 4111      644F6666 
 4111      73657400 
 4112              	.LASF96:
 4113 012d 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4113      73537973 
 4113      5469636B 
 4113      43746C4F 
 4113      66667365 
 4114              	.LASF126:
 4115 0143 54585F43 		.ascii	"TX_CTRL\000"
 4115      54524C00 
 4116              	.LASF57:
 4117 014b 666C6173 		.ascii	"flashPipeRequired\000"
 4117      68506970 
 4117      65526571 
 4117      75697265 
 4117      6400
 4118              	.LASF207:
 4119 015d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4119      43313120 
 4119      352E342E 
 4119      31203230 
 4119      31363036 
 4120 0190 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4120      20726576 
 4120      6973696F 
 4120      6E203233 
 4120      37373135 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 113


 4121 01c3 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4121      67202D66 
 4121      66756E63 
 4121      74696F6E 
 4121      2D736563 
 4122              	.LASF61:
 4123 01ef 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4123      6843746C 
 4123      4D61696E 
 4123      57733046 
 4123      72657100 
 4124              	.LASF14:
 4125 0203 696E7431 		.ascii	"int16_t\000"
 4125      365F7400 
 4126              	.LASF10:
 4127 020b 6C6F6E67 		.ascii	"long long int\000"
 4127      206C6F6E 
 4127      6720696E 
 4127      7400
 4128              	.LASF0:
 4129 0219 7369676E 		.ascii	"signed char\000"
 4129      65642063 
 4129      68617200 
 4130              	.LASF77:
 4131 0225 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4131      44697643 
 4131      6D645479 
 4131      70655365 
 4131      6C506F73 
 4132              	.LASF20:
 4133 023a 666C6173 		.ascii	"flashcBase\000"
 4133      68634261 
 4133      736500
 4134              	.LASF23:
 4135 0245 70726F74 		.ascii	"protBase\000"
 4135      42617365 
 4135      00
 4136              	.LASF35:
 4137 024e 69706356 		.ascii	"ipcVersion\000"
 4137      65727369 
 4137      6F6E00
 4138              	.LASF97:
 4139 0259 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4139      73436D30 
 4139      4E6D6943 
 4139      746C4F66 
 4139      66736574 
 4140              	.LASF144:
 4141 026e 52455345 		.ascii	"RESERVED10\000"
 4141      52564544 
 4141      313000
 4142              	.LASF146:
 4143 0279 52455345 		.ascii	"RESERVED11\000"
 4143      52564544 
 4143      313100
 4144              	.LASF149:
 4145 0284 52455345 		.ascii	"RESERVED12\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 114


 4145      52564544 
 4145      313200
 4146              	.LASF151:
 4147 028f 52455345 		.ascii	"RESERVED13\000"
 4147      52564544 
 4147      313300
 4148              	.LASF154:
 4149 029a 52455345 		.ascii	"RESERVED14\000"
 4149      52564544 
 4149      313400
 4150              	.LASF159:
 4151 02a5 52455345 		.ascii	"RESERVED15\000"
 4151      52564544 
 4151      313500
 4152              	.LASF164:
 4153 02b0 52455345 		.ascii	"RESERVED16\000"
 4153      52564544 
 4153      313600
 4154              	.LASF169:
 4155 02bb 52455345 		.ascii	"RESERVED17\000"
 4155      52564544 
 4155      313700
 4156              	.LASF7:
 4157 02c6 6C6F6E67 		.ascii	"long int\000"
 4157      20696E74 
 4157      00
 4158              	.LASF143:
 4159 02cf 494E5452 		.ascii	"INTR_CAUSE\000"
 4159      5F434155 
 4159      534500
 4160              	.LASF145:
 4161 02da 494E5452 		.ascii	"INTR_I2C_EC\000"
 4161      5F493243 
 4161      5F454300 
 4162              	.LASF170:
 4163 02e6 494E5452 		.ascii	"INTR_RX\000"
 4163      5F525800 
 4164              	.LASF21:
 4165 02ee 70657269 		.ascii	"periBase\000"
 4165      42617365 
 4165      00
 4166              	.LASF53:
 4167 02f7 73797350 		.ascii	"sysPmSimoPresent\000"
 4167      6D53696D 
 4167      6F507265 
 4167      73656E74 
 4167      00
 4168              	.LASF130:
 4169 0308 54585F46 		.ascii	"TX_FIFO_WR\000"
 4169      49464F5F 
 4169      575200
 4170              	.LASF43:
 4171 0313 63707573 		.ascii	"cpussFmIrq\000"
 4171      73466D49 
 4171      727100
 4172              	.LASF179:
 4173 031e 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 115


 4173      6C6500
 4174              	.LASF82:
 4175 0325 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4175      44697631 
 4175      365F3543 
 4175      746C4F66 
 4175      66736574 
 4176              	.LASF46:
 4177 033a 73727373 		.ascii	"srssNumPll\000"
 4177      4E756D50 
 4177      6C6C00
 4178              	.LASF204:
 4179 0345 43795F53 		.ascii	"Cy_SCB_WriteDefaultArrayNoCheck\000"
 4179      43425F57 
 4179      72697465 
 4179      44656661 
 4179      756C7441 
 4180              	.LASF198:
 4181 0365 43795F53 		.ascii	"Cy_SCB_WriteArrayNoCheck\000"
 4181      43425F57 
 4181      72697465 
 4181      41727261 
 4181      794E6F43 
 4182              	.LASF55:
 4183 037e 63727970 		.ascii	"cryptoMemSize\000"
 4183      746F4D65 
 4183      6D53697A 
 4183      6500
 4184              	.LASF80:
 4185 038c 70657269 		.ascii	"periDiv8CtlOffset\000"
 4185      44697638 
 4185      43746C4F 
 4185      66667365 
 4185      7400
 4186              	.LASF87:
 4187 039e 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4187      50727443 
 4187      66674F75 
 4187      744F6666 
 4187      73657400 
 4188              	.LASF69:
 4189 03b2 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 4189      43746C50 
 4189      7265656D 
 4189      70746162 
 4189      6C65506F 
 4190              	.LASF8:
 4191 03c8 5F5F7569 		.ascii	"__uint32_t\000"
 4191      6E743332 
 4191      5F7400
 4192              	.LASF50:
 4193 03d3 70617373 		.ascii	"passSarChannels\000"
 4193      53617243 
 4193      68616E6E 
 4193      656C7300 
 4194              	.LASF3:
 4195 03e3 5F5F696E 		.ascii	"__int16_t\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 116


 4195      7431365F 
 4195      7400
 4196              	.LASF209:
 4197 03ed 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 4197      635C4461 
 4197      74615C56 
 4197      53636F64 
 4197      655C4749 
 4198 041a 65735C45 		.ascii	"es\\Example_CapSense\\Onethinx_Creator.cydsn\000"
 4198      78616D70 
 4198      6C655F43 
 4198      61705365 
 4198      6E73655C 
 4199              	.LASF111:
 4200 0445 5350495F 		.ascii	"SPI_CTRL\000"
 4200      4354524C 
 4200      00
 4201              	.LASF208:
 4202 044e 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 4202      72617465 
 4202      645F536F 
 4202      75726365 
 4202      5C50536F 
 4203 047c 7363625C 		.ascii	"scb\\cy_scb_common.c\000"
 4203      63795F73 
 4203      63625F63 
 4203      6F6D6D6F 
 4203      6E2E6300 
 4204              	.LASF165:
 4205 0490 494E5452 		.ascii	"INTR_TX\000"
 4205      5F545800 
 4206              	.LASF93:
 4207 0498 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 4207      73436D34 
 4207      50777243 
 4207      746C4F66 
 4207      66736574 
 4208              	.LASF88:
 4209 04ad 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 4209      50727443 
 4209      66675369 
 4209      6F4F6666 
 4209      73657400 
 4210              	.LASF40:
 4211 04c1 63707573 		.ascii	"cpussDwChNr\000"
 4211      73447743 
 4211      684E7200 
 4212              	.LASF12:
 4213 04cd 756E7369 		.ascii	"unsigned int\000"
 4213      676E6564 
 4213      20696E74 
 4213      00
 4214              	.LASF15:
 4215 04da 75696E74 		.ascii	"uint16_t\000"
 4215      31365F74 
 4215      00
 4216              	.LASF171:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 117


 4217 04e3 494E5452 		.ascii	"INTR_RX_SET\000"
 4217      5F52585F 
 4217      53455400 
 4218              	.LASF176:
 4219 04ef 63686172 		.ascii	"char_t\000"
 4219      5F7400
 4220              	.LASF116:
 4221 04f6 55415254 		.ascii	"UART_RX_CTRL\000"
 4221      5F52585F 
 4221      4354524C 
 4221      00
 4222              	.LASF173:
 4223 0503 494E5452 		.ascii	"INTR_RX_MASKED\000"
 4223      5F52585F 
 4223      4D41534B 
 4223      454400
 4224              	.LASF9:
 4225 0512 6C6F6E67 		.ascii	"long unsigned int\000"
 4225      20756E73 
 4225      69676E65 
 4225      6420696E 
 4225      7400
 4226              	.LASF199:
 4227 0524 43795F53 		.ascii	"Cy_SCB_WriteArray\000"
 4227      43425F57 
 4227      72697465 
 4227      41727261 
 4227      7900
 4228              	.LASF139:
 4229 0536 52585F46 		.ascii	"RX_FIFO_RD_SILENT\000"
 4229      49464F5F 
 4229      52445F53 
 4229      494C454E 
 4229      5400
 4230              	.LASF38:
 4231 0548 63707573 		.ascii	"cpussIpcNr\000"
 4231      73497063 
 4231      4E7200
 4232              	.LASF25:
 4233 0553 6770696F 		.ascii	"gpioBase\000"
 4233      42617365 
 4233      00
 4234              	.LASF115:
 4235 055c 55415254 		.ascii	"UART_TX_CTRL\000"
 4235      5F54585F 
 4235      4354524C 
 4235      00
 4236              	.LASF63:
 4237 0569 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 4237      6843746C 
 4237      4D61696E 
 4237      57733246 
 4237      72657100 
 4238              	.LASF11:
 4239 057d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4239      206C6F6E 
 4239      6720756E 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 118


 4239      7369676E 
 4239      65642069 
 4240              	.LASF187:
 4241 0594 64617461 		.ascii	"data\000"
 4241      00
 4242              	.LASF190:
 4243 0599 73697A65 		.ascii	"size\000"
 4243      00
 4244              	.LASF74:
 4245 059e 70657269 		.ascii	"periTrGrOffset\000"
 4245      54724772 
 4245      4F666673 
 4245      657400
 4246              	.LASF109:
 4247 05ad 434D445F 		.ascii	"CMD_RESP_STATUS\000"
 4247      52455350 
 4247      5F535441 
 4247      54555300 
 4248              	.LASF101:
 4249 05bd 63707573 		.ascii	"cpussRam1Ctl0\000"
 4249      7352616D 
 4249      3143746C 
 4249      3000
 4250              	.LASF174:
 4251 05cb 43795343 		.ascii	"CySCB_V1_Type\000"
 4251      425F5631 
 4251      5F547970 
 4251      6500
 4252              	.LASF124:
 4253 05d9 4932435F 		.ascii	"I2C_CFG\000"
 4253      43464700 
 4254              	.LASF117:
 4255 05e1 55415254 		.ascii	"UART_RX_STATUS\000"
 4255      5F52585F 
 4255      53544154 
 4255      555300
 4256              	.LASF196:
 4257 05f0 43795F53 		.ascii	"Cy_SCB_ReadArray\000"
 4257      43425F52 
 4257      65616441 
 4257      72726179 
 4257      00
 4258              	.LASF141:
 4259 0601 455A5F44 		.ascii	"EZ_DATA\000"
 4259      41544100 
 4260              	.LASF75:
 4261 0609 70657269 		.ascii	"periTrGrSize\000"
 4261      54724772 
 4261      53697A65 
 4261      00
 4262              	.LASF33:
 4263 0616 6770696F 		.ascii	"gpioVersion\000"
 4263      56657273 
 4263      696F6E00 
 4264              	.LASF161:
 4265 0622 494E5452 		.ascii	"INTR_S_SET\000"
 4265      5F535F53 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 119


 4265      455400
 4266              	.LASF105:
 4267 062d 63795F73 		.ascii	"cy_stc_device_t\000"
 4267      74635F64 
 4267      65766963 
 4267      655F7400 
 4268              	.LASF192:
 4269 063d 43795F53 		.ascii	"Cy_SCB_ReadArrayNoCheck\000"
 4269      43425F52 
 4269      65616441 
 4269      72726179 
 4269      4E6F4368 
 4270              	.LASF127:
 4271 0655 54585F46 		.ascii	"TX_FIFO_CTRL\000"
 4271      49464F5F 
 4271      4354524C 
 4271      00
 4272              	.LASF51:
 4273 0662 65704D6F 		.ascii	"epMonitorNr\000"
 4273      6E69746F 
 4273      724E7200 
 4274              	.LASF98:
 4275 066e 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 4275      73436D34 
 4275      4E6D6943 
 4275      746C4F66 
 4275      66736574 
 4276              	.LASF94:
 4277 0683 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4277      73547269 
 4277      6D52616D 
 4277      43746C4F 
 4277      66667365 
 4278              	.LASF89:
 4279 0699 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4279      73436D30 
 4279      436C6F63 
 4279      6B43746C 
 4279      4F666673 
 4280              	.LASF136:
 4281 06b0 52585F4D 		.ascii	"RX_MATCH\000"
 4281      41544348 
 4281      00
 4282              	.LASF29:
 4283 06b9 63707573 		.ascii	"cpussVersion\000"
 4283      73566572 
 4283      73696F6E 
 4283      00
 4284              	.LASF183:
 4285 06c6 62617365 		.ascii	"base\000"
 4285      00
 4286              	.LASF158:
 4287 06cb 494E5452 		.ascii	"INTR_M_MASKED\000"
 4287      5F4D5F4D 
 4287      41534B45 
 4287      4400
 4288              	.LASF108:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 120


 4289 06d9 434D445F 		.ascii	"CMD_RESP_CTRL\000"
 4289      52455350 
 4289      5F435452 
 4289      4C00
 4290              	.LASF118:
 4291 06e7 55415254 		.ascii	"UART_FLOW_CTRL\000"
 4291      5F464C4F 
 4291      575F4354 
 4291      524C00
 4292              	.LASF92:
 4293 06f6 63707573 		.ascii	"cpussCm0StatusOffset\000"
 4293      73436D30 
 4293      53746174 
 4293      75734F66 
 4293      66736574 
 4294              	.LASF148:
 4295 070b 494E5452 		.ascii	"INTR_I2C_EC_MASKED\000"
 4295      5F493243 
 4295      5F45435F 
 4295      4D41534B 
 4295      454400
 4296              	.LASF73:
 4297 071e 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 4297      5472436D 
 4297      64477253 
 4297      656C4D73 
 4297      6B00
 4298              	.LASF206:
 4299 0730 43795F53 		.ascii	"Cy_SCB_WriteDefaultArray\000"
 4299      43425F57 
 4299      72697465 
 4299      44656661 
 4299      756C7441 
 4300              	.LASF18:
 4301 0749 73697A65 		.ascii	"sizetype\000"
 4301      74797065 
 4301      00
 4302              	.LASF66:
 4303 0752 64774368 		.ascii	"dwChOffset\000"
 4303      4F666673 
 4303      657400
 4304              	.LASF175:
 4305 075d 43795343 		.ascii	"CySCB_Type\000"
 4305      425F5479 
 4305      706500
 4306              	.LASF41:
 4307 0768 63707573 		.ascii	"cpussFlashPaSize\000"
 4307      73466C61 
 4307      73685061 
 4307      53697A65 
 4307      00
 4308              	.LASF185:
 4309 0779 43795F53 		.ascii	"Cy_SCB_GetNumInTxFifo\000"
 4309      43425F47 
 4309      65744E75 
 4309      6D496E54 
 4309      78466966 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 121


 4310              	.LASF79:
 4311 078f 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4311      44697643 
 4311      6D645061 
 4311      54797065 
 4311      53656C50 
 4312              	.LASF102:
 4313 07a6 63707573 		.ascii	"cpussRam2Ctl0\000"
 4313      7352616D 
 4313      3243746C 
 4313      3000
 4314              	.LASF114:
 4315 07b4 55415254 		.ascii	"UART_CTRL\000"
 4315      5F435452 
 4315      4C00
 4316              	.LASF155:
 4317 07be 494E5452 		.ascii	"INTR_M\000"
 4317      5F4D00
 4318              	.LASF70:
 4319 07c5 64775374 		.ascii	"dwStatusChIdxPos\000"
 4319      61747573 
 4319      43684964 
 4319      78506F73 
 4319      00
 4320              	.LASF52:
 4321 07d6 75646250 		.ascii	"udbPresent\000"
 4321      72657365 
 4321      6E7400
 4322              	.LASF160:
 4323 07e1 494E5452 		.ascii	"INTR_S\000"
 4323      5F5300
 4324              	.LASF205:
 4325 07e8 74784461 		.ascii	"txData\000"
 4325      746100
 4326              	.LASF32:
 4327 07ef 666C6173 		.ascii	"flashcVersion\000"
 4327      68635665 
 4327      7273696F 
 4327      6E00
 4328              	.LASF28:
 4329 07fd 63727970 		.ascii	"cryptoBase\000"
 4329      746F4261 
 4329      736500
 4330              	.LASF49:
 4331 0808 736D6966 		.ascii	"smifDeviceNr\000"
 4331      44657669 
 4331      63654E72 
 4331      00
 4332              	.LASF103:
 4333 0815 69706353 		.ascii	"ipcStructSize\000"
 4333      74727563 
 4333      7453697A 
 4333      6500
 4334              	.LASF186:
 4335 0823 43795F53 		.ascii	"Cy_SCB_GetFifoSize\000"
 4335      43425F47 
 4335      65744669 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 122


 4335      666F5369 
 4335      7A6500
 4336              	.LASF36:
 4337 0836 70657269 		.ascii	"periVersion\000"
 4337      56657273 
 4337      696F6E00 
 4338              	.LASF178:
 4339 0842 666C6F61 		.ascii	"float\000"
 4339      7400
 4340              	.LASF71:
 4341 0848 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4341      61747573 
 4341      43684964 
 4341      784D736B 
 4341      00
 4342              	.LASF113:
 4343 0859 52455345 		.ascii	"RESERVED1\000"
 4343      52564544 
 4343      3100
 4344              	.LASF211:
 4345 0863 63795F64 		.ascii	"cy_device\000"
 4345      65766963 
 4345      6500
 4346              	.LASF125:
 4347 086d 52455345 		.ascii	"RESERVED3\000"
 4347      52564544 
 4347      3300
 4348              	.LASF99:
 4349 0877 63707573 		.ascii	"cpussRomCtl\000"
 4349      73526F6D 
 4349      43746C00 
 4350              	.LASF131:
 4351 0883 52455345 		.ascii	"RESERVED5\000"
 4351      52564544 
 4351      3500
 4352              	.LASF135:
 4353 088d 52455345 		.ascii	"RESERVED6\000"
 4353      52564544 
 4353      3600
 4354              	.LASF137:
 4355 0897 52455345 		.ascii	"RESERVED7\000"
 4355      52564544 
 4355      3700
 4356              	.LASF140:
 4357 08a1 52455345 		.ascii	"RESERVED8\000"
 4357      52564544 
 4357      3800
 4358              	.LASF142:
 4359 08ab 52455345 		.ascii	"RESERVED9\000"
 4359      52564544 
 4359      3900
 4360              	.LASF22:
 4361 08b5 75646242 		.ascii	"udbBase\000"
 4361      61736500 
 4362              	.LASF180:
 4363 08bd 5F426F6F 		.ascii	"_Bool\000"
 4363      6C00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 123


 4364              	.LASF120:
 4365 08c3 4932435F 		.ascii	"I2C_CTRL\000"
 4365      4354524C 
 4365      00
 4366              	.LASF1:
 4367 08cc 756E7369 		.ascii	"unsigned char\000"
 4367      676E6564 
 4367      20636861 
 4367      7200
 4368              	.LASF168:
 4369 08da 494E5452 		.ascii	"INTR_TX_MASKED\000"
 4369      5F54585F 
 4369      4D41534B 
 4369      454400
 4370              	.LASF65:
 4371 08e9 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 4371      6843746C 
 4371      4D61696E 
 4371      57733446 
 4371      72657100 
 4372              	.LASF4:
 4373 08fd 73686F72 		.ascii	"short int\000"
 4373      7420696E 
 4373      7400
 4374              	.LASF210:
 4375 0907 43795F53 		.ascii	"Cy_SCB_WriteTxFifo\000"
 4375      43425F57 
 4375      72697465 
 4375      54784669 
 4375      666F00
 4376              	.LASF123:
 4377 091a 4932435F 		.ascii	"I2C_S_CMD\000"
 4377      535F434D 
 4377      4400
 4378              	.LASF24:
 4379 0924 6873696F 		.ascii	"hsiomBase\000"
 4379      6D426173 
 4379      6500
 4380              	.LASF76:
 4381 092e 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4381      44697643 
 4381      6D644469 
 4381      7653656C 
 4381      4D736B00 
 4382              	.LASF203:
 4383 0942 6669666F 		.ascii	"fifoSize\000"
 4383      53697A65 
 4383      00
 4384              	.LASF163:
 4385 094b 494E5452 		.ascii	"INTR_S_MASKED\000"
 4385      5F535F4D 
 4385      41534B45 
 4385      4400
 4386              	.LASF119:
 4387 0959 52455345 		.ascii	"RESERVED2\000"
 4387      52564544 
 4387      3200
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 124


 4388              	.LASF47:
 4389 0963 73727373 		.ascii	"srssNumHfroot\000"
 4389      4E756D48 
 4389      66726F6F 
 4389      7400
 4390              	.LASF129:
 4391 0971 52455345 		.ascii	"RESERVED4\000"
 4391      52564544 
 4391      3400
 4392              	.LASF60:
 4393 097b 666C6173 		.ascii	"flashEraseDelay\000"
 4393      68457261 
 4393      73654465 
 4393      6C617900 
 4394              	.LASF181:
 4395 098b 43795F53 		.ascii	"Cy_SCB_IsRxDataWidthByte\000"
 4395      43425F49 
 4395      73527844 
 4395      61746157 
 4395      69647468 
 4396              	.LASF152:
 4397 09a4 494E5452 		.ascii	"INTR_SPI_EC_MASK\000"
 4397      5F535049 
 4397      5F45435F 
 4397      4D41534B 
 4397      00
 4398              	.LASF16:
 4399 09b5 75696E74 		.ascii	"uint32_t\000"
 4399      33325F74 
 4399      00
 4400              	.LASF156:
 4401 09be 494E5452 		.ascii	"INTR_M_SET\000"
 4401      5F4D5F53 
 4401      455400
 4402              	.LASF193:
 4403 09c9 43795F53 		.ascii	"Cy_SCB_ReadArrayBlocking\000"
 4403      43425F52 
 4403      65616441 
 4403      72726179 
 4403      426C6F63 
 4404              	.LASF112:
 4405 09e2 5350495F 		.ascii	"SPI_STATUS\000"
 4405      53544154 
 4405      555300
 4406              	.LASF17:
 4407 09ed 6C6F6E67 		.ascii	"long double\000"
 4407      20646F75 
 4407      626C6500 
 4408              	.LASF177:
 4409 09f9 63686172 		.ascii	"char\000"
 4409      00
 4410              	.LASF37:
 4411 09fe 70726F74 		.ascii	"protVersion\000"
 4411      56657273 
 4411      696F6E00 
 4412              	.LASF195:
 4413 0a0a 62797465 		.ascii	"byteMode\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 125


 4413      4D6F6465 
 4413      00
 4414              	.LASF100:
 4415 0a13 63707573 		.ascii	"cpussRam0Ctl0\000"
 4415      7352616D 
 4415      3043746C 
 4415      3000
 4416              	.LASF172:
 4417 0a21 494E5452 		.ascii	"INTR_RX_MASK\000"
 4417      5F52585F 
 4417      4D41534B 
 4417      00
 4418              	.LASF166:
 4419 0a2e 494E5452 		.ascii	"INTR_TX_SET\000"
 4419      5F54585F 
 4419      53455400 
 4420              	.LASF157:
 4421 0a3a 494E5452 		.ascii	"INTR_M_MASK\000"
 4421      5F4D5F4D 
 4421      41534B00 
 4422              	.LASF5:
 4423 0a46 5F5F7569 		.ascii	"__uint16_t\000"
 4423      6E743136 
 4423      5F7400
 4424              	.LASF81:
 4425 0a51 70657269 		.ascii	"periDiv16CtlOffset\000"
 4425      44697631 
 4425      3643746C 
 4425      4F666673 
 4425      657400
 4426              	.LASF110:
 4427 0a64 52455345 		.ascii	"RESERVED\000"
 4427      52564544 
 4427      00
 4428              	.LASF189:
 4429 0a6d 62756666 		.ascii	"buffer\000"
 4429      657200
 4430              	.LASF134:
 4431 0a74 52585F46 		.ascii	"RX_FIFO_STATUS\000"
 4431      49464F5F 
 4431      53544154 
 4431      555300
 4432              	.LASF167:
 4433 0a83 494E5452 		.ascii	"INTR_TX_MASK\000"
 4433      5F54585F 
 4433      4D41534B 
 4433      00
 4434              	.LASF34:
 4435 0a90 6873696F 		.ascii	"hsiomVersion\000"
 4435      6D566572 
 4435      73696F6E 
 4435      00
 4436              	.LASF138:
 4437 0a9d 52585F46 		.ascii	"RX_FIFO_RD\000"
 4437      49464F5F 
 4437      524400
 4438              	.LASF197:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 126


 4439 0aa8 43795F53 		.ascii	"Cy_SCB_Write\000"
 4439      43425F57 
 4439      72697465 
 4439      00
 4440              	.LASF62:
 4441 0ab5 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 4441      6843746C 
 4441      4D61696E 
 4441      57733146 
 4441      72657100 
 4442              	.LASF6:
 4443 0ac9 73686F72 		.ascii	"short unsigned int\000"
 4443      7420756E 
 4443      7369676E 
 4443      65642069 
 4443      6E7400
 4444              	.LASF67:
 4445 0adc 64774368 		.ascii	"dwChSize\000"
 4445      53697A65 
 4445      00
 4446              	.LASF182:
 4447 0ae5 43795F53 		.ascii	"Cy_SCB_ReadRxFifo\000"
 4447      43425F52 
 4447      65616452 
 4447      78466966 
 4447      6F00
 4448              	.LASF194:
 4449 0af7 6E756D43 		.ascii	"numCopied\000"
 4449      6F706965 
 4449      6400
 4450              	.LASF150:
 4451 0b01 494E5452 		.ascii	"INTR_SPI_EC\000"
 4451      5F535049 
 4451      5F454300 
 4452              	.LASF42:
 4453 0b0d 63707573 		.ascii	"cpussIpc0Irq\000"
 4453      73497063 
 4453      30497271 
 4453      00
 4454              	.LASF106:
 4455 0b1a 4354524C 		.ascii	"CTRL\000"
 4455      00
 4456              	.LASF85:
 4457 0b1f 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 4457      50727443 
 4457      66674F66 
 4457      66736574 
 4457      00
 4458              	.LASF107:
 4459 0b30 53544154 		.ascii	"STATUS\000"
 4459      555300
 4460              	.LASF44:
 4461 0b37 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4461      734E6F74 
 4461      436F6E6E 
 4461      65637465 
 4461      64497271 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 127


 4462              	.LASF58:
 4463 0b4c 666C6173 		.ascii	"flashWriteDelay\000"
 4463      68577269 
 4463      74654465 
 4463      6C617900 
 4464              	.LASF133:
 4465 0b5c 52585F46 		.ascii	"RX_FIFO_CTRL\000"
 4465      49464F5F 
 4465      4354524C 
 4465      00
 4466              	.LASF13:
 4467 0b69 75696E74 		.ascii	"uint8_t\000"
 4467      385F7400 
 4468              	.LASF122:
 4469 0b71 4932435F 		.ascii	"I2C_M_CMD\000"
 4469      4D5F434D 
 4469      4400
 4470              	.LASF200:
 4471 0b7b 43795F53 		.ascii	"Cy_SCB_WriteArrayBlocking\000"
 4471      43425F57 
 4471      72697465 
 4471      41727261 
 4471      79426C6F 
 4472              	.LASF91:
 4473 0b95 63707573 		.ascii	"cpussCm4StatusOffset\000"
 4473      73436D34 
 4473      53746174 
 4473      75734F66 
 4473      66736574 
 4474              	.LASF84:
 4475 0baa 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 4475      50727449 
 4475      6E747243 
 4475      66674F66 
 4475      66736574 
 4476              	.LASF201:
 4477 0bbf 43795F53 		.ascii	"Cy_SCB_WriteString\000"
 4477      43425F57 
 4477      72697465 
 4477      53747269 
 4477      6E6700
 4478              	.LASF147:
 4479 0bd2 494E5452 		.ascii	"INTR_I2C_EC_MASK\000"
 4479      5F493243 
 4479      5F45435F 
 4479      4D41534B 
 4479      00
 4480              	.LASF95:
 4481 0be3 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 4481      73547269 
 4481      6D526F6D 
 4481      43746C4F 
 4481      66667365 
 4482              	.LASF45:
 4483 0bf9 73727373 		.ascii	"srssNumClkpath\000"
 4483      4E756D43 
 4483      6C6B7061 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccJlMNbk.s 			page 128


 4483      746800
 4484              	.LASF31:
 4485 0c08 64775665 		.ascii	"dwVersion\000"
 4485      7273696F 
 4485      6E00
 4486              	.LASF27:
 4487 0c12 69706342 		.ascii	"ipcBase\000"
 4487      61736500 
 4488              	.LASF78:
 4489 0c1a 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4489      44697643 
 4489      6D645061 
 4489      44697653 
 4489      656C506F 
 4490              	.LASF132:
 4491 0c30 52585F43 		.ascii	"RX_CTRL\000"
 4491      54524C00 
 4492              	.LASF59:
 4493 0c38 666C6173 		.ascii	"flashProgramDelay\000"
 4493      6850726F 
 4493      6772616D 
 4493      44656C61 
 4493      7900
 4494              	.LASF153:
 4495 0c4a 494E5452 		.ascii	"INTR_SPI_EC_MASKED\000"
 4495      5F535049 
 4495      5F45435F 
 4495      4D41534B 
 4495      454400
 4496              	.LASF184:
 4497 0c5d 43795F53 		.ascii	"Cy_SCB_GetNumInRxFifo\000"
 4497      43425F47 
 4497      65744E75 
 4497      6D496E52 
 4497      78466966 
 4498              	.LASF56:
 4499 0c73 666C6173 		.ascii	"flashRwwRequired\000"
 4499      68527777 
 4499      52657175 
 4499      69726564 
 4499      00
 4500              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
