ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_DpInitialize,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_DpInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_DpInitialize, %function
  25              	CapSense_DpInitialize:
  26              	.LFB45:
  27              		.file 1 "Generated_Source\\PSoC6\\CapSense_Processing.c"
   1:Generated_Source\PSoC6/CapSense_Processing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Processing.c **** * \file CapSense_Processing.c
   3:Generated_Source\PSoC6/CapSense_Processing.c **** * \version 3.0
   4:Generated_Source\PSoC6/CapSense_Processing.c **** *
   5:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Processing.c **** *   This file provides the source code for the Data Processing module APIs
   7:Generated_Source\PSoC6/CapSense_Processing.c **** *   of the Component. The Data Processing module is responsible for the
   8:Generated_Source\PSoC6/CapSense_Processing.c **** *   low level raw counts processing provided by the sensing module, maintaining
   9:Generated_Source\PSoC6/CapSense_Processing.c **** *   baseline and difference values and performing high-level widget processing
  10:Generated_Source\PSoC6/CapSense_Processing.c **** *   like updating button status or calculating slider position.
  11:Generated_Source\PSoC6/CapSense_Processing.c **** *
  12:Generated_Source\PSoC6/CapSense_Processing.c **** * \see CapSense v3.0 Datasheet
  13:Generated_Source\PSoC6/CapSense_Processing.c **** *
  14:Generated_Source\PSoC6/CapSense_Processing.c **** *//*****************************************************************************
  15:Generated_Source\PSoC6/CapSense_Processing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  16:Generated_Source\PSoC6/CapSense_Processing.c **** ********************************************************************************
  17:Generated_Source\PSoC6/CapSense_Processing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  18:Generated_Source\PSoC6/CapSense_Processing.c **** * protected by and subject to worldwide patent protection (United States and
  19:Generated_Source\PSoC6/CapSense_Processing.c **** * foreign), United States copyright laws and international treaty provisions.
  20:Generated_Source\PSoC6/CapSense_Processing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  21:Generated_Source\PSoC6/CapSense_Processing.c **** * license to copy, use, modify, create derivative works of, and compile the
  22:Generated_Source\PSoC6/CapSense_Processing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  23:Generated_Source\PSoC6/CapSense_Processing.c **** * custom software in support of licensee product to be used only in conjunction
  24:Generated_Source\PSoC6/CapSense_Processing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  25:Generated_Source\PSoC6/CapSense_Processing.c **** * Any reproduction, modification, translation, compilation, or representation of
  26:Generated_Source\PSoC6/CapSense_Processing.c **** * this software except as specified above is prohibited without the express
  27:Generated_Source\PSoC6/CapSense_Processing.c **** * written permission of Cypress.
  28:Generated_Source\PSoC6/CapSense_Processing.c **** *
  29:Generated_Source\PSoC6/CapSense_Processing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  30:Generated_Source\PSoC6/CapSense_Processing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 2


  31:Generated_Source\PSoC6/CapSense_Processing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  32:Generated_Source\PSoC6/CapSense_Processing.c **** * Cypress reserves the right to make changes without further notice to the
  33:Generated_Source\PSoC6/CapSense_Processing.c **** * materials described herein. Cypress does not assume any liability arising out
  34:Generated_Source\PSoC6/CapSense_Processing.c **** * of the application or use of any product or circuit described herein. Cypress
  35:Generated_Source\PSoC6/CapSense_Processing.c **** * does not authorize its products for use as critical components in life-support
  36:Generated_Source\PSoC6/CapSense_Processing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  37:Generated_Source\PSoC6/CapSense_Processing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  38:Generated_Source\PSoC6/CapSense_Processing.c **** * support systems application implies that the manufacturer assumes all risk of
  39:Generated_Source\PSoC6/CapSense_Processing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  40:Generated_Source\PSoC6/CapSense_Processing.c **** * limited by and subject to the applicable Cypress software license agreement.
  41:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
  42:Generated_Source\PSoC6/CapSense_Processing.c **** 
  43:Generated_Source\PSoC6/CapSense_Processing.c **** #include "syslib/cy_syslib.h"
  44:Generated_Source\PSoC6/CapSense_Processing.c **** #include <stddef.h>
  45:Generated_Source\PSoC6/CapSense_Processing.c **** #include <string.h>
  46:Generated_Source\PSoC6/CapSense_Processing.c **** #include "CapSense_Configuration.h"
  47:Generated_Source\PSoC6/CapSense_Processing.c **** #include "CapSense_Processing.h"
  48:Generated_Source\PSoC6/CapSense_Processing.c **** #include "CapSense_Filter.h"
  49:Generated_Source\PSoC6/CapSense_Processing.c **** 
  50:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CENTROID_EN)
  51:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_Centroid_LL.h"
  52:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* (0 != CapSense_CENTROID_EN) */
  53:Generated_Source\PSoC6/CapSense_Processing.c **** 
  54:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  55:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_SmartSense_LL.h"
  56:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  57:Generated_Source\PSoC6/CapSense_Processing.c **** 
  58:Generated_Source\PSoC6/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  59:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_SelfTest.h"
  60:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  61:Generated_Source\PSoC6/CapSense_Processing.c **** 
  62:Generated_Source\PSoC6/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
  63:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_AdvancedCentroid_LL.h"
  64:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  65:Generated_Source\PSoC6/CapSense_Processing.c **** 
  66:Generated_Source\PSoC6/CapSense_Processing.c **** #if (CapSense_ENABLE == CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
  67:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_AdaptiveFilter_LL.h"
  68:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  69:Generated_Source\PSoC6/CapSense_Processing.c **** 
  70:Generated_Source\PSoC6/CapSense_Processing.c **** #if(CapSense_ENABLE == CapSense_BALLISTIC_MULTIPLIER_EN)
  71:Generated_Source\PSoC6/CapSense_Processing.c ****     #include "CapSense_Gesture.h"
  72:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  73:Generated_Source\PSoC6/CapSense_Processing.c **** 
  74:Generated_Source\PSoC6/CapSense_Processing.c **** /**************************************************************************************************
  75:Generated_Source\PSoC6/CapSense_Processing.c **** * Local definition
  76:Generated_Source\PSoC6/CapSense_Processing.c **** ***************************************************************************************************
  77:Generated_Source\PSoC6/CapSense_Processing.c **** 
  78:Generated_Source\PSoC6/CapSense_Processing.c **** /* UINT32 constant with all odd bits set. It is used by the processing function of the Proximity wi
  79:Generated_Source\PSoC6/CapSense_Processing.c **** *  determine type of the status bit: odd bits report proximity status; even bits report touch statu
  80:Generated_Source\PSoC6/CapSense_Processing.c **** */
  81:Generated_Source\PSoC6/CapSense_Processing.c **** #define UINT32_ODD_BITS_CONST       (0x55555555u)
  82:Generated_Source\PSoC6/CapSense_Processing.c **** 
  83:Generated_Source\PSoC6/CapSense_Processing.c **** /* Default value for the Off Debounce counter when the Off Debounce is disabled */
  84:Generated_Source\PSoC6/CapSense_Processing.c **** #define DEFAULT_OFF_DEBOUNCE_VALUE  (1u)
  85:Generated_Source\PSoC6/CapSense_Processing.c **** #define PERCENTAGE_100              (100u)
  86:Generated_Source\PSoC6/CapSense_Processing.c **** #define TEMP_BUFFER_MSB_SHIFT       (16)
  87:Generated_Source\PSoC6/CapSense_Processing.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 3


  88:Generated_Source\PSoC6/CapSense_Processing.c **** /**************************************************************************************************
  89:Generated_Source\PSoC6/CapSense_Processing.c **** * Local variables
  90:Generated_Source\PSoC6/CapSense_Processing.c **** ***************************************************************************************************
  91:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
  92:Generated_Source\PSoC6/CapSense_Processing.c ****     static uint16 deconvRowData[CapSense_CSX_MAX_TX_PHASE_LENGTH];
  93:Generated_Source\PSoC6/CapSense_Processing.c **** #endif
  94:Generated_Source\PSoC6/CapSense_Processing.c **** 
  95:Generated_Source\PSoC6/CapSense_Processing.c **** 
  96:Generated_Source\PSoC6/CapSense_Processing.c **** /**************************************************************************************************
  97:Generated_Source\PSoC6/CapSense_Processing.c **** * Static Function Prototypes
  98:Generated_Source\PSoC6/CapSense_Processing.c **** ***************************************************************************************************
  99:Generated_Source\PSoC6/CapSense_Processing.c **** /**
 100:Generated_Source\PSoC6/CapSense_Processing.c **** * \cond SECTION_CYSENSE_INTERNAL
 101:Generated_Source\PSoC6/CapSense_Processing.c **** * \addtogroup group_cysense_internal
 102:Generated_Source\PSoC6/CapSense_Processing.c **** * \{
 103:Generated_Source\PSoC6/CapSense_Processing.c **** */
 104:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_LINEAR_SLIDERS)
 105:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void DpUpdateLinSlider(
 106:Generated_Source\PSoC6/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 107:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 108:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 109:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_LINEAR_SLIDERS) */
 110:Generated_Source\PSoC6/CapSense_Processing.c **** 
 111:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_RADIAL_SLIDERS)
 112:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void DpUpdateRadSlider(
 113:Generated_Source\PSoC6/CapSense_Processing.c ****                         const uint16 newPos[], uint32 numTouches,
 114:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt,
 115:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_WD_SLIDER_STRUCT *ptrRamWdgt);
 116:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_RADIAL_SLIDERS) */
 117:Generated_Source\PSoC6/CapSense_Processing.c **** 
 118:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 119:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 120:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 121:Generated_Source\PSoC6/CapSense_Processing.c **** 
 122:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 123:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 124:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 125:Generated_Source\PSoC6/CapSense_Processing.c **** 
 126:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 127:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 128:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 129:Generated_Source\PSoC6/CapSense_Processing.c **** 
 130:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 131:Generated_Source\PSoC6/CapSense_Processing.c ****     __STATIC_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt);
 132:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 133:Generated_Source\PSoC6/CapSense_Processing.c **** 
 134:Generated_Source\PSoC6/CapSense_Processing.c **** /** \}
 135:Generated_Source\PSoC6/CapSense_Processing.c **** * \endcond */
 136:Generated_Source\PSoC6/CapSense_Processing.c **** 
 137:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 138:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 139:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdTouchpad
 140:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 141:Generated_Source\PSoC6/CapSense_Processing.c **** *
 142:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 143:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the CSD touchpad widget.
 144:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the position data to NONE
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 4


 145:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Initializes the position filter history if enabled.
 146:Generated_Source\PSoC6/CapSense_Processing.c **** *
 147:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 148:Generated_Source\PSoC6/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 149:Generated_Source\PSoC6/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 150:Generated_Source\PSoC6/CapSense_Processing.c **** *
 151:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 152:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitCsdTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 153:Generated_Source\PSoC6/CapSense_Processing.c **** {
 154:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 155:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 touchIndex;
 156:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif
 157:Generated_Source\PSoC6/CapSense_Processing.c **** 
 158:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_TOUCHPAD_STRUCT *ptrWdTouchpad;
 159:Generated_Source\PSoC6/CapSense_Processing.c **** 
 160:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 161:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 162:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 163:Generated_Source\PSoC6/CapSense_Processing.c **** 
 164:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 165:Generated_Source\PSoC6/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 166:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 167:Generated_Source\PSoC6/CapSense_Processing.c **** 
 168:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
 169:Generated_Source\PSoC6/CapSense_Processing.c **** 
 170:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset position data */
 171:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_5X5_CSD_EN)
 172:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 173:Generated_Source\PSoC6/CapSense_Processing.c ****             if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_5X5_MASK))
 174:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 175:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif
 176:Generated_Source\PSoC6/CapSense_Processing.c **** 
 177:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->position.touchNum = 0u;
 178:Generated_Source\PSoC6/CapSense_Processing.c **** 
 179:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 180:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 181:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 182:Generated_Source\PSoC6/CapSense_Processing.c **** 
 183:Generated_Source\PSoC6/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < ADVANCED_CENTROID_MAX_TOUCHES; touchIndex++)
 184:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 185:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].x = ADVANCED_CENTROID_POSITION_NONE;
 186:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].y = ADVANCED_CENTROID_POSITION_NONE;
 187:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zX = ADVANCED_CENTROID_POSITION_NONE;
 188:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->position.pos[touchIndex].zY = ADVANCED_CENTROID_POSITION_NONE;
 189:Generated_Source\PSoC6/CapSense_Processing.c **** 
 190:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Clear position filter history data if available */
 191:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 192:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrHistory)
 193:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 194:Generated_Source\PSoC6/CapSense_Processing.c ****                     CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, 
 195:Generated_Source\PSoC6/CapSense_Processing.c ****                     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 196:Generated_Source\PSoC6/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 197:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 198:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 199:Generated_Source\PSoC6/CapSense_Processing.c ****                     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 200:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 201:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 5


 202:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 203:Generated_Source\PSoC6/CapSense_Processing.c **** 
 204:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 205:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 206:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif
 207:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif
 208:Generated_Source\PSoC6/CapSense_Processing.c **** 
 209:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_CENTROID_3X3_CSD_EN)
 210:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_CENTROID_3X3_MASK))
 211:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 212:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->posX = CapSense_TOUCHPAD_POS_NONE;
 213:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrWdTouchpad->posY = CapSense_TOUCHPAD_POS_NONE;
 214:Generated_Source\PSoC6/CapSense_Processing.c **** 
 215:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Clear position filter history data if available */
 216:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_POSITION_FILTER_EN)
 217:Generated_Source\PSoC6/CapSense_Processing.c ****                 ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 218:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(ptrHistory, CapSense_TOUCHPAD_POS_NONE, CapSense_TOUCHPAD
 219:Generated_Source\PSoC6/CapSense_Processing.c **** 
 220:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 221:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (NULL != ptrHistory)
 222:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 223:Generated_Source\PSoC6/CapSense_Processing.c ****                         AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 224:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory->xPos.posAIIRCoeff = adpContext.coefficient;
 225:Generated_Source\PSoC6/CapSense_Processing.c ****                         ptrHistory->yPos.posAIIRCoeff = adpContext.coefficient;
 226:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 227:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 228:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 229:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 230:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif
 231:Generated_Source\PSoC6/CapSense_Processing.c **** }
 232:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 233:Generated_Source\PSoC6/CapSense_Processing.c **** 
 234:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 235:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 236:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsxTouchpad
 237:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 238:Generated_Source\PSoC6/CapSense_Processing.c **** *
 239:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 240:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the CSX touchpad widget i.e. Resets the position data to NONE.
 241:Generated_Source\PSoC6/CapSense_Processing.c **** *
 242:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 243:Generated_Source\PSoC6/CapSense_Processing.c **** *  The position data is always reset to the CapSense_TOUCHPAD_POS_NONE value.
 244:Generated_Source\PSoC6/CapSense_Processing.c **** *
 245:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 246:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitCsxTouchpad(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 247:Generated_Source\PSoC6/CapSense_Processing.c **** {
 248:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_CSX_TOUCHPAD_STRUCT *ptrWdTouchpad;
 249:Generated_Source\PSoC6/CapSense_Processing.c **** 
 250:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 251:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 touchIndex;
 252:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_TOUCHPAD_POS_HISTORY_STRUCT *ptrHistory;
 253:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_POSITION_FILTER_EN) */
 254:Generated_Source\PSoC6/CapSense_Processing.c **** 
 255:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 256:Generated_Source\PSoC6/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT adpContext;
 257:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 258:Generated_Source\PSoC6/CapSense_Processing.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 6


 259:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad = ptrFlashWdgt->ptr2WdgtRam;
 260:Generated_Source\PSoC6/CapSense_Processing.c **** 
 261:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 262:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 263:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 264:Generated_Source\PSoC6/CapSense_Processing.c **** 
 265:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset position data for finger */
 266:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].x = CapSense_TOUCHPAD_POS_NONE;
 267:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].y = CapSense_TOUCHPAD_POS_NONE;
 268:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdTouchpad->touch[0u].z = CY_LO8(CapSense_TOUCHPAD_POS_NONE);
 269:Generated_Source\PSoC6/CapSense_Processing.c **** 
 270:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 1u)
 271:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].x = CapSense_TOUCHPAD_POS_NONE;
 272:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].y = CapSense_TOUCHPAD_POS_NONE;
 273:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[1u].z = CY_LO8(CapSense_TOUCHPAD_POS_NONE);
 274:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 1u) */
 275:Generated_Source\PSoC6/CapSense_Processing.c **** 
 276:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_CSX_MAX_FINGERS > 2u)
 277:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].x = CapSense_TOUCHPAD_POS_NONE;
 278:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].y = CapSense_TOUCHPAD_POS_NONE;
 279:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdTouchpad->touch[2u].z = CY_LO8(CapSense_TOUCHPAD_POS_NONE);
 280:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_CSX_MAX_FINGERS > 2u) */
 281:Generated_Source\PSoC6/CapSense_Processing.c **** 
 282:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 283:Generated_Source\PSoC6/CapSense_Processing.c ****         for (touchIndex = 0u; touchIndex < CapSense_CSX_MAX_FINGERS; touchIndex++)
 284:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 285:Generated_Source\PSoC6/CapSense_Processing.c ****             if (NULL != ptrHistory)
 286:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 287:Generated_Source\PSoC6/CapSense_Processing.c ****                 /* Clear position filter history data if available */
 288:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_InitPosFiltersDd(&ptrHistory[touchIndex], CapSense_TOUCHPAD_POS_NONE, CapS
 289:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 290:Generated_Source\PSoC6/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdTouchpad->aiirConfig, &adpContext);
 291:Generated_Source\PSoC6/CapSense_Processing.c ****                     ptrHistory[touchIndex].xPos.posAIIRCoeff = adpContext.coefficient;
 292:Generated_Source\PSoC6/CapSense_Processing.c ****                     ptrHistory[touchIndex].yPos.posAIIRCoeff = adpContext.coefficient;
 293:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 294:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 295:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 296:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POSITION_FILTER_EN) */
 297:Generated_Source\PSoC6/CapSense_Processing.c **** }
 298:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 299:Generated_Source\PSoC6/CapSense_Processing.c **** 
 300:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_SLIDER_WIDGET_EN)
 301:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 302:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitSlider
 303:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 304:Generated_Source\PSoC6/CapSense_Processing.c **** *
 305:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 306:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the Radial and Linear Slider widget.
 307:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the position data to NONE
 308:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Initializes the position filter history to NONE if enabled.
 309:Generated_Source\PSoC6/CapSense_Processing.c **** *
 310:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 311:Generated_Source\PSoC6/CapSense_Processing.c **** *  Position data is always reset to the CapSense_SLIDER_POS_NONE value.
 312:Generated_Source\PSoC6/CapSense_Processing.c **** *  The same happens to the position filter history data if enabled.
 313:Generated_Source\PSoC6/CapSense_Processing.c **** *
 314:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 315:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitSlider(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 7


 316:Generated_Source\PSoC6/CapSense_Processing.c **** {
 317:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 idx;
 318:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_SLIDER_STRUCT *ptrWdSlider;
 319:Generated_Source\PSoC6/CapSense_Processing.c **** 
 320:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POSITION_FILTER_EN)
 321:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_SLIDER_POS_HISTORY_STRUCT *ptrHistory;
 322:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 323:Generated_Source\PSoC6/CapSense_Processing.c **** 
 324:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 325:Generated_Source\PSoC6/CapSense_Processing.c ****         ADAPTIVE_FILTER_CONTEXT_STRUCT context;
 326:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 327:Generated_Source\PSoC6/CapSense_Processing.c **** 
 328:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrWdSlider = ptrFlashWdgt->ptr2WdgtRam;
 329:Generated_Source\PSoC6/CapSense_Processing.c **** 
 330:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset slider position data to NONE */
 331:Generated_Source\PSoC6/CapSense_Processing.c ****     for (idx = 0u; idx < CapSense_NUM_CENTROIDS; idx++)
 332:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 333:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrWdSlider->position[idx] = CapSense_SLIDER_POS_NONE;
 334:Generated_Source\PSoC6/CapSense_Processing.c **** 
 335:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_POSITION_FILTER_EN)
 336:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrHistory = ptrFlashWdgt->ptr2PosHistory;
 337:Generated_Source\PSoC6/CapSense_Processing.c ****             if (NULL != ptrHistory)
 338:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 339:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_InitPosFiltersSd(&ptrHistory[idx], CapSense_SLIDER_POS_NONE);
 340:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN)
 341:Generated_Source\PSoC6/CapSense_Processing.c ****                     AdaptiveFilter_Initialize(&ptrWdSlider->aiirConfig, &context);
 342:Generated_Source\PSoC6/CapSense_Processing.c ****                     ptrHistory->posAIIRCoeff = context.coefficient;
 343:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* (0u != CapSense_POS_ADAPTIVE_IIR_FILTER_EN) */
 344:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 345:Generated_Source\PSoC6/CapSense_Processing.c **** 
 346:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_POSITION_FILTER_EN) */
 347:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 348:Generated_Source\PSoC6/CapSense_Processing.c **** }
 349:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 350:Generated_Source\PSoC6/CapSense_Processing.c **** 
 351:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 352:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 353:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitCsdMatrix
 354:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 355:Generated_Source\PSoC6/CapSense_Processing.c **** *
 356:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 357:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the CSD Matrix Buttons widget.
 358:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the active button position data to NONE.
 359:Generated_Source\PSoC6/CapSense_Processing.c **** *
 360:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 361:Generated_Source\PSoC6/CapSense_Processing.c **** *  Position data is always reset to the CapSense_MATRIX_POS_NONE value.
 362:Generated_Source\PSoC6/CapSense_Processing.c **** *
 363:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 364:Generated_Source\PSoC6/CapSense_Processing.c **** __STATIC_INLINE void CapSense_DpInitCsdMatrix(CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt)
 365:Generated_Source\PSoC6/CapSense_Processing.c **** {
 366:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_CSD_MATRIX_STRUCT *ptrRamWdgt;
 367:Generated_Source\PSoC6/CapSense_Processing.c **** 
 368:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_CSD_MATRIX_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 369:Generated_Source\PSoC6/CapSense_Processing.c **** 
 370:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Reset sensor id, row and col registers in data structure */
 371:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->posRow   = CapSense_MATRIX_POS_NONE;
 372:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->posCol   = CapSense_MATRIX_POS_NONE;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 8


 373:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->posSnsId = CapSense_MATRIX_POS_NONE;
 374:Generated_Source\PSoC6/CapSense_Processing.c **** }
 375:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 376:Generated_Source\PSoC6/CapSense_Processing.c **** 
 377:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 378:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpInitialize
 379:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 380:Generated_Source\PSoC6/CapSense_Processing.c **** *
 381:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 382:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs initialization of the data processing FW module:
 383:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the de-bounce counters of all the widgets
 384:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Resets the position filter history for slider and touchpad widgets
 385:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Clears widget and sensor statuses
 386:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Enables all the widgets.
 387:Generated_Source\PSoC6/CapSense_Processing.c **** *
 388:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 389:Generated_Source\PSoC6/CapSense_Processing.c **** *  The Button and Matrix Button widgets have individual de-bounce counter per
 390:Generated_Source\PSoC6/CapSense_Processing.c **** *  sensor for the CSD widgets and per node for the CSX widgets.
 391:Generated_Source\PSoC6/CapSense_Processing.c **** *
 392:Generated_Source\PSoC6/CapSense_Processing.c **** *  The Slider and Touchpad widgets have a single de-bounce counter per widget.
 393:Generated_Source\PSoC6/CapSense_Processing.c **** *
 394:Generated_Source\PSoC6/CapSense_Processing.c **** *  The Proximity widget has two de-bounce counters per sensor. One for the
 395:Generated_Source\PSoC6/CapSense_Processing.c **** *  proximity event and second for the touch event.
 396:Generated_Source\PSoC6/CapSense_Processing.c **** *
 397:Generated_Source\PSoC6/CapSense_Processing.c **** *  All debounce counters during initialization are set to the value of the
 398:Generated_Source\PSoC6/CapSense_Processing.c **** *  onDebounce widget parameter.
 399:Generated_Source\PSoC6/CapSense_Processing.c **** *
 400:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 401:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpInitialize(void)
 402:Generated_Source\PSoC6/CapSense_Processing.c **** {
  28              		.loc 1 402 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38              	.LVL0:
 403:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdgtId;
 404:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 405:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT * ptrRamWdgt;
 406:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_FLASH_WD_STRUCT const * ptrFlashWdgt;
 407:Generated_Source\PSoC6/CapSense_Processing.c **** 
 408:Generated_Source\PSoC6/CapSense_Processing.c ****     for (wdgtId = 0u; wdgtId < CapSense_WDGT_STATUS_WORDS; wdgtId++)
  39              		.loc 1 408 0
  40 0002 0023     		movs	r3, #0
  41 0004 09E0     		b	.L2
  42              	.LVL1:
  43              	.L3:
 409:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 410:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Clear widget status */
 411:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdgtId] = 0u;
  44              		.loc 1 411 0 discriminator 3
  45 0006 1249     		ldr	r1, .L8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 9


  46 0008 1A1D     		adds	r2, r3, #4
  47 000a 9200     		lsls	r2, r2, #2
  48 000c 8818     		adds	r0, r1, r2
  49 000e 0024     		movs	r4, #0
  50 0010 4460     		str	r4, [r0, #4]
 412:Generated_Source\PSoC6/CapSense_Processing.c **** 
 413:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Enable all the widgets */
 414:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtEnable[wdgtId] = 0xFFFFFFFFLu;
  51              		.loc 1 414 0 discriminator 3
  52 0012 0120     		movs	r0, #1
  53 0014 4042     		rsbs	r0, r0, #0
  54 0016 5050     		str	r0, [r2, r1]
 408:Generated_Source\PSoC6/CapSense_Processing.c ****     {
  55              		.loc 1 408 0 discriminator 3
  56 0018 0133     		adds	r3, r3, #1
  57              	.LVL2:
  58              	.L2:
 408:Generated_Source\PSoC6/CapSense_Processing.c ****     {
  59              		.loc 1 408 0 is_stmt 0 discriminator 1
  60 001a 002B     		cmp	r3, #0
  61 001c F3D0     		beq	.L3
  62 001e 0D4C     		ldr	r4, .L8+4
  63 0020 0123     		movs	r3, #1
  64              	.LVL3:
  65 0022 10E0     		b	.L4
  66              	.LVL4:
  67              	.L7:
 415:Generated_Source\PSoC6/CapSense_Processing.c **** 
 416:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Set all the widgets to working state if the Self-Test is not enabled */
 417:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_SELF_TEST_EN)
 418:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_dsRam.wdgtWorking[wdgtId] = 0xFFFFFFFFLu;
 419:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u == CapSense_SELF_TEST_EN) */
 420:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 421:Generated_Source\PSoC6/CapSense_Processing.c **** 
 422:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrFlashWdgt = CapSense_dsFlash.wdgtArray;
 423:Generated_Source\PSoC6/CapSense_Processing.c **** 
 424:Generated_Source\PSoC6/CapSense_Processing.c ****     for (wdgtId = CapSense_TOTAL_WIDGETS; wdgtId-- > 0u; )
 425:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 426:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
  68              		.loc 1 426 0 is_stmt 1
  69 0024 6668     		ldr	r6, [r4, #4]
  70              	.LVL5:
 427:Generated_Source\PSoC6/CapSense_Processing.c ****         widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
  71              		.loc 1 427 0
  72 0026 A27E     		ldrb	r2, [r4, #26]
  73              	.LVL6:
 428:Generated_Source\PSoC6/CapSense_Processing.c **** 
 429:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Clear all sensor statuses */
 430:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.snsStatus[wdgtId] = 0u;
  74              		.loc 1 430 0
  75 0028 094B     		ldr	r3, .L8
  76 002a 5B19     		adds	r3, r3, r5
  77 002c 0021     		movs	r1, #0
  78 002e 1976     		strb	r1, [r3, #24]
 431:Generated_Source\PSoC6/CapSense_Processing.c **** 
 432:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Reset de-bounce counters */
 433:Generated_Source\PSoC6/CapSense_Processing.c ****         switch (widgetType)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 10


  79              		.loc 1 433 0
  80 0030 012A     		cmp	r2, #1
  81 0032 06D1     		bne	.L5
 434:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 435:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_MATRIX_WIDGET_EN)
 436:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_MATRIX_BUTTON_E:
 437:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
 438:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 439:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 440:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_DpInitCsdMatrix(ptrFlashWdgt);
 441:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 442:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
 443:Generated_Source\PSoC6/CapSense_Processing.c **** 
 444:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 445:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 446:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 447:Generated_Source\PSoC6/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 448:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
 449:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
 450:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 451:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 452:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_MATRIX_WIDGET_EN) */
 453:Generated_Source\PSoC6/CapSense_Processing.c **** 
 454:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_BUTTON_WIDGET_EN)
 455:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_BUTTON_E:
 456:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
  82              		.loc 1 456 0
  83 0034 2069     		ldr	r0, [r4, #16]
  84 0036 0028     		cmp	r0, #0
  85 0038 03D0     		beq	.L5
 457:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 458:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize array of debounce counters */
 459:Generated_Source\PSoC6/CapSense_Processing.c ****                     (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 460:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
  86              		.loc 1 460 0
  87 003a F179     		ldrb	r1, [r6, #7]
 461:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (size_t)ptrFlashWdgt->totalNumSns);
  88              		.loc 1 461 0
  89 003c 228B     		ldrh	r2, [r4, #24]
  90              	.LVL7:
 459:Generated_Source\PSoC6/CapSense_Processing.c ****                                  (int32)ptrRamWdgt->onDebounce,
  91              		.loc 1 459 0
  92 003e FFF7FEFF 		bl	memset
  93              	.LVL8:
  94              	.L5:
 462:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 463:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 464:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 465:Generated_Source\PSoC6/CapSense_Processing.c **** 
 466:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_SLIDER_WIDGET_EN)
 467:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_LINEAR_SLIDER_E:
 468:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_RADIAL_SLIDER_E:
 469:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 470:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 471:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize single debounce counter of slider */
 472:Generated_Source\PSoC6/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 473:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 11


 474:Generated_Source\PSoC6/CapSense_Processing.c **** 
 475:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_DpInitSlider(ptrFlashWdgt);
 476:Generated_Source\PSoC6/CapSense_Processing.c **** 
 477:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 478:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
 479:Generated_Source\PSoC6/CapSense_Processing.c **** 
 480:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_TOUCHPAD_WIDGET_EN)
 481:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_TOUCHPAD_E:
 482:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 483:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 484:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Initialize single debounce counter of touchpad */
 485:Generated_Source\PSoC6/CapSense_Processing.c ****                     *(uint8 *)(ptrFlashWdgt->ptr2DebounceArr) = ptrRamWdgt->onDebounce;
 486:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 487:Generated_Source\PSoC6/CapSense_Processing.c **** 
 488:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
 489:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSD_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 490:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 491:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_DpInitCsdTouchpad(ptrFlashWdgt);
 492:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 493:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
 494:Generated_Source\PSoC6/CapSense_Processing.c **** 
 495:Generated_Source\PSoC6/CapSense_Processing.c ****                 #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 496:Generated_Source\PSoC6/CapSense_Processing.c ****                     if (CapSense_SENSE_METHOD_CSX_E == CapSense_GET_SENSE_METHOD(ptrFlashWdgt))
 497:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 498:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_DpInitCsxTouchpad(ptrFlashWdgt);
 499:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 500:Generated_Source\PSoC6/CapSense_Processing.c ****                 #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 501:Generated_Source\PSoC6/CapSense_Processing.c **** 
 502:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 503:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_TOUCHPAD_WIDGET_EN) */
 504:Generated_Source\PSoC6/CapSense_Processing.c **** 
 505:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != CapSense_PROXIMITY_WIDGET_EN)
 506:Generated_Source\PSoC6/CapSense_Processing.c ****             case CapSense_WD_PROXIMITY_E:
 507:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (NULL != ptrFlashWdgt->ptr2DebounceArr)
 508:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 509:Generated_Source\PSoC6/CapSense_Processing.c ****                     /* Proximity widgets have 2 de-bounce counters per sensor.
 510:Generated_Source\PSoC6/CapSense_Processing.c ****                      * Therefore the number of sensors is multiplied by 2.
 511:Generated_Source\PSoC6/CapSense_Processing.c ****                      */
 512:Generated_Source\PSoC6/CapSense_Processing.c ****                    (void)memset(ptrFlashWdgt->ptr2DebounceArr,
 513:Generated_Source\PSoC6/CapSense_Processing.c ****                                 (int32)ptrRamWdgt->onDebounce,
 514:Generated_Source\PSoC6/CapSense_Processing.c ****                                 (size_t)ptrFlashWdgt->totalNumSns * 2u);
 515:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 516:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 517:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
 518:Generated_Source\PSoC6/CapSense_Processing.c **** 
 519:Generated_Source\PSoC6/CapSense_Processing.c ****             default:
 520:Generated_Source\PSoC6/CapSense_Processing.c ****                 break;
 521:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 522:Generated_Source\PSoC6/CapSense_Processing.c **** 
 523:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move to next widget */
 524:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrFlashWdgt++;
  95              		.loc 1 524 0
  96 0042 1C34     		adds	r4, r4, #28
  97              	.LVL9:
 424:Generated_Source\PSoC6/CapSense_Processing.c ****     {
  98              		.loc 1 424 0
  99 0044 2B00     		movs	r3, r5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 12


 100              	.LVL10:
 101              	.L4:
 424:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 102              		.loc 1 424 0 is_stmt 0 discriminator 1
 103 0046 5D1E     		subs	r5, r3, #1
 104              	.LVL11:
 105 0048 002B     		cmp	r3, #0
 106 004a EBD1     		bne	.L7
 525:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 526:Generated_Source\PSoC6/CapSense_Processing.c **** }
 107              		.loc 1 526 0 is_stmt 1
 108              		@ sp needed
 109              	.LVL12:
 110              	.LVL13:
 111 004c 70BD     		pop	{r4, r5, r6, pc}
 112              	.L9:
 113 004e C046     		.align	2
 114              	.L8:
 115 0050 00000000 		.word	CapSense_dsRam
 116 0054 00000000 		.word	CapSense_dsFlash
 117              		.cfi_endproc
 118              	.LFE45:
 119              		.size	CapSense_DpInitialize, .-CapSense_DpInitialize
 120              		.section	.text.CapSense_DpUpdateDifferences,"ax",%progbits
 121              		.align	2
 122              		.global	CapSense_DpUpdateDifferences
 123              		.code	16
 124              		.thumb_func
 125              		.type	CapSense_DpUpdateDifferences, %function
 126              	CapSense_DpUpdateDifferences:
 127              	.LFB49:
 527:Generated_Source\PSoC6/CapSense_Processing.c **** 
 528:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSX_WIDGETS)
 529:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 530:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetRawCounts
 531:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 532:Generated_Source\PSoC6/CapSense_Processing.c **** *
 533:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 534:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts.
 535:Generated_Source\PSoC6/CapSense_Processing.c **** *
 536:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 537:Generated_Source\PSoC6/CapSense_Processing.c **** *  Performs default processing of the CSX raw counts:
 538:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Run Filters
 539:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Update Baselines
 540:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Update Differences
 541:Generated_Source\PSoC6/CapSense_Processing.c **** *   - Update Status.
 542:Generated_Source\PSoC6/CapSense_Processing.c **** *  The same process is applied to all the sensors of the specified widget.
 543:Generated_Source\PSoC6/CapSense_Processing.c **** *
 544:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 545:Generated_Source\PSoC6/CapSense_Processing.c **** *
 546:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 547:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 548:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 549:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 550:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 551:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 552:Generated_Source\PSoC6/CapSense_Processing.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 13


 553:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 555:Generated_Source\PSoC6/CapSense_Processing.c **** {
 556:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 result = CY_RET_SUCCESS;
 557:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 widgetType;
 558:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 snsCount;
 559:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
 560:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 561:Generated_Source\PSoC6/CapSense_Processing.c **** 
 562:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 563:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 564:Generated_Source\PSoC6/CapSense_Processing.c **** 
 565:Generated_Source\PSoC6/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 566:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 567:Generated_Source\PSoC6/CapSense_Processing.c **** 
 568:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 569:Generated_Source\PSoC6/CapSense_Processing.c ****     snsCount = ptrFlashWdgt->totalNumSns;
 570:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 571:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 572:Generated_Source\PSoC6/CapSense_Processing.c **** 
 573:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Run deconvolution algorithm for the widgets with multiphase TX support */
 574:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MULTIPHASE_TX_EN)
 575:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (ptrFlashWdgt->staticConfig & CapSense_MULTIPHASE_TX_MASK))
 576:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 577:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_DpDeconvolution(ptrFlashWdgt);
 578:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 579:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif  /* #if (0u != CapSense_CSX_MULTIPHASE_TX_EN) */
 580:Generated_Source\PSoC6/CapSense_Processing.c **** 
 581:Generated_Source\PSoC6/CapSense_Processing.c ****     for (;snsCount-- > 0u;)
 582:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 583:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 584:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
 585:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 586:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
 587:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 588:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 589:Generated_Source\PSoC6/CapSense_Processing.c **** 
 590:Generated_Source\PSoC6/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 591:Generated_Source\PSoC6/CapSense_Processing.c **** 
 592:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 593:Generated_Source\PSoC6/CapSense_Processing.c ****             if (CY_RET_SUCCESS != result)
 594:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 595:Generated_Source\PSoC6/CapSense_Processing.c ****                 result = snsCount | CapSense_PROCESS_BASELINE_FAILED;
 596:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 597:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 598:Generated_Source\PSoC6/CapSense_Processing.c **** 
 599:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
 600:Generated_Source\PSoC6/CapSense_Processing.c **** 
 601:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move pointers to the next sensor and filter history objects */
 602:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrSnsTmp++;
 603:Generated_Source\PSoC6/CapSense_Processing.c ****         
 604:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 605:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_INC_REG_FLTR_OBJ(fltrHistV);
 606:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 607:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 608:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 609:Generated_Source\PSoC6/CapSense_Processing.c **** }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 14


 610:Generated_Source\PSoC6/CapSense_Processing.c **** 
 611:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 612:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxSensorRawCountsExt
 613:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 614:Generated_Source\PSoC6/CapSense_Processing.c **** *
 615:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 616:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 617:Generated_Source\PSoC6/CapSense_Processing.c **** *
 618:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 619:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSX sensor raw counts.
 620:Generated_Source\PSoC6/CapSense_Processing.c **** *
 621:Generated_Source\PSoC6/CapSense_Processing.c **** *   If all bits are set at once the default processing order will take place.
 622:Generated_Source\PSoC6/CapSense_Processing.c **** *   For the custom order this API can be called multiple times and execute one task at a time.
 623:Generated_Source\PSoC6/CapSense_Processing.c **** *
 624:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 625:Generated_Source\PSoC6/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the specific RAM Sensor Object.
 626:Generated_Source\PSoC6/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM associated with specific sens
 627:Generated_Source\PSoC6/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 628:Generated_Source\PSoC6/CapSense_Processing.c **** *   The mode parameters can take the following values:
 629:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 630:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 631:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 632:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 633:Generated_Source\PSoC6/CapSense_Processing.c **** *
 634:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 635:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 636:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 637:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 638:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 639:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 640:Generated_Source\PSoC6/CapSense_Processing.c **** *
 641:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 642:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsxSensorRawCountsExt(
 643:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 644:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
 645:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 646:Generated_Source\PSoC6/CapSense_Processing.c ****                 uint32 mode)
 647:Generated_Source\PSoC6/CapSense_Processing.c **** {
 648:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  result = CY_RET_SUCCESS;
 649:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 650:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 651:Generated_Source\PSoC6/CapSense_Processing.c **** 
 652:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 653:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 654:Generated_Source\PSoC6/CapSense_Processing.c **** 
 655:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 656:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 657:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 658:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
 659:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 660:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
 661:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 662:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 663:Generated_Source\PSoC6/CapSense_Processing.c ****     #else
 664:Generated_Source\PSoC6/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 665:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 666:Generated_Source\PSoC6/CapSense_Processing.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 15


 667:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 668:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 669:Generated_Source\PSoC6/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
 670:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 671:Generated_Source\PSoC6/CapSense_Processing.c **** 
 672:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 673:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 674:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
 675:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 676:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 677:Generated_Source\PSoC6/CapSense_Processing.c **** }
 678:Generated_Source\PSoC6/CapSense_Processing.c **** 
 679:Generated_Source\PSoC6/CapSense_Processing.c **** 
 680:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 681:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsxWidgetStatus
 682:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 683:Generated_Source\PSoC6/CapSense_Processing.c **** *
 684:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 685:Generated_Source\PSoC6/CapSense_Processing.c **** *   Updates the status of the CSX widget in the Data Structure.
 686:Generated_Source\PSoC6/CapSense_Processing.c **** *
 687:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 688:Generated_Source\PSoC6/CapSense_Processing.c **** *  This API determines the type of widget and runs the appropriate function
 689:Generated_Source\PSoC6/CapSense_Processing.c **** *  that implements the status update algorithm for this type of widget.
 690:Generated_Source\PSoC6/CapSense_Processing.c **** *
 691:Generated_Source\PSoC6/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
 692:Generated_Source\PSoC6/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
 693:Generated_Source\PSoC6/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
 694:Generated_Source\PSoC6/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
 695:Generated_Source\PSoC6/CapSense_Processing.c **** *
 696:Generated_Source\PSoC6/CapSense_Processing.c **** *  Depending on the type of widget the snsStatus register may contain either
 697:Generated_Source\PSoC6/CapSense_Processing.c **** *  status of each widget node (active/non-active) or in case of the CSX Touchpad
 698:Generated_Source\PSoC6/CapSense_Processing.c **** *  is contains the number of touches. In both cases 0 means that widget is not
 699:Generated_Source\PSoC6/CapSense_Processing.c **** *  active.
 700:Generated_Source\PSoC6/CapSense_Processing.c **** *
 701:Generated_Source\PSoC6/CapSense_Processing.c **** * \param widgetId     The widget ID number.
 702:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 703:Generated_Source\PSoC6/CapSense_Processing.c **** *
 704:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 705:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpProcessCsxWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
 706:Generated_Source\PSoC6/CapSense_Processing.c **** {
 707:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 sensorStatus;
 708:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusIndex;
 709:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusMask;
 710:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
 711:Generated_Source\PSoC6/CapSense_Processing.c **** 
 712:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
 713:Generated_Source\PSoC6/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 714:Generated_Source\PSoC6/CapSense_Processing.c **** 
 715:Generated_Source\PSoC6/CapSense_Processing.c ****     switch (widgetType)
 716:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 717:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
 718:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
 719:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 720:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 721:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 722:Generated_Source\PSoC6/CapSense_Processing.c **** 
 723:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSX_MATRIX_WIDGET_EN)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 16


 724:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
 725:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
 726:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 727:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_MATRIX_WIDGET_EN) */
 728:Generated_Source\PSoC6/CapSense_Processing.c **** 
 729:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN)
 730:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
 731:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsxTouchpad(sensorStatus, ptrFlashWdgt);
 732:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 733:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSX_TOUCHPAD_WIDGET_EN) */
 734:Generated_Source\PSoC6/CapSense_Processing.c **** 
 735:Generated_Source\PSoC6/CapSense_Processing.c ****     default:
 736:Generated_Source\PSoC6/CapSense_Processing.c ****         CY_ASSERT(0 != 0);
 737:Generated_Source\PSoC6/CapSense_Processing.c ****         break;
 738:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 739:Generated_Source\PSoC6/CapSense_Processing.c **** 
 740:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Update sensor status in the data structure */
 741:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
 742:Generated_Source\PSoC6/CapSense_Processing.c **** 
 743:Generated_Source\PSoC6/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
 744:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
 745:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 746:Generated_Source\PSoC6/CapSense_Processing.c **** 
 747:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
 748:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u == sensorStatus)
 749:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 750:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
 751:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 752:Generated_Source\PSoC6/CapSense_Processing.c ****     else
 753:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 754:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
 755:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 756:Generated_Source\PSoC6/CapSense_Processing.c **** }
 757:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if CapSense_TOTAL_CSX_WIDGETS */
 758:Generated_Source\PSoC6/CapSense_Processing.c **** 
 759:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0u != CapSense_TOTAL_CSD_WIDGETS)
 760:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 761:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetRawCounts
 762:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 763:Generated_Source\PSoC6/CapSense_Processing.c **** *
 764:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 765:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts.
 766:Generated_Source\PSoC6/CapSense_Processing.c **** *
 767:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 768:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs default processing for the CSD widget raw counts:
 769:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Run Filters
 770:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Update Thresholds (FW Auto-tuning)
 771:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Update Baselines
 772:Generated_Source\PSoC6/CapSense_Processing.c **** *    - Update Differences.
 773:Generated_Source\PSoC6/CapSense_Processing.c **** *   The process is applied to all widget's sensors.
 774:Generated_Source\PSoC6/CapSense_Processing.c **** *
 775:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
 776:Generated_Source\PSoC6/CapSense_Processing.c **** *
 777:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 778:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified widget processing operation:
 779:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 780:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 17


 781:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 782:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 783:Generated_Source\PSoC6/CapSense_Processing.c **** *
 784:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 785:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdWidgetRawCounts(CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
 786:Generated_Source\PSoC6/CapSense_Processing.c **** {
 787:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  result = CY_RET_SUCCESS;
 788:Generated_Source\PSoC6/CapSense_Processing.c **** 
 789:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 790:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 bslnTstResult = CY_RET_SUCCESS;
 791:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 792:Generated_Source\PSoC6/CapSense_Processing.c **** 
 793:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 794:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  snsId;
 795:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
 796:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 797:Generated_Source\PSoC6/CapSense_Processing.c **** 
 798:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 799:Generated_Source\PSoC6/CapSense_Processing.c ****         /* The noise envelope data is available only when Full CSD Auto-Tuning is enabled */
 800:Generated_Source\PSoC6/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
 801:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 802:Generated_Source\PSoC6/CapSense_Processing.c ****             uint32  proximityThreshold;
 803:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 804:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 805:Generated_Source\PSoC6/CapSense_Processing.c **** 
 806:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 807:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_PTR_FILTER_VARIANT fltrHistV;
 808:Generated_Source\PSoC6/CapSense_Processing.c **** 
 809:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Determine if widget type is proximity */
 810:Generated_Source\PSoC6/CapSense_Processing.c ****         uint32 isProxWdgt = (CapSense_GET_WIDGET_TYPE(ptrFlashWdgt) == CapSense_WD_PROXIMITY_E) ? 1
 811:Generated_Source\PSoC6/CapSense_Processing.c **** 
 812:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Get pointer to the filter history object */
 813:Generated_Source\PSoC6/CapSense_Processing.c ****         fltrHistV.ptr = ptrFlashWdgt->ptr2FltrHistory;
 814:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 815:Generated_Source\PSoC6/CapSense_Processing.c **** 
 816:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 817:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 818:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 819:Generated_Source\PSoC6/CapSense_Processing.c **** 
 820:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 821:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
 822:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 823:Generated_Source\PSoC6/CapSense_Processing.c **** 
 824:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Iterate through all widget's sensors */
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     for(snsId = 0u; snsId < ptrFlashWdgt->totalNumSns; snsId++)
 826:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 827:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Run all enabled filter on specified widget's sensor */
 828:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 829:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, ptrSnsTmp, widgetType);
 830:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, ptrSnsTmp, widgetType);
 832:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 833:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 834:Generated_Source\PSoC6/CapSense_Processing.c **** 
 835:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Run auto-tuning activities */
 836:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 837:Generated_Source\PSoC6/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(ptrSnsTmp->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 18


 838:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, snsId);
 839:Generated_Source\PSoC6/CapSense_Processing.c **** 
 840:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
 841:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 842:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
 843:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 844:Generated_Source\PSoC6/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
 845:Generated_Source\PSoC6/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
 846:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 847:Generated_Source\PSoC6/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
 848:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 849:Generated_Source\PSoC6/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
 850:Generated_Source\PSoC6/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
 851:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 852:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 853:Generated_Source\PSoC6/CapSense_Processing.c **** 
 854:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Move to next noise-envelope object */
 855:Generated_Source\PSoC6/CapSense_Processing.c ****             ptrNoiseEnvelope++;
 856:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 857:Generated_Source\PSoC6/CapSense_Processing.c **** 
 858:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 859:Generated_Source\PSoC6/CapSense_Processing.c ****             bslnTstResult = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 860:Generated_Source\PSoC6/CapSense_Processing.c ****             if ((CY_RET_SUCCESS != bslnTstResult) && (CY_RET_SUCCESS == result))
 861:Generated_Source\PSoC6/CapSense_Processing.c ****             {
 862:Generated_Source\PSoC6/CapSense_Processing.c ****                 result = snsId | CapSense_PROCESS_BASELINE_FAILED;
 863:Generated_Source\PSoC6/CapSense_Processing.c ****             }
 864:Generated_Source\PSoC6/CapSense_Processing.c ****         #else /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 865:Generated_Source\PSoC6/CapSense_Processing.c ****             result = CapSense_FtUpdateBaseline(ptrRamWdgt, ptrSnsTmp, widgetType);
 866:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 867:Generated_Source\PSoC6/CapSense_Processing.c **** 
 868:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, ptrSnsTmp);
 869:Generated_Source\PSoC6/CapSense_Processing.c **** 
 870:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move to next sensor object */
 871:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrSnsTmp++;
 872:Generated_Source\PSoC6/CapSense_Processing.c **** 
 873:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 874:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Move to the next filter history object */
 875:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_INC_FLTR_OBJ_VARIANT(isProxWdgt, fltrHistV);
 876:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 877:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 878:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 879:Generated_Source\PSoC6/CapSense_Processing.c **** }
 880:Generated_Source\PSoC6/CapSense_Processing.c **** 
 881:Generated_Source\PSoC6/CapSense_Processing.c **** 
 882:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 883:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdSensorRawCountsExt
 884:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 885:Generated_Source\PSoC6/CapSense_Processing.c **** *
 886:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 887:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
 888:Generated_Source\PSoC6/CapSense_Processing.c **** *
 889:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 890:Generated_Source\PSoC6/CapSense_Processing.c **** *   Performs customized processing of the CSD sensor raw counts.
 891:Generated_Source\PSoC6/CapSense_Processing.c **** *
 892:Generated_Source\PSoC6/CapSense_Processing.c **** *   Note that this API updates data associated only with the sensor. It cannot be used to update
 893:Generated_Source\PSoC6/CapSense_Processing.c **** *   widget status.
 894:Generated_Source\PSoC6/CapSense_Processing.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 19


 895:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash widget structure.
 896:Generated_Source\PSoC6/CapSense_Processing.c **** * \param curSnsPtr    The pointer to the sensor object in RAM.
 897:Generated_Source\PSoC6/CapSense_Processing.c **** * \param fltrHistV    The pointer to the Filter History Object in RAM.
 898:Generated_Source\PSoC6/CapSense_Processing.c **** * \param mode         The bit-mask with the data processing tasks to be executed.
 899:Generated_Source\PSoC6/CapSense_Processing.c **** *   The mode parameters can take the following values:
 900:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_FILTER     (0x01) Run Firmware Filter
 901:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_BASELINE   (0x02) Update Baselines
 902:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_DIFFCOUNTS (0x04) Update Difference Counts
 903:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_CALC_NOISE (0x08) Calculate Noise (only if FW Tuning is enabled)
 904:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_THRESHOLDS (0x10) Update Thresholds (only if FW Tuning is enabled)
 905:Generated_Source\PSoC6/CapSense_Processing.c **** *    - CapSense_PROCESS_ALL               Execute all tasks
 906:Generated_Source\PSoC6/CapSense_Processing.c **** *
 907:Generated_Source\PSoC6/CapSense_Processing.c **** * \return
 908:Generated_Source\PSoC6/CapSense_Processing.c **** *  Returns the status of the specified sensor processing operation:
 909:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CY_RET_SUCCESS if operation was successfully completed;
 910:Generated_Source\PSoC6/CapSense_Processing.c **** *  - CapSense_PROCESS_BASELINE_FAILED if baseline processing of any
 911:Generated_Source\PSoC6/CapSense_Processing.c **** *    sensor of the specified widget failed. The result is concatenated with the index
 912:Generated_Source\PSoC6/CapSense_Processing.c **** *    of failed sensor.
 913:Generated_Source\PSoC6/CapSense_Processing.c **** *
 914:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
 915:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessCsdSensorRawCountsExt(
 916:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt,
 917:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_RAM_SNS_STRUCT *curSnsPtr,
 918:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_PTR_FILTER_VARIANT fltrHistV,
 919:Generated_Source\PSoC6/CapSense_Processing.c ****                  uint32 mode)
 920:Generated_Source\PSoC6/CapSense_Processing.c **** {
 921:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 result = CY_RET_SUCCESS;
 922:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 923:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
 924:Generated_Source\PSoC6/CapSense_Processing.c **** 
 925:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 926:Generated_Source\PSoC6/CapSense_Processing.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope;
 927:Generated_Source\PSoC6/CapSense_Processing.c ****         #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 928:Generated_Source\PSoC6/CapSense_Processing.c ****             uint32  proximityThreshold;
 929:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 930:Generated_Source\PSoC6/CapSense_Processing.c **** 
 931:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Need to specify pointer to corresponding sensor's noise-envelope object.*/
 932:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrNoiseEnvelope = ptrFlashWdgt->ptr2NoiseEnvlp;
 933:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 934:Generated_Source\PSoC6/CapSense_Processing.c **** 
 935:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 936:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 937:Generated_Source\PSoC6/CapSense_Processing.c **** 
 938:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 939:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_FILTER))
 940:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 941:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_FtRunEnabledFiltersInternal(fltrHistV, curSnsPtr, widgetType);
 942:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ALP_FILTER_EN)
 943:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_ConfigRunALPInternal(fltrHistV, ptrRamWdgt, curSnsPtr, widgetType);
 944:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif
 945:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 946:Generated_Source\PSoC6/CapSense_Processing.c ****     #else
 947:Generated_Source\PSoC6/CapSense_Processing.c ****         (void)fltrHistV; /* This parameter is unused in such configurations */
 948:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
 949:Generated_Source\PSoC6/CapSense_Processing.c **** 
 950:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 951:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_CALC_NOISE))
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 20


 952:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 953:Generated_Source\PSoC6/CapSense_Processing.c ****             SmartSense_RunNoiseEnvelope(curSnsPtr->raw[0u], ptrRamWdgt->sigPFC, ptrNoiseEnvelope);
 954:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 955:Generated_Source\PSoC6/CapSense_Processing.c **** 
 956:Generated_Source\PSoC6/CapSense_Processing.c ****         if (0u != (mode & CapSense_PROCESS_THRESHOLDS))
 957:Generated_Source\PSoC6/CapSense_Processing.c ****         {
 958:Generated_Source\PSoC6/CapSense_Processing.c ****             CapSense_DpUpdateThresholds(ptrRamWdgt, ptrNoiseEnvelope, 0u);
 959:Generated_Source\PSoC6/CapSense_Processing.c **** 
 960:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Calculate Proximity Touch Threshold in SmartSense mode based on Finger Threshold and
 961:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (CapSense_ENABLE == CapSense_PROXIMITY_WIDGET_EN)
 962:Generated_Source\PSoC6/CapSense_Processing.c ****                 if (CapSense_WD_PROXIMITY_E == CapSense_GET_WIDGET_TYPE(ptrFlashWdgt))
 963:Generated_Source\PSoC6/CapSense_Processing.c ****                 {
 964:Generated_Source\PSoC6/CapSense_Processing.c ****                     proximityThreshold = ((uint32)ptrRamWdgt->fingerTh * CapSense_PROX_TOUCH_COEFF)
 965:Generated_Source\PSoC6/CapSense_Processing.c ****                     if ((((1Lu) << CapSense_THRESHOLD_SIZE) - 1u) < proximityThreshold)
 966:Generated_Source\PSoC6/CapSense_Processing.c ****                     {
 967:Generated_Source\PSoC6/CapSense_Processing.c ****                         proximityThreshold = ((1Lu) << CapSense_THRESHOLD_SIZE) - 1u;
 968:Generated_Source\PSoC6/CapSense_Processing.c ****                     }
 969:Generated_Source\PSoC6/CapSense_Processing.c ****                     ((CapSense_RAM_WD_PROXIMITY_STRUCT *)ptrFlashWdgt->ptr2WdgtRam)->proxTouchTh =
 970:Generated_Source\PSoC6/CapSense_Processing.c ****                         (CapSense_THRESHOLD_TYPE)proximityThreshold;
 971:Generated_Source\PSoC6/CapSense_Processing.c ****                 }
 972:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0 != CapSense_PROXIMITY_WIDGET_EN) */
 973:Generated_Source\PSoC6/CapSense_Processing.c ****         }
 974:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 975:Generated_Source\PSoC6/CapSense_Processing.c **** 
 976:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_BASELINE))
 977:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 978:Generated_Source\PSoC6/CapSense_Processing.c ****         result = CapSense_FtUpdateBaseline(ptrRamWdgt, curSnsPtr, widgetType);
 979:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 980:Generated_Source\PSoC6/CapSense_Processing.c **** 
 981:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u != (mode & CapSense_PROCESS_DIFFCOUNTS))
 982:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 983:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_DpUpdateDifferences(ptrRamWdgt, curSnsPtr);
 984:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 985:Generated_Source\PSoC6/CapSense_Processing.c ****     return result;
 986:Generated_Source\PSoC6/CapSense_Processing.c **** }
 987:Generated_Source\PSoC6/CapSense_Processing.c **** 
 988:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
 989:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessCsdWidgetStatus
 990:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
 991:Generated_Source\PSoC6/CapSense_Processing.c **** *
 992:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
 993:Generated_Source\PSoC6/CapSense_Processing.c **** *  Runs the status processing of the CSD widget and updates it in the Data Structure.
 994:Generated_Source\PSoC6/CapSense_Processing.c **** *
 995:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
 996:Generated_Source\PSoC6/CapSense_Processing.c **** *  This API determines the widget type and calls the appropriate low-level processing
 997:Generated_Source\PSoC6/CapSense_Processing.c **** *  function. Based on the returned results it updates the widget and sensor
 998:Generated_Source\PSoC6/CapSense_Processing.c **** *  status in the data structure. Any widget specific registers like the centroid
 999:Generated_Source\PSoC6/CapSense_Processing.c **** *  position are updated directly in the low-level processing function.
1000:Generated_Source\PSoC6/CapSense_Processing.c **** *
1001:Generated_Source\PSoC6/CapSense_Processing.c **** *  When the widget-specific processing completes this API updates the snsStatus
1002:Generated_Source\PSoC6/CapSense_Processing.c **** *  and wdgtStatus registers in the data structure. The wdgtStatus register
1003:Generated_Source\PSoC6/CapSense_Processing.c **** *  is a bitmask were each bit corresponds to the specific widget identified by
1004:Generated_Source\PSoC6/CapSense_Processing.c **** *  the widget index. When the bit is set the widget is active (touched);
1005:Generated_Source\PSoC6/CapSense_Processing.c **** *
1006:Generated_Source\PSoC6/CapSense_Processing.c **** *  The snsStatus register for CSD widgets contains status of each widget sensor
1007:Generated_Source\PSoC6/CapSense_Processing.c **** *  (active/non-active). Each bit corresponds to one sensor. In case of the
1008:Generated_Source\PSoC6/CapSense_Processing.c **** *  Proximity widget two bits are used per sensor: one for proximity status and
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 21


1009:Generated_Source\PSoC6/CapSense_Processing.c **** *  second for the touch status.
1010:Generated_Source\PSoC6/CapSense_Processing.c **** *
1011:Generated_Source\PSoC6/CapSense_Processing.c **** * \param widgetId      The widget index number.
1012:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt  The pointer to the Flash widget structure.
1013:Generated_Source\PSoC6/CapSense_Processing.c **** *
1014:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1015:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpProcessCsdWidgetStatus(uint32 widgetId, CapSense_FLASH_WD_STRUCT const *ptrFlashWdg
1016:Generated_Source\PSoC6/CapSense_Processing.c **** {
1017:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 sensorStatus;
1018:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusIndex;
1019:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 wdStatusMask;
1020:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_WD_TYPE_ENUM widgetType;
1021:Generated_Source\PSoC6/CapSense_Processing.c **** 
1022:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = (CapSense_WD_TYPE_ENUM)ptrFlashWdgt->wdgtType;
1023:Generated_Source\PSoC6/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
1024:Generated_Source\PSoC6/CapSense_Processing.c **** 
1025:Generated_Source\PSoC6/CapSense_Processing.c ****     switch (widgetType)
1026:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1027:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_BUTTON_WIDGET_EN)
1028:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_BUTTON_E:
1029:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessButton(sensorStatus, ptrFlashWdgt);
1030:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1031:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
1032:Generated_Source\PSoC6/CapSense_Processing.c **** 
1033:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_SLIDER_WIDGET_EN)
1034:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_LINEAR_SLIDER_E:
1035:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_RADIAL_SLIDER_E:
1036:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessSlider(sensorStatus, ptrFlashWdgt);
1037:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1038:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_SLIDER_WIDGET_EN) */
1039:Generated_Source\PSoC6/CapSense_Processing.c **** 
1040:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSD_MATRIX_WIDGET_EN)
1041:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_MATRIX_BUTTON_E:
1042:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdMatrix(sensorStatus, ptrFlashWdgt);
1043:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1044:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_MATRIX_WIDGET_EN) */
1045:Generated_Source\PSoC6/CapSense_Processing.c **** 
1046:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN)
1047:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_TOUCHPAD_E:
1048:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessCsdTouchpad(sensorStatus, ptrFlashWdgt);
1049:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_BALLISTIC_MULTIPLIER_EN)
1050:Generated_Source\PSoC6/CapSense_Processing.c ****                 CapSense_RunBallisticMultiplier(widgetId);
1051:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* (0u != CapSense_BALLISTIC_MULTIPLIER_EN) */
1052:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1053:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1054:Generated_Source\PSoC6/CapSense_Processing.c **** 
1055:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_PROXIMITY_WIDGET_EN)
1056:Generated_Source\PSoC6/CapSense_Processing.c ****         case CapSense_WD_PROXIMITY_E:
1057:Generated_Source\PSoC6/CapSense_Processing.c ****             sensorStatus = CapSense_DpProcessProximity(sensorStatus, ptrFlashWdgt);
1058:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
1059:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_PROXIMITY_WIDGET_EN) */
1060:Generated_Source\PSoC6/CapSense_Processing.c **** 
1061:Generated_Source\PSoC6/CapSense_Processing.c ****     default:
1062:Generated_Source\PSoC6/CapSense_Processing.c ****         CY_ASSERT(0 != 0);
1063:Generated_Source\PSoC6/CapSense_Processing.c ****         break;
1064:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1065:Generated_Source\PSoC6/CapSense_Processing.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 22


1066:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_dsRam.snsStatus[widgetId] = (CapSense_SNS_STS_TYPE)sensorStatus;
1067:Generated_Source\PSoC6/CapSense_Processing.c **** 
1068:Generated_Source\PSoC6/CapSense_Processing.c ****     /* The next two lines calculate index and bitmask of the widget status bit in the wdgtStatus ar
1069:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusIndex = CapSense_GET_WDGT_STATUS_INDEX(widgetId);
1070:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
1071:Generated_Source\PSoC6/CapSense_Processing.c **** 
1072:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Check if there are active sensors and update widget status accordingly */
1073:Generated_Source\PSoC6/CapSense_Processing.c ****     if (0u == sensorStatus)
1074:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1075:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] &= ~wdStatusMask;
1076:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1077:Generated_Source\PSoC6/CapSense_Processing.c ****     else
1078:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1079:Generated_Source\PSoC6/CapSense_Processing.c ****         CapSense_dsRam.wdgtStatus[wdStatusIndex] |= wdStatusMask;
1080:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1081:Generated_Source\PSoC6/CapSense_Processing.c **** }
1082:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
1083:Generated_Source\PSoC6/CapSense_Processing.c **** 
1084:Generated_Source\PSoC6/CapSense_Processing.c **** 
1085:Generated_Source\PSoC6/CapSense_Processing.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1086:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
1087:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateThresholds
1088:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
1089:Generated_Source\PSoC6/CapSense_Processing.c **** *
1090:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
1091:Generated_Source\PSoC6/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1092:Generated_Source\PSoC6/CapSense_Processing.c **** *
1093:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
1094:Generated_Source\PSoC6/CapSense_Processing.c **** *   Updates noise and finger thresholds for a specified widget.
1095:Generated_Source\PSoC6/CapSense_Processing.c **** *   This algorithm is a part of Auto-tuning feature.
1096:Generated_Source\PSoC6/CapSense_Processing.c **** *
1097:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrRamWdgt       The pointer to the RAM widget object.
1098:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrNoiseEnvelope The pointer to the noise-envelope object in RAM.
1099:Generated_Source\PSoC6/CapSense_Processing.c **** * \param startFlag        The flag indicates when new widget is processed.
1100:Generated_Source\PSoC6/CapSense_Processing.c **** *
1101:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1102:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpUpdateThresholds(CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1103:Generated_Source\PSoC6/CapSense_Processing.c ****                                          SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope,
1104:Generated_Source\PSoC6/CapSense_Processing.c ****                                          uint32 startFlag)
1105:Generated_Source\PSoC6/CapSense_Processing.c **** {
1106:Generated_Source\PSoC6/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT thresholds;
1107:Generated_Source\PSoC6/CapSense_Processing.c ****     SMARTSENSE_UPDATE_THRESHOLDS_STRUCT *ptrThresholds = &thresholds;
1108:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrThresholds->fingerTh = ptrRamWdgt->fingerTh;
1109:Generated_Source\PSoC6/CapSense_Processing.c **** 
1110:Generated_Source\PSoC6/CapSense_Processing.c ****     SmartSense_UpdateThresholds(ptrNoiseEnvelope, ptrThresholds, ptrRamWdgt->sigPFC, startFlag);
1111:Generated_Source\PSoC6/CapSense_Processing.c **** 
1112:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->fingerTh = ptrThresholds->fingerTh;
1113:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->noiseTh = ptrThresholds->noiseTh;
1114:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->nNoiseTh = ptrThresholds->nNoiseTh;
1115:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt->hysteresis = ptrThresholds->hysteresis;
1116:Generated_Source\PSoC6/CapSense_Processing.c **** }
1117:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1118:Generated_Source\PSoC6/CapSense_Processing.c **** 
1119:Generated_Source\PSoC6/CapSense_Processing.c **** 
1120:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
1121:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpUpdateDifferences
1122:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 23


1123:Generated_Source\PSoC6/CapSense_Processing.c **** *
1124:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
1125:Generated_Source\PSoC6/CapSense_Processing.c **** *   Calculates new difference values.
1126:Generated_Source\PSoC6/CapSense_Processing.c **** *   Also, executes the multi-frequency scan algorithm if it is enabled.
1127:Generated_Source\PSoC6/CapSense_Processing.c **** *
1128:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
1129:Generated_Source\PSoC6/CapSense_Processing.c **** *   This API calculates the difference between the baseline and raw counts.
1130:Generated_Source\PSoC6/CapSense_Processing.c **** *   If the difference is positive (raw > baseline), and higher than the widget
1131:Generated_Source\PSoC6/CapSense_Processing.c **** *   noise threshold, it is saved into the data structure for further processing.
1132:Generated_Source\PSoC6/CapSense_Processing.c **** *   Otherwise the difference is set to zero. The final difference value is saved
1133:Generated_Source\PSoC6/CapSense_Processing.c **** *   with the subtracted noise threshold value.
1134:Generated_Source\PSoC6/CapSense_Processing.c **** *
1135:Generated_Source\PSoC6/CapSense_Processing.c **** *   If the multi-frequency scan algorithm is enabled, the difference is calculated
1136:Generated_Source\PSoC6/CapSense_Processing.c **** *   for the three sets of data available for each sensor. Then
1137:Generated_Source\PSoC6/CapSense_Processing.c **** *   the median filter selects the final difference value.
1138:Generated_Source\PSoC6/CapSense_Processing.c **** *
1139:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrRamWdgt The pointer to the RAR Widget Object.
1140:Generated_Source\PSoC6/CapSense_Processing.c **** * \param curSnsPtr  The pointer to the sensor object in RAM.
1141:Generated_Source\PSoC6/CapSense_Processing.c **** *
1142:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1143:Generated_Source\PSoC6/CapSense_Processing.c **** void CapSense_DpUpdateDifferences(
1144:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1145:Generated_Source\PSoC6/CapSense_Processing.c ****                         CapSense_RAM_SNS_STRUCT *curSnsPtr)
1146:Generated_Source\PSoC6/CapSense_Processing.c **** {
 128              		.loc 1 1146 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              	.LVL14:
 133 0000 30B5     		push	{r4, r5, lr}
 134              		.cfi_def_cfa_offset 12
 135              		.cfi_offset 4, -12
 136              		.cfi_offset 5, -8
 137              		.cfi_offset 14, -4
 138              	.LVL15:
1147:Generated_Source\PSoC6/CapSense_Processing.c ****     register int32 diffValue = 0;
1148:Generated_Source\PSoC6/CapSense_Processing.c **** 
1149:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1150:Generated_Source\PSoC6/CapSense_Processing.c ****         register int32 diffValue_0 = 0;
1151:Generated_Source\PSoC6/CapSense_Processing.c ****         register int32 diffValue_2 = 0;
1152:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1153:Generated_Source\PSoC6/CapSense_Processing.c **** 
1154:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Calculate difference */
1155:Generated_Source\PSoC6/CapSense_Processing.c ****     diffValue = (int32)curSnsPtr->raw[0u] - (int32)curSnsPtr->bsln[0u];
 139              		.loc 1 1155 0
 140 0002 0B88     		ldrh	r3, [r1]
 141 0004 4A88     		ldrh	r2, [r1, #2]
 142 0006 9C1A     		subs	r4, r3, r2
 143              	.LVL16:
1156:Generated_Source\PSoC6/CapSense_Processing.c **** 
1157:Generated_Source\PSoC6/CapSense_Processing.c ****     #if (0u != CapSense_MULTI_FREQ_SCAN_EN)
1158:Generated_Source\PSoC6/CapSense_Processing.c ****         diffValue_0 = (int32)curSnsPtr->raw[1u] - (int32)curSnsPtr->bsln[1u];
1159:Generated_Source\PSoC6/CapSense_Processing.c ****         diffValue_2 = (int32)curSnsPtr->raw[2u] - (int32)curSnsPtr->bsln[2u];
1160:Generated_Source\PSoC6/CapSense_Processing.c **** 
1161:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Find median and put it into [0u] element */
1162:Generated_Source\PSoC6/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1163:Generated_Source\PSoC6/CapSense_Processing.c ****         {
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 24


1164:Generated_Source\PSoC6/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1165:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue_0 = diffValue;
1166:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue = swapv;
1167:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1168:Generated_Source\PSoC6/CapSense_Processing.c **** 
1169:Generated_Source\PSoC6/CapSense_Processing.c ****         if (diffValue > diffValue_2)
1170:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1171:Generated_Source\PSoC6/CapSense_Processing.c ****             register int32 swapv = diffValue;
1172:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue = diffValue_2;
1173:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue_2 = swapv;
1174:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1175:Generated_Source\PSoC6/CapSense_Processing.c **** 
1176:Generated_Source\PSoC6/CapSense_Processing.c ****         if (diffValue_0 > diffValue)
1177:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1178:Generated_Source\PSoC6/CapSense_Processing.c ****             register int32 swapv = diffValue_0;
1179:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue_0 = diffValue;
1180:Generated_Source\PSoC6/CapSense_Processing.c ****             diffValue = swapv;
1181:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1182:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_MULTI_FREQ_SCAN_EN) */
1183:Generated_Source\PSoC6/CapSense_Processing.c **** 
1184:Generated_Source\PSoC6/CapSense_Processing.c ****     curSnsPtr->diff = 0u;
 144              		.loc 1 1184 0
 145 0008 0025     		movs	r5, #0
 146 000a CD80     		strh	r5, [r1, #6]
1185:Generated_Source\PSoC6/CapSense_Processing.c **** 
1186:Generated_Source\PSoC6/CapSense_Processing.c ****     if (diffValue > (int32)ptrRamWdgt->noiseTh)
 147              		.loc 1 1186 0
 148 000c 0079     		ldrb	r0, [r0, #4]
 149              	.LVL17:
 150 000e 8442     		cmp	r4, r0
 151 0010 00DD     		ble	.L10
1187:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1188:Generated_Source\PSoC6/CapSense_Processing.c ****         curSnsPtr->diff = (CapSense_THRESHOLD_TYPE) diffValue;
 152              		.loc 1 1188 0
 153 0012 CC80     		strh	r4, [r1, #6]
 154              	.L10:
1189:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1190:Generated_Source\PSoC6/CapSense_Processing.c **** }
 155              		.loc 1 1190 0
 156              		@ sp needed
 157              	.LVL18:
 158 0014 30BD     		pop	{r4, r5, pc}
 159              		.cfi_endproc
 160              	.LFE49:
 161              		.size	CapSense_DpUpdateDifferences, .-CapSense_DpUpdateDifferences
 162 0016 C046     		.section	.text.CapSense_DpProcessCsdWidgetRawCounts,"ax",%progbits
 163              		.align	2
 164              		.global	CapSense_DpProcessCsdWidgetRawCounts
 165              		.code	16
 166              		.thumb_func
 167              		.type	CapSense_DpProcessCsdWidgetRawCounts, %function
 168              	CapSense_DpProcessCsdWidgetRawCounts:
 169              	.LFB46:
 786:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  result = CY_RET_SUCCESS;
 170              		.loc 1 786 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 25


 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL19:
 175 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 176              		.cfi_def_cfa_offset 20
 177              		.cfi_offset 4, -20
 178              		.cfi_offset 5, -16
 179              		.cfi_offset 6, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 83B0     		sub	sp, sp, #12
 183              		.cfi_def_cfa_offset 32
 184 0004 0700     		movs	r7, r0
 185              	.LVL20:
 816:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 186              		.loc 1 816 0
 187 0006 8468     		ldr	r4, [r0, #8]
 188              	.LVL21:
 817:Generated_Source\PSoC6/CapSense_Processing.c ****     widgetType = ptrFlashWdgt->wdgtType;
 189              		.loc 1 817 0
 190 0008 4568     		ldr	r5, [r0, #4]
 191              	.LVL22:
 818:Generated_Source\PSoC6/CapSense_Processing.c **** 
 192              		.loc 1 818 0
 193 000a 837E     		ldrb	r3, [r0, #26]
 194 000c 0193     		str	r3, [sp, #4]
 195              	.LVL23:
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 196              		.loc 1 825 0
 197 000e 0026     		movs	r6, #0
 787:Generated_Source\PSoC6/CapSense_Processing.c **** 
 198              		.loc 1 787 0
 199 0010 0023     		movs	r3, #0
 200              	.LVL24:
 201 0012 0093     		str	r3, [sp]
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 202              		.loc 1 825 0
 203 0014 0BE0     		b	.L13
 204              	.LVL25:
 205              	.L14:
 865:Generated_Source\PSoC6/CapSense_Processing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 206              		.loc 1 865 0 discriminator 3
 207 0016 019A     		ldr	r2, [sp, #4]
 208 0018 2100     		movs	r1, r4
 209 001a 2800     		movs	r0, r5
 210 001c FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 211              	.LVL26:
 212 0020 0090     		str	r0, [sp]
 213              	.LVL27:
 868:Generated_Source\PSoC6/CapSense_Processing.c **** 
 214              		.loc 1 868 0 discriminator 3
 215 0022 2100     		movs	r1, r4
 216 0024 2800     		movs	r0, r5
 217              	.LVL28:
 218 0026 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 219              	.LVL29:
 871:Generated_Source\PSoC6/CapSense_Processing.c **** 
 220              		.loc 1 871 0 discriminator 3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 26


 221 002a 0A34     		adds	r4, r4, #10
 222              	.LVL30:
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 223              		.loc 1 825 0 discriminator 3
 224 002c 0136     		adds	r6, r6, #1
 225              	.LVL31:
 226              	.L13:
 825:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 227              		.loc 1 825 0 is_stmt 0 discriminator 1
 228 002e 3B8B     		ldrh	r3, [r7, #24]
 229 0030 9E42     		cmp	r6, r3
 230 0032 F0D3     		bcc	.L14
 879:Generated_Source\PSoC6/CapSense_Processing.c **** 
 231              		.loc 1 879 0 is_stmt 1
 232 0034 0098     		ldr	r0, [sp]
 233 0036 03B0     		add	sp, sp, #12
 234              	.LVL32:
 235              		@ sp needed
 236              	.LVL33:
 237              	.LVL34:
 238              	.LVL35:
 239              	.LVL36:
 240 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 241              		.cfi_endproc
 242              	.LFE46:
 243              		.size	CapSense_DpProcessCsdWidgetRawCounts, .-CapSense_DpProcessCsdWidgetRawCounts
 244 003a C046     		.section	.text.CapSense_DpProcessCsdSensorRawCountsExt,"ax",%progbits
 245              		.align	2
 246              		.global	CapSense_DpProcessCsdSensorRawCountsExt
 247              		.code	16
 248              		.thumb_func
 249              		.type	CapSense_DpProcessCsdSensorRawCountsExt, %function
 250              	CapSense_DpProcessCsdSensorRawCountsExt:
 251              	.LFB47:
 920:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 result = CY_RET_SUCCESS;
 252              		.loc 1 920 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL37:
 257 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 258              		.cfi_def_cfa_offset 24
 259              		.cfi_offset 3, -24
 260              		.cfi_offset 4, -20
 261              		.cfi_offset 5, -16
 262              		.cfi_offset 6, -12
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 0E00     		movs	r6, r1
 266 0004 1C00     		movs	r4, r3
 267              	.LVL38:
 935:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 268              		.loc 1 935 0
 269 0006 827E     		ldrb	r2, [r0, #26]
 270              	.LVL39:
 936:Generated_Source\PSoC6/CapSense_Processing.c **** 
 271              		.loc 1 936 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 27


 272 0008 4768     		ldr	r7, [r0, #4]
 273              	.LVL40:
 976:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 274              		.loc 1 976 0
 275 000a A307     		lsls	r3, r4, #30
 276 000c 04D5     		bpl	.L18
 277              	.LVL41:
 978:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 278              		.loc 1 978 0
 279 000e 3800     		movs	r0, r7
 280              	.LVL42:
 281 0010 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 282              	.LVL43:
 283 0014 0500     		movs	r5, r0
 284              	.LVL44:
 285 0016 00E0     		b	.L16
 286              	.LVL45:
 287              	.L18:
 921:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32  widgetType;
 288              		.loc 1 921 0
 289 0018 0025     		movs	r5, #0
 290              	.LVL46:
 291              	.L16:
 981:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 292              		.loc 1 981 0
 293 001a 6307     		lsls	r3, r4, #29
 294 001c 03D5     		bpl	.L17
 983:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 295              		.loc 1 983 0
 296 001e 3100     		movs	r1, r6
 297 0020 3800     		movs	r0, r7
 298 0022 FFF7FEFF 		bl	CapSense_DpUpdateDifferences
 299              	.LVL47:
 300              	.L17:
 986:Generated_Source\PSoC6/CapSense_Processing.c **** 
 301              		.loc 1 986 0
 302 0026 2800     		movs	r0, r5
 303              		@ sp needed
 304              	.LVL48:
 305              	.LVL49:
 306              	.LVL50:
 307              	.LVL51:
 308 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 309              		.cfi_endproc
 310              	.LFE47:
 311              		.size	CapSense_DpProcessCsdSensorRawCountsExt, .-CapSense_DpProcessCsdSensorRawCountsExt
 312 002a C046     		.section	.text.CapSense_DpProcessButton,"ax",%progbits
 313              		.align	2
 314              		.global	CapSense_DpProcessButton
 315              		.code	16
 316              		.thumb_func
 317              		.type	CapSense_DpProcessButton, %function
 318              	CapSense_DpProcessButton:
 319              	.LFB50:
1191:Generated_Source\PSoC6/CapSense_Processing.c **** 
1192:Generated_Source\PSoC6/CapSense_Processing.c **** 
1193:Generated_Source\PSoC6/CapSense_Processing.c **** #if ((0u != CapSense_BUTTON_WIDGET_EN) || (0u != CapSense_CSX_MATRIX_WIDGET_EN))
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 28


1194:Generated_Source\PSoC6/CapSense_Processing.c **** /*******************************************************************************
1195:Generated_Source\PSoC6/CapSense_Processing.c **** * Function Name: CapSense_DpProcessButton
1196:Generated_Source\PSoC6/CapSense_Processing.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Processing.c **** *
1198:Generated_Source\PSoC6/CapSense_Processing.c **** * \brief
1199:Generated_Source\PSoC6/CapSense_Processing.c **** *   Processes the status of the Button widget.
1200:Generated_Source\PSoC6/CapSense_Processing.c **** *
1201:Generated_Source\PSoC6/CapSense_Processing.c **** * \details
1202:Generated_Source\PSoC6/CapSense_Processing.c **** *   This API processes the status of the CSD/CSX Button widget and
1203:Generated_Source\PSoC6/CapSense_Processing.c **** *   CSX Matrix Button widget. It applies the hysteresis and de-bounce algorithm
1204:Generated_Source\PSoC6/CapSense_Processing.c **** *   to each sensor difference value. This API is expected to be called
1205:Generated_Source\PSoC6/CapSense_Processing.c **** *   after each new widget scan. If it is called multiple times for the same
1206:Generated_Source\PSoC6/CapSense_Processing.c **** *   scan data, the de-bounce algorithm will not work properly.
1207:Generated_Source\PSoC6/CapSense_Processing.c **** *
1208:Generated_Source\PSoC6/CapSense_Processing.c **** *   This API does not update any Data Structure registers
1209:Generated_Source\PSoC6/CapSense_Processing.c **** *   except the de-bounce counters.
1210:Generated_Source\PSoC6/CapSense_Processing.c **** *
1211:Generated_Source\PSoC6/CapSense_Processing.c **** * \param currStatus   The current status of the widget sensors.
1212:Generated_Source\PSoC6/CapSense_Processing.c **** * \param ptrFlashWdgt The pointer to the Flash Widget Object.
1213:Generated_Source\PSoC6/CapSense_Processing.c **** *
1214:Generated_Source\PSoC6/CapSense_Processing.c **** * \return Returns the status of the widget's sensors. Bit #0 - corresponds to Sensor #0.
1215:Generated_Source\PSoC6/CapSense_Processing.c **** *
1216:Generated_Source\PSoC6/CapSense_Processing.c **** *******************************************************************************/
1217:Generated_Source\PSoC6/CapSense_Processing.c **** uint32 CapSense_DpProcessButton(uint32 currStatus, CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt)
1218:Generated_Source\PSoC6/CapSense_Processing.c **** {
 320              		.loc 1 1218 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              	.LVL52:
 325 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 326              		.cfi_def_cfa_offset 20
 327              		.cfi_offset 4, -20
 328              		.cfi_offset 5, -16
 329              		.cfi_offset 6, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
1219:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 snsCnt;
1220:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 snsMask;
1221:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 newStatus;
1222:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 touchTh;
1223:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_SNS_STRUCT *ptrSnsTmp;
1224:Generated_Source\PSoC6/CapSense_Processing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt;
1225:Generated_Source\PSoC6/CapSense_Processing.c ****     uint8 * ptrDebounceCnt;
1226:Generated_Source\PSoC6/CapSense_Processing.c **** 
1227:Generated_Source\PSoC6/CapSense_Processing.c ****     snsCnt = ptrFlashWdgt->totalNumSns;
 332              		.loc 1 1227 0
 333 0002 0A8B     		ldrh	r2, [r1, #24]
 334              	.LVL53:
1228:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrSnsTmp = ptrFlashWdgt->ptr2SnsRam;
 335              		.loc 1 1228 0
 336 0004 8D68     		ldr	r5, [r1, #8]
 337              	.LVL54:
1229:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrRamWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdgt->ptr2WdgtRam;
 338              		.loc 1 1229 0
 339 0006 4F68     		ldr	r7, [r1, #4]
 340              	.LVL55:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 29


1230:Generated_Source\PSoC6/CapSense_Processing.c ****     ptrDebounceCnt = ptrFlashWdgt->ptr2DebounceArr;
 341              		.loc 1 1230 0
 342 0008 0B69     		ldr	r3, [r1, #16]
 343              	.LVL56:
1231:Generated_Source\PSoC6/CapSense_Processing.c **** 
1232:Generated_Source\PSoC6/CapSense_Processing.c ****     /* Go through all widget's sensors */
1233:Generated_Source\PSoC6/CapSense_Processing.c ****     snsMask = 1Lu;
 344              		.loc 1 1233 0
 345 000a 0121     		movs	r1, #1
 346              	.LVL57:
1234:Generated_Source\PSoC6/CapSense_Processing.c ****     for (; snsCnt-- > 0u; )
 347              		.loc 1 1234 0
 348 000c 25E0     		b	.L20
 349              	.LVL58:
 350              	.L28:
1235:Generated_Source\PSoC6/CapSense_Processing.c ****     {
1236:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Calculate touch threshold taking into account hysteresis
1237:Generated_Source\PSoC6/CapSense_Processing.c ****            and current sensor state. */
1238:Generated_Source\PSoC6/CapSense_Processing.c ****         touchTh = (0u == (currStatus & snsMask)) ?
 351              		.loc 1 1238 0
 352 000e 0C00     		movs	r4, r1
 353              	.LVL59:
 354 0010 0440     		ands	r4, r0
1239:Generated_Source\PSoC6/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh + ptrRamWdgt->hysteresis) :
 355              		.loc 1 1239 0
 356 0012 03D1     		bne	.L21
 357              		.loc 1 1239 0 is_stmt 0 discriminator 1
 358 0014 7E88     		ldrh	r6, [r7, #2]
 359 0016 BA79     		ldrb	r2, [r7, #6]
 360 0018 B218     		adds	r2, r6, r2
 361 001a 02E0     		b	.L22
 362              	.L21:
1240:Generated_Source\PSoC6/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh - ptrRamWdgt->hysteresis);
 363              		.loc 1 1240 0 is_stmt 1 discriminator 2
 364 001c 7A88     		ldrh	r2, [r7, #2]
 365 001e BE79     		ldrb	r6, [r7, #6]
1239:Generated_Source\PSoC6/CapSense_Processing.c ****                   ((uint32)ptrRamWdgt->fingerTh + ptrRamWdgt->hysteresis) :
 366              		.loc 1 1239 0 discriminator 2
 367 0020 921B     		subs	r2, r2, r6
 368              	.L22:
 369              	.LVL60:
1241:Generated_Source\PSoC6/CapSense_Processing.c **** 
1242:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Determine new potential sensor state */
1243:Generated_Source\PSoC6/CapSense_Processing.c ****         newStatus = (ptrSnsTmp->diff > touchTh) ? snsMask : 0u;
 370              		.loc 1 1243 0
 371 0022 EE88     		ldrh	r6, [r5, #6]
 372 0024 B242     		cmp	r2, r6
 373 0026 01D3     		bcc	.L29
 374 0028 0022     		movs	r2, #0
 375              	.LVL61:
 376 002a 00E0     		b	.L23
 377              	.LVL62:
 378              	.L29:
 379 002c 0A00     		movs	r2, r1
 380              	.LVL63:
 381              	.L23:
1244:Generated_Source\PSoC6/CapSense_Processing.c **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 30


1245:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Sensor state changed ? */
1246:Generated_Source\PSoC6/CapSense_Processing.c ****         if (newStatus != (currStatus & snsMask))
 382              		.loc 1 1246 0 discriminator 4
 383 002e A242     		cmp	r2, r4
 384 0030 02D0     		beq	.L24
1247:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1248:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Decrement de-bounce counter */
1249:Generated_Source\PSoC6/CapSense_Processing.c ****             (*ptrDebounceCnt)--;
 385              		.loc 1 1249 0
 386 0032 1E78     		ldrb	r6, [r3]
 387 0034 013E     		subs	r6, r6, #1
 388 0036 1E70     		strb	r6, [r3]
 389              	.L24:
1250:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1251:Generated_Source\PSoC6/CapSense_Processing.c **** 
1252:Generated_Source\PSoC6/CapSense_Processing.c ****         /*
1253:Generated_Source\PSoC6/CapSense_Processing.c ****         *  This piece of code has two objectives:
1254:Generated_Source\PSoC6/CapSense_Processing.c ****         *  1. Reset de-bounce counter if the sensor state did not change.
1255:Generated_Source\PSoC6/CapSense_Processing.c ****         *     (It is possible that during previous processing cycles sensor
1256:Generated_Source\PSoC6/CapSense_Processing.c ****         *     was active and de-bounce counter was decremented.)
1257:Generated_Source\PSoC6/CapSense_Processing.c ****         *  2. Set new sensor state after successful de-bounce.
1258:Generated_Source\PSoC6/CapSense_Processing.c ****         */
1259:Generated_Source\PSoC6/CapSense_Processing.c ****         if ((newStatus == (currStatus & snsMask)) || (0u == (*ptrDebounceCnt)))
 390              		.loc 1 1259 0
 391 0038 A242     		cmp	r2, r4
 392 003a 02D0     		beq	.L25
 393              		.loc 1 1259 0 is_stmt 0 discriminator 1
 394 003c 1C78     		ldrb	r4, [r3]
 395 003e 002C     		cmp	r4, #0
 396 0040 07D1     		bne	.L26
 397              	.L25:
1260:Generated_Source\PSoC6/CapSense_Processing.c ****         {
1261:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Set new sensor status */
1262:Generated_Source\PSoC6/CapSense_Processing.c ****             currStatus &= ~snsMask;
 398              		.loc 1 1262 0 is_stmt 1
 399 0042 8843     		bics	r0, r1
 400              	.LVL64:
1263:Generated_Source\PSoC6/CapSense_Processing.c ****             currStatus |= newStatus;
 401              		.loc 1 1263 0
 402 0044 1043     		orrs	r0, r2
 403              	.LVL65:
1264:Generated_Source\PSoC6/CapSense_Processing.c **** 
1265:Generated_Source\PSoC6/CapSense_Processing.c ****             /* Reset de-bounce counter */
1266:Generated_Source\PSoC6/CapSense_Processing.c ****             #if (0u != CapSense_OFF_DEBOUNCE_EN)
1267:Generated_Source\PSoC6/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : ptrRamWdgt->offDebo
1268:Generated_Source\PSoC6/CapSense_Processing.c ****             #else
1269:Generated_Source\PSoC6/CapSense_Processing.c ****                 *ptrDebounceCnt = (0Lu == newStatus) ? ptrRamWdgt->onDebounce : DEFAULT_OFF_DEBOUNC
 404              		.loc 1 1269 0
 405 0046 002A     		cmp	r2, #0
 406 0048 01D1     		bne	.L30
 407              		.loc 1 1269 0 is_stmt 0 discriminator 1
 408 004a FA79     		ldrb	r2, [r7, #7]
 409              	.LVL66:
 410 004c 00E0     		b	.L27
 411              	.LVL67:
 412              	.L30:
 413              		.loc 1 1269 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 31


 414 004e 0122     		movs	r2, #1
 415              	.LVL68:
 416              	.L27:
 417              		.loc 1 1269 0 discriminator 4
 418 0050 1A70     		strb	r2, [r3]
 419              	.L26:
1270:Generated_Source\PSoC6/CapSense_Processing.c ****             #endif /* #if (0u != CapSense_OFF_DEBOUNCE_EN) */
1271:Generated_Source\PSoC6/CapSense_Processing.c ****         }
1272:Generated_Source\PSoC6/CapSense_Processing.c **** 
1273:Generated_Source\PSoC6/CapSense_Processing.c ****         /* Move mask to the next sensor */
1274:Generated_Source\PSoC6/CapSense_Processing.c ****         snsMask <<= 1u;
 420              		.loc 1 1274 0 is_stmt 1
 421 0052 4900     		lsls	r1, r1, #1
 422              	.LVL69:
1275:Generated_Source\PSoC6/CapSense_Processing.c **** 
1276:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrSnsTmp++;
 423              		.loc 1 1276 0
 424 0054 0A35     		adds	r5, r5, #10
 425              	.LVL70:
1277:Generated_Source\PSoC6/CapSense_Processing.c ****         ptrDebounceCnt++;
 426              		.loc 1 1277 0
 427 0056 0133     		adds	r3, r3, #1
 428              	.LVL71:
1234:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 429              		.loc 1 1234 0
 430 0058 6246     		mov	r2, ip
 431              	.LVL72:
 432              	.L20:
 433 005a 541E     		subs	r4, r2, #1
 434 005c A446     		mov	ip, r4
 435              	.LVL73:
 436 005e 002A     		cmp	r2, #0
 437 0060 D5D1     		bne	.L28
1278:Generated_Source\PSoC6/CapSense_Processing.c ****     }
1279:Generated_Source\PSoC6/CapSense_Processing.c **** 
1280:Generated_Source\PSoC6/CapSense_Processing.c ****     return currStatus;
1281:Generated_Source\PSoC6/CapSense_Processing.c **** }
 438              		.loc 1 1281 0
 439              		@ sp needed
 440              	.LVL74:
 441              	.LVL75:
 442              	.LVL76:
 443 0062 F0BD     		pop	{r4, r5, r6, r7, pc}
 444              		.cfi_endproc
 445              	.LFE50:
 446              		.size	CapSense_DpProcessButton, .-CapSense_DpProcessButton
 447              		.section	.text.CapSense_DpProcessCsdWidgetStatus,"ax",%progbits
 448              		.align	2
 449              		.global	CapSense_DpProcessCsdWidgetStatus
 450              		.code	16
 451              		.thumb_func
 452              		.type	CapSense_DpProcessCsdWidgetStatus, %function
 453              	CapSense_DpProcessCsdWidgetStatus:
 454              	.LFB48:
1016:Generated_Source\PSoC6/CapSense_Processing.c ****     uint32 sensorStatus;
 455              		.loc 1 1016 0
 456              		.cfi_startproc
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 32


 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              	.LVL77:
 460 0000 70B5     		push	{r4, r5, r6, lr}
 461              		.cfi_def_cfa_offset 16
 462              		.cfi_offset 4, -16
 463              		.cfi_offset 5, -12
 464              		.cfi_offset 6, -8
 465              		.cfi_offset 14, -4
 466 0002 0400     		movs	r4, r0
1022:Generated_Source\PSoC6/CapSense_Processing.c ****     sensorStatus = CapSense_dsRam.snsStatus[widgetId];
 467              		.loc 1 1022 0
 468 0004 8A7E     		ldrb	r2, [r1, #26]
 469              	.LVL78:
1023:Generated_Source\PSoC6/CapSense_Processing.c **** 
 470              		.loc 1 1023 0
 471 0006 144B     		ldr	r3, .L38
 472 0008 1B18     		adds	r3, r3, r0
 473 000a 1D7E     		ldrb	r5, [r3, #24]
 474              	.LVL79:
1025:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 475              		.loc 1 1025 0
 476 000c 012A     		cmp	r2, #1
 477 000e 04D1     		bne	.L37
1029:Generated_Source\PSoC6/CapSense_Processing.c ****             break;
 478              		.loc 1 1029 0
 479 0010 2800     		movs	r0, r5
 480              	.LVL80:
 481 0012 FFF7FEFF 		bl	CapSense_DpProcessButton
 482              	.LVL81:
 483 0016 0500     		movs	r5, r0
 484              	.LVL82:
1030:Generated_Source\PSoC6/CapSense_Processing.c ****     #endif /* #if (0u != CapSense_BUTTON_WIDGET_EN) */
 485              		.loc 1 1030 0
 486 0018 03E0     		b	.L34
 487              	.LVL83:
 488              	.L37:
1062:Generated_Source\PSoC6/CapSense_Processing.c ****         break;
 489              		.loc 1 1062 0 discriminator 1
 490 001a 1049     		ldr	r1, .L38+4
 491              	.LVL84:
 492 001c 1048     		ldr	r0, .L38+8
 493              	.LVL85:
 494 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 495              	.LVL86:
 496              	.L34:
1066:Generated_Source\PSoC6/CapSense_Processing.c **** 
 497              		.loc 1 1066 0
 498 0022 0D4B     		ldr	r3, .L38
 499 0024 1B19     		adds	r3, r3, r4
 500 0026 1D76     		strb	r5, [r3, #24]
1069:Generated_Source\PSoC6/CapSense_Processing.c ****     wdStatusMask = CapSense_GET_WDGT_STATUS_MASK(widgetId);
 501              		.loc 1 1069 0
 502 0028 6309     		lsrs	r3, r4, #5
 503              	.LVL87:
1070:Generated_Source\PSoC6/CapSense_Processing.c **** 
 504              		.loc 1 1070 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 33


 505 002a 1F22     		movs	r2, #31
 506 002c 1440     		ands	r4, r2
 507              	.LVL88:
 508 002e 1E3A     		subs	r2, r2, #30
 509 0030 A240     		lsls	r2, r2, r4
 510              	.LVL89:
1073:Generated_Source\PSoC6/CapSense_Processing.c ****     {
 511              		.loc 1 1073 0
 512 0032 002D     		cmp	r5, #0
 513 0034 07D1     		bne	.L35
1075:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 514              		.loc 1 1075 0
 515 0036 0433     		adds	r3, r3, #4
 516              	.LVL90:
 517 0038 9B00     		lsls	r3, r3, #2
 518              	.LVL91:
 519 003a 0749     		ldr	r1, .L38
 520 003c CB18     		adds	r3, r1, r3
 521 003e 5968     		ldr	r1, [r3, #4]
 522 0040 9143     		bics	r1, r2
 523 0042 5960     		str	r1, [r3, #4]
 524 0044 06E0     		b	.L31
 525              	.LVL92:
 526              	.L35:
1079:Generated_Source\PSoC6/CapSense_Processing.c ****     }
 527              		.loc 1 1079 0
 528 0046 0433     		adds	r3, r3, #4
 529              	.LVL93:
 530 0048 9B00     		lsls	r3, r3, #2
 531              	.LVL94:
 532 004a 0349     		ldr	r1, .L38
 533 004c CB18     		adds	r3, r1, r3
 534 004e 5968     		ldr	r1, [r3, #4]
 535 0050 0A43     		orrs	r2, r1
 536              	.LVL95:
 537 0052 5A60     		str	r2, [r3, #4]
 538              	.L31:
1081:Generated_Source\PSoC6/CapSense_Processing.c **** #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
 539              		.loc 1 1081 0
 540              		@ sp needed
 541              	.LVL96:
 542              	.LVL97:
 543 0054 70BD     		pop	{r4, r5, r6, pc}
 544              	.L39:
 545 0056 C046     		.align	2
 546              	.L38:
 547 0058 00000000 		.word	CapSense_dsRam
 548 005c 26040000 		.word	1062
 549 0060 00000000 		.word	.LC3
 550              		.cfi_endproc
 551              	.LFE48:
 552              		.size	CapSense_DpProcessCsdWidgetStatus, .-CapSense_DpProcessCsdWidgetStatus
 553              		.section	.rodata.str1.4,"aMS",%progbits,1
 554              		.align	2
 555              	.LC3:
 556 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Processing.c\000"
 556      72617465 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 34


 556      645F536F 
 556      75726365 
 556      5C50536F 
 557              		.text
 558              	.Letext0:
 559              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 560              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 561              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 562              		.file 5 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 563              		.file 6 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 564              		.file 7 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 565              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 566              		.file 9 "Generated_Source\\PSoC6\\CapSense_Filter.h"
 567              		.section	.debug_info,"",%progbits
 568              	.Ldebug_info0:
 569 0000 9D090000 		.4byte	0x99d
 570 0004 0400     		.2byte	0x4
 571 0006 00000000 		.4byte	.Ldebug_abbrev0
 572 000a 04       		.byte	0x4
 573 000b 01       		.uleb128 0x1
 574 000c B4050000 		.4byte	.LASF126
 575 0010 0C       		.byte	0xc
 576 0011 50000000 		.4byte	.LASF127
 577 0015 49020000 		.4byte	.LASF128
 578 0019 00000000 		.4byte	.Ldebug_ranges0+0
 579 001d 00000000 		.4byte	0
 580 0021 00000000 		.4byte	.Ldebug_line0
 581 0025 02       		.uleb128 0x2
 582 0026 01       		.byte	0x1
 583 0027 06       		.byte	0x6
 584 0028 6A010000 		.4byte	.LASF0
 585 002c 03       		.uleb128 0x3
 586 002d 31000000 		.4byte	.LASF3
 587 0031 02       		.byte	0x2
 588 0032 1D       		.byte	0x1d
 589 0033 37000000 		.4byte	0x37
 590 0037 02       		.uleb128 0x2
 591 0038 01       		.byte	0x1
 592 0039 08       		.byte	0x8
 593 003a 16050000 		.4byte	.LASF1
 594 003e 02       		.uleb128 0x2
 595 003f 02       		.byte	0x2
 596 0040 05       		.byte	0x5
 597 0041 7C030000 		.4byte	.LASF2
 598 0045 03       		.uleb128 0x3
 599 0046 5C060000 		.4byte	.LASF4
 600 004a 02       		.byte	0x2
 601 004b 2B       		.byte	0x2b
 602 004c 50000000 		.4byte	0x50
 603 0050 02       		.uleb128 0x2
 604 0051 02       		.byte	0x2
 605 0052 07       		.byte	0x7
 606 0053 11020000 		.4byte	.LASF5
 607 0057 03       		.uleb128 0x3
 608 0058 8A060000 		.4byte	.LASF6
 609 005c 02       		.byte	0x2
 610 005d 3F       		.byte	0x3f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 35


 611 005e 62000000 		.4byte	0x62
 612 0062 02       		.uleb128 0x2
 613 0063 04       		.byte	0x4
 614 0064 05       		.byte	0x5
 615 0065 CD010000 		.4byte	.LASF7
 616 0069 03       		.uleb128 0x3
 617 006a 36020000 		.4byte	.LASF8
 618 006e 02       		.byte	0x2
 619 006f 41       		.byte	0x41
 620 0070 74000000 		.4byte	0x74
 621 0074 02       		.uleb128 0x2
 622 0075 04       		.byte	0x4
 623 0076 07       		.byte	0x7
 624 0077 01030000 		.4byte	.LASF9
 625 007b 02       		.uleb128 0x2
 626 007c 08       		.byte	0x8
 627 007d 05       		.byte	0x5
 628 007e 5C010000 		.4byte	.LASF10
 629 0082 02       		.uleb128 0x2
 630 0083 08       		.byte	0x8
 631 0084 07       		.byte	0x7
 632 0085 95000000 		.4byte	.LASF11
 633 0089 04       		.uleb128 0x4
 634 008a 04       		.byte	0x4
 635 008b 05       		.byte	0x5
 636 008c 696E7400 		.ascii	"int\000"
 637 0090 02       		.uleb128 0x2
 638 0091 04       		.byte	0x4
 639 0092 07       		.byte	0x7
 640 0093 E4020000 		.4byte	.LASF12
 641 0097 03       		.uleb128 0x3
 642 0098 3F070000 		.4byte	.LASF13
 643 009c 03       		.byte	0x3
 644 009d 18       		.byte	0x18
 645 009e 2C000000 		.4byte	0x2c
 646 00a2 03       		.uleb128 0x3
 647 00a3 F1010000 		.4byte	.LASF14
 648 00a7 03       		.byte	0x3
 649 00a8 24       		.byte	0x24
 650 00a9 45000000 		.4byte	0x45
 651 00ad 03       		.uleb128 0x3
 652 00ae 0E050000 		.4byte	.LASF15
 653 00b2 03       		.byte	0x3
 654 00b3 2C       		.byte	0x2c
 655 00b4 57000000 		.4byte	0x57
 656 00b8 03       		.uleb128 0x3
 657 00b9 8C050000 		.4byte	.LASF16
 658 00bd 03       		.byte	0x3
 659 00be 30       		.byte	0x30
 660 00bf 69000000 		.4byte	0x69
 661 00c3 03       		.uleb128 0x3
 662 00c4 2A000000 		.4byte	.LASF17
 663 00c8 04       		.byte	0x4
 664 00c9 D8       		.byte	0xd8
 665 00ca 90000000 		.4byte	0x90
 666 00ce 02       		.uleb128 0x2
 667 00cf 08       		.byte	0x8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 36


 668 00d0 04       		.byte	0x4
 669 00d1 46060000 		.4byte	.LASF18
 670 00d5 02       		.uleb128 0x2
 671 00d6 04       		.byte	0x4
 672 00d7 07       		.byte	0x7
 673 00d8 4F070000 		.4byte	.LASF19
 674 00dc 05       		.uleb128 0x5
 675 00dd 33030000 		.4byte	.LASF20
 676 00e1 05       		.byte	0x5
 677 00e2 F601     		.2byte	0x1f6
 678 00e4 E8000000 		.4byte	0xe8
 679 00e8 02       		.uleb128 0x2
 680 00e9 01       		.byte	0x1
 681 00ea 08       		.byte	0x8
 682 00eb 52060000 		.4byte	.LASF21
 683 00ef 02       		.uleb128 0x2
 684 00f0 04       		.byte	0x4
 685 00f1 04       		.byte	0x4
 686 00f2 97040000 		.4byte	.LASF22
 687 00f6 02       		.uleb128 0x2
 688 00f7 08       		.byte	0x8
 689 00f8 04       		.byte	0x4
 690 00f9 FA010000 		.4byte	.LASF23
 691 00fd 05       		.uleb128 0x5
 692 00fe EB010000 		.4byte	.LASF24
 693 0102 05       		.byte	0x5
 694 0103 EA03     		.2byte	0x3ea
 695 0105 97000000 		.4byte	0x97
 696 0109 05       		.uleb128 0x5
 697 010a 00000000 		.4byte	.LASF25
 698 010e 05       		.byte	0x5
 699 010f EB03     		.2byte	0x3eb
 700 0111 A2000000 		.4byte	0xa2
 701 0115 05       		.uleb128 0x5
 702 0116 24020000 		.4byte	.LASF26
 703 011a 05       		.byte	0x5
 704 011b EC03     		.2byte	0x3ec
 705 011d B8000000 		.4byte	0xb8
 706 0121 05       		.uleb128 0x5
 707 0122 9B010000 		.4byte	.LASF27
 708 0126 05       		.byte	0x5
 709 0127 EF03     		.2byte	0x3ef
 710 0129 AD000000 		.4byte	0xad
 711 012d 06       		.uleb128 0x6
 712 012e 04       		.byte	0x4
 713 012f 03       		.uleb128 0x3
 714 0130 21010000 		.4byte	.LASF28
 715 0134 06       		.byte	0x6
 716 0135 D8       		.byte	0xd8
 717 0136 09010000 		.4byte	0x109
 718 013a 03       		.uleb128 0x3
 719 013b E5000000 		.4byte	.LASF29
 720 013f 06       		.byte	0x6
 721 0140 DC       		.byte	0xdc
 722 0141 FD000000 		.4byte	0xfd
 723 0145 07       		.uleb128 0x7
 724 0146 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 37


 725 0147 37000000 		.4byte	0x37
 726 014b 07       		.byte	0x7
 727 014c 61       		.byte	0x61
 728 014d 76010000 		.4byte	0x176
 729 0151 08       		.uleb128 0x8
 730 0152 F9040000 		.4byte	.LASF30
 731 0156 01       		.byte	0x1
 732 0157 08       		.uleb128 0x8
 733 0158 40010000 		.4byte	.LASF31
 734 015c 02       		.byte	0x2
 735 015d 08       		.uleb128 0x8
 736 015e 9D040000 		.4byte	.LASF32
 737 0162 03       		.byte	0x3
 738 0163 08       		.uleb128 0x8
 739 0164 AC020000 		.4byte	.LASF33
 740 0168 04       		.byte	0x4
 741 0169 08       		.uleb128 0x8
 742 016a 4C050000 		.4byte	.LASF34
 743 016e 05       		.byte	0x5
 744 016f 08       		.uleb128 0x8
 745 0170 89070000 		.4byte	.LASF35
 746 0174 06       		.byte	0x6
 747 0175 00       		.byte	0
 748 0176 03       		.uleb128 0x3
 749 0177 9F060000 		.4byte	.LASF36
 750 017b 07       		.byte	0x7
 751 017c 68       		.byte	0x68
 752 017d 45010000 		.4byte	0x145
 753 0181 09       		.uleb128 0x9
 754 0182 0E       		.byte	0xe
 755 0183 07       		.byte	0x7
 756 0184 8C       		.byte	0x8c
 757 0185 02020000 		.4byte	0x202
 758 0189 0A       		.uleb128 0xa
 759 018a 58070000 		.4byte	.LASF37
 760 018e 07       		.byte	0x7
 761 018f 92       		.byte	0x92
 762 0190 09010000 		.4byte	0x109
 763 0194 00       		.byte	0
 764 0195 0A       		.uleb128 0xa
 765 0196 80070000 		.4byte	.LASF38
 766 019a 07       		.byte	0x7
 767 019b 97       		.byte	0x97
 768 019c 2F010000 		.4byte	0x12f
 769 01a0 02       		.byte	0x2
 770 01a1 0A       		.uleb128 0xa
 771 01a2 0A080000 		.4byte	.LASF39
 772 01a6 07       		.byte	0x7
 773 01a7 9C       		.byte	0x9c
 774 01a8 FD000000 		.4byte	0xfd
 775 01ac 04       		.byte	0x4
 776 01ad 0A       		.uleb128 0xa
 777 01ae 1B040000 		.4byte	.LASF40
 778 01b2 07       		.byte	0x7
 779 01b3 A1       		.byte	0xa1
 780 01b4 FD000000 		.4byte	0xfd
 781 01b8 05       		.byte	0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 38


 782 01b9 0A       		.uleb128 0xa
 783 01ba 2B020000 		.4byte	.LASF41
 784 01be 07       		.byte	0x7
 785 01bf A6       		.byte	0xa6
 786 01c0 FD000000 		.4byte	0xfd
 787 01c4 06       		.byte	0x6
 788 01c5 0A       		.uleb128 0xa
 789 01c6 94060000 		.4byte	.LASF42
 790 01ca 07       		.byte	0x7
 791 01cb AB       		.byte	0xab
 792 01cc FD000000 		.4byte	0xfd
 793 01d0 07       		.byte	0x7
 794 01d1 0A       		.uleb128 0xa
 795 01d2 1E030000 		.4byte	.LASF43
 796 01d6 07       		.byte	0x7
 797 01d7 B2       		.byte	0xb2
 798 01d8 3A010000 		.4byte	0x13a
 799 01dc 08       		.byte	0x8
 800 01dd 0A       		.uleb128 0xa
 801 01de B6030000 		.4byte	.LASF44
 802 01e2 07       		.byte	0x7
 803 01e3 BA       		.byte	0xba
 804 01e4 02020000 		.4byte	0x202
 805 01e8 09       		.byte	0x9
 806 01e9 0A       		.uleb128 0xa
 807 01ea 67060000 		.4byte	.LASF45
 808 01ee 07       		.byte	0x7
 809 01ef C3       		.byte	0xc3
 810 01f0 09010000 		.4byte	0x109
 811 01f4 0A       		.byte	0xa
 812 01f5 0A       		.uleb128 0xa
 813 01f6 63070000 		.4byte	.LASF46
 814 01fa 07       		.byte	0x7
 815 01fb C8       		.byte	0xc8
 816 01fc FD000000 		.4byte	0xfd
 817 0200 0C       		.byte	0xc
 818 0201 00       		.byte	0
 819 0202 0B       		.uleb128 0xb
 820 0203 FD000000 		.4byte	0xfd
 821 0207 12020000 		.4byte	0x212
 822 020b 0C       		.uleb128 0xc
 823 020c D5000000 		.4byte	0xd5
 824 0210 00       		.byte	0
 825 0211 00       		.byte	0
 826 0212 03       		.uleb128 0x3
 827 0213 6E060000 		.4byte	.LASF47
 828 0217 07       		.byte	0x7
 829 0218 C9       		.byte	0xc9
 830 0219 81010000 		.4byte	0x181
 831 021d 09       		.uleb128 0x9
 832 021e 0E       		.byte	0xe
 833 021f 07       		.byte	0x7
 834 0220 CE       		.byte	0xce
 835 0221 A0020000 		.4byte	0x2a0
 836 0225 0A       		.uleb128 0xa
 837 0226 58070000 		.4byte	.LASF37
 838 022a 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 39


 839 022b D4       		.byte	0xd4
 840 022c 09010000 		.4byte	0x109
 841 0230 00       		.byte	0
 842 0231 0A       		.uleb128 0xa
 843 0232 80070000 		.4byte	.LASF38
 844 0236 07       		.byte	0x7
 845 0237 D9       		.byte	0xd9
 846 0238 2F010000 		.4byte	0x12f
 847 023c 02       		.byte	0x2
 848 023d 0A       		.uleb128 0xa
 849 023e 0A080000 		.4byte	.LASF39
 850 0242 07       		.byte	0x7
 851 0243 DE       		.byte	0xde
 852 0244 FD000000 		.4byte	0xfd
 853 0248 04       		.byte	0x4
 854 0249 0A       		.uleb128 0xa
 855 024a 1B040000 		.4byte	.LASF40
 856 024e 07       		.byte	0x7
 857 024f E3       		.byte	0xe3
 858 0250 FD000000 		.4byte	0xfd
 859 0254 05       		.byte	0x5
 860 0255 0A       		.uleb128 0xa
 861 0256 2B020000 		.4byte	.LASF41
 862 025a 07       		.byte	0x7
 863 025b E8       		.byte	0xe8
 864 025c FD000000 		.4byte	0xfd
 865 0260 06       		.byte	0x6
 866 0261 0A       		.uleb128 0xa
 867 0262 94060000 		.4byte	.LASF42
 868 0266 07       		.byte	0x7
 869 0267 ED       		.byte	0xed
 870 0268 FD000000 		.4byte	0xfd
 871 026c 07       		.byte	0x7
 872 026d 0A       		.uleb128 0xa
 873 026e 1E030000 		.4byte	.LASF43
 874 0272 07       		.byte	0x7
 875 0273 F4       		.byte	0xf4
 876 0274 3A010000 		.4byte	0x13a
 877 0278 08       		.byte	0x8
 878 0279 0A       		.uleb128 0xa
 879 027a B6030000 		.4byte	.LASF44
 880 027e 07       		.byte	0x7
 881 027f FC       		.byte	0xfc
 882 0280 02020000 		.4byte	0x202
 883 0284 09       		.byte	0x9
 884 0285 0D       		.uleb128 0xd
 885 0286 67060000 		.4byte	.LASF45
 886 028a 07       		.byte	0x7
 887 028b 0501     		.2byte	0x105
 888 028d 09010000 		.4byte	0x109
 889 0291 0A       		.byte	0xa
 890 0292 0D       		.uleb128 0xd
 891 0293 63070000 		.4byte	.LASF46
 892 0297 07       		.byte	0x7
 893 0298 0A01     		.2byte	0x10a
 894 029a FD000000 		.4byte	0xfd
 895 029e 0C       		.byte	0xc
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 40


 896 029f 00       		.byte	0
 897 02a0 05       		.uleb128 0x5
 898 02a1 8F030000 		.4byte	.LASF48
 899 02a5 07       		.byte	0x7
 900 02a6 0B01     		.2byte	0x10b
 901 02a8 1D020000 		.4byte	0x21d
 902 02ac 0E       		.uleb128 0xe
 903 02ad 0E       		.byte	0xe
 904 02ae 07       		.byte	0x7
 905 02af 1101     		.2byte	0x111
 906 02b1 C3020000 		.4byte	0x2c3
 907 02b5 0D       		.uleb128 0xd
 908 02b6 93010000 		.4byte	.LASF49
 909 02ba 07       		.byte	0x7
 910 02bb 1601     		.2byte	0x116
 911 02bd A0020000 		.4byte	0x2a0
 912 02c1 00       		.byte	0
 913 02c2 00       		.byte	0
 914 02c3 05       		.uleb128 0x5
 915 02c4 A1070000 		.4byte	.LASF50
 916 02c8 07       		.byte	0x7
 917 02c9 1701     		.2byte	0x117
 918 02cb AC020000 		.4byte	0x2ac
 919 02cf 0E       		.uleb128 0xe
 920 02d0 0A       		.byte	0xa
 921 02d1 07       		.byte	0x7
 922 02d2 1D01     		.2byte	0x11d
 923 02d4 27030000 		.4byte	0x327
 924 02d8 0F       		.uleb128 0xf
 925 02d9 72617700 		.ascii	"raw\000"
 926 02dd 07       		.byte	0x7
 927 02de 2201     		.2byte	0x122
 928 02e0 27030000 		.4byte	0x327
 929 02e4 00       		.byte	0
 930 02e5 0D       		.uleb128 0xd
 931 02e6 D2020000 		.4byte	.LASF51
 932 02ea 07       		.byte	0x7
 933 02eb 2701     		.2byte	0x127
 934 02ed 27030000 		.4byte	0x327
 935 02f1 02       		.byte	0x2
 936 02f2 0D       		.uleb128 0xd
 937 02f3 41020000 		.4byte	.LASF52
 938 02f7 07       		.byte	0x7
 939 02f8 2D01     		.2byte	0x12d
 940 02fa 02020000 		.4byte	0x202
 941 02fe 04       		.byte	0x4
 942 02ff 0D       		.uleb128 0xd
 943 0300 E0000000 		.4byte	.LASF53
 944 0304 07       		.byte	0x7
 945 0305 3201     		.2byte	0x132
 946 0307 2F010000 		.4byte	0x12f
 947 030b 06       		.byte	0x6
 948 030c 0D       		.uleb128 0xd
 949 030d D5060000 		.4byte	.LASF54
 950 0311 07       		.byte	0x7
 951 0312 3701     		.2byte	0x137
 952 0314 37030000 		.4byte	0x337
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 41


 953 0318 08       		.byte	0x8
 954 0319 0D       		.uleb128 0xd
 955 031a B5060000 		.4byte	.LASF55
 956 031e 07       		.byte	0x7
 957 031f 3D01     		.2byte	0x13d
 958 0321 02020000 		.4byte	0x202
 959 0325 09       		.byte	0x9
 960 0326 00       		.byte	0
 961 0327 0B       		.uleb128 0xb
 962 0328 09010000 		.4byte	0x109
 963 032c 37030000 		.4byte	0x337
 964 0330 0C       		.uleb128 0xc
 965 0331 D5000000 		.4byte	0xd5
 966 0335 00       		.byte	0
 967 0336 00       		.byte	0
 968 0337 0B       		.uleb128 0xb
 969 0338 3A010000 		.4byte	0x13a
 970 033c 47030000 		.4byte	0x347
 971 0340 0C       		.uleb128 0xc
 972 0341 D5000000 		.4byte	0xd5
 973 0345 00       		.byte	0
 974 0346 00       		.byte	0
 975 0347 05       		.uleb128 0x5
 976 0348 7D000000 		.4byte	.LASF56
 977 034c 07       		.byte	0x7
 978 034d 3E01     		.2byte	0x13e
 979 034f CF020000 		.4byte	0x2cf
 980 0353 0E       		.uleb128 0xe
 981 0354 0A       		.byte	0xa
 982 0355 07       		.byte	0x7
 983 0356 4401     		.2byte	0x144
 984 0358 6A030000 		.4byte	0x36a
 985 035c 0D       		.uleb128 0xd
 986 035d 93010000 		.4byte	.LASF49
 987 0361 07       		.byte	0x7
 988 0362 4901     		.2byte	0x149
 989 0364 6A030000 		.4byte	0x36a
 990 0368 00       		.byte	0
 991 0369 00       		.byte	0
 992 036a 0B       		.uleb128 0xb
 993 036b 47030000 		.4byte	0x347
 994 036f 7A030000 		.4byte	0x37a
 995 0373 0C       		.uleb128 0xc
 996 0374 D5000000 		.4byte	0xd5
 997 0378 00       		.byte	0
 998 0379 00       		.byte	0
 999 037a 05       		.uleb128 0x5
 1000 037b B9040000 		.4byte	.LASF57
 1001 037f 07       		.byte	0x7
 1002 0380 4A01     		.2byte	0x14a
 1003 0382 53030000 		.4byte	0x353
 1004 0386 0E       		.uleb128 0xe
 1005 0387 3C       		.byte	0x3c
 1006 0388 07       		.byte	0x7
 1007 0389 5001     		.2byte	0x150
 1008 038b 6D040000 		.4byte	0x46d
 1009 038f 0D       		.uleb128 0xd
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 42


 1010 0390 5C030000 		.4byte	.LASF58
 1011 0394 07       		.byte	0x7
 1012 0395 5801     		.2byte	0x158
 1013 0397 09010000 		.4byte	0x109
 1014 039b 00       		.byte	0
 1015 039c 0D       		.uleb128 0xd
 1016 039d 86030000 		.4byte	.LASF59
 1017 03a1 07       		.byte	0x7
 1018 03a2 5D01     		.2byte	0x15d
 1019 03a4 09010000 		.4byte	0x109
 1020 03a8 02       		.byte	0x2
 1021 03a9 0D       		.uleb128 0xd
 1022 03aa 3D040000 		.4byte	.LASF60
 1023 03ae 07       		.byte	0x7
 1024 03af 6201     		.2byte	0x162
 1025 03b1 09010000 		.4byte	0x109
 1026 03b5 04       		.byte	0x4
 1027 03b6 0D       		.uleb128 0xd
 1028 03b7 8E040000 		.4byte	.LASF61
 1029 03bb 07       		.byte	0x7
 1030 03bc 6801     		.2byte	0x168
 1031 03be 09010000 		.4byte	0x109
 1032 03c2 06       		.byte	0x6
 1033 03c3 0D       		.uleb128 0xd
 1034 03c4 4E040000 		.4byte	.LASF62
 1035 03c8 07       		.byte	0x7
 1036 03c9 6D01     		.2byte	0x16d
 1037 03cb 09010000 		.4byte	0x109
 1038 03cf 08       		.byte	0x8
 1039 03d0 0D       		.uleb128 0xd
 1040 03d1 2E070000 		.4byte	.LASF63
 1041 03d5 07       		.byte	0x7
 1042 03d6 7201     		.2byte	0x172
 1043 03d8 6D040000 		.4byte	0x46d
 1044 03dc 0C       		.byte	0xc
 1045 03dd 0D       		.uleb128 0xd
 1046 03de 13030000 		.4byte	.LASF64
 1047 03e2 07       		.byte	0x7
 1048 03e3 7801     		.2byte	0x178
 1049 03e5 72040000 		.4byte	0x472
 1050 03e9 10       		.byte	0x10
 1051 03ea 0D       		.uleb128 0xd
 1052 03eb A1020000 		.4byte	.LASF65
 1053 03ef 07       		.byte	0x7
 1054 03f0 7E01     		.2byte	0x17e
 1055 03f2 72040000 		.4byte	0x472
 1056 03f6 14       		.byte	0x14
 1057 03f7 0D       		.uleb128 0xd
 1058 03f8 C3010000 		.4byte	.LASF66
 1059 03fc 07       		.byte	0x7
 1060 03fd 9001     		.2byte	0x190
 1061 03ff 02020000 		.4byte	0x202
 1062 0403 18       		.byte	0x18
 1063 0404 0D       		.uleb128 0xd
 1064 0405 65030000 		.4byte	.LASF67
 1065 0409 07       		.byte	0x7
 1066 040a 9501     		.2byte	0x195
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 43


 1067 040c 09010000 		.4byte	0x109
 1068 0410 1A       		.byte	0x1a
 1069 0411 0D       		.uleb128 0xd
 1070 0412 D6010000 		.4byte	.LASF68
 1071 0416 07       		.byte	0x7
 1072 0417 9A01     		.2byte	0x19a
 1073 0419 FD000000 		.4byte	0xfd
 1074 041d 1C       		.byte	0x1c
 1075 041e 0D       		.uleb128 0xd
 1076 041f 95050000 		.4byte	.LASF69
 1077 0423 07       		.byte	0x7
 1078 0424 9F01     		.2byte	0x19f
 1079 0426 C3020000 		.4byte	0x2c3
 1080 042a 1E       		.byte	0x1e
 1081 042b 0D       		.uleb128 0xd
 1082 042c 54030000 		.4byte	.LASF70
 1083 0430 07       		.byte	0x7
 1084 0431 A401     		.2byte	0x1a4
 1085 0433 7A030000 		.4byte	0x37a
 1086 0437 2C       		.byte	0x2c
 1087 0438 0D       		.uleb128 0xd
 1088 0439 F1020000 		.4byte	.LASF71
 1089 043d 07       		.byte	0x7
 1090 043e A901     		.2byte	0x1a9
 1091 0440 FD000000 		.4byte	0xfd
 1092 0444 36       		.byte	0x36
 1093 0445 0D       		.uleb128 0xd
 1094 0446 00010000 		.4byte	.LASF72
 1095 044a 07       		.byte	0x7
 1096 044b AE01     		.2byte	0x1ae
 1097 044d FD000000 		.4byte	0xfd
 1098 0451 37       		.byte	0x37
 1099 0452 0D       		.uleb128 0xd
 1100 0453 BD070000 		.4byte	.LASF73
 1101 0457 07       		.byte	0x7
 1102 0458 B301     		.2byte	0x1b3
 1103 045a 09010000 		.4byte	0x109
 1104 045e 38       		.byte	0x38
 1105 045f 0D       		.uleb128 0xd
 1106 0460 01020000 		.4byte	.LASF74
 1107 0464 07       		.byte	0x7
 1108 0465 B801     		.2byte	0x1b8
 1109 0467 27030000 		.4byte	0x327
 1110 046b 3A       		.byte	0x3a
 1111 046c 00       		.byte	0
 1112 046d 10       		.uleb128 0x10
 1113 046e 15010000 		.4byte	0x115
 1114 0472 0B       		.uleb128 0xb
 1115 0473 15010000 		.4byte	0x115
 1116 0477 82040000 		.4byte	0x482
 1117 047b 0C       		.uleb128 0xc
 1118 047c D5000000 		.4byte	0xd5
 1119 0480 00       		.byte	0
 1120 0481 00       		.byte	0
 1121 0482 05       		.uleb128 0x5
 1122 0483 D6040000 		.4byte	.LASF75
 1123 0487 07       		.byte	0x7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 44


 1124 0488 B901     		.2byte	0x1b9
 1125 048a 86030000 		.4byte	0x386
 1126 048e 0E       		.uleb128 0xe
 1127 048f 1C       		.byte	0x1c
 1128 0490 07       		.byte	0x7
 1129 0491 F701     		.2byte	0x1f7
 1130 0493 0D050000 		.4byte	0x50d
 1131 0497 0D       		.uleb128 0xd
 1132 0498 D3000000 		.4byte	.LASF76
 1133 049c 07       		.byte	0x7
 1134 049d 0002     		.2byte	0x200
 1135 049f 0D050000 		.4byte	0x50d
 1136 04a3 00       		.byte	0
 1137 04a4 0D       		.uleb128 0xd
 1138 04a5 70030000 		.4byte	.LASF77
 1139 04a9 07       		.byte	0x7
 1140 04aa 0702     		.2byte	0x207
 1141 04ac 2D010000 		.4byte	0x12d
 1142 04b0 04       		.byte	0x4
 1143 04b1 0D       		.uleb128 0xd
 1144 04b2 E0010000 		.4byte	.LASF78
 1145 04b6 07       		.byte	0x7
 1146 04b7 0D02     		.2byte	0x20d
 1147 04b9 14050000 		.4byte	0x514
 1148 04bd 08       		.byte	0x8
 1149 04be 0D       		.uleb128 0xd
 1150 04bf 1A000000 		.4byte	.LASF79
 1151 04c3 07       		.byte	0x7
 1152 04c4 1202     		.2byte	0x212
 1153 04c6 2D010000 		.4byte	0x12d
 1154 04ca 0C       		.byte	0xc
 1155 04cb 0D       		.uleb128 0xd
 1156 04cc F7060000 		.4byte	.LASF80
 1157 04d0 07       		.byte	0x7
 1158 04d1 1902     		.2byte	0x219
 1159 04d3 1A050000 		.4byte	0x51a
 1160 04d7 10       		.byte	0x10
 1161 04d8 0D       		.uleb128 0xd
 1162 04d9 0E040000 		.4byte	.LASF81
 1163 04dd 07       		.byte	0x7
 1164 04de 1E02     		.2byte	0x21e
 1165 04e0 15010000 		.4byte	0x115
 1166 04e4 14       		.byte	0x14
 1167 04e5 0D       		.uleb128 0xd
 1168 04e6 E3060000 		.4byte	.LASF82
 1169 04ea 07       		.byte	0x7
 1170 04eb 2502     		.2byte	0x225
 1171 04ed 09010000 		.4byte	0x109
 1172 04f1 18       		.byte	0x18
 1173 04f2 0D       		.uleb128 0xd
 1174 04f3 45040000 		.4byte	.LASF83
 1175 04f7 07       		.byte	0x7
 1176 04f8 3002     		.2byte	0x230
 1177 04fa FD000000 		.4byte	0xfd
 1178 04fe 1A       		.byte	0x1a
 1179 04ff 0D       		.uleb128 0xd
 1180 0500 BE030000 		.4byte	.LASF84
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 45


 1181 0504 07       		.byte	0x7
 1182 0505 3802     		.2byte	0x238
 1183 0507 FD000000 		.4byte	0xfd
 1184 050b 1B       		.byte	0x1b
 1185 050c 00       		.byte	0
 1186 050d 11       		.uleb128 0x11
 1187 050e 04       		.byte	0x4
 1188 050f 13050000 		.4byte	0x513
 1189 0513 12       		.uleb128 0x12
 1190 0514 11       		.uleb128 0x11
 1191 0515 04       		.byte	0x4
 1192 0516 47030000 		.4byte	0x347
 1193 051a 11       		.uleb128 0x11
 1194 051b 04       		.byte	0x4
 1195 051c FD000000 		.4byte	0xfd
 1196 0520 05       		.uleb128 0x5
 1197 0521 24050000 		.4byte	.LASF85
 1198 0525 07       		.byte	0x7
 1199 0526 3902     		.2byte	0x239
 1200 0528 8E040000 		.4byte	0x48e
 1201 052c 0E       		.uleb128 0xe
 1202 052d 1C       		.byte	0x1c
 1203 052e 07       		.byte	0x7
 1204 052f 3F02     		.2byte	0x23f
 1205 0531 43050000 		.4byte	0x543
 1206 0535 0D       		.uleb128 0xd
 1207 0536 35070000 		.4byte	.LASF86
 1208 053a 07       		.byte	0x7
 1209 053b 4402     		.2byte	0x244
 1210 053d 43050000 		.4byte	0x543
 1211 0541 00       		.byte	0
 1212 0542 00       		.byte	0
 1213 0543 0B       		.uleb128 0xb
 1214 0544 20050000 		.4byte	0x520
 1215 0548 53050000 		.4byte	0x553
 1216 054c 0C       		.uleb128 0xc
 1217 054d D5000000 		.4byte	0xd5
 1218 0551 00       		.byte	0
 1219 0552 00       		.byte	0
 1220 0553 05       		.uleb128 0x5
 1221 0554 07070000 		.4byte	.LASF87
 1222 0558 07       		.byte	0x7
 1223 0559 4502     		.2byte	0x245
 1224 055b 2C050000 		.4byte	0x52c
 1225 055f 0E       		.uleb128 0xe
 1226 0560 02       		.byte	0x2
 1227 0561 07       		.byte	0x7
 1228 0562 7A02     		.2byte	0x27a
 1229 0564 76050000 		.4byte	0x576
 1230 0568 0D       		.uleb128 0xd
 1231 0569 47070000 		.4byte	.LASF88
 1232 056d 07       		.byte	0x7
 1233 056e 7C02     		.2byte	0x27c
 1234 0570 09010000 		.4byte	0x109
 1235 0574 00       		.byte	0
 1236 0575 00       		.byte	0
 1237 0576 05       		.uleb128 0x5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 46


 1238 0577 E9030000 		.4byte	.LASF89
 1239 057b 07       		.byte	0x7
 1240 057c 7D02     		.2byte	0x27d
 1241 057e 5F050000 		.4byte	0x55f
 1242 0582 0E       		.uleb128 0xe
 1243 0583 02       		.byte	0x2
 1244 0584 07       		.byte	0x7
 1245 0585 8202     		.2byte	0x282
 1246 0587 99050000 		.4byte	0x599
 1247 058b 0D       		.uleb128 0xd
 1248 058c EA040000 		.4byte	.LASF90
 1249 0590 07       		.byte	0x7
 1250 0591 8702     		.2byte	0x287
 1251 0593 99050000 		.4byte	0x599
 1252 0597 00       		.byte	0
 1253 0598 00       		.byte	0
 1254 0599 0B       		.uleb128 0xb
 1255 059a 76050000 		.4byte	0x576
 1256 059e A9050000 		.4byte	0x5a9
 1257 05a2 0C       		.uleb128 0xc
 1258 05a3 D5000000 		.4byte	0xd5
 1259 05a7 00       		.byte	0
 1260 05a8 00       		.byte	0
 1261 05a9 05       		.uleb128 0x5
 1262 05aa 76010000 		.4byte	.LASF91
 1263 05ae 07       		.byte	0x7
 1264 05af 8802     		.2byte	0x288
 1265 05b1 82050000 		.4byte	0x582
 1266 05b5 13       		.uleb128 0x13
 1267 05b6 04       		.byte	0x4
 1268 05b7 07       		.byte	0x7
 1269 05b8 8D02     		.2byte	0x28d
 1270 05ba D7050000 		.4byte	0x5d7
 1271 05be 14       		.uleb128 0x14
 1272 05bf 70747200 		.ascii	"ptr\000"
 1273 05c3 07       		.byte	0x7
 1274 05c4 9202     		.2byte	0x292
 1275 05c6 2D010000 		.4byte	0x12d
 1276 05ca 15       		.uleb128 0x15
 1277 05cb D0070000 		.4byte	.LASF92
 1278 05cf 07       		.byte	0x7
 1279 05d0 9702     		.2byte	0x297
 1280 05d2 D7050000 		.4byte	0x5d7
 1281 05d6 00       		.byte	0
 1282 05d7 11       		.uleb128 0x11
 1283 05d8 04       		.byte	0x4
 1284 05d9 A9050000 		.4byte	0x5a9
 1285 05dd 05       		.uleb128 0x5
 1286 05de 63050000 		.4byte	.LASF93
 1287 05e2 07       		.byte	0x7
 1288 05e3 9802     		.2byte	0x298
 1289 05e5 B5050000 		.4byte	0x5b5
 1290 05e9 16       		.uleb128 0x16
 1291 05ea 9E050000 		.4byte	.LASF98
 1292 05ee 01       		.byte	0x1
 1293 05ef 9101     		.2byte	0x191
 1294 05f1 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 47


 1295 05f5 58000000 		.4byte	.LFE45-.LFB45
 1296 05f9 01       		.uleb128 0x1
 1297 05fa 9C       		.byte	0x9c
 1298 05fb 49060000 		.4byte	0x649
 1299 05ff 17       		.uleb128 0x17
 1300 0600 39010000 		.4byte	.LASF94
 1301 0604 01       		.byte	0x1
 1302 0605 9301     		.2byte	0x193
 1303 0607 15010000 		.4byte	0x115
 1304 060b 00000000 		.4byte	.LLST0
 1305 060f 17       		.uleb128 0x17
 1306 0610 DE030000 		.4byte	.LASF95
 1307 0614 01       		.byte	0x1
 1308 0615 9401     		.2byte	0x194
 1309 0617 76010000 		.4byte	0x176
 1310 061b 4D000000 		.4byte	.LLST1
 1311 061f 17       		.uleb128 0x17
 1312 0620 C6030000 		.4byte	.LASF96
 1313 0624 01       		.byte	0x1
 1314 0625 9501     		.2byte	0x195
 1315 0627 49060000 		.4byte	0x649
 1316 062b 60000000 		.4byte	.LLST2
 1317 062f 17       		.uleb128 0x17
 1318 0630 D7020000 		.4byte	.LASF97
 1319 0634 01       		.byte	0x1
 1320 0635 9601     		.2byte	0x196
 1321 0637 4F060000 		.4byte	0x64f
 1322 063b 73000000 		.4byte	.LLST3
 1323 063f 18       		.uleb128 0x18
 1324 0640 42000000 		.4byte	.LVL8
 1325 0644 7E090000 		.4byte	0x97e
 1326 0648 00       		.byte	0
 1327 0649 11       		.uleb128 0x11
 1328 064a 04       		.byte	0x4
 1329 064b 12020000 		.4byte	0x212
 1330 064f 11       		.uleb128 0x11
 1331 0650 04       		.byte	0x4
 1332 0651 55060000 		.4byte	0x655
 1333 0655 19       		.uleb128 0x19
 1334 0656 20050000 		.4byte	0x520
 1335 065a 16       		.uleb128 0x16
 1336 065b B6000000 		.4byte	.LASF99
 1337 065f 01       		.byte	0x1
 1338 0660 7704     		.2byte	0x477
 1339 0662 00000000 		.4byte	.LFB49
 1340 0666 16000000 		.4byte	.LFE49-.LFB49
 1341 066a 01       		.uleb128 0x1
 1342 066b 9C       		.byte	0x9c
 1343 066c 9F060000 		.4byte	0x69f
 1344 0670 1A       		.uleb128 0x1a
 1345 0671 C6030000 		.4byte	.LASF96
 1346 0675 01       		.byte	0x1
 1347 0676 7804     		.2byte	0x478
 1348 0678 49060000 		.4byte	0x649
 1349 067c 86000000 		.4byte	.LLST4
 1350 0680 1B       		.uleb128 0x1b
 1351 0681 AC000000 		.4byte	.LASF100
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 48


 1352 0685 01       		.byte	0x1
 1353 0686 7904     		.2byte	0x479
 1354 0688 14050000 		.4byte	0x514
 1355 068c 01       		.uleb128 0x1
 1356 068d 51       		.byte	0x51
 1357 068e 17       		.uleb128 0x17
 1358 068f 1D070000 		.4byte	.LASF101
 1359 0693 01       		.byte	0x1
 1360 0694 7B04     		.2byte	0x47b
 1361 0696 21010000 		.4byte	0x121
 1362 069a A7000000 		.4byte	.LLST5
 1363 069e 00       		.byte	0
 1364 069f 1C       		.uleb128 0x1c
 1365 06a0 5A040000 		.4byte	.LASF105
 1366 06a4 01       		.byte	0x1
 1367 06a5 1103     		.2byte	0x311
 1368 06a7 15010000 		.4byte	0x115
 1369 06ab 00000000 		.4byte	.LFB46
 1370 06af 3A000000 		.4byte	.LFE46-.LFB46
 1371 06b3 01       		.uleb128 0x1
 1372 06b4 9C       		.byte	0x9c
 1373 06b5 51070000 		.4byte	0x751
 1374 06b9 1A       		.uleb128 0x1a
 1375 06ba D7020000 		.4byte	.LASF97
 1376 06be 01       		.byte	0x1
 1377 06bf 1103     		.2byte	0x311
 1378 06c1 4F060000 		.4byte	0x64f
 1379 06c5 D6000000 		.4byte	.LLST6
 1380 06c9 17       		.uleb128 0x17
 1381 06ca DB070000 		.4byte	.LASF102
 1382 06ce 01       		.byte	0x1
 1383 06cf 1303     		.2byte	0x313
 1384 06d1 15010000 		.4byte	0x115
 1385 06d5 02010000 		.4byte	.LLST7
 1386 06d9 17       		.uleb128 0x17
 1387 06da DE030000 		.4byte	.LASF95
 1388 06de 01       		.byte	0x1
 1389 06df 1903     		.2byte	0x319
 1390 06e1 15010000 		.4byte	0x115
 1391 06e5 44010000 		.4byte	.LLST8
 1392 06e9 17       		.uleb128 0x17
 1393 06ea 7A070000 		.4byte	.LASF103
 1394 06ee 01       		.byte	0x1
 1395 06ef 1A03     		.2byte	0x31a
 1396 06f1 15010000 		.4byte	0x115
 1397 06f5 63010000 		.4byte	.LLST9
 1398 06f9 17       		.uleb128 0x17
 1399 06fa 29030000 		.4byte	.LASF104
 1400 06fe 01       		.byte	0x1
 1401 06ff 1B03     		.2byte	0x31b
 1402 0701 14050000 		.4byte	0x514
 1403 0705 82010000 		.4byte	.LLST10
 1404 0709 17       		.uleb128 0x17
 1405 070a C6030000 		.4byte	.LASF96
 1406 070e 01       		.byte	0x1
 1407 070f 1C03     		.2byte	0x31c
 1408 0711 49060000 		.4byte	0x649
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 49


 1409 0715 95010000 		.4byte	.LLST11
 1410 0719 1D       		.uleb128 0x1d
 1411 071a 20000000 		.4byte	.LVL26
 1412 071e 89090000 		.4byte	0x989
 1413 0722 3A070000 		.4byte	0x73a
 1414 0726 1E       		.uleb128 0x1e
 1415 0727 01       		.uleb128 0x1
 1416 0728 50       		.byte	0x50
 1417 0729 02       		.uleb128 0x2
 1418 072a 75       		.byte	0x75
 1419 072b 00       		.sleb128 0
 1420 072c 1E       		.uleb128 0x1e
 1421 072d 01       		.uleb128 0x1
 1422 072e 51       		.byte	0x51
 1423 072f 02       		.uleb128 0x2
 1424 0730 74       		.byte	0x74
 1425 0731 00       		.sleb128 0
 1426 0732 1E       		.uleb128 0x1e
 1427 0733 01       		.uleb128 0x1
 1428 0734 52       		.byte	0x52
 1429 0735 03       		.uleb128 0x3
 1430 0736 91       		.byte	0x91
 1431 0737 64       		.sleb128 -28
 1432 0738 06       		.byte	0x6
 1433 0739 00       		.byte	0
 1434 073a 1F       		.uleb128 0x1f
 1435 073b 2A000000 		.4byte	.LVL29
 1436 073f 5A060000 		.4byte	0x65a
 1437 0743 1E       		.uleb128 0x1e
 1438 0744 01       		.uleb128 0x1
 1439 0745 50       		.byte	0x50
 1440 0746 02       		.uleb128 0x2
 1441 0747 75       		.byte	0x75
 1442 0748 00       		.sleb128 0
 1443 0749 1E       		.uleb128 0x1e
 1444 074a 01       		.uleb128 0x1
 1445 074b 51       		.byte	0x51
 1446 074c 02       		.uleb128 0x2
 1447 074d 74       		.byte	0x74
 1448 074e 00       		.sleb128 0
 1449 074f 00       		.byte	0
 1450 0750 00       		.byte	0
 1451 0751 1C       		.uleb128 0x1c
 1452 0752 E2070000 		.4byte	.LASF106
 1453 0756 01       		.byte	0x1
 1454 0757 9303     		.2byte	0x393
 1455 0759 15010000 		.4byte	0x115
 1456 075d 00000000 		.4byte	.LFB47
 1457 0761 2A000000 		.4byte	.LFE47-.LFB47
 1458 0765 01       		.uleb128 0x1
 1459 0766 9C       		.byte	0x9c
 1460 0767 0C080000 		.4byte	0x80c
 1461 076b 1A       		.uleb128 0x1a
 1462 076c D7020000 		.4byte	.LASF97
 1463 0770 01       		.byte	0x1
 1464 0771 9403     		.2byte	0x394
 1465 0773 4F060000 		.4byte	0x64f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 50


 1466 0777 A8010000 		.4byte	.LLST12
 1467 077b 1A       		.uleb128 0x1a
 1468 077c AC000000 		.4byte	.LASF100
 1469 0780 01       		.byte	0x1
 1470 0781 9503     		.2byte	0x395
 1471 0783 14050000 		.4byte	0x514
 1472 0787 E2010000 		.4byte	.LLST13
 1473 078b 1A       		.uleb128 0x1a
 1474 078c C8020000 		.4byte	.LASF107
 1475 0790 01       		.byte	0x1
 1476 0791 9603     		.2byte	0x396
 1477 0793 DD050000 		.4byte	0x5dd
 1478 0797 24020000 		.4byte	.LLST14
 1479 079b 1A       		.uleb128 0x1a
 1480 079c 57060000 		.4byte	.LASF108
 1481 07a0 01       		.byte	0x1
 1482 07a1 9703     		.2byte	0x397
 1483 07a3 15010000 		.4byte	0x115
 1484 07a7 37020000 		.4byte	.LLST15
 1485 07ab 17       		.uleb128 0x17
 1486 07ac DB070000 		.4byte	.LASF102
 1487 07b0 01       		.byte	0x1
 1488 07b1 9903     		.2byte	0x399
 1489 07b3 15010000 		.4byte	0x115
 1490 07b7 63020000 		.4byte	.LLST16
 1491 07bb 17       		.uleb128 0x17
 1492 07bc DE030000 		.4byte	.LASF95
 1493 07c0 01       		.byte	0x1
 1494 07c1 9A03     		.2byte	0x39a
 1495 07c3 15010000 		.4byte	0x115
 1496 07c7 A4020000 		.4byte	.LLST17
 1497 07cb 17       		.uleb128 0x17
 1498 07cc C6030000 		.4byte	.LASF96
 1499 07d0 01       		.byte	0x1
 1500 07d1 9B03     		.2byte	0x39b
 1501 07d3 49060000 		.4byte	0x649
 1502 07d7 C2020000 		.4byte	.LLST18
 1503 07db 1D       		.uleb128 0x1d
 1504 07dc 14000000 		.4byte	.LVL43
 1505 07e0 89090000 		.4byte	0x989
 1506 07e4 F5070000 		.4byte	0x7f5
 1507 07e8 1E       		.uleb128 0x1e
 1508 07e9 01       		.uleb128 0x1
 1509 07ea 50       		.byte	0x50
 1510 07eb 02       		.uleb128 0x2
 1511 07ec 77       		.byte	0x77
 1512 07ed 00       		.sleb128 0
 1513 07ee 1E       		.uleb128 0x1e
 1514 07ef 01       		.uleb128 0x1
 1515 07f0 51       		.byte	0x51
 1516 07f1 02       		.uleb128 0x2
 1517 07f2 76       		.byte	0x76
 1518 07f3 00       		.sleb128 0
 1519 07f4 00       		.byte	0
 1520 07f5 1F       		.uleb128 0x1f
 1521 07f6 26000000 		.4byte	.LVL47
 1522 07fa 5A060000 		.4byte	0x65a
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 51


 1523 07fe 1E       		.uleb128 0x1e
 1524 07ff 01       		.uleb128 0x1
 1525 0800 50       		.byte	0x50
 1526 0801 02       		.uleb128 0x2
 1527 0802 77       		.byte	0x77
 1528 0803 00       		.sleb128 0
 1529 0804 1E       		.uleb128 0x1e
 1530 0805 01       		.uleb128 0x1
 1531 0806 51       		.byte	0x51
 1532 0807 02       		.uleb128 0x2
 1533 0808 76       		.byte	0x76
 1534 0809 00       		.sleb128 0
 1535 080a 00       		.byte	0
 1536 080b 00       		.byte	0
 1537 080c 1C       		.uleb128 0x1c
 1538 080d 24040000 		.4byte	.LASF109
 1539 0811 01       		.byte	0x1
 1540 0812 C104     		.2byte	0x4c1
 1541 0814 15010000 		.4byte	0x115
 1542 0818 00000000 		.4byte	.LFB50
 1543 081c 64000000 		.4byte	.LFE50-.LFB50
 1544 0820 01       		.uleb128 0x1
 1545 0821 9C       		.byte	0x9c
 1546 0822 B5080000 		.4byte	0x8b5
 1547 0826 1A       		.uleb128 0x1a
 1548 0827 07000000 		.4byte	.LASF110
 1549 082b 01       		.byte	0x1
 1550 082c C104     		.2byte	0x4c1
 1551 082e 15010000 		.4byte	0x115
 1552 0832 D5020000 		.4byte	.LLST19
 1553 0836 1A       		.uleb128 0x1a
 1554 0837 D7020000 		.4byte	.LASF97
 1555 083b 01       		.byte	0x1
 1556 083c C104     		.2byte	0x4c1
 1557 083e 4F060000 		.4byte	0x64f
 1558 0842 F3020000 		.4byte	.LLST20
 1559 0846 17       		.uleb128 0x17
 1560 0847 3B000000 		.4byte	.LASF111
 1561 084b 01       		.byte	0x1
 1562 084c C304     		.2byte	0x4c3
 1563 084e 15010000 		.4byte	0x115
 1564 0852 14030000 		.4byte	.LLST21
 1565 0856 17       		.uleb128 0x17
 1566 0857 12000000 		.4byte	.LASF112
 1567 085b 01       		.byte	0x1
 1568 085c C404     		.2byte	0x4c4
 1569 085e 15010000 		.4byte	0x115
 1570 0862 5E030000 		.4byte	.LLST22
 1571 0866 17       		.uleb128 0x17
 1572 0867 70070000 		.4byte	.LASF113
 1573 086b 01       		.byte	0x1
 1574 086c C504     		.2byte	0x4c5
 1575 086e 15010000 		.4byte	0x115
 1576 0872 7D030000 		.4byte	.LLST23
 1577 0876 17       		.uleb128 0x17
 1578 0877 EF060000 		.4byte	.LASF114
 1579 087b 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 52


 1580 087c C604     		.2byte	0x4c6
 1581 087e 15010000 		.4byte	0x115
 1582 0882 9B030000 		.4byte	.LLST24
 1583 0886 17       		.uleb128 0x17
 1584 0887 29030000 		.4byte	.LASF104
 1585 088b 01       		.byte	0x1
 1586 088c C704     		.2byte	0x4c7
 1587 088e 14050000 		.4byte	0x514
 1588 0892 B9030000 		.4byte	.LLST25
 1589 0896 17       		.uleb128 0x17
 1590 0897 C6030000 		.4byte	.LASF96
 1591 089b 01       		.byte	0x1
 1592 089c C804     		.2byte	0x4c8
 1593 089e 49060000 		.4byte	0x649
 1594 08a2 CC030000 		.4byte	.LLST26
 1595 08a6 20       		.uleb128 0x20
 1596 08a7 3D050000 		.4byte	.LASF115
 1597 08ab 01       		.byte	0x1
 1598 08ac C904     		.2byte	0x4c9
 1599 08ae 1A050000 		.4byte	0x51a
 1600 08b2 01       		.uleb128 0x1
 1601 08b3 53       		.byte	0x53
 1602 08b4 00       		.byte	0
 1603 08b5 16       		.uleb128 0x16
 1604 08b6 A1010000 		.4byte	.LASF116
 1605 08ba 01       		.byte	0x1
 1606 08bb F703     		.2byte	0x3f7
 1607 08bd 00000000 		.4byte	.LFB48
 1608 08c1 64000000 		.4byte	.LFE48-.LFB48
 1609 08c5 01       		.uleb128 0x1
 1610 08c6 9C       		.byte	0x9c
 1611 08c7 61090000 		.4byte	0x961
 1612 08cb 1A       		.uleb128 0x1a
 1613 08cc AD030000 		.4byte	.LASF117
 1614 08d0 01       		.byte	0x1
 1615 08d1 F703     		.2byte	0x3f7
 1616 08d3 15010000 		.4byte	0x115
 1617 08d7 DF030000 		.4byte	.LLST27
 1618 08db 1A       		.uleb128 0x1a
 1619 08dc D7020000 		.4byte	.LASF97
 1620 08e0 01       		.byte	0x1
 1621 08e1 F703     		.2byte	0x3f7
 1622 08e3 4F060000 		.4byte	0x64f
 1623 08e7 21040000 		.4byte	.LLST28
 1624 08eb 17       		.uleb128 0x17
 1625 08ec D1030000 		.4byte	.LASF118
 1626 08f0 01       		.byte	0x1
 1627 08f1 F903     		.2byte	0x3f9
 1628 08f3 15010000 		.4byte	0x115
 1629 08f7 5B040000 		.4byte	.LLST29
 1630 08fb 17       		.uleb128 0x17
 1631 08fc 42000000 		.4byte	.LASF119
 1632 0900 01       		.byte	0x1
 1633 0901 FA03     		.2byte	0x3fa
 1634 0903 15010000 		.4byte	0x115
 1635 0907 84040000 		.4byte	.LLST30
 1636 090b 17       		.uleb128 0x17
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 53


 1637 090c 7F050000 		.4byte	.LASF120
 1638 0910 01       		.byte	0x1
 1639 0911 FB03     		.2byte	0x3fb
 1640 0913 15010000 		.4byte	0x115
 1641 0917 DC040000 		.4byte	.LLST31
 1642 091b 17       		.uleb128 0x17
 1643 091c DE030000 		.4byte	.LASF95
 1644 0920 01       		.byte	0x1
 1645 0921 FC03     		.2byte	0x3fc
 1646 0923 76010000 		.4byte	0x176
 1647 0927 10050000 		.4byte	.LLST32
 1648 092b 1D       		.uleb128 0x1d
 1649 092c 16000000 		.4byte	.LVL81
 1650 0930 0C080000 		.4byte	0x80c
 1651 0934 46090000 		.4byte	0x946
 1652 0938 1E       		.uleb128 0x1e
 1653 0939 01       		.uleb128 0x1
 1654 093a 50       		.byte	0x50
 1655 093b 02       		.uleb128 0x2
 1656 093c 75       		.byte	0x75
 1657 093d 00       		.sleb128 0
 1658 093e 1E       		.uleb128 0x1e
 1659 093f 01       		.uleb128 0x1
 1660 0940 51       		.byte	0x51
 1661 0941 03       		.uleb128 0x3
 1662 0942 F3       		.byte	0xf3
 1663 0943 01       		.uleb128 0x1
 1664 0944 51       		.byte	0x51
 1665 0945 00       		.byte	0
 1666 0946 1F       		.uleb128 0x1f
 1667 0947 22000000 		.4byte	.LVL86
 1668 094b 94090000 		.4byte	0x994
 1669 094f 1E       		.uleb128 0x1e
 1670 0950 01       		.uleb128 0x1
 1671 0951 50       		.byte	0x50
 1672 0952 05       		.uleb128 0x5
 1673 0953 03       		.byte	0x3
 1674 0954 00000000 		.4byte	.LC3
 1675 0958 1E       		.uleb128 0x1e
 1676 0959 01       		.uleb128 0x1
 1677 095a 51       		.byte	0x51
 1678 095b 03       		.uleb128 0x3
 1679 095c 0A       		.byte	0xa
 1680 095d 2604     		.2byte	0x426
 1681 095f 00       		.byte	0
 1682 0960 00       		.byte	0
 1683 0961 21       		.uleb128 0x21
 1684 0962 7F040000 		.4byte	.LASF121
 1685 0966 07       		.byte	0x7
 1686 0967 D203     		.2byte	0x3d2
 1687 0969 82040000 		.4byte	0x482
 1688 096d 21       		.uleb128 0x21
 1689 096e 10010000 		.4byte	.LASF122
 1690 0972 07       		.byte	0x7
 1691 0973 D303     		.2byte	0x3d3
 1692 0975 79090000 		.4byte	0x979
 1693 0979 19       		.uleb128 0x19
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 54


 1694 097a 53050000 		.4byte	0x553
 1695 097e 22       		.uleb128 0x22
 1696 097f 27070000 		.4byte	.LASF123
 1697 0983 27070000 		.4byte	.LASF123
 1698 0987 08       		.byte	0x8
 1699 0988 19       		.byte	0x19
 1700 0989 22       		.uleb128 0x22
 1701 098a 3A030000 		.4byte	.LASF124
 1702 098e 3A030000 		.4byte	.LASF124
 1703 0992 09       		.byte	0x9
 1704 0993 70       		.byte	0x70
 1705 0994 23       		.uleb128 0x23
 1706 0995 BE060000 		.4byte	.LASF125
 1707 0999 BE060000 		.4byte	.LASF125
 1708 099d 05       		.byte	0x5
 1709 099e 9203     		.2byte	0x392
 1710 09a0 00       		.byte	0
 1711              		.section	.debug_abbrev,"",%progbits
 1712              	.Ldebug_abbrev0:
 1713 0000 01       		.uleb128 0x1
 1714 0001 11       		.uleb128 0x11
 1715 0002 01       		.byte	0x1
 1716 0003 25       		.uleb128 0x25
 1717 0004 0E       		.uleb128 0xe
 1718 0005 13       		.uleb128 0x13
 1719 0006 0B       		.uleb128 0xb
 1720 0007 03       		.uleb128 0x3
 1721 0008 0E       		.uleb128 0xe
 1722 0009 1B       		.uleb128 0x1b
 1723 000a 0E       		.uleb128 0xe
 1724 000b 55       		.uleb128 0x55
 1725 000c 17       		.uleb128 0x17
 1726 000d 11       		.uleb128 0x11
 1727 000e 01       		.uleb128 0x1
 1728 000f 10       		.uleb128 0x10
 1729 0010 17       		.uleb128 0x17
 1730 0011 00       		.byte	0
 1731 0012 00       		.byte	0
 1732 0013 02       		.uleb128 0x2
 1733 0014 24       		.uleb128 0x24
 1734 0015 00       		.byte	0
 1735 0016 0B       		.uleb128 0xb
 1736 0017 0B       		.uleb128 0xb
 1737 0018 3E       		.uleb128 0x3e
 1738 0019 0B       		.uleb128 0xb
 1739 001a 03       		.uleb128 0x3
 1740 001b 0E       		.uleb128 0xe
 1741 001c 00       		.byte	0
 1742 001d 00       		.byte	0
 1743 001e 03       		.uleb128 0x3
 1744 001f 16       		.uleb128 0x16
 1745 0020 00       		.byte	0
 1746 0021 03       		.uleb128 0x3
 1747 0022 0E       		.uleb128 0xe
 1748 0023 3A       		.uleb128 0x3a
 1749 0024 0B       		.uleb128 0xb
 1750 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 55


 1751 0026 0B       		.uleb128 0xb
 1752 0027 49       		.uleb128 0x49
 1753 0028 13       		.uleb128 0x13
 1754 0029 00       		.byte	0
 1755 002a 00       		.byte	0
 1756 002b 04       		.uleb128 0x4
 1757 002c 24       		.uleb128 0x24
 1758 002d 00       		.byte	0
 1759 002e 0B       		.uleb128 0xb
 1760 002f 0B       		.uleb128 0xb
 1761 0030 3E       		.uleb128 0x3e
 1762 0031 0B       		.uleb128 0xb
 1763 0032 03       		.uleb128 0x3
 1764 0033 08       		.uleb128 0x8
 1765 0034 00       		.byte	0
 1766 0035 00       		.byte	0
 1767 0036 05       		.uleb128 0x5
 1768 0037 16       		.uleb128 0x16
 1769 0038 00       		.byte	0
 1770 0039 03       		.uleb128 0x3
 1771 003a 0E       		.uleb128 0xe
 1772 003b 3A       		.uleb128 0x3a
 1773 003c 0B       		.uleb128 0xb
 1774 003d 3B       		.uleb128 0x3b
 1775 003e 05       		.uleb128 0x5
 1776 003f 49       		.uleb128 0x49
 1777 0040 13       		.uleb128 0x13
 1778 0041 00       		.byte	0
 1779 0042 00       		.byte	0
 1780 0043 06       		.uleb128 0x6
 1781 0044 0F       		.uleb128 0xf
 1782 0045 00       		.byte	0
 1783 0046 0B       		.uleb128 0xb
 1784 0047 0B       		.uleb128 0xb
 1785 0048 00       		.byte	0
 1786 0049 00       		.byte	0
 1787 004a 07       		.uleb128 0x7
 1788 004b 04       		.uleb128 0x4
 1789 004c 01       		.byte	0x1
 1790 004d 0B       		.uleb128 0xb
 1791 004e 0B       		.uleb128 0xb
 1792 004f 49       		.uleb128 0x49
 1793 0050 13       		.uleb128 0x13
 1794 0051 3A       		.uleb128 0x3a
 1795 0052 0B       		.uleb128 0xb
 1796 0053 3B       		.uleb128 0x3b
 1797 0054 0B       		.uleb128 0xb
 1798 0055 01       		.uleb128 0x1
 1799 0056 13       		.uleb128 0x13
 1800 0057 00       		.byte	0
 1801 0058 00       		.byte	0
 1802 0059 08       		.uleb128 0x8
 1803 005a 28       		.uleb128 0x28
 1804 005b 00       		.byte	0
 1805 005c 03       		.uleb128 0x3
 1806 005d 0E       		.uleb128 0xe
 1807 005e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 56


 1808 005f 0B       		.uleb128 0xb
 1809 0060 00       		.byte	0
 1810 0061 00       		.byte	0
 1811 0062 09       		.uleb128 0x9
 1812 0063 13       		.uleb128 0x13
 1813 0064 01       		.byte	0x1
 1814 0065 0B       		.uleb128 0xb
 1815 0066 0B       		.uleb128 0xb
 1816 0067 3A       		.uleb128 0x3a
 1817 0068 0B       		.uleb128 0xb
 1818 0069 3B       		.uleb128 0x3b
 1819 006a 0B       		.uleb128 0xb
 1820 006b 01       		.uleb128 0x1
 1821 006c 13       		.uleb128 0x13
 1822 006d 00       		.byte	0
 1823 006e 00       		.byte	0
 1824 006f 0A       		.uleb128 0xa
 1825 0070 0D       		.uleb128 0xd
 1826 0071 00       		.byte	0
 1827 0072 03       		.uleb128 0x3
 1828 0073 0E       		.uleb128 0xe
 1829 0074 3A       		.uleb128 0x3a
 1830 0075 0B       		.uleb128 0xb
 1831 0076 3B       		.uleb128 0x3b
 1832 0077 0B       		.uleb128 0xb
 1833 0078 49       		.uleb128 0x49
 1834 0079 13       		.uleb128 0x13
 1835 007a 38       		.uleb128 0x38
 1836 007b 0B       		.uleb128 0xb
 1837 007c 00       		.byte	0
 1838 007d 00       		.byte	0
 1839 007e 0B       		.uleb128 0xb
 1840 007f 01       		.uleb128 0x1
 1841 0080 01       		.byte	0x1
 1842 0081 49       		.uleb128 0x49
 1843 0082 13       		.uleb128 0x13
 1844 0083 01       		.uleb128 0x1
 1845 0084 13       		.uleb128 0x13
 1846 0085 00       		.byte	0
 1847 0086 00       		.byte	0
 1848 0087 0C       		.uleb128 0xc
 1849 0088 21       		.uleb128 0x21
 1850 0089 00       		.byte	0
 1851 008a 49       		.uleb128 0x49
 1852 008b 13       		.uleb128 0x13
 1853 008c 2F       		.uleb128 0x2f
 1854 008d 0B       		.uleb128 0xb
 1855 008e 00       		.byte	0
 1856 008f 00       		.byte	0
 1857 0090 0D       		.uleb128 0xd
 1858 0091 0D       		.uleb128 0xd
 1859 0092 00       		.byte	0
 1860 0093 03       		.uleb128 0x3
 1861 0094 0E       		.uleb128 0xe
 1862 0095 3A       		.uleb128 0x3a
 1863 0096 0B       		.uleb128 0xb
 1864 0097 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 57


 1865 0098 05       		.uleb128 0x5
 1866 0099 49       		.uleb128 0x49
 1867 009a 13       		.uleb128 0x13
 1868 009b 38       		.uleb128 0x38
 1869 009c 0B       		.uleb128 0xb
 1870 009d 00       		.byte	0
 1871 009e 00       		.byte	0
 1872 009f 0E       		.uleb128 0xe
 1873 00a0 13       		.uleb128 0x13
 1874 00a1 01       		.byte	0x1
 1875 00a2 0B       		.uleb128 0xb
 1876 00a3 0B       		.uleb128 0xb
 1877 00a4 3A       		.uleb128 0x3a
 1878 00a5 0B       		.uleb128 0xb
 1879 00a6 3B       		.uleb128 0x3b
 1880 00a7 05       		.uleb128 0x5
 1881 00a8 01       		.uleb128 0x1
 1882 00a9 13       		.uleb128 0x13
 1883 00aa 00       		.byte	0
 1884 00ab 00       		.byte	0
 1885 00ac 0F       		.uleb128 0xf
 1886 00ad 0D       		.uleb128 0xd
 1887 00ae 00       		.byte	0
 1888 00af 03       		.uleb128 0x3
 1889 00b0 08       		.uleb128 0x8
 1890 00b1 3A       		.uleb128 0x3a
 1891 00b2 0B       		.uleb128 0xb
 1892 00b3 3B       		.uleb128 0x3b
 1893 00b4 05       		.uleb128 0x5
 1894 00b5 49       		.uleb128 0x49
 1895 00b6 13       		.uleb128 0x13
 1896 00b7 38       		.uleb128 0x38
 1897 00b8 0B       		.uleb128 0xb
 1898 00b9 00       		.byte	0
 1899 00ba 00       		.byte	0
 1900 00bb 10       		.uleb128 0x10
 1901 00bc 35       		.uleb128 0x35
 1902 00bd 00       		.byte	0
 1903 00be 49       		.uleb128 0x49
 1904 00bf 13       		.uleb128 0x13
 1905 00c0 00       		.byte	0
 1906 00c1 00       		.byte	0
 1907 00c2 11       		.uleb128 0x11
 1908 00c3 0F       		.uleb128 0xf
 1909 00c4 00       		.byte	0
 1910 00c5 0B       		.uleb128 0xb
 1911 00c6 0B       		.uleb128 0xb
 1912 00c7 49       		.uleb128 0x49
 1913 00c8 13       		.uleb128 0x13
 1914 00c9 00       		.byte	0
 1915 00ca 00       		.byte	0
 1916 00cb 12       		.uleb128 0x12
 1917 00cc 26       		.uleb128 0x26
 1918 00cd 00       		.byte	0
 1919 00ce 00       		.byte	0
 1920 00cf 00       		.byte	0
 1921 00d0 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 58


 1922 00d1 17       		.uleb128 0x17
 1923 00d2 01       		.byte	0x1
 1924 00d3 0B       		.uleb128 0xb
 1925 00d4 0B       		.uleb128 0xb
 1926 00d5 3A       		.uleb128 0x3a
 1927 00d6 0B       		.uleb128 0xb
 1928 00d7 3B       		.uleb128 0x3b
 1929 00d8 05       		.uleb128 0x5
 1930 00d9 01       		.uleb128 0x1
 1931 00da 13       		.uleb128 0x13
 1932 00db 00       		.byte	0
 1933 00dc 00       		.byte	0
 1934 00dd 14       		.uleb128 0x14
 1935 00de 0D       		.uleb128 0xd
 1936 00df 00       		.byte	0
 1937 00e0 03       		.uleb128 0x3
 1938 00e1 08       		.uleb128 0x8
 1939 00e2 3A       		.uleb128 0x3a
 1940 00e3 0B       		.uleb128 0xb
 1941 00e4 3B       		.uleb128 0x3b
 1942 00e5 05       		.uleb128 0x5
 1943 00e6 49       		.uleb128 0x49
 1944 00e7 13       		.uleb128 0x13
 1945 00e8 00       		.byte	0
 1946 00e9 00       		.byte	0
 1947 00ea 15       		.uleb128 0x15
 1948 00eb 0D       		.uleb128 0xd
 1949 00ec 00       		.byte	0
 1950 00ed 03       		.uleb128 0x3
 1951 00ee 0E       		.uleb128 0xe
 1952 00ef 3A       		.uleb128 0x3a
 1953 00f0 0B       		.uleb128 0xb
 1954 00f1 3B       		.uleb128 0x3b
 1955 00f2 05       		.uleb128 0x5
 1956 00f3 49       		.uleb128 0x49
 1957 00f4 13       		.uleb128 0x13
 1958 00f5 00       		.byte	0
 1959 00f6 00       		.byte	0
 1960 00f7 16       		.uleb128 0x16
 1961 00f8 2E       		.uleb128 0x2e
 1962 00f9 01       		.byte	0x1
 1963 00fa 3F       		.uleb128 0x3f
 1964 00fb 19       		.uleb128 0x19
 1965 00fc 03       		.uleb128 0x3
 1966 00fd 0E       		.uleb128 0xe
 1967 00fe 3A       		.uleb128 0x3a
 1968 00ff 0B       		.uleb128 0xb
 1969 0100 3B       		.uleb128 0x3b
 1970 0101 05       		.uleb128 0x5
 1971 0102 27       		.uleb128 0x27
 1972 0103 19       		.uleb128 0x19
 1973 0104 11       		.uleb128 0x11
 1974 0105 01       		.uleb128 0x1
 1975 0106 12       		.uleb128 0x12
 1976 0107 06       		.uleb128 0x6
 1977 0108 40       		.uleb128 0x40
 1978 0109 18       		.uleb128 0x18
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 59


 1979 010a 9742     		.uleb128 0x2117
 1980 010c 19       		.uleb128 0x19
 1981 010d 01       		.uleb128 0x1
 1982 010e 13       		.uleb128 0x13
 1983 010f 00       		.byte	0
 1984 0110 00       		.byte	0
 1985 0111 17       		.uleb128 0x17
 1986 0112 34       		.uleb128 0x34
 1987 0113 00       		.byte	0
 1988 0114 03       		.uleb128 0x3
 1989 0115 0E       		.uleb128 0xe
 1990 0116 3A       		.uleb128 0x3a
 1991 0117 0B       		.uleb128 0xb
 1992 0118 3B       		.uleb128 0x3b
 1993 0119 05       		.uleb128 0x5
 1994 011a 49       		.uleb128 0x49
 1995 011b 13       		.uleb128 0x13
 1996 011c 02       		.uleb128 0x2
 1997 011d 17       		.uleb128 0x17
 1998 011e 00       		.byte	0
 1999 011f 00       		.byte	0
 2000 0120 18       		.uleb128 0x18
 2001 0121 898201   		.uleb128 0x4109
 2002 0124 00       		.byte	0
 2003 0125 11       		.uleb128 0x11
 2004 0126 01       		.uleb128 0x1
 2005 0127 31       		.uleb128 0x31
 2006 0128 13       		.uleb128 0x13
 2007 0129 00       		.byte	0
 2008 012a 00       		.byte	0
 2009 012b 19       		.uleb128 0x19
 2010 012c 26       		.uleb128 0x26
 2011 012d 00       		.byte	0
 2012 012e 49       		.uleb128 0x49
 2013 012f 13       		.uleb128 0x13
 2014 0130 00       		.byte	0
 2015 0131 00       		.byte	0
 2016 0132 1A       		.uleb128 0x1a
 2017 0133 05       		.uleb128 0x5
 2018 0134 00       		.byte	0
 2019 0135 03       		.uleb128 0x3
 2020 0136 0E       		.uleb128 0xe
 2021 0137 3A       		.uleb128 0x3a
 2022 0138 0B       		.uleb128 0xb
 2023 0139 3B       		.uleb128 0x3b
 2024 013a 05       		.uleb128 0x5
 2025 013b 49       		.uleb128 0x49
 2026 013c 13       		.uleb128 0x13
 2027 013d 02       		.uleb128 0x2
 2028 013e 17       		.uleb128 0x17
 2029 013f 00       		.byte	0
 2030 0140 00       		.byte	0
 2031 0141 1B       		.uleb128 0x1b
 2032 0142 05       		.uleb128 0x5
 2033 0143 00       		.byte	0
 2034 0144 03       		.uleb128 0x3
 2035 0145 0E       		.uleb128 0xe
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 60


 2036 0146 3A       		.uleb128 0x3a
 2037 0147 0B       		.uleb128 0xb
 2038 0148 3B       		.uleb128 0x3b
 2039 0149 05       		.uleb128 0x5
 2040 014a 49       		.uleb128 0x49
 2041 014b 13       		.uleb128 0x13
 2042 014c 02       		.uleb128 0x2
 2043 014d 18       		.uleb128 0x18
 2044 014e 00       		.byte	0
 2045 014f 00       		.byte	0
 2046 0150 1C       		.uleb128 0x1c
 2047 0151 2E       		.uleb128 0x2e
 2048 0152 01       		.byte	0x1
 2049 0153 3F       		.uleb128 0x3f
 2050 0154 19       		.uleb128 0x19
 2051 0155 03       		.uleb128 0x3
 2052 0156 0E       		.uleb128 0xe
 2053 0157 3A       		.uleb128 0x3a
 2054 0158 0B       		.uleb128 0xb
 2055 0159 3B       		.uleb128 0x3b
 2056 015a 05       		.uleb128 0x5
 2057 015b 27       		.uleb128 0x27
 2058 015c 19       		.uleb128 0x19
 2059 015d 49       		.uleb128 0x49
 2060 015e 13       		.uleb128 0x13
 2061 015f 11       		.uleb128 0x11
 2062 0160 01       		.uleb128 0x1
 2063 0161 12       		.uleb128 0x12
 2064 0162 06       		.uleb128 0x6
 2065 0163 40       		.uleb128 0x40
 2066 0164 18       		.uleb128 0x18
 2067 0165 9742     		.uleb128 0x2117
 2068 0167 19       		.uleb128 0x19
 2069 0168 01       		.uleb128 0x1
 2070 0169 13       		.uleb128 0x13
 2071 016a 00       		.byte	0
 2072 016b 00       		.byte	0
 2073 016c 1D       		.uleb128 0x1d
 2074 016d 898201   		.uleb128 0x4109
 2075 0170 01       		.byte	0x1
 2076 0171 11       		.uleb128 0x11
 2077 0172 01       		.uleb128 0x1
 2078 0173 31       		.uleb128 0x31
 2079 0174 13       		.uleb128 0x13
 2080 0175 01       		.uleb128 0x1
 2081 0176 13       		.uleb128 0x13
 2082 0177 00       		.byte	0
 2083 0178 00       		.byte	0
 2084 0179 1E       		.uleb128 0x1e
 2085 017a 8A8201   		.uleb128 0x410a
 2086 017d 00       		.byte	0
 2087 017e 02       		.uleb128 0x2
 2088 017f 18       		.uleb128 0x18
 2089 0180 9142     		.uleb128 0x2111
 2090 0182 18       		.uleb128 0x18
 2091 0183 00       		.byte	0
 2092 0184 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 61


 2093 0185 1F       		.uleb128 0x1f
 2094 0186 898201   		.uleb128 0x4109
 2095 0189 01       		.byte	0x1
 2096 018a 11       		.uleb128 0x11
 2097 018b 01       		.uleb128 0x1
 2098 018c 31       		.uleb128 0x31
 2099 018d 13       		.uleb128 0x13
 2100 018e 00       		.byte	0
 2101 018f 00       		.byte	0
 2102 0190 20       		.uleb128 0x20
 2103 0191 34       		.uleb128 0x34
 2104 0192 00       		.byte	0
 2105 0193 03       		.uleb128 0x3
 2106 0194 0E       		.uleb128 0xe
 2107 0195 3A       		.uleb128 0x3a
 2108 0196 0B       		.uleb128 0xb
 2109 0197 3B       		.uleb128 0x3b
 2110 0198 05       		.uleb128 0x5
 2111 0199 49       		.uleb128 0x49
 2112 019a 13       		.uleb128 0x13
 2113 019b 02       		.uleb128 0x2
 2114 019c 18       		.uleb128 0x18
 2115 019d 00       		.byte	0
 2116 019e 00       		.byte	0
 2117 019f 21       		.uleb128 0x21
 2118 01a0 34       		.uleb128 0x34
 2119 01a1 00       		.byte	0
 2120 01a2 03       		.uleb128 0x3
 2121 01a3 0E       		.uleb128 0xe
 2122 01a4 3A       		.uleb128 0x3a
 2123 01a5 0B       		.uleb128 0xb
 2124 01a6 3B       		.uleb128 0x3b
 2125 01a7 05       		.uleb128 0x5
 2126 01a8 49       		.uleb128 0x49
 2127 01a9 13       		.uleb128 0x13
 2128 01aa 3F       		.uleb128 0x3f
 2129 01ab 19       		.uleb128 0x19
 2130 01ac 3C       		.uleb128 0x3c
 2131 01ad 19       		.uleb128 0x19
 2132 01ae 00       		.byte	0
 2133 01af 00       		.byte	0
 2134 01b0 22       		.uleb128 0x22
 2135 01b1 2E       		.uleb128 0x2e
 2136 01b2 00       		.byte	0
 2137 01b3 3F       		.uleb128 0x3f
 2138 01b4 19       		.uleb128 0x19
 2139 01b5 3C       		.uleb128 0x3c
 2140 01b6 19       		.uleb128 0x19
 2141 01b7 6E       		.uleb128 0x6e
 2142 01b8 0E       		.uleb128 0xe
 2143 01b9 03       		.uleb128 0x3
 2144 01ba 0E       		.uleb128 0xe
 2145 01bb 3A       		.uleb128 0x3a
 2146 01bc 0B       		.uleb128 0xb
 2147 01bd 3B       		.uleb128 0x3b
 2148 01be 0B       		.uleb128 0xb
 2149 01bf 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 62


 2150 01c0 00       		.byte	0
 2151 01c1 23       		.uleb128 0x23
 2152 01c2 2E       		.uleb128 0x2e
 2153 01c3 00       		.byte	0
 2154 01c4 3F       		.uleb128 0x3f
 2155 01c5 19       		.uleb128 0x19
 2156 01c6 3C       		.uleb128 0x3c
 2157 01c7 19       		.uleb128 0x19
 2158 01c8 6E       		.uleb128 0x6e
 2159 01c9 0E       		.uleb128 0xe
 2160 01ca 03       		.uleb128 0x3
 2161 01cb 0E       		.uleb128 0xe
 2162 01cc 3A       		.uleb128 0x3a
 2163 01cd 0B       		.uleb128 0xb
 2164 01ce 3B       		.uleb128 0x3b
 2165 01cf 05       		.uleb128 0x5
 2166 01d0 00       		.byte	0
 2167 01d1 00       		.byte	0
 2168 01d2 00       		.byte	0
 2169              		.section	.debug_loc,"",%progbits
 2170              	.Ldebug_loc0:
 2171              	.LLST0:
 2172 0000 02000000 		.4byte	.LVL0
 2173 0004 06000000 		.4byte	.LVL1
 2174 0008 0200     		.2byte	0x2
 2175 000a 30       		.byte	0x30
 2176 000b 9F       		.byte	0x9f
 2177 000c 06000000 		.4byte	.LVL1
 2178 0010 22000000 		.4byte	.LVL3
 2179 0014 0100     		.2byte	0x1
 2180 0016 53       		.byte	0x53
 2181 0017 24000000 		.4byte	.LVL4
 2182 001b 46000000 		.4byte	.LVL10
 2183 001f 0100     		.2byte	0x1
 2184 0021 55       		.byte	0x55
 2185 0022 46000000 		.4byte	.LVL10
 2186 0026 48000000 		.4byte	.LVL11
 2187 002a 0100     		.2byte	0x1
 2188 002c 53       		.byte	0x53
 2189 002d 48000000 		.4byte	.LVL11
 2190 0031 4C000000 		.4byte	.LVL13
 2191 0035 0100     		.2byte	0x1
 2192 0037 55       		.byte	0x55
 2193 0038 4C000000 		.4byte	.LVL13
 2194 003c 58000000 		.4byte	.LFE45
 2195 0040 0300     		.2byte	0x3
 2196 0042 73       		.byte	0x73
 2197 0043 7F       		.sleb128 -1
 2198 0044 9F       		.byte	0x9f
 2199 0045 00000000 		.4byte	0
 2200 0049 00000000 		.4byte	0
 2201              	.LLST1:
 2202 004d 28000000 		.4byte	.LVL6
 2203 0051 3E000000 		.4byte	.LVL7
 2204 0055 0100     		.2byte	0x1
 2205 0057 52       		.byte	0x52
 2206 0058 00000000 		.4byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 63


 2207 005c 00000000 		.4byte	0
 2208              	.LLST2:
 2209 0060 26000000 		.4byte	.LVL5
 2210 0064 46000000 		.4byte	.LVL10
 2211 0068 0100     		.2byte	0x1
 2212 006a 56       		.byte	0x56
 2213 006b 00000000 		.4byte	0
 2214 006f 00000000 		.4byte	0
 2215              	.LLST3:
 2216 0073 24000000 		.4byte	.LVL4
 2217 0077 4C000000 		.4byte	.LVL12
 2218 007b 0100     		.2byte	0x1
 2219 007d 54       		.byte	0x54
 2220 007e 00000000 		.4byte	0
 2221 0082 00000000 		.4byte	0
 2222              	.LLST4:
 2223 0086 00000000 		.4byte	.LVL14
 2224 008a 0E000000 		.4byte	.LVL17
 2225 008e 0100     		.2byte	0x1
 2226 0090 50       		.byte	0x50
 2227 0091 0E000000 		.4byte	.LVL17
 2228 0095 16000000 		.4byte	.LFE49
 2229 0099 0400     		.2byte	0x4
 2230 009b F3       		.byte	0xf3
 2231 009c 01       		.uleb128 0x1
 2232 009d 50       		.byte	0x50
 2233 009e 9F       		.byte	0x9f
 2234 009f 00000000 		.4byte	0
 2235 00a3 00000000 		.4byte	0
 2236              	.LLST5:
 2237 00a7 02000000 		.4byte	.LVL15
 2238 00ab 08000000 		.4byte	.LVL16
 2239 00af 0200     		.2byte	0x2
 2240 00b1 30       		.byte	0x30
 2241 00b2 9F       		.byte	0x9f
 2242 00b3 08000000 		.4byte	.LVL16
 2243 00b7 14000000 		.4byte	.LVL18
 2244 00bb 0100     		.2byte	0x1
 2245 00bd 54       		.byte	0x54
 2246 00be 14000000 		.4byte	.LVL18
 2247 00c2 16000000 		.4byte	.LFE49
 2248 00c6 0600     		.2byte	0x6
 2249 00c8 73       		.byte	0x73
 2250 00c9 00       		.sleb128 0
 2251 00ca 72       		.byte	0x72
 2252 00cb 00       		.sleb128 0
 2253 00cc 1C       		.byte	0x1c
 2254 00cd 9F       		.byte	0x9f
 2255 00ce 00000000 		.4byte	0
 2256 00d2 00000000 		.4byte	0
 2257              	.LLST6:
 2258 00d6 00000000 		.4byte	.LVL19
 2259 00da 16000000 		.4byte	.LVL25
 2260 00de 0100     		.2byte	0x1
 2261 00e0 50       		.byte	0x50
 2262 00e1 16000000 		.4byte	.LVL25
 2263 00e5 38000000 		.4byte	.LVL36
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 64


 2264 00e9 0100     		.2byte	0x1
 2265 00eb 57       		.byte	0x57
 2266 00ec 38000000 		.4byte	.LVL36
 2267 00f0 3A000000 		.4byte	.LFE46
 2268 00f4 0400     		.2byte	0x4
 2269 00f6 F3       		.byte	0xf3
 2270 00f7 01       		.uleb128 0x1
 2271 00f8 50       		.byte	0x50
 2272 00f9 9F       		.byte	0x9f
 2273 00fa 00000000 		.4byte	0
 2274 00fe 00000000 		.4byte	0
 2275              	.LLST7:
 2276 0102 06000000 		.4byte	.LVL20
 2277 0106 16000000 		.4byte	.LVL25
 2278 010a 0200     		.2byte	0x2
 2279 010c 30       		.byte	0x30
 2280 010d 9F       		.byte	0x9f
 2281 010e 16000000 		.4byte	.LVL25
 2282 0112 22000000 		.4byte	.LVL27
 2283 0116 0200     		.2byte	0x2
 2284 0118 7D       		.byte	0x7d
 2285 0119 00       		.sleb128 0
 2286 011a 22000000 		.4byte	.LVL27
 2287 011e 26000000 		.4byte	.LVL28
 2288 0122 0100     		.2byte	0x1
 2289 0124 50       		.byte	0x50
 2290 0125 26000000 		.4byte	.LVL28
 2291 0129 38000000 		.4byte	.LVL32
 2292 012d 0200     		.2byte	0x2
 2293 012f 7D       		.byte	0x7d
 2294 0130 00       		.sleb128 0
 2295 0131 38000000 		.4byte	.LVL32
 2296 0135 3A000000 		.4byte	.LFE46
 2297 0139 0100     		.2byte	0x1
 2298 013b 50       		.byte	0x50
 2299 013c 00000000 		.4byte	0
 2300 0140 00000000 		.4byte	0
 2301              	.LLST8:
 2302 0144 0E000000 		.4byte	.LVL23
 2303 0148 12000000 		.4byte	.LVL24
 2304 014c 0100     		.2byte	0x1
 2305 014e 53       		.byte	0x53
 2306 014f 12000000 		.4byte	.LVL24
 2307 0153 3A000000 		.4byte	.LFE46
 2308 0157 0200     		.2byte	0x2
 2309 0159 91       		.byte	0x91
 2310 015a 64       		.sleb128 -28
 2311 015b 00000000 		.4byte	0
 2312 015f 00000000 		.4byte	0
 2313              	.LLST9:
 2314 0163 0E000000 		.4byte	.LVL23
 2315 0167 16000000 		.4byte	.LVL25
 2316 016b 0200     		.2byte	0x2
 2317 016d 30       		.byte	0x30
 2318 016e 9F       		.byte	0x9f
 2319 016f 16000000 		.4byte	.LVL25
 2320 0173 38000000 		.4byte	.LVL35
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 65


 2321 0177 0100     		.2byte	0x1
 2322 0179 56       		.byte	0x56
 2323 017a 00000000 		.4byte	0
 2324 017e 00000000 		.4byte	0
 2325              	.LLST10:
 2326 0182 08000000 		.4byte	.LVL21
 2327 0186 38000000 		.4byte	.LVL33
 2328 018a 0100     		.2byte	0x1
 2329 018c 54       		.byte	0x54
 2330 018d 00000000 		.4byte	0
 2331 0191 00000000 		.4byte	0
 2332              	.LLST11:
 2333 0195 0A000000 		.4byte	.LVL22
 2334 0199 38000000 		.4byte	.LVL34
 2335 019d 0100     		.2byte	0x1
 2336 019f 55       		.byte	0x55
 2337 01a0 00000000 		.4byte	0
 2338 01a4 00000000 		.4byte	0
 2339              	.LLST12:
 2340 01a8 00000000 		.4byte	.LVL37
 2341 01ac 10000000 		.4byte	.LVL42
 2342 01b0 0100     		.2byte	0x1
 2343 01b2 50       		.byte	0x50
 2344 01b3 10000000 		.4byte	.LVL42
 2345 01b7 18000000 		.4byte	.LVL45
 2346 01bb 0400     		.2byte	0x4
 2347 01bd F3       		.byte	0xf3
 2348 01be 01       		.uleb128 0x1
 2349 01bf 50       		.byte	0x50
 2350 01c0 9F       		.byte	0x9f
 2351 01c1 18000000 		.4byte	.LVL45
 2352 01c5 1A000000 		.4byte	.LVL46
 2353 01c9 0100     		.2byte	0x1
 2354 01cb 50       		.byte	0x50
 2355 01cc 1A000000 		.4byte	.LVL46
 2356 01d0 2A000000 		.4byte	.LFE47
 2357 01d4 0400     		.2byte	0x4
 2358 01d6 F3       		.byte	0xf3
 2359 01d7 01       		.uleb128 0x1
 2360 01d8 50       		.byte	0x50
 2361 01d9 9F       		.byte	0x9f
 2362 01da 00000000 		.4byte	0
 2363 01de 00000000 		.4byte	0
 2364              	.LLST13:
 2365 01e2 00000000 		.4byte	.LVL37
 2366 01e6 13000000 		.4byte	.LVL43-1
 2367 01ea 0100     		.2byte	0x1
 2368 01ec 51       		.byte	0x51
 2369 01ed 13000000 		.4byte	.LVL43-1
 2370 01f1 18000000 		.4byte	.LVL45
 2371 01f5 0100     		.2byte	0x1
 2372 01f7 56       		.byte	0x56
 2373 01f8 18000000 		.4byte	.LVL45
 2374 01fc 1A000000 		.4byte	.LVL46
 2375 0200 0100     		.2byte	0x1
 2376 0202 51       		.byte	0x51
 2377 0203 1A000000 		.4byte	.LVL46
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 66


 2378 0207 28000000 		.4byte	.LVL50
 2379 020b 0100     		.2byte	0x1
 2380 020d 56       		.byte	0x56
 2381 020e 28000000 		.4byte	.LVL50
 2382 0212 2A000000 		.4byte	.LFE47
 2383 0216 0400     		.2byte	0x4
 2384 0218 F3       		.byte	0xf3
 2385 0219 01       		.uleb128 0x1
 2386 021a 51       		.byte	0x51
 2387 021b 9F       		.byte	0x9f
 2388 021c 00000000 		.4byte	0
 2389 0220 00000000 		.4byte	0
 2390              	.LLST14:
 2391 0224 00000000 		.4byte	.LVL37
 2392 0228 08000000 		.4byte	.LVL39
 2393 022c 0100     		.2byte	0x1
 2394 022e 52       		.byte	0x52
 2395 022f 00000000 		.4byte	0
 2396 0233 00000000 		.4byte	0
 2397              	.LLST15:
 2398 0237 00000000 		.4byte	.LVL37
 2399 023b 0E000000 		.4byte	.LVL41
 2400 023f 0100     		.2byte	0x1
 2401 0241 53       		.byte	0x53
 2402 0242 0E000000 		.4byte	.LVL41
 2403 0246 28000000 		.4byte	.LVL48
 2404 024a 0100     		.2byte	0x1
 2405 024c 54       		.byte	0x54
 2406 024d 28000000 		.4byte	.LVL48
 2407 0251 2A000000 		.4byte	.LFE47
 2408 0255 0400     		.2byte	0x4
 2409 0257 F3       		.byte	0xf3
 2410 0258 01       		.uleb128 0x1
 2411 0259 53       		.byte	0x53
 2412 025a 9F       		.byte	0x9f
 2413 025b 00000000 		.4byte	0
 2414 025f 00000000 		.4byte	0
 2415              	.LLST16:
 2416 0263 06000000 		.4byte	.LVL38
 2417 0267 16000000 		.4byte	.LVL44
 2418 026b 0200     		.2byte	0x2
 2419 026d 30       		.byte	0x30
 2420 026e 9F       		.byte	0x9f
 2421 026f 16000000 		.4byte	.LVL44
 2422 0273 18000000 		.4byte	.LVL45
 2423 0277 0100     		.2byte	0x1
 2424 0279 50       		.byte	0x50
 2425 027a 18000000 		.4byte	.LVL45
 2426 027e 1A000000 		.4byte	.LVL46
 2427 0282 0200     		.2byte	0x2
 2428 0284 30       		.byte	0x30
 2429 0285 9F       		.byte	0x9f
 2430 0286 1A000000 		.4byte	.LVL46
 2431 028a 28000000 		.4byte	.LVL49
 2432 028e 0100     		.2byte	0x1
 2433 0290 55       		.byte	0x55
 2434 0291 28000000 		.4byte	.LVL49
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 67


 2435 0295 2A000000 		.4byte	.LFE47
 2436 0299 0100     		.2byte	0x1
 2437 029b 50       		.byte	0x50
 2438 029c 00000000 		.4byte	0
 2439 02a0 00000000 		.4byte	0
 2440              	.LLST17:
 2441 02a4 08000000 		.4byte	.LVL39
 2442 02a8 13000000 		.4byte	.LVL43-1
 2443 02ac 0100     		.2byte	0x1
 2444 02ae 52       		.byte	0x52
 2445 02af 18000000 		.4byte	.LVL45
 2446 02b3 1A000000 		.4byte	.LVL46
 2447 02b7 0100     		.2byte	0x1
 2448 02b9 52       		.byte	0x52
 2449 02ba 00000000 		.4byte	0
 2450 02be 00000000 		.4byte	0
 2451              	.LLST18:
 2452 02c2 0A000000 		.4byte	.LVL40
 2453 02c6 28000000 		.4byte	.LVL51
 2454 02ca 0100     		.2byte	0x1
 2455 02cc 57       		.byte	0x57
 2456 02cd 00000000 		.4byte	0
 2457 02d1 00000000 		.4byte	0
 2458              	.LLST19:
 2459 02d5 00000000 		.4byte	.LVL52
 2460 02d9 44000000 		.4byte	.LVL64
 2461 02dd 0100     		.2byte	0x1
 2462 02df 50       		.byte	0x50
 2463 02e0 44000000 		.4byte	.LVL64
 2464 02e4 64000000 		.4byte	.LFE50
 2465 02e8 0100     		.2byte	0x1
 2466 02ea 50       		.byte	0x50
 2467 02eb 00000000 		.4byte	0
 2468 02ef 00000000 		.4byte	0
 2469              	.LLST20:
 2470 02f3 00000000 		.4byte	.LVL52
 2471 02f7 0C000000 		.4byte	.LVL57
 2472 02fb 0100     		.2byte	0x1
 2473 02fd 51       		.byte	0x51
 2474 02fe 0C000000 		.4byte	.LVL57
 2475 0302 64000000 		.4byte	.LFE50
 2476 0306 0400     		.2byte	0x4
 2477 0308 F3       		.byte	0xf3
 2478 0309 01       		.uleb128 0x1
 2479 030a 51       		.byte	0x51
 2480 030b 9F       		.byte	0x9f
 2481 030c 00000000 		.4byte	0
 2482 0310 00000000 		.4byte	0
 2483              	.LLST21:
 2484 0314 04000000 		.4byte	.LVL53
 2485 0318 0E000000 		.4byte	.LVL58
 2486 031c 0100     		.2byte	0x1
 2487 031e 52       		.byte	0x52
 2488 031f 0E000000 		.4byte	.LVL58
 2489 0323 10000000 		.4byte	.LVL59
 2490 0327 0100     		.2byte	0x1
 2491 0329 54       		.byte	0x54
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 68


 2492 032a 10000000 		.4byte	.LVL59
 2493 032e 5A000000 		.4byte	.LVL72
 2494 0332 0100     		.2byte	0x1
 2495 0334 5C       		.byte	0x5c
 2496 0335 5A000000 		.4byte	.LVL72
 2497 0339 5E000000 		.4byte	.LVL73
 2498 033d 0100     		.2byte	0x1
 2499 033f 52       		.byte	0x52
 2500 0340 5E000000 		.4byte	.LVL73
 2501 0344 62000000 		.4byte	.LVL74
 2502 0348 0100     		.2byte	0x1
 2503 034a 54       		.byte	0x54
 2504 034b 62000000 		.4byte	.LVL74
 2505 034f 64000000 		.4byte	.LFE50
 2506 0353 0100     		.2byte	0x1
 2507 0355 5C       		.byte	0x5c
 2508 0356 00000000 		.4byte	0
 2509 035a 00000000 		.4byte	0
 2510              	.LLST22:
 2511 035e 0A000000 		.4byte	.LVL56
 2512 0362 0E000000 		.4byte	.LVL58
 2513 0366 0200     		.2byte	0x2
 2514 0368 31       		.byte	0x31
 2515 0369 9F       		.byte	0x9f
 2516 036a 0E000000 		.4byte	.LVL58
 2517 036e 64000000 		.4byte	.LFE50
 2518 0372 0100     		.2byte	0x1
 2519 0374 51       		.byte	0x51
 2520 0375 00000000 		.4byte	0
 2521 0379 00000000 		.4byte	0
 2522              	.LLST23:
 2523 037d 2E000000 		.4byte	.LVL63
 2524 0381 4C000000 		.4byte	.LVL66
 2525 0385 0100     		.2byte	0x1
 2526 0387 52       		.byte	0x52
 2527 0388 4E000000 		.4byte	.LVL67
 2528 038c 50000000 		.4byte	.LVL68
 2529 0390 0100     		.2byte	0x1
 2530 0392 52       		.byte	0x52
 2531 0393 00000000 		.4byte	0
 2532 0397 00000000 		.4byte	0
 2533              	.LLST24:
 2534 039b 22000000 		.4byte	.LVL60
 2535 039f 2A000000 		.4byte	.LVL61
 2536 03a3 0100     		.2byte	0x1
 2537 03a5 52       		.byte	0x52
 2538 03a6 2C000000 		.4byte	.LVL62
 2539 03aa 2E000000 		.4byte	.LVL63
 2540 03ae 0100     		.2byte	0x1
 2541 03b0 52       		.byte	0x52
 2542 03b1 00000000 		.4byte	0
 2543 03b5 00000000 		.4byte	0
 2544              	.LLST25:
 2545 03b9 06000000 		.4byte	.LVL54
 2546 03bd 62000000 		.4byte	.LVL75
 2547 03c1 0100     		.2byte	0x1
 2548 03c3 55       		.byte	0x55
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 69


 2549 03c4 00000000 		.4byte	0
 2550 03c8 00000000 		.4byte	0
 2551              	.LLST26:
 2552 03cc 08000000 		.4byte	.LVL55
 2553 03d0 62000000 		.4byte	.LVL76
 2554 03d4 0100     		.2byte	0x1
 2555 03d6 57       		.byte	0x57
 2556 03d7 00000000 		.4byte	0
 2557 03db 00000000 		.4byte	0
 2558              	.LLST27:
 2559 03df 00000000 		.4byte	.LVL77
 2560 03e3 12000000 		.4byte	.LVL80
 2561 03e7 0100     		.2byte	0x1
 2562 03e9 50       		.byte	0x50
 2563 03ea 12000000 		.4byte	.LVL80
 2564 03ee 1A000000 		.4byte	.LVL83
 2565 03f2 0100     		.2byte	0x1
 2566 03f4 54       		.byte	0x54
 2567 03f5 1A000000 		.4byte	.LVL83
 2568 03f9 1E000000 		.4byte	.LVL85
 2569 03fd 0100     		.2byte	0x1
 2570 03ff 50       		.byte	0x50
 2571 0400 1E000000 		.4byte	.LVL85
 2572 0404 2E000000 		.4byte	.LVL88
 2573 0408 0100     		.2byte	0x1
 2574 040a 54       		.byte	0x54
 2575 040b 2E000000 		.4byte	.LVL88
 2576 040f 64000000 		.4byte	.LFE48
 2577 0413 0400     		.2byte	0x4
 2578 0415 F3       		.byte	0xf3
 2579 0416 01       		.uleb128 0x1
 2580 0417 50       		.byte	0x50
 2581 0418 9F       		.byte	0x9f
 2582 0419 00000000 		.4byte	0
 2583 041d 00000000 		.4byte	0
 2584              	.LLST28:
 2585 0421 00000000 		.4byte	.LVL77
 2586 0425 15000000 		.4byte	.LVL81-1
 2587 0429 0100     		.2byte	0x1
 2588 042b 51       		.byte	0x51
 2589 042c 15000000 		.4byte	.LVL81-1
 2590 0430 1A000000 		.4byte	.LVL83
 2591 0434 0400     		.2byte	0x4
 2592 0436 F3       		.byte	0xf3
 2593 0437 01       		.uleb128 0x1
 2594 0438 51       		.byte	0x51
 2595 0439 9F       		.byte	0x9f
 2596 043a 1A000000 		.4byte	.LVL83
 2597 043e 1C000000 		.4byte	.LVL84
 2598 0442 0100     		.2byte	0x1
 2599 0444 51       		.byte	0x51
 2600 0445 1C000000 		.4byte	.LVL84
 2601 0449 64000000 		.4byte	.LFE48
 2602 044d 0400     		.2byte	0x4
 2603 044f F3       		.byte	0xf3
 2604 0450 01       		.uleb128 0x1
 2605 0451 51       		.byte	0x51
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 70


 2606 0452 9F       		.byte	0x9f
 2607 0453 00000000 		.4byte	0
 2608 0457 00000000 		.4byte	0
 2609              	.LLST29:
 2610 045b 0C000000 		.4byte	.LVL79
 2611 045f 18000000 		.4byte	.LVL82
 2612 0463 0100     		.2byte	0x1
 2613 0465 55       		.byte	0x55
 2614 0466 18000000 		.4byte	.LVL82
 2615 046a 1A000000 		.4byte	.LVL83
 2616 046e 0100     		.2byte	0x1
 2617 0470 50       		.byte	0x50
 2618 0471 1A000000 		.4byte	.LVL83
 2619 0475 54000000 		.4byte	.LVL97
 2620 0479 0100     		.2byte	0x1
 2621 047b 55       		.byte	0x55
 2622 047c 00000000 		.4byte	0
 2623 0480 00000000 		.4byte	0
 2624              	.LLST30:
 2625 0484 2A000000 		.4byte	.LVL87
 2626 0488 38000000 		.4byte	.LVL90
 2627 048c 0100     		.2byte	0x1
 2628 048e 53       		.byte	0x53
 2629 048f 38000000 		.4byte	.LVL90
 2630 0493 3A000000 		.4byte	.LVL91
 2631 0497 0300     		.2byte	0x3
 2632 0499 73       		.byte	0x73
 2633 049a 7C       		.sleb128 -4
 2634 049b 9F       		.byte	0x9f
 2635 049c 3A000000 		.4byte	.LVL91
 2636 04a0 46000000 		.4byte	.LVL92
 2637 04a4 0600     		.2byte	0x6
 2638 04a6 F3       		.byte	0xf3
 2639 04a7 01       		.uleb128 0x1
 2640 04a8 50       		.byte	0x50
 2641 04a9 35       		.byte	0x35
 2642 04aa 25       		.byte	0x25
 2643 04ab 9F       		.byte	0x9f
 2644 04ac 46000000 		.4byte	.LVL92
 2645 04b0 48000000 		.4byte	.LVL93
 2646 04b4 0100     		.2byte	0x1
 2647 04b6 53       		.byte	0x53
 2648 04b7 48000000 		.4byte	.LVL93
 2649 04bb 4A000000 		.4byte	.LVL94
 2650 04bf 0300     		.2byte	0x3
 2651 04c1 73       		.byte	0x73
 2652 04c2 7C       		.sleb128 -4
 2653 04c3 9F       		.byte	0x9f
 2654 04c4 4A000000 		.4byte	.LVL94
 2655 04c8 64000000 		.4byte	.LFE48
 2656 04cc 0600     		.2byte	0x6
 2657 04ce F3       		.byte	0xf3
 2658 04cf 01       		.uleb128 0x1
 2659 04d0 50       		.byte	0x50
 2660 04d1 35       		.byte	0x35
 2661 04d2 25       		.byte	0x25
 2662 04d3 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 71


 2663 04d4 00000000 		.4byte	0
 2664 04d8 00000000 		.4byte	0
 2665              	.LLST31:
 2666 04dc 32000000 		.4byte	.LVL89
 2667 04e0 52000000 		.4byte	.LVL95
 2668 04e4 0100     		.2byte	0x1
 2669 04e6 52       		.byte	0x52
 2670 04e7 52000000 		.4byte	.LVL95
 2671 04eb 54000000 		.4byte	.LVL96
 2672 04ef 0500     		.2byte	0x5
 2673 04f1 31       		.byte	0x31
 2674 04f2 74       		.byte	0x74
 2675 04f3 00       		.sleb128 0
 2676 04f4 24       		.byte	0x24
 2677 04f5 9F       		.byte	0x9f
 2678 04f6 54000000 		.4byte	.LVL96
 2679 04fa 64000000 		.4byte	.LFE48
 2680 04fe 0800     		.2byte	0x8
 2681 0500 31       		.byte	0x31
 2682 0501 F3       		.byte	0xf3
 2683 0502 01       		.uleb128 0x1
 2684 0503 50       		.byte	0x50
 2685 0504 4F       		.byte	0x4f
 2686 0505 1A       		.byte	0x1a
 2687 0506 24       		.byte	0x24
 2688 0507 9F       		.byte	0x9f
 2689 0508 00000000 		.4byte	0
 2690 050c 00000000 		.4byte	0
 2691              	.LLST32:
 2692 0510 06000000 		.4byte	.LVL78
 2693 0514 15000000 		.4byte	.LVL81-1
 2694 0518 0100     		.2byte	0x1
 2695 051a 52       		.byte	0x52
 2696 051b 1A000000 		.4byte	.LVL83
 2697 051f 21000000 		.4byte	.LVL86-1
 2698 0523 0100     		.2byte	0x1
 2699 0525 52       		.byte	0x52
 2700 0526 00000000 		.4byte	0
 2701 052a 00000000 		.4byte	0
 2702              		.section	.debug_aranges,"",%progbits
 2703 0000 44000000 		.4byte	0x44
 2704 0004 0200     		.2byte	0x2
 2705 0006 00000000 		.4byte	.Ldebug_info0
 2706 000a 04       		.byte	0x4
 2707 000b 00       		.byte	0
 2708 000c 0000     		.2byte	0
 2709 000e 0000     		.2byte	0
 2710 0010 00000000 		.4byte	.LFB45
 2711 0014 58000000 		.4byte	.LFE45-.LFB45
 2712 0018 00000000 		.4byte	.LFB49
 2713 001c 16000000 		.4byte	.LFE49-.LFB49
 2714 0020 00000000 		.4byte	.LFB46
 2715 0024 3A000000 		.4byte	.LFE46-.LFB46
 2716 0028 00000000 		.4byte	.LFB47
 2717 002c 2A000000 		.4byte	.LFE47-.LFB47
 2718 0030 00000000 		.4byte	.LFB50
 2719 0034 64000000 		.4byte	.LFE50-.LFB50
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 72


 2720 0038 00000000 		.4byte	.LFB48
 2721 003c 64000000 		.4byte	.LFE48-.LFB48
 2722 0040 00000000 		.4byte	0
 2723 0044 00000000 		.4byte	0
 2724              		.section	.debug_ranges,"",%progbits
 2725              	.Ldebug_ranges0:
 2726 0000 00000000 		.4byte	.LFB45
 2727 0004 58000000 		.4byte	.LFE45
 2728 0008 00000000 		.4byte	.LFB49
 2729 000c 16000000 		.4byte	.LFE49
 2730 0010 00000000 		.4byte	.LFB46
 2731 0014 3A000000 		.4byte	.LFE46
 2732 0018 00000000 		.4byte	.LFB47
 2733 001c 2A000000 		.4byte	.LFE47
 2734 0020 00000000 		.4byte	.LFB50
 2735 0024 64000000 		.4byte	.LFE50
 2736 0028 00000000 		.4byte	.LFB48
 2737 002c 64000000 		.4byte	.LFE48
 2738 0030 00000000 		.4byte	0
 2739 0034 00000000 		.4byte	0
 2740              		.section	.debug_line,"",%progbits
 2741              	.Ldebug_line0:
 2742 0000 10040000 		.section	.debug_str,"MS",%progbits,1
 2742      0200D302 
 2742      00000201 
 2742      FB0E0D00 
 2742      01010101 
 2743              	.LASF25:
 2744 0000 75696E74 		.ascii	"uint16\000"
 2744      313600
 2745              	.LASF110:
 2746 0007 63757272 		.ascii	"currStatus\000"
 2746      53746174 
 2746      757300
 2747              	.LASF112:
 2748 0012 736E734D 		.ascii	"snsMask\000"
 2748      61736B00 
 2749              	.LASF79:
 2750 001a 70747232 		.ascii	"ptr2FltrHistory\000"
 2750      466C7472 
 2750      48697374 
 2750      6F727900 
 2751              	.LASF17:
 2752 002a 73697A65 		.ascii	"size_t\000"
 2752      5F7400
 2753              	.LASF3:
 2754 0031 5F5F7569 		.ascii	"__uint8_t\000"
 2754      6E74385F 
 2754      7400
 2755              	.LASF111:
 2756 003b 736E7343 		.ascii	"snsCnt\000"
 2756      6E7400
 2757              	.LASF119:
 2758 0042 77645374 		.ascii	"wdStatusIndex\000"
 2758      61747573 
 2758      496E6465 
 2758      7800
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 73


 2759              	.LASF127:
 2760 0050 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Processing.c\000"
 2760      72617465 
 2760      645F536F 
 2760      75726365 
 2760      5C50536F 
 2761              	.LASF56:
 2762 007d 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2762      656E7365 
 2762      5F52414D 
 2762      5F534E53 
 2762      5F535452 
 2763              	.LASF11:
 2764 0095 6C6F6E67 		.ascii	"long long unsigned int\000"
 2764      206C6F6E 
 2764      6720756E 
 2764      7369676E 
 2764      65642069 
 2765              	.LASF100:
 2766 00ac 63757253 		.ascii	"curSnsPtr\000"
 2766      6E735074 
 2766      7200
 2767              	.LASF99:
 2768 00b6 43617053 		.ascii	"CapSense_DpUpdateDifferences\000"
 2768      656E7365 
 2768      5F447055 
 2768      70646174 
 2768      65446966 
 2769              	.LASF76:
 2770 00d3 70747232 		.ascii	"ptr2SnsFlash\000"
 2770      536E7346 
 2770      6C617368 
 2770      00
 2771              	.LASF53:
 2772 00e0 64696666 		.ascii	"diff\000"
 2772      00
 2773              	.LASF29:
 2774 00e5 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2774      656E7365 
 2774      5F4C4F57 
 2774      5F42534C 
 2774      4E5F5253 
 2775              	.LASF72:
 2776 0100 736E7254 		.ascii	"snrTestSensorId\000"
 2776      65737453 
 2776      656E736F 
 2776      72496400 
 2777              	.LASF122:
 2778 0110 43617053 		.ascii	"CapSense_dsFlash\000"
 2778      656E7365 
 2778      5F647346 
 2778      6C617368 
 2778      00
 2779              	.LASF28:
 2780 0121 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2780      656E7365 
 2780      5F544852 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 74


 2780      4553484F 
 2780      4C445F54 
 2781              	.LASF94:
 2782 0139 77646774 		.ascii	"wdgtId\000"
 2782      496400
 2783              	.LASF31:
 2784 0140 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2784      656E7365 
 2784      5F57445F 
 2784      4C494E45 
 2784      41525F53 
 2785              	.LASF10:
 2786 015c 6C6F6E67 		.ascii	"long long int\000"
 2786      206C6F6E 
 2786      6720696E 
 2786      7400
 2787              	.LASF0:
 2788 016a 7369676E 		.ascii	"signed char\000"
 2788      65642063 
 2788      68617200 
 2789              	.LASF91:
 2790 0176 43617053 		.ascii	"CapSense_REGULAR_FLTR_STRUCT\000"
 2790      656E7365 
 2790      5F524547 
 2790      554C4152 
 2790      5F464C54 
 2791              	.LASF49:
 2792 0193 62757474 		.ascii	"button0\000"
 2792      6F6E3000 
 2793              	.LASF27:
 2794 019b 696E7433 		.ascii	"int32\000"
 2794      3200
 2795              	.LASF116:
 2796 01a1 43617053 		.ascii	"CapSense_DpProcessCsdWidgetStatus\000"
 2796      656E7365 
 2796      5F447050 
 2796      726F6365 
 2796      73734373 
 2797              	.LASF66:
 2798 01c3 736E7353 		.ascii	"snsStatus\000"
 2798      74617475 
 2798      7300
 2799              	.LASF7:
 2800 01cd 6C6F6E67 		.ascii	"long int\000"
 2800      20696E74 
 2800      00
 2801              	.LASF68:
 2802 01d6 6D6F6443 		.ascii	"modCsdClk\000"
 2802      7364436C 
 2802      6B00
 2803              	.LASF78:
 2804 01e0 70747232 		.ascii	"ptr2SnsRam\000"
 2804      536E7352 
 2804      616D00
 2805              	.LASF24:
 2806 01eb 75696E74 		.ascii	"uint8\000"
 2806      3800
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 75


 2807              	.LASF14:
 2808 01f1 75696E74 		.ascii	"uint16_t\000"
 2808      31365F74 
 2808      00
 2809              	.LASF23:
 2810 01fa 646F7562 		.ascii	"double\000"
 2810      6C6500
 2811              	.LASF74:
 2812 0201 736E7254 		.ascii	"snrTestRawCount\000"
 2812      65737452 
 2812      6177436F 
 2812      756E7400 
 2813              	.LASF5:
 2814 0211 73686F72 		.ascii	"short unsigned int\000"
 2814      7420756E 
 2814      7369676E 
 2814      65642069 
 2814      6E7400
 2815              	.LASF26:
 2816 0224 75696E74 		.ascii	"uint32\000"
 2816      333200
 2817              	.LASF41:
 2818 022b 68797374 		.ascii	"hysteresis\000"
 2818      65726573 
 2818      697300
 2819              	.LASF8:
 2820 0236 5F5F7569 		.ascii	"__uint32_t\000"
 2820      6E743332 
 2820      5F7400
 2821              	.LASF52:
 2822 0241 62736C6E 		.ascii	"bslnExt\000"
 2822      45787400 
 2823              	.LASF128:
 2824 0249 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 2824      635C4461 
 2824      74615C56 
 2824      53636F64 
 2824      655C4749 
 2825 0276 65735C45 		.ascii	"es\\Example_CapSense\\Onethinx_Creator.cydsn\000"
 2825      78616D70 
 2825      6C655F43 
 2825      61705365 
 2825      6E73655C 
 2826              	.LASF65:
 2827 02a1 77646774 		.ascii	"wdgtStatus\000"
 2827      53746174 
 2827      757300
 2828              	.LASF33:
 2829 02ac 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2829      656E7365 
 2829      5F57445F 
 2829      4D415452 
 2829      49585F42 
 2830              	.LASF107:
 2831 02c8 666C7472 		.ascii	"fltrHistV\000"
 2831      48697374 
 2831      5600
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 76


 2832              	.LASF51:
 2833 02d2 62736C6E 		.ascii	"bsln\000"
 2833      00
 2834              	.LASF97:
 2835 02d7 70747246 		.ascii	"ptrFlashWdgt\000"
 2835      6C617368 
 2835      57646774 
 2835      00
 2836              	.LASF12:
 2837 02e4 756E7369 		.ascii	"unsigned int\000"
 2837      676E6564 
 2837      20696E74 
 2837      00
 2838              	.LASF71:
 2839 02f1 736E7254 		.ascii	"snrTestWidgetId\000"
 2839      65737457 
 2839      69646765 
 2839      74496400 
 2840              	.LASF9:
 2841 0301 6C6F6E67 		.ascii	"long unsigned int\000"
 2841      20756E73 
 2841      69676E65 
 2841      6420696E 
 2841      7400
 2842              	.LASF64:
 2843 0313 77646774 		.ascii	"wdgtEnable\000"
 2843      456E6162 
 2843      6C6500
 2844              	.LASF43:
 2845 031e 6C6F7742 		.ascii	"lowBslnRst\000"
 2845      736C6E52 
 2845      737400
 2846              	.LASF104:
 2847 0329 70747253 		.ascii	"ptrSnsTmp\000"
 2847      6E73546D 
 2847      7000
 2848              	.LASF20:
 2849 0333 63686172 		.ascii	"char_t\000"
 2849      5F7400
 2850              	.LASF124:
 2851 033a 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2851      656E7365 
 2851      5F467455 
 2851      70646174 
 2851      65426173 
 2852              	.LASF70:
 2853 0354 736E734C 		.ascii	"snsList\000"
 2853      69737400 
 2854              	.LASF58:
 2855 035c 636F6E66 		.ascii	"configId\000"
 2855      69674964 
 2855      00
 2856              	.LASF67:
 2857 0365 63736430 		.ascii	"csd0Config\000"
 2857      436F6E66 
 2857      696700
 2858              	.LASF77:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 77


 2859 0370 70747232 		.ascii	"ptr2WdgtRam\000"
 2859      57646774 
 2859      52616D00 
 2860              	.LASF2:
 2861 037c 73686F72 		.ascii	"short int\000"
 2861      7420696E 
 2861      7400
 2862              	.LASF59:
 2863 0386 64657669 		.ascii	"deviceId\000"
 2863      63654964 
 2863      00
 2864              	.LASF48:
 2865 038f 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 2865      656E7365 
 2865      5F52414D 
 2865      5F57445F 
 2865      42555454 
 2866              	.LASF117:
 2867 03ad 77696467 		.ascii	"widgetId\000"
 2867      65744964 
 2867      00
 2868              	.LASF44:
 2869 03b6 69646163 		.ascii	"idacMod\000"
 2869      4D6F6400 
 2870              	.LASF84:
 2871 03be 6E756D43 		.ascii	"numCols\000"
 2871      6F6C7300 
 2872              	.LASF96:
 2873 03c6 70747252 		.ascii	"ptrRamWdgt\000"
 2873      616D5764 
 2873      677400
 2874              	.LASF118:
 2875 03d1 73656E73 		.ascii	"sensorStatus\000"
 2875      6F725374 
 2875      61747573 
 2875      00
 2876              	.LASF95:
 2877 03de 77696467 		.ascii	"widgetType\000"
 2877      65745479 
 2877      706500
 2878              	.LASF89:
 2879 03e9 43617053 		.ascii	"CapSense_REGULAR_FLTR_CHANNEL_STRUCT\000"
 2879      656E7365 
 2879      5F524547 
 2879      554C4152 
 2879      5F464C54 
 2880              	.LASF81:
 2881 040e 73746174 		.ascii	"staticConfig\000"
 2881      6963436F 
 2881      6E666967 
 2881      00
 2882              	.LASF40:
 2883 041b 6E4E6F69 		.ascii	"nNoiseTh\000"
 2883      73655468 
 2883      00
 2884              	.LASF109:
 2885 0424 43617053 		.ascii	"CapSense_DpProcessButton\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 78


 2885      656E7365 
 2885      5F447050 
 2885      726F6365 
 2885      73734275 
 2886              	.LASF60:
 2887 043d 6877436C 		.ascii	"hwClock\000"
 2887      6F636B00 
 2888              	.LASF83:
 2889 0445 77646774 		.ascii	"wdgtType\000"
 2889      54797065 
 2889      00
 2890              	.LASF62:
 2891 044e 7363616E 		.ascii	"scanCounter\000"
 2891      436F756E 
 2891      74657200 
 2892              	.LASF105:
 2893 045a 43617053 		.ascii	"CapSense_DpProcessCsdWidgetRawCounts\000"
 2893      656E7365 
 2893      5F447050 
 2893      726F6365 
 2893      73734373 
 2894              	.LASF121:
 2895 047f 43617053 		.ascii	"CapSense_dsRam\000"
 2895      656E7365 
 2895      5F647352 
 2895      616D00
 2896              	.LASF61:
 2897 048e 74756E65 		.ascii	"tunerCmd\000"
 2897      72436D64 
 2897      00
 2898              	.LASF22:
 2899 0497 666C6F61 		.ascii	"float\000"
 2899      7400
 2900              	.LASF32:
 2901 049d 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2901      656E7365 
 2901      5F57445F 
 2901      52414449 
 2901      414C5F53 
 2902              	.LASF57:
 2903 04b9 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 2903      656E7365 
 2903      5F52414D 
 2903      5F534E53 
 2903      5F4C4953 
 2904              	.LASF75:
 2905 04d6 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 2905      656E7365 
 2905      5F52414D 
 2905      5F535452 
 2905      55435400 
 2906              	.LASF90:
 2907 04ea 72656775 		.ascii	"regularChannel\000"
 2907      6C617243 
 2907      68616E6E 
 2907      656C00
 2908              	.LASF30:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 79


 2909 04f9 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2909      656E7365 
 2909      5F57445F 
 2909      42555454 
 2909      4F4E5F45 
 2910              	.LASF15:
 2911 050e 696E7433 		.ascii	"int32_t\000"
 2911      325F7400 
 2912              	.LASF1:
 2913 0516 756E7369 		.ascii	"unsigned char\000"
 2913      676E6564 
 2913      20636861 
 2913      7200
 2914              	.LASF85:
 2915 0524 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2915      656E7365 
 2915      5F464C41 
 2915      53485F57 
 2915      445F5354 
 2916              	.LASF115:
 2917 053d 70747244 		.ascii	"ptrDebounceCnt\000"
 2917      65626F75 
 2917      6E636543 
 2917      6E7400
 2918              	.LASF34:
 2919 054c 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2919      656E7365 
 2919      5F57445F 
 2919      544F5543 
 2919      48504144 
 2920              	.LASF93:
 2921 0563 43617053 		.ascii	"CapSense_PTR_FILTER_VARIANT\000"
 2921      656E7365 
 2921      5F505452 
 2921      5F46494C 
 2921      5445525F 
 2922              	.LASF120:
 2923 057f 77645374 		.ascii	"wdStatusMask\000"
 2923      61747573 
 2923      4D61736B 
 2923      00
 2924              	.LASF16:
 2925 058c 75696E74 		.ascii	"uint32_t\000"
 2925      33325F74 
 2925      00
 2926              	.LASF69:
 2927 0595 77646774 		.ascii	"wdgtList\000"
 2927      4C697374 
 2927      00
 2928              	.LASF98:
 2929 059e 43617053 		.ascii	"CapSense_DpInitialize\000"
 2929      656E7365 
 2929      5F447049 
 2929      6E697469 
 2929      616C697A 
 2930              	.LASF126:
 2931 05b4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 80


 2931      43313120 
 2931      352E342E 
 2931      31203230 
 2931      31363036 
 2932 05e7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2932      20726576 
 2932      6973696F 
 2932      6E203233 
 2932      37373135 
 2933 061a 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2933      67202D66 
 2933      66756E63 
 2933      74696F6E 
 2933      2D736563 
 2934              	.LASF18:
 2935 0646 6C6F6E67 		.ascii	"long double\000"
 2935      20646F75 
 2935      626C6500 
 2936              	.LASF21:
 2937 0652 63686172 		.ascii	"char\000"
 2937      00
 2938              	.LASF108:
 2939 0657 6D6F6465 		.ascii	"mode\000"
 2939      00
 2940              	.LASF4:
 2941 065c 5F5F7569 		.ascii	"__uint16_t\000"
 2941      6E743136 
 2941      5F7400
 2942              	.LASF45:
 2943 0667 736E7343 		.ascii	"snsClk\000"
 2943      6C6B00
 2944              	.LASF47:
 2945 066e 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2945      656E7365 
 2945      5F52414D 
 2945      5F57445F 
 2945      42415345 
 2946              	.LASF6:
 2947 068a 5F5F696E 		.ascii	"__int32_t\000"
 2947      7433325F 
 2947      7400
 2948              	.LASF42:
 2949 0694 6F6E4465 		.ascii	"onDebounce\000"
 2949      626F756E 
 2949      636500
 2950              	.LASF36:
 2951 069f 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 2951      656E7365 
 2951      5F57445F 
 2951      54595045 
 2951      5F454E55 
 2952              	.LASF55:
 2953 06b5 69646163 		.ascii	"idacComp\000"
 2953      436F6D70 
 2953      00
 2954              	.LASF125:
 2955 06be 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 81


 2955      79734C69 
 2955      625F4173 
 2955      73657274 
 2955      4661696C 
 2956              	.LASF54:
 2957 06d5 6E656742 		.ascii	"negBslnRstCnt\000"
 2957      736C6E52 
 2957      7374436E 
 2957      7400
 2958              	.LASF82:
 2959 06e3 746F7461 		.ascii	"totalNumSns\000"
 2959      6C4E756D 
 2959      536E7300 
 2960              	.LASF114:
 2961 06ef 746F7563 		.ascii	"touchTh\000"
 2961      68546800 
 2962              	.LASF80:
 2963 06f7 70747232 		.ascii	"ptr2DebounceArr\000"
 2963      4465626F 
 2963      756E6365 
 2963      41727200 
 2964              	.LASF87:
 2965 0707 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2965      656E7365 
 2965      5F464C41 
 2965      53485F53 
 2965      54525543 
 2966              	.LASF101:
 2967 071d 64696666 		.ascii	"diffValue\000"
 2967      56616C75 
 2967      6500
 2968              	.LASF123:
 2969 0727 6D656D73 		.ascii	"memset\000"
 2969      657400
 2970              	.LASF63:
 2971 072e 73746174 		.ascii	"status\000"
 2971      757300
 2972              	.LASF86:
 2973 0735 77646774 		.ascii	"wdgtArray\000"
 2973      41727261 
 2973      7900
 2974              	.LASF13:
 2975 073f 75696E74 		.ascii	"uint8_t\000"
 2975      385F7400 
 2976              	.LASF88:
 2977 0747 6E6F7455 		.ascii	"notUsed\000"
 2977      73656400 
 2978              	.LASF19:
 2979 074f 73697A65 		.ascii	"sizetype\000"
 2979      74797065 
 2979      00
 2980              	.LASF37:
 2981 0758 7265736F 		.ascii	"resolution\000"
 2981      6C757469 
 2981      6F6E00
 2982              	.LASF46:
 2983 0763 736E7343 		.ascii	"snsClkSource\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccPMJUbQ.s 			page 82


 2983      6C6B536F 
 2983      75726365 
 2983      00
 2984              	.LASF113:
 2985 0770 6E657753 		.ascii	"newStatus\000"
 2985      74617475 
 2985      7300
 2986              	.LASF103:
 2987 077a 736E7349 		.ascii	"snsId\000"
 2987      6400
 2988              	.LASF38:
 2989 0780 66696E67 		.ascii	"fingerTh\000"
 2989      65725468 
 2989      00
 2990              	.LASF35:
 2991 0789 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2991      656E7365 
 2991      5F57445F 
 2991      50524F58 
 2991      494D4954 
 2992              	.LASF50:
 2993 07a1 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 2993      656E7365 
 2993      5F52414D 
 2993      5F57445F 
 2993      4C495354 
 2994              	.LASF73:
 2995 07bd 736E7254 		.ascii	"snrTestScanCounter\000"
 2995      65737453 
 2995      63616E43 
 2995      6F756E74 
 2995      657200
 2996              	.LASF92:
 2997 07d0 70747252 		.ascii	"ptrRegular\000"
 2997      6567756C 
 2997      617200
 2998              	.LASF102:
 2999 07db 72657375 		.ascii	"result\000"
 2999      6C7400
 3000              	.LASF106:
 3001 07e2 43617053 		.ascii	"CapSense_DpProcessCsdSensorRawCountsExt\000"
 3001      656E7365 
 3001      5F447050 
 3001      726F6365 
 3001      73734373 
 3002              	.LASF39:
 3003 080a 6E6F6973 		.ascii	"noiseTh\000"
 3003      65546800 
 3004              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
