ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_efuse.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ProcessOpcode,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ProcessOpcode, %function
  24              	ProcessOpcode:
  25              	.LFB67:
  26              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\efuse\\cy_efuse.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \file cy_efuse.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \brief
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Provides API implementation of the eFuse driver.
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ********************************************************************************
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \copyright
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #include "cy_efuse.h"
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #include "cy_ipc_drv.h"
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /** \cond INTERNAL */
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_SUCCESS             (0xA0000000UL)    /**< The command completed with no er
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_STS_Msk             (0xF0000000UL)    /**< The status mask of the SROM API 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_INV_PROT            (0xF0000001UL)    /**< The API is not available in the 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_INV_ADDR            (0xF0000002UL)    /**< An attempt to read byte from the
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_READ_FUSE_BYTE      (0x03000000UL)    /**< The SROM API opcode for Read fus
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_OFFSET_Pos          (8UL)             /**< A fuse byte offset position in a
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_OPCODE_DATA_Msk            (0xFFUL)          /**< The mask for extracting data fro
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_IPC_STRUCT                 (Cy_IPC_Drv_GetIpcBaseAddress(CY_IPC_CHAN_SYSCALL)) /**
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** #define CY_EFUSE_IPC_NOTIFY_STRUCT0         (0x1UL << CY_IPC_INTR_SYSCALL1) /**< IPC notify bit for
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /** \endcond */
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** static volatile uint32_t opcode;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 2


  32:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** static cy_en_efuse_status_t ProcessOpcode(void);
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: Cy_EFUSE_GetEfuseBit
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Reports the current state of a given eFuse bit-number. Consult the device TRM
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * to determine the target fuse bit number.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \note An attempt to read an eFuse data from a protected memory region
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * will generate a HardFault.
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param bitNum
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The number of the bit to read. The valid range of the bit number is
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * from 0 to EFUSE_EFUSE_NR * 32 * 8 - 1 where:
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - EFUSE_EFUSE_NR is number of efuse macros in the selected device series,
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - 32 is a number of fuse bytes in one efuse macro,
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - 8 is a number of fuse bits in the byte.
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The EFUSE_EFUSE_NR macro is defined in the series-specific header file, e.g
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \e \<PDL_DIR\>/devices/psoc6/include/psoc6_01_config.\e h
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * 
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param bitVal 
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The pointer to the location to store the bit value.
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return 
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \ref cy_en_efuse_status_t
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \funcusage
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The example below shows how to read device life-cycle register bits in
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * PSoC 6:
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \snippet eFuse_v1_0_sut_00.cydsn/main_cm0p.c SNIPPET_EFUSE_READ_BIT
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** cy_en_efuse_status_t Cy_EFUSE_GetEfuseBit(uint32_t bitNum, bool *bitVal)
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     if (bitVal != NULL)
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         uint32_t offset = bitNum / CY_EFUSE_BITS_PER_BYTE;
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         uint8_t byteVal;
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         *bitVal = false;
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         /* Read the eFuse byte */
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         result = Cy_EFUSE_GetEfuseByte(offset, &byteVal);
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         if (result == CY_EFUSE_SUCCESS)
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             uint32_t bitPos = bitNum % CY_EFUSE_BITS_PER_BYTE;
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* Extract the bit from the byte */
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             *bitVal = (((byteVal >> bitPos) & 0x01U) != 0U);
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     }
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (result);
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 3


  89:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: Cy_EFUSE_GetEfuseByte
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Reports the current state of the eFuse byte.
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * If the offset parameter is beyond the available quantities,
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * zeroes will be stored to the byteVal parameter. Consult the device TRM
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * to determine the target fuse byte offset.
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \note An attempt to read an eFuse data from a protected memory region
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * will generate a HardFault.
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param offset
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The offset of the byte to read. The valid range of the byte offset is
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * from 0 to EFUSE_EFUSE_NR * 32 - 1 where:
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - EFUSE_EFUSE_NR is a number of efuse macros in the selected device series,
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * - 32 is a number of fuse bytes in one efuse macro.
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The EFUSE_EFUSE_NR macro is defined in the series-specific header file, e.g
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \e \<PDL_DIR\>/devices/psoc6/include/psoc6_01_config.\e h
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param byteVal
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The pointer to the location to store eFuse data.
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return 
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \ref cy_en_efuse_status_t
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \funcusage
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The example below shows how to read a device life-cycle stage register in
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * PSoC 6:
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \snippet eFuse_v1_0_sut_00.cydsn/main_cm0p.c SNIPPET_EFUSE_READ_LIFECYCLE
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** cy_en_efuse_status_t Cy_EFUSE_GetEfuseByte(uint32_t offset, uint8_t *byteVal)
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     if (byteVal != NULL)
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         /* Prepare opcode before calling the SROM API */
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         opcode = CY_EFUSE_OPCODE_READ_FUSE_BYTE | (offset << CY_EFUSE_OPCODE_OFFSET_Pos);
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         /* Send the IPC message */
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         if (Cy_IPC_Drv_SendMsgPtr(CY_EFUSE_IPC_STRUCT, CY_EFUSE_IPC_NOTIFY_STRUCT0, (void*)&opcode)
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {           
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* Wait until the IPC structure is locked */
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             while(Cy_IPC_Drv_IsLockAcquired(CY_EFUSE_IPC_STRUCT) != false)
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* The result of the SROM API call is returned to the opcode variable */
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             if ((opcode & CY_EFUSE_OPCODE_STS_Msk) == CY_EFUSE_OPCODE_SUCCESS)
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 *byteVal = (uint8_t)(opcode & CY_EFUSE_OPCODE_DATA_Msk);
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 result = CY_EFUSE_SUCCESS;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 4


 146:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             else
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 result = ProcessOpcode();
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 *byteVal = 0U;
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         else
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_IPC_BUSY;
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     }
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (result);
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: Cy_EFUSE_GetExternalStatus
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * This function handles the case where a module such as a security image captures
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * a system call from this driver and reports its own status or error code,
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * for example, protection violation. In that case, a function from this
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * driver returns an unknown error (see \ref cy_en_efuse_status_t). After receipt
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * of an unknown error, the user may call this function to get the status
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * of the capturing module.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The user is responsible for parsing the content of the returned value
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * and casting it to the appropriate enumeration.
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * The error code of the previous efuse operation.
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** uint32_t Cy_EFUSE_GetExternalStatus(void)
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (opcode);
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** /*******************************************************************************
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Function Name: ProcessOpcode
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** ****************************************************************************//**
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Converts System Call returns to the eFuse driver return defines. If 
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * an unknown error was returned, the error code can be accessed via the
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * Cy_EFUSE_GetExternalStatus() function.
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \param opcode The value returned by a System Call.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \return
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** * \ref cy_en_efuse_status_t
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** *******************************************************************************/
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** static cy_en_efuse_status_t ProcessOpcode(void)
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** {
  27              		.loc 1 201 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 5


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result;
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     switch(opcode)
  32              		.loc 1 204 0
  33 0000 074B     		ldr	r3, .L7
  34 0002 1B68     		ldr	r3, [r3]
  35 0004 074A     		ldr	r2, .L7+4
  36 0006 9342     		cmp	r3, r2
  37 0008 03D0     		beq	.L3
  38 000a 074A     		ldr	r2, .L7+8
  39 000c 9342     		cmp	r3, r2
  40 000e 04D0     		beq	.L5
  41 0010 01E0     		b	.L6
  42              	.L3:
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         case CY_EFUSE_OPCODE_INV_PROT :
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_INVALID_PROTECTION;
  43              		.loc 1 208 0
  44 0012 0648     		ldr	r0, .L7+12
  45 0014 02E0     		b	.L4
  46              	.L6:
  47              	.LVL0:
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         case CY_EFUSE_OPCODE_INV_ADDR :
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_INVALID_FUSE_ADDR;
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         default :
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             result = CY_EFUSE_ERR_UNC;
  48              		.loc 1 218 0
  49 0016 0648     		ldr	r0, .L7+16
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
  50              		.loc 1 219 0
  51 0018 00E0     		b	.L4
  52              	.LVL1:
  53              	.L5:
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             break;
  54              		.loc 1 213 0
  55 001a 0648     		ldr	r0, .L7+20
  56              	.L4:
  57              	.LVL2:
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     }
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (result);
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
  58              		.loc 1 224 0
  59              		@ sp needed
  60 001c 7047     		bx	lr
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 6


  61              	.L8:
  62 001e C046     		.align	2
  63              	.L7:
  64 0020 00000000 		.word	.LANCHOR0
  65 0024 010000F0 		.word	-268435455
  66 0028 020000F0 		.word	-268435454
  67 002c 01006A00 		.word	6946817
  68 0030 FF006A00 		.word	6947071
  69 0034 02006A00 		.word	6946818
  70              		.cfi_endproc
  71              	.LFE67:
  72              		.size	ProcessOpcode, .-ProcessOpcode
  73              		.section	.text.Cy_EFUSE_GetEfuseByte,"ax",%progbits
  74              		.align	2
  75              		.global	Cy_EFUSE_GetEfuseByte
  76              		.code	16
  77              		.thumb_func
  78              		.type	Cy_EFUSE_GetEfuseByte, %function
  79              	Cy_EFUSE_GetEfuseByte:
  80              	.LFB65:
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
  81              		.loc 1 125 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL3:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90 0002 0C1E     		subs	r4, r1, #0
  91              	.LVL4:
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
  92              		.loc 1 128 0
  93 0004 3FD0     		beq	.L15
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
  94              		.loc 1 131 0
  95 0006 0002     		lsls	r0, r0, #8
  96              	.LVL5:
  97 0008 C023     		movs	r3, #192
  98 000a 9B04     		lsls	r3, r3, #18
  99 000c 1843     		orrs	r0, r3
 100 000e 204B     		ldr	r3, .L17
 101 0010 1860     		str	r0, [r3]
 102              	.LVL6:
 103              	.LBB14:
 104              	.LBB15:
 105              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/ipc/cy_ipc_drv.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \file cy_ipc_drv.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Provides an API declaration of the IPC driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 7


  10:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #ifndef CY_IPC_DRV_H
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_H
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The inter-processor communication (IPC) driver provides a safe and reliable
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * method to transfer data between CPUs. Hardware locking ensures that only one
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * device can acquire and transfer data at a time so no data is lost or
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * overwritten by asynchronous processes or CPUs.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Include either cy_ipc_pipe.h or cy_ipc_sema.h. Alternatively include cy_pdl.h 
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * There are three parts to the API:
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     - Driver-level (DRV) API - used internally by Semaphore and Pipe levels
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     - Pipe-level (PIPE) API - establishes a communication channel between
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       processors
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     - Semaphore-level (SEMA) API - enables users to set and clear flags to
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       synchronize operations.
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Firmware does not need to use the DRV API. It can implement IPC functionality
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * entirely with the PIPE and SEMA APIs.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_background Background
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC is implemented in hardware as a collection of individual communication
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * channels, each with a set of 32-bit registers. The IPC design implements a set
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of interrupts that enable each processor to notify the other that data is
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * available, or has been processed. There is also a locking mechanism that
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * allows only one CPU to gain access at a time.
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The Driver-level API manages each channel's registers to implement IPC
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * functionality. For information on the IPC registers, see the IPC chapter of
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the Technical Reference Manual (TRM).
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * At the hardware level, communication is a five-step process.
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The sending processor acquires a channel
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  It puts data into the channel
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The sender generates a notify event (interrupt)
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The receiving processor identifies the sender and retrieves the data
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     -#  The receiving processor generates a release event (interrupt)
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \image html ipc_driver.png
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * These transactions are handled transparently by the DRV-level API. Use the
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * PIPE and SEMA layers of the API to implement communication in your application.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The data transferred is limited to a single 32-bit value. As implemented by
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the PIPE API, that value is a pointer to a data structure of arbitrary size
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and complexity.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 8


  67:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_overview Overview
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The Pipe is the key element in the PDL design. A pipe is typically a
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * full-duplex communication channel between CPU cores. A pipe allows a single
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * conduit to transfer messages or data to and from multiple processes or CPUs.
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A pipe has two endpoints, one on each core. Each endpoint contains a dedicated
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC channel and an interrupt. IPC channels 0-7 and IPC interrupts 0-7 are
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * reserved for system use.
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The pipe also contains the number of clients it supports, and for each client
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * a callback function. So the pipe can service a number of clients, each with a
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * separate callback function, on either endpoint. The number of clients a pipe
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * supports is the sum of each endpoint's clients.
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This design enables any number of processes on the sending core to put
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * arbitrary data into a single pipe. The first element of that data is the
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * client ID of the client that should handle the data.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An interrupt notifies the receiving core that data is available. The receiving
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * core parses the data to identify the client, and then dispatches the event to
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the appropriate client via the client callback function. An interrupt notifies
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the sending core that the receiver is finished. In this way a single pipe can
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * manage arbitrary data transfers between cores with data flowing in either
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * direction.
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \image html ipc_ints.png
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The application can use semaphores to control access to shared resources, as
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * required by the application's logic.
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The PDL provides specific files that set up default IPC functionality.
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * They are system_psoc6.h, system_psoc6_cm0plus.c and system_psoc6_cm4.c. You 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * can modify these files based on the requirements of your design. 
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * If you use PSoC Creator as a development environment, it will not overwrite 
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * your changes when you generate the application or build your code.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_pipe_layer PIPE layer
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A pipe is a communication channel between two endpoints. PSoC 6 devices support
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * 16 IPC channels, and 16 IPC interrupts, each numbered 0-15. IPC Channels 0-7
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and IPC interrupts 0-7 are reserved for system use. Channels 8-15 and
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * interrupts 8-15 are available for application use.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A full duplex pipe uses two IPC channels, one per endpoint. Each endpoint
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * specifies all the information required to process a message (either sent or
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * received). Each endpoint is configured to use an IPC channel, and an IPC
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * interrupt. Common practice is to use the interrupt with the same number as
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the IPC channel. However, IPC Interrupts are not directly associated with the
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC channels, so any channel can use any interrupt.  Any IPC channel can
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * trigger 0, 1 or all the IPC interrupts at once, depending on the Notify or
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Release masks used.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * It is also possible to set up a one-directional pipe, using a single IPC
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * channel. In this design one processor is always the sender, and the other is
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * always the receiver. However, there are still two endpoints.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 9


 124:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A pipe supports an arbitrary number of clients with an array of callback
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * functions, one per client. The client ID is the index number into the array
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * for the client. After a pipe is configured and initialized, the application
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * calls Cy_IPC_Pipe_RegisterCallback() once per client to register each client's
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * callback function. Multiple clients can use the same callback function. The
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * endpoints in a pipe share the callback array.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Use Cy_IPC_Pipe_SendMessage() to send data. You specify both the "to" and
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * "from" endpoints, and a callback function to be used when the data transfer is
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * complete. The data is a 32-bit void pointer. The data pointed to is arbitrary,
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and can be an array, a structure, or a location in memory. The only limitation
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * is that the first element of the data must be a 32-bit unsigned word containing
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * a client ID number. The ID number is the index into the callback array.
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * When a message is sent, the receiving endpoint's interrupt handler is called.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The ISR can perform any task required by the design. However, as part of its
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * function it calls \ref Cy_IPC_Pipe_ExecCallback. This function retrieves the
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * client ID from the data and calls the associated callback function.
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The user-supplied callback function handles the data in whatever way is
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * appropriate based on the application logic.
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * After the callback function is returned by the receiver, it invokes the release
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * callback function defined by the sender of the message.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_sema_layer SEMA Layer
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * A semaphore is a flag the application uses to control access to a shared
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * resource. The SEMA-level API uses an IPC channel to implement
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * semaphores. Startup code sets up a default semaphore system. The
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * default system creates an array of 128 semaphores (four 32-bit values).
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Semaphores 0-15 are reserved for system use. See
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Configuration Considerations - SEMA.
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Functions are available to initialize the semaphore system, to set or
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * clear a semaphore, or to get the semaphore's current status. Application
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * logic uses SEMA functions to relate a particular semaphore to a particular
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * shared resource, and set, clear, or check the flag when accessing the
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * shared resource.
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_cypipe Configuration Considerations - CYPIPE
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * There are none. The startup files set up the required CYPIPE for system
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * use. Do not modify the CYPIPE. It uses IPC channels 5 and 6 to implement full
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * duplex communication between cores. See System Interrupt (SysInt) for background.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * To create your own pipe (<b>USRPIPE</b>) you should edit startup files
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * and take 4 steps:
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Define a pipe callbacks processing interrupt handler
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *      (similar to <b>Cy_SysIpcPipeIsrCm0</b> or <b>Cy_SysIpcPipeIsrCm4</b>)
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Define a callbacks array (similar to <b>systemIpcPipeSysCbArray</b>)
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Define your pipe configuration with a cy_stc_ipc_pipe_config_t type structure
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *      (similar to <b>systemIpcPipeConfigCm0</b> and <b>systemIpcPipeConfigCm4</b>)
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   -# Call Cy_IPC_Pipe_Init() from each core to initialize your pipe (similar
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *      to call in the <b>SystemInit</b>)
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_sema Configuration Considerations - SEMA
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 10


 181:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Startup code calls Cy_IPC_Sema_Init() with default values to set up semaphore 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * functionality. By default the semaphore system uses IPC channel 4, and 
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * creates 128 semaphores. Do <b>not</b> change the IPC channel. 
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * You can change the number of semaphores.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * To change the number of semaphores, modify this line of code in system_psoc6.h.
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \code
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * #define CY_IPC_SEMA_COUNT               (uint32_t)(128u)
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \endcode
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Startup also declares array ipcSemaArray to hold the semaphore
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * flags based on the size defined for this symbol. Use increments of 32. You
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * must have at least 32 semaphores. Semaphores 0-15 are reserved for
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * system use. Your application can use semaphores greater than 15.
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_more_information More Information
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * If the default startup file is not used, or SystemInit() is not called in your 
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * project, call the following three functions prior to executing any flash or 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * EmEEPROM write or erase operation:
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Sema_Init()
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Config()
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Init()
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *  -# Cy_Flash_Init()
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * See the technical reference manual(TRM) for more information on the IPC.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_MISRA MISRA-C Compliance
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * <table class="doxtable">
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th>MISRA Rule</th>
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th>Rule Class (Required/Advisory)</th>
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th>Rule Description</th>
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <th style="width: 50%;">Description of Deviation(s)</th>
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>10.3</td>
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>R</td>
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>The value of a complex expression of integer type shall be cast
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         only to a type of the same signedness that is no wider than the underlying
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         type of the expression.</td>
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>The cast from integer to enumeration value is used to calculate
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         the interrupt vector source from the integer number of the IPC interrupt
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         structure, so there is no way to avoid this cast.</td>
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>11.4</td>
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>A</td>
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>A cast should not be performed between a pointer to the void to a
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         pointer to the object type.</td>
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>The cast from the void to pointer and vice versa is used to transmit
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         data via the \ref group_ipc channel by exchanging the pointer. We
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         exchange only one pointer, so there is no way to avoid this cast.</td>
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * </table>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 11


 238:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \section group_ipc_changelog Changelog
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * <table class="doxtable">
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td rowspan="3">1.30</td>
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Driver library directory-structure simplification.</td>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Moved the Cy_IPC_SystemSemaInit(), Cy_IPC_SystemPipeInit() functions implementation from 
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Changed IPC driver configuration method from compile time to run time.</td>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Added register access layer. Use register access macros instead
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         of direct register access using dereferenced pointers.</td>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Makes register access device-independent, so that the PDL does 
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         not need to be recompiled for each supported part number.</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.20</td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Added \ref Cy_IPC_Pipe_ExecuteCallback function.
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         Updated documentation about user pipe initialization.
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     </td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Interface improvement, documentation update</td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.10.1</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Updated description of the \ref Cy_IPC_Pipe_Init,
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         \ref Cy_IPC_Pipe_EndpointInit, \ref Cy_IPC_Sema_Set functions.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *         Added / updated code snippets.
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Documentation update and clarification</td>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.10</td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Added support for more IPC structures</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>New device support</td>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>1.0</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td>Initial version</td>
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *     <td></td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * </table>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \defgroup group_ipc_drv IPC driver layer (IPC_DRV)
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The functions of this layer are used in the higher IPC levels
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   (Semaphores and Pipes).
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Users are not expected to call any of these IPC functions directly (cy_ipc_drv.h). 
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Instead include either of cy_ipc_sema.h or cy_ipc_pipe.h. 
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Alternatively include cy_pdl.h to get access to all functions and declarations in the PDL.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_macros Macros
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Macro definitions are used in the driver
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 12


 295:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_functions Functions
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Functions are used in the driver
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_data_structures Data Structures
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Data structures are used in the driver
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_enums Enumerated Types
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *       Enumerations are used in the driver
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \}
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \defgroup group_ipc_sema IPC semaphores layer (IPC_SEMA)
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \defgroup group_ipc_pipe IPC pipes layer (IPC_PIPE)
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /******************************************************************************/
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /* Include files                                                              */
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /******************************************************************************/
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include "cy_device.h"
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include "cy_device_headers.h"
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include "cy_syslib.h"
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #include <stddef.h>
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_macros
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Driver major version */
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MAJOR       1
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Driver minor version */
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MINOR       30
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Defines a value to indicate that no notification events are needed */
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_NO_NOTIFICATION         (uint32_t)(0x00000000ul)
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /* Error Code constants */
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID CY_PDL_DRV_ID(0x22u)  /**< Software PDL driver ID for IPC */
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function status codes */
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID_INFO    (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_INFO )
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function warning return values */
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID_WARNING (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_WARNING)
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function error return values */
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_ID_ERROR   (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_ERROR)
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** Converts the IPC interrupt channel number to interrupt vector */
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #define CY_IPC_INTR_NUM_TO_VECT(x)         ((int32_t) cy_device->cpussIpc0Irq + (x))
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc_macros */
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /* end of definition in device.h */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 13


 352:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #if (CY_CPU_CORTEX_M0P)
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM0
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #else
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM4
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #endif  /* (CY_CPU_CORTEX_M0P) */
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \endcond */
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_enums
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a list of ENUMs used for function return status.
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** typedef enum
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     /** Function was successfully executed */
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_IPC_DRV_SUCCESS      = (0x00u),
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     /** Function was not executed due to an error.
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****         Typical conditions for the error explained
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****         in the function description */
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_IPC_DRV_ERROR        = ( CY_IPC_ID_ERROR + 1ul),
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** } cy_en_ipcdrv_status_t;
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc_enums */
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #ifdef __cplusplus
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** extern "C" {
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** #endif
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue);
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base);
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask);
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask);
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \endcond */
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /**
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_functions
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \{
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** */
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type*       Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex);
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type*  Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex);
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base);
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type * base, uint32_t releaseEventIntr)
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 14


 409:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE bool     Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base);
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base);
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type * base, uint32_t notifyEventIntr, 
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message);
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_SendMsgPtr (IPC_STRUCT_Type* base, uint32_t notify
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void ** 
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type * base,
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask (IPC_INTR_STRUCT_Type const * base);
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base);
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus (IPC_INTR_STRUCT_Type const * base);
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterrupt (IPC_INTR_STRUCT_Type * base,
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ClearInterrupt (IPC_INTR_STRUCT_Type * base,
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIpcBaseAddress
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function takes an IPC channel index as a parameter and returns the base
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * address the IPC registers corresponding to the IPC channel.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIndex does not exceed the
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * limits.
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcIndex
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Represents the number of IPC structure. This is converted to the base address of
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the IPC channel registers.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC registers.
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type* Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex)
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_CHANNELS > ipcIndex);
 106              		.loc 2 451 0
 107 0012 204B     		ldr	r3, .L17+4
 108 0014 1A68     		ldr	r2, [r3]
 109 0016 3123     		movs	r3, #49
 110 0018 D35C     		ldrb	r3, [r2, r3]
 111 001a 002B     		cmp	r3, #0
 112 001c 04D1     		bne	.L11
 113 001e C421     		movs	r1, #196
 114              	.LVL7:
 115 0020 FF31     		adds	r1, r1, #255
 116 0022 1D48     		ldr	r0, .L17+8
 117 0024 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 118              	.LVL8:
 119              	.L11:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 15


 452:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 120              		.loc 2 452 0
 121 0028 1A4B     		ldr	r3, .L17+4
 122 002a 1B68     		ldr	r3, [r3]
 123 002c 186A     		ldr	r0, [r3, #32]
 124              	.LVL9:
 125              	.LBE15:
 126              	.LBE14:
 127              	.LBB16:
 128              	.LBB17:
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIntrBaseAddr
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function takes an IPC interrupt structure index and returns the base
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * address of the IPC interrupt registers corresponding to the IPC Interrupt.
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIntrIndex does not exceed the
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * limits.
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcIntrIndex
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Represents the number of IPC interrupt structure. This is converted to the
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * base address of the IPC interrupt registers.
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC interrupt registers.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type* Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_INTERRUPTS > ipcIntrIndex);
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_INTR_STRUCT_Type*) &(((IPC_Type *)cy_device->ipcBase)->INTR_STRUCT[ipcIntrIndex])
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterruptMask
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to set the interrupt mask for an IPC Interrupt.
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The mask sets release or acquire notification events for all IPC channels.
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * release event.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 16


 500:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * notify event.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type* base,
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                                               uint32_t ipcReleaseMask, uint32_t ipcAcquireMask)
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_MASK(base) = _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_NOTIFY,  ipcAcquireMa
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_RELEASE, ipcReleaseMask);
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptMask
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to read the interrupt mask.
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask(IPC_INTR_STRUCT_Type const * base)
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASK(base);
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatusMasked
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to read the active unmasked interrupt. This function
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * can be used in the interrupt service routine to find which source triggered
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * the interrupt.
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 17


 557:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <table>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </table>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base)
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASKED(base);
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatus
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to read the pending interrupts. Note that this read is
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * an unmasked read of the interrupt status. Interrupt sources read as active by
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * this function would generate interrupts only if they were not masked.
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <table>
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   </table>
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus(IPC_INTR_STRUCT_Type const * base)
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR(base);
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterrupt
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to set the interrupt source. This function can be used
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * to activate interrupts through software.
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \note That interrupt sources set using this interrupt would generate interrupts
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * only if they are not masked.
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 18


 614:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * release event.
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * notify event.
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SetInterrupt
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask, 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_SET(base) =  _VAL2FLD( IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask ) 
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask );
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ClearInterrupt
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to clear the interrupt source. Use this function to clear
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * a pending interrupt source in the interrupt status.
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * release event.
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * notify event.
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ClearInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR(base) =  _VAL2FLD(IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask) |
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****                   _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask);
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     (void)REG_IPC_INTR_STRUCT_INTR(base);  /* Read the register to flush the cache */
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 19


 671:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc_functions */
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /** \} group_ipc */
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_AcquireNotify
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function generates a acquire notification event by IPC interrupt structure.
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt structures that are triggered
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * by a notification. Bit number correspond to number of the IPC interrupt
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * structure.
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_NOTIFY(base) = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReleaseNotify
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function generates a release notification event by IPC interrupt structure.
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_INTR_STRUCT_INTR_RELEASE_Msk)));
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_RELEASE(base) = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 20


 728:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_WriteDataValue
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function writes a value to the DATA register of the IPC channel.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param dataValue
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Value to be written.
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue)
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_DATA(base) = dataValue;
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadDataValue
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function reads a value from the DATA register of the IPC channel.
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Value from DATA register.
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base)
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_DATA(base);
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_IsLockAcquired
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function is used to test the status of an IPC channel. The function
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 21


 785:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * tells the reader if the IPC channel was in the locked or released state.
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   Status for the function:
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   true:  The IPC channel is in the Locked state.
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   false: The IPC channel is in the Released state.
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE bool Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base)
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( 0u != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_LOCK_STATUS(base)) );
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetLockStatus
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function is used to get the status of an IPC channel.
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Value from LOCK_STATUS register.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetLockStatus
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base)
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_LOCK_STATUS(base);
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractAcquireMask
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function extracts an Acquire mask part from full interrupt mask value.
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 22


 842:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param intMask
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Acquire mask value.
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask)
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_NOTIFY, intMask);
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractReleaseMask
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function extracts a Release mask part from full interrupt mask value.
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * software.
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param intMask
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Release mask value.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask)
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_RELEASE, intMask);
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** 
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** /*******************************************************************************
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SendMsgPtr
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** ****************************************************************************//**
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This function is used to send a message pointer through an IPC channel.
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The message structure may hold a generic pointer that may contain the address
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of any user data type or structure. This parameter could be a pointer to a 32-bit
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * integer, an array, or even a data structure defined in the user code. This
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * function acts as a transfer engine for sending the pointer. Any memory
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * management of the pointer allocation and deallocation is up to the application
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * code.
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The function also has an associated notification field that will let the
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * message notify one or multiple interrupts.
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param base
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * of the IPC channel.
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered during the release
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 23


 899:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * action.
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \param msgPtr
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * The message pointer that is being sent over the IPC channel.
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \return   Status of the operation:
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC channel is unavailable because
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *                               it is already locked.
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \funcusage
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgPtr
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** *******************************************************************************/
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgPtr(IPC_STRUCT_Type* base, uint32_t notify
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** {
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_SendMsgWord(base, notifyEventIntr, (uint32_t)msgPtr);
 129              		.loc 2 916 0
 130 002e 184A     		ldr	r2, .L17
 131 0030 0121     		movs	r1, #1
 132 0032 FFF7FEFF 		bl	Cy_IPC_Drv_SendMsgWord
 133              	.LVL10:
 134              	.LBE17:
 135              	.LBE16:
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {           
 136              		.loc 1 134 0
 137 0036 0028     		cmp	r0, #0
 138 0038 27D1     		bne	.L16
 139              	.L13:
 140              	.LVL11:
 141              	.LBB18:
 142              	.LBB19:
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 143              		.loc 2 451 0 discriminator 1
 144 003a 164B     		ldr	r3, .L17+4
 145 003c 1A68     		ldr	r2, [r3]
 146 003e 3123     		movs	r3, #49
 147 0040 D35C     		ldrb	r3, [r2, r3]
 148 0042 002B     		cmp	r3, #0
 149 0044 04D1     		bne	.L12
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 150              		.loc 2 451 0 is_stmt 0
 151 0046 C421     		movs	r1, #196
 152 0048 FF31     		adds	r1, r1, #255
 153 004a 1348     		ldr	r0, .L17+8
 154 004c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 155              	.LVL12:
 156              	.L12:
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 157              		.loc 2 452 0 is_stmt 1
 158 0050 104B     		ldr	r3, .L17+4
 159 0052 1A68     		ldr	r2, [r3]
 160 0054 136A     		ldr	r3, [r2, #32]
 161              	.LVL13:
 162              	.LBE19:
 163              	.LBE18:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 24


 164              	.LBB20:
 165              	.LBB21:
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/ipc/cy_ipc_drv.h **** }
 166              		.loc 2 804 0
 167 0056 B421     		movs	r1, #180
 168 0058 5258     		ldr	r2, [r2, r1]
 169 005a D318     		adds	r3, r2, r3
 170 005c 1B68     		ldr	r3, [r3]
 171              	.LBE21:
 172              	.LBE20:
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 173              		.loc 1 137 0
 174 005e 002B     		cmp	r3, #0
 175 0060 EBDB     		blt	.L13
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             {
 176              		.loc 1 142 0
 177 0062 0B4B     		ldr	r3, .L17
 178 0064 1B68     		ldr	r3, [r3]
 179 0066 1B0F     		lsrs	r3, r3, #28
 180 0068 1B07     		lsls	r3, r3, #28
 181 006a A022     		movs	r2, #160
 182 006c 1206     		lsls	r2, r2, #24
 183 006e 9342     		cmp	r3, r2
 184 0070 04D1     		bne	.L14
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 result = CY_EFUSE_SUCCESS;
 185              		.loc 1 144 0
 186 0072 074B     		ldr	r3, .L17
 187 0074 1B68     		ldr	r3, [r3]
 188 0076 2370     		strb	r3, [r4]
 189              	.LVL14:
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 190              		.loc 1 145 0
 191 0078 0020     		movs	r0, #0
 192 007a 07E0     		b	.L10
 193              	.LVL15:
 194              	.L14:
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****                 *byteVal = 0U;
 195              		.loc 1 149 0
 196 007c FFF7FEFF 		bl	ProcessOpcode
 197              	.LVL16:
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             }
 198              		.loc 1 150 0
 199 0080 0023     		movs	r3, #0
 200 0082 2370     		strb	r3, [r4]
 201 0084 02E0     		b	.L10
 202              	.LVL17:
 203              	.L15:
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
 204              		.loc 1 126 0
 205 0086 0548     		ldr	r0, .L17+12
 206              	.LVL18:
 207 0088 00E0     		b	.L10
 208              	.LVL19:
 209              	.L16:
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 210              		.loc 1 155 0
 211 008a 0548     		ldr	r0, .L17+16
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 25


 212              	.LVL20:
 213              	.L10:
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 214              		.loc 1 159 0
 215              		@ sp needed
 216              	.LVL21:
 217 008c 10BD     		pop	{r4, pc}
 218              	.L18:
 219 008e C046     		.align	2
 220              	.L17:
 221 0090 00000000 		.word	.LANCHOR0
 222 0094 00000000 		.word	cy_device
 223 0098 00000000 		.word	.LC3
 224 009c 03006A00 		.word	6946819
 225 00a0 04006A00 		.word	6946820
 226              		.cfi_endproc
 227              	.LFE65:
 228              		.size	Cy_EFUSE_GetEfuseByte, .-Cy_EFUSE_GetEfuseByte
 229              		.section	.text.Cy_EFUSE_GetEfuseBit,"ax",%progbits
 230              		.align	2
 231              		.global	Cy_EFUSE_GetEfuseBit
 232              		.code	16
 233              		.thumb_func
 234              		.type	Cy_EFUSE_GetEfuseBit, %function
 235              	Cy_EFUSE_GetEfuseBit:
 236              	.LFB64:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     cy_en_efuse_status_t result = CY_EFUSE_BAD_PARAM;
 237              		.loc 1 68 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL22:
 242 0000 30B5     		push	{r4, r5, lr}
 243              		.cfi_def_cfa_offset 12
 244              		.cfi_offset 4, -12
 245              		.cfi_offset 5, -8
 246              		.cfi_offset 14, -4
 247 0002 83B0     		sub	sp, sp, #12
 248              		.cfi_def_cfa_offset 24
 249 0004 0500     		movs	r5, r0
 250 0006 0C1E     		subs	r4, r1, #0
 251              	.LVL23:
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     {
 252              		.loc 1 71 0
 253 0008 12D0     		beq	.L22
 254              	.LBB22:
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         uint8_t byteVal;
 255              		.loc 1 73 0
 256 000a C008     		lsrs	r0, r0, #3
 257              	.LVL24:
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
 258              		.loc 1 75 0
 259 000c 0023     		movs	r3, #0
 260 000e 0B70     		strb	r3, [r1]
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         
 261              		.loc 1 78 0
 262 0010 6B46     		mov	r3, sp
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 26


 263 0012 D91D     		adds	r1, r3, #7
 264              	.LVL25:
 265 0014 FFF7FEFF 		bl	Cy_EFUSE_GetEfuseByte
 266              	.LVL26:
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         {
 267              		.loc 1 80 0
 268 0018 0028     		cmp	r0, #0
 269 001a 0AD1     		bne	.L20
 270              	.LBB23:
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****             /* Extract the bit from the byte */
 271              		.loc 1 82 0
 272 001c 0723     		movs	r3, #7
 273 001e 1D40     		ands	r5, r3
 274              	.LVL27:
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****         }
 275              		.loc 1 84 0
 276 0020 6B46     		mov	r3, sp
 277 0022 0733     		adds	r3, r3, #7
 278 0024 1B78     		ldrb	r3, [r3]
 279 0026 2B41     		asrs	r3, r3, r5
 280 0028 0122     		movs	r2, #1
 281 002a 1340     		ands	r3, r2
 282 002c 2370     		strb	r3, [r4]
 283 002e 00E0     		b	.L20
 284              	.LVL28:
 285              	.L22:
 286              	.LBE23:
 287              	.LBE22:
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     
 288              		.loc 1 69 0
 289 0030 0148     		ldr	r0, .L23
 290              	.LVL29:
 291              	.L20:
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 292              		.loc 1 88 0
 293 0032 03B0     		add	sp, sp, #12
 294              		@ sp needed
 295              	.LVL30:
 296 0034 30BD     		pop	{r4, r5, pc}
 297              	.L24:
 298 0036 C046     		.align	2
 299              	.L23:
 300 0038 03006A00 		.word	6946819
 301              		.cfi_endproc
 302              	.LFE64:
 303              		.size	Cy_EFUSE_GetEfuseBit, .-Cy_EFUSE_GetEfuseBit
 304              		.section	.text.Cy_EFUSE_GetExternalStatus,"ax",%progbits
 305              		.align	2
 306              		.global	Cy_EFUSE_GetExternalStatus
 307              		.code	16
 308              		.thumb_func
 309              		.type	Cy_EFUSE_GetExternalStatus, %function
 310              	Cy_EFUSE_GetExternalStatus:
 311              	.LFB66:
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c ****     return (opcode);
 312              		.loc 1 181 0
 313              		.cfi_startproc
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 27


 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** }
 317              		.loc 1 182 0
 318 0000 014B     		ldr	r3, .L26
 319 0002 1868     		ldr	r0, [r3]
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\efuse/cy_efuse.c **** 
 320              		.loc 1 183 0
 321              		@ sp needed
 322 0004 7047     		bx	lr
 323              	.L27:
 324 0006 C046     		.align	2
 325              	.L26:
 326 0008 00000000 		.word	.LANCHOR0
 327              		.cfi_endproc
 328              	.LFE66:
 329              		.size	Cy_EFUSE_GetExternalStatus, .-Cy_EFUSE_GetExternalStatus
 330              		.section	.rodata.str1.4,"aMS",%progbits,1
 331              		.align	2
 332              	.LC3:
 333 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/ip"
 333      72617465 
 333      645F536F 
 333      75726365 
 333      5C50536F 
 334 0030 632F6379 		.ascii	"c/cy_ipc_drv.h\000"
 334      5F697063 
 334      5F647276 
 334      2E6800
 335              		.bss
 336              		.align	2
 337              		.set	.LANCHOR0,. + 0
 338              		.type	opcode, %object
 339              		.size	opcode, 4
 340              	opcode:
 341 0000 00000000 		.space	4
 342              		.text
 343              	.Letext0:
 344              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 345              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 346              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_ipc.h"
 347              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 348              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 349              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 350              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\efuse\\cy_efuse.h"
 351              		.section	.debug_info,"",%progbits
 352              	.Ldebug_info0:
 353 0000 E0080000 		.4byte	0x8e0
 354 0004 0400     		.2byte	0x4
 355 0006 00000000 		.4byte	.Ldebug_abbrev0
 356 000a 04       		.byte	0x4
 357 000b 01       		.uleb128 0x1
 358 000c 04070000 		.4byte	.LASF147
 359 0010 0C       		.byte	0xc
 360 0011 94000000 		.4byte	.LASF148
 361 0015 B0020000 		.4byte	.LASF149
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 28


 362 0019 00000000 		.4byte	.Ldebug_ranges0+0
 363 001d 00000000 		.4byte	0
 364 0021 00000000 		.4byte	.Ldebug_line0
 365 0025 02       		.uleb128 0x2
 366 0026 02       		.byte	0x2
 367 0027 05       		.byte	0x5
 368 0028 91060000 		.4byte	.LASF0
 369 002c 02       		.uleb128 0x2
 370 002d 01       		.byte	0x1
 371 002e 08       		.byte	0x8
 372 002f 5E060000 		.4byte	.LASF1
 373 0033 02       		.uleb128 0x2
 374 0034 01       		.byte	0x1
 375 0035 06       		.byte	0x6
 376 0036 BE080000 		.4byte	.LASF2
 377 003a 03       		.uleb128 0x3
 378 003b 8A000000 		.4byte	.LASF3
 379 003f 03       		.byte	0x3
 380 0040 1D       		.byte	0x1d
 381 0041 2C000000 		.4byte	0x2c
 382 0045 03       		.uleb128 0x3
 383 0046 50030000 		.4byte	.LASF4
 384 004a 03       		.byte	0x3
 385 004b 29       		.byte	0x29
 386 004c 25000000 		.4byte	0x25
 387 0050 03       		.uleb128 0x3
 388 0051 D8070000 		.4byte	.LASF5
 389 0055 03       		.byte	0x3
 390 0056 2B       		.byte	0x2b
 391 0057 5B000000 		.4byte	0x5b
 392 005b 02       		.uleb128 0x2
 393 005c 02       		.byte	0x2
 394 005d 07       		.byte	0x7
 395 005e 9D020000 		.4byte	.LASF6
 396 0062 02       		.uleb128 0x2
 397 0063 04       		.byte	0x4
 398 0064 05       		.byte	0x5
 399 0065 28020000 		.4byte	.LASF7
 400 0069 03       		.uleb128 0x3
 401 006a 29030000 		.4byte	.LASF8
 402 006e 03       		.byte	0x3
 403 006f 41       		.byte	0x41
 404 0070 74000000 		.4byte	0x74
 405 0074 02       		.uleb128 0x2
 406 0075 04       		.byte	0x4
 407 0076 07       		.byte	0x7
 408 0077 D1030000 		.4byte	.LASF9
 409 007b 02       		.uleb128 0x2
 410 007c 08       		.byte	0x8
 411 007d 05       		.byte	0x5
 412 007e A6010000 		.4byte	.LASF10
 413 0082 02       		.uleb128 0x2
 414 0083 08       		.byte	0x8
 415 0084 07       		.byte	0x7
 416 0085 33010000 		.4byte	.LASF11
 417 0089 04       		.uleb128 0x4
 418 008a 04       		.byte	0x4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 29


 419 008b 05       		.byte	0x5
 420 008c 696E7400 		.ascii	"int\000"
 421 0090 02       		.uleb128 0x2
 422 0091 04       		.byte	0x4
 423 0092 07       		.byte	0x7
 424 0093 A2030000 		.4byte	.LASF12
 425 0097 03       		.uleb128 0x3
 426 0098 05090000 		.4byte	.LASF13
 427 009c 04       		.byte	0x4
 428 009d 18       		.byte	0x18
 429 009e 3A000000 		.4byte	0x3a
 430 00a2 03       		.uleb128 0x3
 431 00a3 9E010000 		.4byte	.LASF14
 432 00a7 04       		.byte	0x4
 433 00a8 20       		.byte	0x20
 434 00a9 45000000 		.4byte	0x45
 435 00ad 03       		.uleb128 0x3
 436 00ae AF030000 		.4byte	.LASF15
 437 00b2 04       		.byte	0x4
 438 00b3 24       		.byte	0x24
 439 00b4 50000000 		.4byte	0x50
 440 00b8 03       		.uleb128 0x3
 441 00b9 E9060000 		.4byte	.LASF16
 442 00bd 04       		.byte	0x4
 443 00be 30       		.byte	0x30
 444 00bf 69000000 		.4byte	0x69
 445 00c3 02       		.uleb128 0x2
 446 00c4 04       		.byte	0x4
 447 00c5 07       		.byte	0x7
 448 00c6 04050000 		.4byte	.LASF17
 449 00ca 05       		.uleb128 0x5
 450 00cb B8000000 		.4byte	0xb8
 451 00cf 06       		.uleb128 0x6
 452 00d0 CA000000 		.4byte	0xca
 453 00d4 07       		.uleb128 0x7
 454 00d5 CF000000 		.4byte	0xcf
 455 00d9 E4000000 		.4byte	0xe4
 456 00dd 08       		.uleb128 0x8
 457 00de C3000000 		.4byte	0xc3
 458 00e2 02       		.byte	0x2
 459 00e3 00       		.byte	0
 460 00e4 09       		.uleb128 0x9
 461 00e5 20       		.byte	0x20
 462 00e6 05       		.byte	0x5
 463 00e7 23       		.byte	0x23
 464 00e8 35010000 		.4byte	0x135
 465 00ec 0A       		.uleb128 0xa
 466 00ed D0010000 		.4byte	.LASF18
 467 00f1 05       		.byte	0x5
 468 00f2 24       		.byte	0x24
 469 00f3 CF000000 		.4byte	0xcf
 470 00f7 00       		.byte	0
 471 00f8 0A       		.uleb128 0xa
 472 00f9 FF000000 		.4byte	.LASF19
 473 00fd 05       		.byte	0x5
 474 00fe 25       		.byte	0x25
 475 00ff CA000000 		.4byte	0xca
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 30


 476 0103 04       		.byte	0x4
 477 0104 0A       		.uleb128 0xa
 478 0105 87040000 		.4byte	.LASF20
 479 0109 05       		.byte	0x5
 480 010a 26       		.byte	0x26
 481 010b CA000000 		.4byte	0xca
 482 010f 08       		.byte	0x8
 483 0110 0A       		.uleb128 0xa
 484 0111 43040000 		.4byte	.LASF21
 485 0115 05       		.byte	0x5
 486 0116 27       		.byte	0x27
 487 0117 CA000000 		.4byte	0xca
 488 011b 0C       		.byte	0xc
 489 011c 0A       		.uleb128 0xa
 490 011d 44030000 		.4byte	.LASF22
 491 0121 05       		.byte	0x5
 492 0122 28       		.byte	0x28
 493 0123 CF000000 		.4byte	0xcf
 494 0127 10       		.byte	0x10
 495 0128 0A       		.uleb128 0xa
 496 0129 AE060000 		.4byte	.LASF23
 497 012d 05       		.byte	0x5
 498 012e 29       		.byte	0x29
 499 012f 3A010000 		.4byte	0x13a
 500 0133 14       		.byte	0x14
 501 0134 00       		.byte	0
 502 0135 05       		.uleb128 0x5
 503 0136 D4000000 		.4byte	0xd4
 504 013a 06       		.uleb128 0x6
 505 013b 35010000 		.4byte	0x135
 506 013f 03       		.uleb128 0x3
 507 0140 9B060000 		.4byte	.LASF24
 508 0144 05       		.byte	0x5
 509 0145 2A       		.byte	0x2a
 510 0146 E4000000 		.4byte	0xe4
 511 014a 0B       		.uleb128 0xb
 512 014b 6A090000 		.4byte	.LASF25
 513 014f 06       		.byte	0x6
 514 0150 1D06     		.2byte	0x61d
 515 0152 3F010000 		.4byte	0x13f
 516 0156 02       		.uleb128 0x2
 517 0157 08       		.byte	0x8
 518 0158 04       		.byte	0x4
 519 0159 96070000 		.4byte	.LASF26
 520 015d 09       		.uleb128 0x9
 521 015e B8       		.byte	0xb8
 522 015f 07       		.byte	0x7
 523 0160 34       		.byte	0x34
 524 0161 6E050000 		.4byte	0x56e
 525 0165 0A       		.uleb128 0xa
 526 0166 0E010000 		.4byte	.LASF27
 527 016a 07       		.byte	0x7
 528 016b 37       		.byte	0x37
 529 016c B8000000 		.4byte	0xb8
 530 0170 00       		.byte	0
 531 0171 0A       		.uleb128 0xa
 532 0172 1E030000 		.4byte	.LASF28
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 31


 533 0176 07       		.byte	0x7
 534 0177 38       		.byte	0x38
 535 0178 B8000000 		.4byte	0xb8
 536 017c 04       		.byte	0x4
 537 017d 0A       		.uleb128 0xa
 538 017e 3F020000 		.4byte	.LASF29
 539 0182 07       		.byte	0x7
 540 0183 39       		.byte	0x39
 541 0184 B8000000 		.4byte	0xb8
 542 0188 08       		.byte	0x8
 543 0189 0A       		.uleb128 0xa
 544 018a 82010000 		.4byte	.LASF30
 545 018e 07       		.byte	0x7
 546 018f 3A       		.byte	0x3a
 547 0190 B8000000 		.4byte	0xb8
 548 0194 0C       		.byte	0xc
 549 0195 0A       		.uleb128 0xa
 550 0196 83050000 		.4byte	.LASF31
 551 019a 07       		.byte	0x7
 552 019b 3B       		.byte	0x3b
 553 019c B8000000 		.4byte	0xb8
 554 01a0 10       		.byte	0x10
 555 01a1 0A       		.uleb128 0xa
 556 01a2 1E020000 		.4byte	.LASF32
 557 01a6 07       		.byte	0x7
 558 01a7 3C       		.byte	0x3c
 559 01a8 B8000000 		.4byte	0xb8
 560 01ac 14       		.byte	0x14
 561 01ad 0A       		.uleb128 0xa
 562 01ae 09040000 		.4byte	.LASF33
 563 01b2 07       		.byte	0x7
 564 01b3 3D       		.byte	0x3d
 565 01b4 B8000000 		.4byte	0xb8
 566 01b8 18       		.byte	0x18
 567 01b9 0A       		.uleb128 0xa
 568 01ba 73000000 		.4byte	.LASF34
 569 01be 07       		.byte	0x7
 570 01bf 3E       		.byte	0x3e
 571 01c0 B8000000 		.4byte	0xb8
 572 01c4 1C       		.byte	0x1c
 573 01c5 0A       		.uleb128 0xa
 574 01c6 93090000 		.4byte	.LASF35
 575 01ca 07       		.byte	0x7
 576 01cb 3F       		.byte	0x3f
 577 01cc B8000000 		.4byte	0xb8
 578 01d0 20       		.byte	0x20
 579 01d1 0A       		.uleb128 0xa
 580 01d2 D3040000 		.4byte	.LASF36
 581 01d6 07       		.byte	0x7
 582 01d7 40       		.byte	0x40
 583 01d8 B8000000 		.4byte	0xb8
 584 01dc 24       		.byte	0x24
 585 01dd 0A       		.uleb128 0xa
 586 01de AF040000 		.4byte	.LASF37
 587 01e2 07       		.byte	0x7
 588 01e3 43       		.byte	0x43
 589 01e4 97000000 		.4byte	0x97
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 32


 590 01e8 28       		.byte	0x28
 591 01e9 0A       		.uleb128 0xa
 592 01ea 54000000 		.4byte	.LASF38
 593 01ee 07       		.byte	0x7
 594 01ef 44       		.byte	0x44
 595 01f0 97000000 		.4byte	0x97
 596 01f4 29       		.byte	0x29
 597 01f5 0A       		.uleb128 0xa
 598 01f6 89090000 		.4byte	.LASF39
 599 01fa 07       		.byte	0x7
 600 01fb 45       		.byte	0x45
 601 01fc 97000000 		.4byte	0x97
 602 0200 2A       		.byte	0x2a
 603 0201 0A       		.uleb128 0xa
 604 0202 8C050000 		.4byte	.LASF40
 605 0206 07       		.byte	0x7
 606 0207 46       		.byte	0x46
 607 0208 97000000 		.4byte	0x97
 608 020c 2B       		.byte	0x2b
 609 020d 0A       		.uleb128 0xa
 610 020e 6B040000 		.4byte	.LASF41
 611 0212 07       		.byte	0x7
 612 0213 47       		.byte	0x47
 613 0214 97000000 		.4byte	0x97
 614 0218 2C       		.byte	0x2c
 615 0219 0A       		.uleb128 0xa
 616 021a 25080000 		.4byte	.LASF42
 617 021e 07       		.byte	0x7
 618 021f 48       		.byte	0x48
 619 0220 97000000 		.4byte	0x97
 620 0224 2D       		.byte	0x2d
 621 0225 0A       		.uleb128 0xa
 622 0226 EE010000 		.4byte	.LASF43
 623 022a 07       		.byte	0x7
 624 022b 49       		.byte	0x49
 625 022c 97000000 		.4byte	0x97
 626 0230 2E       		.byte	0x2e
 627 0231 0A       		.uleb128 0xa
 628 0232 E3040000 		.4byte	.LASF44
 629 0236 07       		.byte	0x7
 630 0237 4A       		.byte	0x4a
 631 0238 97000000 		.4byte	0x97
 632 023c 2F       		.byte	0x2f
 633 023d 0A       		.uleb128 0xa
 634 023e A7070000 		.4byte	.LASF45
 635 0242 07       		.byte	0x7
 636 0243 4B       		.byte	0x4b
 637 0244 97000000 		.4byte	0x97
 638 0248 30       		.byte	0x30
 639 0249 0A       		.uleb128 0xa
 640 024a FE030000 		.4byte	.LASF46
 641 024e 07       		.byte	0x7
 642 024f 4E       		.byte	0x4e
 643 0250 97000000 		.4byte	0x97
 644 0254 31       		.byte	0x31
 645 0255 0A       		.uleb128 0xa
 646 0256 7C000000 		.4byte	.LASF47
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 33


 647 025a 07       		.byte	0x7
 648 025b 4F       		.byte	0x4f
 649 025c 97000000 		.4byte	0x97
 650 0260 32       		.byte	0x32
 651 0261 0A       		.uleb128 0xa
 652 0262 96030000 		.4byte	.LASF48
 653 0266 07       		.byte	0x7
 654 0267 50       		.byte	0x50
 655 0268 97000000 		.4byte	0x97
 656 026c 33       		.byte	0x33
 657 026d 0A       		.uleb128 0xa
 658 026e 18050000 		.4byte	.LASF49
 659 0272 07       		.byte	0x7
 660 0273 51       		.byte	0x51
 661 0274 97000000 		.4byte	0x97
 662 0278 34       		.byte	0x34
 663 0279 0A       		.uleb128 0xa
 664 027a 8B080000 		.4byte	.LASF50
 665 027e 07       		.byte	0x7
 666 027f 52       		.byte	0x52
 667 0280 A2000000 		.4byte	0xa2
 668 0284 36       		.byte	0x36
 669 0285 0A       		.uleb128 0xa
 670 0286 59020000 		.4byte	.LASF51
 671 028a 07       		.byte	0x7
 672 028b 53       		.byte	0x53
 673 028c A2000000 		.4byte	0xa2
 674 0290 38       		.byte	0x38
 675 0291 0A       		.uleb128 0xa
 676 0292 CA080000 		.4byte	.LASF52
 677 0296 07       		.byte	0x7
 678 0297 54       		.byte	0x54
 679 0298 A2000000 		.4byte	0xa2
 680 029c 3A       		.byte	0x3a
 681 029d 0A       		.uleb128 0xa
 682 029e 7A090000 		.4byte	.LASF53
 683 02a2 07       		.byte	0x7
 684 02a3 55       		.byte	0x55
 685 02a4 97000000 		.4byte	0x97
 686 02a8 3C       		.byte	0x3c
 687 02a9 0A       		.uleb128 0xa
 688 02aa 80020000 		.4byte	.LASF54
 689 02ae 07       		.byte	0x7
 690 02af 56       		.byte	0x56
 691 02b0 97000000 		.4byte	0x97
 692 02b4 3D       		.byte	0x3d
 693 02b5 0A       		.uleb128 0xa
 694 02b6 CB060000 		.4byte	.LASF55
 695 02ba 07       		.byte	0x7
 696 02bb 57       		.byte	0x57
 697 02bc 97000000 		.4byte	0x97
 698 02c0 3E       		.byte	0x3e
 699 02c1 0A       		.uleb128 0xa
 700 02c2 27010000 		.4byte	.LASF56
 701 02c6 07       		.byte	0x7
 702 02c7 58       		.byte	0x58
 703 02c8 97000000 		.4byte	0x97
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 34


 704 02cc 3F       		.byte	0x3f
 705 02cd 0A       		.uleb128 0xa
 706 02ce 9A050000 		.4byte	.LASF57
 707 02d2 07       		.byte	0x7
 708 02d3 59       		.byte	0x59
 709 02d4 97000000 		.4byte	0x97
 710 02d8 40       		.byte	0x40
 711 02d9 0A       		.uleb128 0xa
 712 02da 34030000 		.4byte	.LASF58
 713 02de 07       		.byte	0x7
 714 02df 5A       		.byte	0x5a
 715 02e0 97000000 		.4byte	0x97
 716 02e4 41       		.byte	0x41
 717 02e5 0A       		.uleb128 0xa
 718 02e6 8E040000 		.4byte	.LASF59
 719 02ea 07       		.byte	0x7
 720 02eb 5B       		.byte	0x5b
 721 02ec 97000000 		.4byte	0x97
 722 02f0 42       		.byte	0x42
 723 02f1 0A       		.uleb128 0xa
 724 02f2 78050000 		.4byte	.LASF60
 725 02f6 07       		.byte	0x7
 726 02f7 5C       		.byte	0x5c
 727 02f8 97000000 		.4byte	0x97
 728 02fc 43       		.byte	0x43
 729 02fd 0A       		.uleb128 0xa
 730 02fe 48020000 		.4byte	.LASF61
 731 0302 07       		.byte	0x7
 732 0303 5D       		.byte	0x5d
 733 0304 97000000 		.4byte	0x97
 734 0308 44       		.byte	0x44
 735 0309 0A       		.uleb128 0xa
 736 030a 00000000 		.4byte	.LASF62
 737 030e 07       		.byte	0x7
 738 030f 5E       		.byte	0x5e
 739 0310 B8000000 		.4byte	0xb8
 740 0314 48       		.byte	0x48
 741 0315 0A       		.uleb128 0xa
 742 0316 31020000 		.4byte	.LASF63
 743 031a 07       		.byte	0x7
 744 031b 5F       		.byte	0x5f
 745 031c B8000000 		.4byte	0xb8
 746 0320 4C       		.byte	0x4c
 747 0321 0A       		.uleb128 0xa
 748 0322 CA090000 		.4byte	.LASF64
 749 0326 07       		.byte	0x7
 750 0327 60       		.byte	0x60
 751 0328 97000000 		.4byte	0x97
 752 032c 50       		.byte	0x50
 753 032d 0A       		.uleb128 0xa
 754 032e 70010000 		.4byte	.LASF65
 755 0332 07       		.byte	0x7
 756 0333 61       		.byte	0x61
 757 0334 97000000 		.4byte	0x97
 758 0338 51       		.byte	0x51
 759 0339 0A       		.uleb128 0xa
 760 033a DF080000 		.4byte	.LASF66
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 35


 761 033e 07       		.byte	0x7
 762 033f 62       		.byte	0x62
 763 0340 97000000 		.4byte	0x97
 764 0344 52       		.byte	0x52
 765 0345 0A       		.uleb128 0xa
 766 0346 B1090000 		.4byte	.LASF67
 767 034a 07       		.byte	0x7
 768 034b 63       		.byte	0x63
 769 034c 97000000 		.4byte	0x97
 770 0350 53       		.byte	0x53
 771 0351 0A       		.uleb128 0xa
 772 0352 D9060000 		.4byte	.LASF68
 773 0356 07       		.byte	0x7
 774 0357 64       		.byte	0x64
 775 0358 97000000 		.4byte	0x97
 776 035c 54       		.byte	0x54
 777 035d 0A       		.uleb128 0xa
 778 035e 8A010000 		.4byte	.LASF69
 779 0362 07       		.byte	0x7
 780 0363 65       		.byte	0x65
 781 0364 97000000 		.4byte	0x97
 782 0368 55       		.byte	0x55
 783 0369 0A       		.uleb128 0xa
 784 036a 42080000 		.4byte	.LASF70
 785 036e 07       		.byte	0x7
 786 036f 66       		.byte	0x66
 787 0370 97000000 		.4byte	0x97
 788 0374 56       		.byte	0x56
 789 0375 0A       		.uleb128 0xa
 790 0376 12040000 		.4byte	.LASF71
 791 037a 07       		.byte	0x7
 792 037b 67       		.byte	0x67
 793 037c 97000000 		.4byte	0x97
 794 0380 57       		.byte	0x57
 795 0381 0A       		.uleb128 0xa
 796 0382 19000000 		.4byte	.LASF72
 797 0386 07       		.byte	0x7
 798 0387 68       		.byte	0x68
 799 0388 97000000 		.4byte	0x97
 800 038c 58       		.byte	0x58
 801 038d 0A       		.uleb128 0xa
 802 038e 7D060000 		.4byte	.LASF73
 803 0392 07       		.byte	0x7
 804 0393 69       		.byte	0x69
 805 0394 97000000 		.4byte	0x97
 806 0398 59       		.byte	0x59
 807 0399 0A       		.uleb128 0xa
 808 039a 0D050000 		.4byte	.LASF74
 809 039e 07       		.byte	0x7
 810 039f 6E       		.byte	0x6e
 811 03a0 AD000000 		.4byte	0xad
 812 03a4 5A       		.byte	0x5a
 813 03a5 0A       		.uleb128 0xa
 814 03a6 6D080000 		.4byte	.LASF75
 815 03aa 07       		.byte	0x7
 816 03ab 6F       		.byte	0x6f
 817 03ac AD000000 		.4byte	0xad
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 36


 818 03b0 5C       		.byte	0x5c
 819 03b1 0A       		.uleb128 0xa
 820 03b2 18010000 		.4byte	.LASF76
 821 03b6 07       		.byte	0x7
 822 03b7 70       		.byte	0x70
 823 03b8 97000000 		.4byte	0x97
 824 03bc 5E       		.byte	0x5e
 825 03bd 0A       		.uleb128 0xa
 826 03be 0B060000 		.4byte	.LASF77
 827 03c2 07       		.byte	0x7
 828 03c3 71       		.byte	0x71
 829 03c4 97000000 		.4byte	0x97
 830 03c8 5F       		.byte	0x5f
 831 03c9 0A       		.uleb128 0xa
 832 03ca 67050000 		.4byte	.LASF78
 833 03ce 07       		.byte	0x7
 834 03cf 72       		.byte	0x72
 835 03d0 97000000 		.4byte	0x97
 836 03d4 60       		.byte	0x60
 837 03d5 0A       		.uleb128 0xa
 838 03d6 D6050000 		.4byte	.LASF79
 839 03da 07       		.byte	0x7
 840 03db 73       		.byte	0x73
 841 03dc B8000000 		.4byte	0xb8
 842 03e0 64       		.byte	0x64
 843 03e1 0A       		.uleb128 0xa
 844 03e2 4A010000 		.4byte	.LASF80
 845 03e6 07       		.byte	0x7
 846 03e7 76       		.byte	0x76
 847 03e8 AD000000 		.4byte	0xad
 848 03ec 68       		.byte	0x68
 849 03ed 0A       		.uleb128 0xa
 850 03ee BF030000 		.4byte	.LASF81
 851 03f2 07       		.byte	0x7
 852 03f3 77       		.byte	0x77
 853 03f4 AD000000 		.4byte	0xad
 854 03f8 6A       		.byte	0x6a
 855 03f9 0A       		.uleb128 0xa
 856 03fa 26040000 		.4byte	.LASF82
 857 03fe 07       		.byte	0x7
 858 03ff 78       		.byte	0x78
 859 0400 AD000000 		.4byte	0xad
 860 0404 6C       		.byte	0x6c
 861 0405 0A       		.uleb128 0xa
 862 0406 5E040000 		.4byte	.LASF83
 863 040a 07       		.byte	0x7
 864 040b 79       		.byte	0x79
 865 040c AD000000 		.4byte	0xad
 866 0410 6E       		.byte	0x6e
 867 0411 0A       		.uleb128 0xa
 868 0412 B7060000 		.4byte	.LASF84
 869 0416 07       		.byte	0x7
 870 0417 7B       		.byte	0x7b
 871 0418 97000000 		.4byte	0x97
 872 041c 70       		.byte	0x70
 873 041d 0A       		.uleb128 0xa
 874 041e BB010000 		.4byte	.LASF85
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 37


 875 0422 07       		.byte	0x7
 876 0423 7C       		.byte	0x7c
 877 0424 97000000 		.4byte	0x97
 878 0428 71       		.byte	0x71
 879 0429 0A       		.uleb128 0xa
 880 042a 9B090000 		.4byte	.LASF86
 881 042e 07       		.byte	0x7
 882 042f 7D       		.byte	0x7d
 883 0430 97000000 		.4byte	0x97
 884 0434 72       		.byte	0x72
 885 0435 0A       		.uleb128 0xa
 886 0436 31050000 		.4byte	.LASF87
 887 043a 07       		.byte	0x7
 888 043b 7E       		.byte	0x7e
 889 043c 97000000 		.4byte	0x97
 890 0440 73       		.byte	0x73
 891 0441 0A       		.uleb128 0xa
 892 0442 8B020000 		.4byte	.LASF88
 893 0446 07       		.byte	0x7
 894 0447 80       		.byte	0x80
 895 0448 AD000000 		.4byte	0xad
 896 044c 74       		.byte	0x74
 897 044d 0A       		.uleb128 0xa
 898 044e F6070000 		.4byte	.LASF89
 899 0452 07       		.byte	0x7
 900 0453 81       		.byte	0x81
 901 0454 AD000000 		.4byte	0xad
 902 0458 76       		.byte	0x76
 903 0459 0A       		.uleb128 0xa
 904 045a 6B020000 		.4byte	.LASF90
 905 045e 07       		.byte	0x7
 906 045f 82       		.byte	0x82
 907 0460 AD000000 		.4byte	0xad
 908 0464 78       		.byte	0x78
 909 0465 0A       		.uleb128 0xa
 910 0466 D3000000 		.4byte	.LASF91
 911 046a 07       		.byte	0x7
 912 046b 83       		.byte	0x83
 913 046c AD000000 		.4byte	0xad
 914 0470 7A       		.byte	0x7a
 915 0471 0A       		.uleb128 0xa
 916 0472 22090000 		.4byte	.LASF92
 917 0476 07       		.byte	0x7
 918 0477 86       		.byte	0x86
 919 0478 97000000 		.4byte	0x97
 920 047c 7C       		.byte	0x7c
 921 047d 0A       		.uleb128 0xa
 922 047e AD080000 		.4byte	.LASF93
 923 0482 07       		.byte	0x7
 924 0483 87       		.byte	0x87
 925 0484 97000000 		.4byte	0x97
 926 0488 7D       		.byte	0x7d
 927 0489 0A       		.uleb128 0xa
 928 048a 2D000000 		.4byte	.LASF94
 929 048e 07       		.byte	0x7
 930 048f 88       		.byte	0x88
 931 0490 97000000 		.4byte	0x97
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 38


 932 0494 7E       		.byte	0x7e
 933 0495 0A       		.uleb128 0xa
 934 0496 0A030000 		.4byte	.LASF95
 935 049a 07       		.byte	0x7
 936 049b 89       		.byte	0x89
 937 049c 97000000 		.4byte	0x97
 938 04a0 7F       		.byte	0x7f
 939 04a1 0A       		.uleb128 0xa
 940 04a2 82030000 		.4byte	.LASF96
 941 04a6 07       		.byte	0x7
 942 04a7 8A       		.byte	0x8a
 943 04a8 97000000 		.4byte	0x97
 944 04ac 80       		.byte	0x80
 945 04ad 0A       		.uleb128 0xa
 946 04ae BC040000 		.4byte	.LASF97
 947 04b2 07       		.byte	0x7
 948 04b3 8D       		.byte	0x8d
 949 04b4 B8000000 		.4byte	0xb8
 950 04b8 84       		.byte	0x84
 951 04b9 0A       		.uleb128 0xa
 952 04ba E8000000 		.4byte	.LASF98
 953 04be 07       		.byte	0x7
 954 04bf 8E       		.byte	0x8e
 955 04c0 B8000000 		.4byte	0xb8
 956 04c4 88       		.byte	0x88
 957 04c5 0A       		.uleb128 0xa
 958 04c6 0D090000 		.4byte	.LASF99
 959 04ca 07       		.byte	0x7
 960 04cb 8F       		.byte	0x8f
 961 04cc B8000000 		.4byte	0xb8
 962 04d0 8C       		.byte	0x8c
 963 04d1 0A       		.uleb128 0xa
 964 04d2 EF040000 		.4byte	.LASF100
 965 04d6 07       		.byte	0x7
 966 04d7 90       		.byte	0x90
 967 04d8 B8000000 		.4byte	0xb8
 968 04dc 90       		.byte	0x90
 969 04dd 0A       		.uleb128 0xa
 970 04de 6D030000 		.4byte	.LASF101
 971 04e2 07       		.byte	0x7
 972 04e3 91       		.byte	0x91
 973 04e4 B8000000 		.4byte	0xb8
 974 04e8 94       		.byte	0x94
 975 04e9 0A       		.uleb128 0xa
 976 04ea D8010000 		.4byte	.LASF102
 977 04ee 07       		.byte	0x7
 978 04ef 92       		.byte	0x92
 979 04f0 B8000000 		.4byte	0xb8
 980 04f4 98       		.byte	0x98
 981 04f5 0A       		.uleb128 0xa
 982 04f6 54090000 		.4byte	.LASF103
 983 04fa 07       		.byte	0x7
 984 04fb 93       		.byte	0x93
 985 04fc B8000000 		.4byte	0xb8
 986 0500 9C       		.byte	0x9c
 987 0501 0A       		.uleb128 0xa
 988 0502 5A010000 		.4byte	.LASF104
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 39


 989 0506 07       		.byte	0x7
 990 0507 94       		.byte	0x94
 991 0508 B8000000 		.4byte	0xb8
 992 050c A0       		.byte	0xa0
 993 050d 0A       		.uleb128 0xa
 994 050e F9010000 		.4byte	.LASF105
 995 0512 07       		.byte	0x7
 996 0513 95       		.byte	0x95
 997 0514 AD000000 		.4byte	0xad
 998 0518 A4       		.byte	0xa4
 999 0519 0A       		.uleb128 0xa
 1000 051a 9A040000 		.4byte	.LASF106
 1001 051e 07       		.byte	0x7
 1002 051f 96       		.byte	0x96
 1003 0520 AD000000 		.4byte	0xad
 1004 0524 A6       		.byte	0xa6
 1005 0525 0A       		.uleb128 0xa
 1006 0526 F1050000 		.4byte	.LASF107
 1007 052a 07       		.byte	0x7
 1008 052b 97       		.byte	0x97
 1009 052c AD000000 		.4byte	0xad
 1010 0530 A8       		.byte	0xa8
 1011 0531 0A       		.uleb128 0xa
 1012 0532 B3070000 		.4byte	.LASF108
 1013 0536 07       		.byte	0x7
 1014 0537 98       		.byte	0x98
 1015 0538 AD000000 		.4byte	0xad
 1016 053c AA       		.byte	0xaa
 1017 053d 0A       		.uleb128 0xa
 1018 053e 35040000 		.4byte	.LASF109
 1019 0542 07       		.byte	0x7
 1020 0543 99       		.byte	0x99
 1021 0544 AD000000 		.4byte	0xad
 1022 0548 AC       		.byte	0xac
 1023 0549 0A       		.uleb128 0xa
 1024 054a 48050000 		.4byte	.LASF110
 1025 054e 07       		.byte	0x7
 1026 054f 9A       		.byte	0x9a
 1027 0550 AD000000 		.4byte	0xad
 1028 0554 AE       		.byte	0xae
 1029 0555 0A       		.uleb128 0xa
 1030 0556 A7050000 		.4byte	.LASF111
 1031 055a 07       		.byte	0x7
 1032 055b 9D       		.byte	0x9d
 1033 055c AD000000 		.4byte	0xad
 1034 0560 B0       		.byte	0xb0
 1035 0561 0A       		.uleb128 0xa
 1036 0562 40000000 		.4byte	.LASF112
 1037 0566 07       		.byte	0x7
 1038 0567 9E       		.byte	0x9e
 1039 0568 B8000000 		.4byte	0xb8
 1040 056c B4       		.byte	0xb4
 1041 056d 00       		.byte	0
 1042 056e 03       		.uleb128 0x3
 1043 056f 77040000 		.4byte	.LASF113
 1044 0573 07       		.byte	0x7
 1045 0574 9F       		.byte	0x9f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 40


 1046 0575 5D010000 		.4byte	0x15d
 1047 0579 0B       		.uleb128 0xb
 1048 057a B8030000 		.4byte	.LASF114
 1049 057e 08       		.byte	0x8
 1050 057f F601     		.2byte	0x1f6
 1051 0581 85050000 		.4byte	0x585
 1052 0585 02       		.uleb128 0x2
 1053 0586 01       		.byte	0x1
 1054 0587 08       		.byte	0x8
 1055 0588 A2070000 		.4byte	.LASF115
 1056 058c 02       		.uleb128 0x2
 1057 058d 04       		.byte	0x4
 1058 058e 04       		.byte	0x4
 1059 058f D0050000 		.4byte	.LASF116
 1060 0593 02       		.uleb128 0x2
 1061 0594 08       		.byte	0x8
 1062 0595 04       		.byte	0x4
 1063 0596 64020000 		.4byte	.LASF117
 1064 059a 0C       		.uleb128 0xc
 1065 059b 04       		.byte	0x4
 1066 059c 90000000 		.4byte	0x90
 1067 05a0 09       		.byte	0x9
 1068 05a1 7F       		.byte	0x7f
 1069 05a2 DA050000 		.4byte	0x5da
 1070 05a6 0D       		.uleb128 0xd
 1071 05a7 6C060000 		.4byte	.LASF118
 1072 05ab 00       		.byte	0
 1073 05ac 0E       		.uleb128 0xe
 1074 05ad 09080000 		.4byte	.LASF119
 1075 05b1 01006A00 		.4byte	0x6a0001
 1076 05b5 0E       		.uleb128 0xe
 1077 05b6 E3030000 		.4byte	.LASF120
 1078 05ba 02006A00 		.4byte	0x6a0002
 1079 05be 0E       		.uleb128 0xe
 1080 05bf E3070000 		.4byte	.LASF121
 1081 05c3 03006A00 		.4byte	0x6a0003
 1082 05c7 0E       		.uleb128 0xe
 1083 05c8 F2060000 		.4byte	.LASF122
 1084 05cc 04006A00 		.4byte	0x6a0004
 1085 05d0 0E       		.uleb128 0xe
 1086 05d1 56050000 		.4byte	.LASF123
 1087 05d5 FF006A00 		.4byte	0x6a00ff
 1088 05d9 00       		.byte	0
 1089 05da 03       		.uleb128 0x3
 1090 05db 76080000 		.4byte	.LASF124
 1091 05df 09       		.byte	0x9
 1092 05e0 86       		.byte	0x86
 1093 05e1 9A050000 		.4byte	0x59a
 1094 05e5 0F       		.uleb128 0xf
 1095 05e6 04       		.byte	0x4
 1096 05e7 90000000 		.4byte	0x90
 1097 05eb 02       		.byte	0x2
 1098 05ec 7201     		.2byte	0x172
 1099 05ee 02060000 		.4byte	0x602
 1100 05f2 0D       		.uleb128 0xd
 1101 05f3 5A030000 		.4byte	.LASF125
 1102 05f7 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 41


 1103 05f8 0E       		.uleb128 0xe
 1104 05f9 62000000 		.4byte	.LASF126
 1105 05fd 01008A00 		.4byte	0x8a0001
 1106 0601 00       		.byte	0
 1107 0602 0B       		.uleb128 0xb
 1108 0603 48040000 		.4byte	.LASF127
 1109 0607 02       		.byte	0x2
 1110 0608 7901     		.2byte	0x179
 1111 060a E5050000 		.4byte	0x5e5
 1112 060e 10       		.uleb128 0x10
 1113 060f 28060000 		.4byte	.LASF131
 1114 0613 02       		.byte	0x2
 1115 0614 9103     		.2byte	0x391
 1116 0616 02060000 		.4byte	0x602
 1117 061a 03       		.byte	0x3
 1118 061b 44060000 		.4byte	0x644
 1119 061f 11       		.uleb128 0x11
 1120 0620 DE040000 		.4byte	.LASF128
 1121 0624 02       		.byte	0x2
 1122 0625 9103     		.2byte	0x391
 1123 0627 44060000 		.4byte	0x644
 1124 062b 11       		.uleb128 0x11
 1125 062c 0E020000 		.4byte	.LASF129
 1126 0630 02       		.byte	0x2
 1127 0631 9103     		.2byte	0x391
 1128 0633 B8000000 		.4byte	0xb8
 1129 0637 11       		.uleb128 0x11
 1130 0638 21060000 		.4byte	.LASF130
 1131 063c 02       		.byte	0x2
 1132 063d 9103     		.2byte	0x391
 1133 063f 4A060000 		.4byte	0x64a
 1134 0643 00       		.byte	0
 1135 0644 12       		.uleb128 0x12
 1136 0645 04       		.byte	0x4
 1137 0646 4A010000 		.4byte	0x14a
 1138 064a 12       		.uleb128 0x12
 1139 064b 04       		.byte	0x4
 1140 064c 50060000 		.4byte	0x650
 1141 0650 13       		.uleb128 0x13
 1142 0651 10       		.uleb128 0x10
 1143 0652 3E060000 		.4byte	.LASF132
 1144 0656 02       		.byte	0x2
 1145 0657 2203     		.2byte	0x322
 1146 0659 6F060000 		.4byte	0x66f
 1147 065d 03       		.byte	0x3
 1148 065e 6F060000 		.4byte	0x66f
 1149 0662 11       		.uleb128 0x11
 1150 0663 DE040000 		.4byte	.LASF128
 1151 0667 02       		.byte	0x2
 1152 0668 2203     		.2byte	0x322
 1153 066a 76060000 		.4byte	0x676
 1154 066e 00       		.byte	0
 1155 066f 02       		.uleb128 0x2
 1156 0670 01       		.byte	0x1
 1157 0671 02       		.byte	0x2
 1158 0672 58060000 		.4byte	.LASF133
 1159 0676 12       		.uleb128 0x12
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 42


 1160 0677 04       		.byte	0x4
 1161 0678 7C060000 		.4byte	0x67c
 1162 067c 06       		.uleb128 0x6
 1163 067d 4A010000 		.4byte	0x14a
 1164 0681 14       		.uleb128 0x14
 1165 0682 FD050000 		.4byte	.LASF150
 1166 0686 01       		.byte	0x1
 1167 0687 C8       		.byte	0xc8
 1168 0688 DA050000 		.4byte	0x5da
 1169 068c 00000000 		.4byte	.LFB67
 1170 0690 38000000 		.4byte	.LFE67-.LFB67
 1171 0694 01       		.uleb128 0x1
 1172 0695 9C       		.byte	0x9c
 1173 0696 AA060000 		.4byte	0x6aa
 1174 069a 15       		.uleb128 0x15
 1175 069b C3090000 		.4byte	.LASF138
 1176 069f 01       		.byte	0x1
 1177 06a0 CA       		.byte	0xca
 1178 06a1 DA050000 		.4byte	0x5da
 1179 06a5 00000000 		.4byte	.LLST0
 1180 06a9 00       		.byte	0
 1181 06aa 10       		.uleb128 0x10
 1182 06ab 37090000 		.4byte	.LASF134
 1183 06af 02       		.byte	0x2
 1184 06b0 C101     		.2byte	0x1c1
 1185 06b2 44060000 		.4byte	0x644
 1186 06b6 03       		.byte	0x3
 1187 06b7 C8060000 		.4byte	0x6c8
 1188 06bb 11       		.uleb128 0x11
 1189 06bc 32080000 		.4byte	.LASF135
 1190 06c0 02       		.byte	0x2
 1191 06c1 C101     		.2byte	0x1c1
 1192 06c3 B8000000 		.4byte	0xb8
 1193 06c7 00       		.byte	0
 1194 06c8 16       		.uleb128 0x16
 1195 06c9 EF080000 		.4byte	.LASF139
 1196 06cd 01       		.byte	0x1
 1197 06ce 7C       		.byte	0x7c
 1198 06cf DA050000 		.4byte	0x5da
 1199 06d3 00000000 		.4byte	.LFB65
 1200 06d7 A4000000 		.4byte	.LFE65-.LFB65
 1201 06db 01       		.uleb128 0x1
 1202 06dc 9C       		.byte	0x9c
 1203 06dd E2070000 		.4byte	0x7e2
 1204 06e1 17       		.uleb128 0x17
 1205 06e2 3B080000 		.4byte	.LASF136
 1206 06e6 01       		.byte	0x1
 1207 06e7 7C       		.byte	0x7c
 1208 06e8 B8000000 		.4byte	0xb8
 1209 06ec 23000000 		.4byte	.LLST1
 1210 06f0 17       		.uleb128 0x17
 1211 06f1 29050000 		.4byte	.LASF137
 1212 06f5 01       		.byte	0x1
 1213 06f6 7C       		.byte	0x7c
 1214 06f7 E2070000 		.4byte	0x7e2
 1215 06fb 5D000000 		.4byte	.LLST2
 1216 06ff 15       		.uleb128 0x15
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 43


 1217 0700 C3090000 		.4byte	.LASF138
 1218 0704 01       		.byte	0x1
 1219 0705 7E       		.byte	0x7e
 1220 0706 DA050000 		.4byte	0x5da
 1221 070a 9F000000 		.4byte	.LLST3
 1222 070e 18       		.uleb128 0x18
 1223 070f AA060000 		.4byte	0x6aa
 1224 0713 12000000 		.4byte	.LBB14
 1225 0717 1C000000 		.4byte	.LBE14-.LBB14
 1226 071b 01       		.byte	0x1
 1227 071c 86       		.byte	0x86
 1228 071d 45070000 		.4byte	0x745
 1229 0721 19       		.uleb128 0x19
 1230 0722 BB060000 		.4byte	0x6bb
 1231 0726 F9000000 		.4byte	.LLST4
 1232 072a 1A       		.uleb128 0x1a
 1233 072b 28000000 		.4byte	.LVL8
 1234 072f CB080000 		.4byte	0x8cb
 1235 0733 1B       		.uleb128 0x1b
 1236 0734 01       		.uleb128 0x1
 1237 0735 50       		.byte	0x50
 1238 0736 05       		.uleb128 0x5
 1239 0737 03       		.byte	0x3
 1240 0738 00000000 		.4byte	.LC3
 1241 073c 1B       		.uleb128 0x1b
 1242 073d 01       		.uleb128 0x1
 1243 073e 51       		.byte	0x51
 1244 073f 03       		.uleb128 0x3
 1245 0740 0A       		.byte	0xa
 1246 0741 C301     		.2byte	0x1c3
 1247 0743 00       		.byte	0
 1248 0744 00       		.byte	0
 1249 0745 18       		.uleb128 0x18
 1250 0746 0E060000 		.4byte	0x60e
 1251 074a 2E000000 		.4byte	.LBB16
 1252 074e 08000000 		.4byte	.LBE16-.LBB16
 1253 0752 01       		.byte	0x1
 1254 0753 86       		.byte	0x86
 1255 0754 88070000 		.4byte	0x788
 1256 0758 19       		.uleb128 0x19
 1257 0759 37060000 		.4byte	0x637
 1258 075d 0D010000 		.4byte	.LLST5
 1259 0761 19       		.uleb128 0x19
 1260 0762 2B060000 		.4byte	0x62b
 1261 0766 25010000 		.4byte	.LLST6
 1262 076a 1C       		.uleb128 0x1c
 1263 076b 1F060000 		.4byte	0x61f
 1264 076f 1A       		.uleb128 0x1a
 1265 0770 36000000 		.4byte	.LVL10
 1266 0774 D7080000 		.4byte	0x8d7
 1267 0778 1B       		.uleb128 0x1b
 1268 0779 01       		.uleb128 0x1
 1269 077a 51       		.byte	0x51
 1270 077b 01       		.uleb128 0x1
 1271 077c 31       		.byte	0x31
 1272 077d 1B       		.uleb128 0x1b
 1273 077e 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 44


 1274 077f 52       		.byte	0x52
 1275 0780 05       		.uleb128 0x5
 1276 0781 03       		.byte	0x3
 1277 0782 00000000 		.4byte	.LANCHOR0
 1278 0786 00       		.byte	0
 1279 0787 00       		.byte	0
 1280 0788 18       		.uleb128 0x18
 1281 0789 AA060000 		.4byte	0x6aa
 1282 078d 3A000000 		.4byte	.LBB18
 1283 0791 1C000000 		.4byte	.LBE18-.LBB18
 1284 0795 01       		.byte	0x1
 1285 0796 89       		.byte	0x89
 1286 0797 BF070000 		.4byte	0x7bf
 1287 079b 19       		.uleb128 0x19
 1288 079c BB060000 		.4byte	0x6bb
 1289 07a0 39010000 		.4byte	.LLST7
 1290 07a4 1A       		.uleb128 0x1a
 1291 07a5 50000000 		.4byte	.LVL12
 1292 07a9 CB080000 		.4byte	0x8cb
 1293 07ad 1B       		.uleb128 0x1b
 1294 07ae 01       		.uleb128 0x1
 1295 07af 50       		.byte	0x50
 1296 07b0 05       		.uleb128 0x5
 1297 07b1 03       		.byte	0x3
 1298 07b2 00000000 		.4byte	.LC3
 1299 07b6 1B       		.uleb128 0x1b
 1300 07b7 01       		.uleb128 0x1
 1301 07b8 51       		.byte	0x51
 1302 07b9 03       		.uleb128 0x3
 1303 07ba 0A       		.byte	0xa
 1304 07bb C301     		.2byte	0x1c3
 1305 07bd 00       		.byte	0
 1306 07be 00       		.byte	0
 1307 07bf 18       		.uleb128 0x18
 1308 07c0 51060000 		.4byte	0x651
 1309 07c4 56000000 		.4byte	.LBB20
 1310 07c8 08000000 		.4byte	.LBE20-.LBB20
 1311 07cc 01       		.byte	0x1
 1312 07cd 89       		.byte	0x89
 1313 07ce D8070000 		.4byte	0x7d8
 1314 07d2 1C       		.uleb128 0x1c
 1315 07d3 62060000 		.4byte	0x662
 1316 07d7 00       		.byte	0
 1317 07d8 1D       		.uleb128 0x1d
 1318 07d9 80000000 		.4byte	.LVL16
 1319 07dd 81060000 		.4byte	0x681
 1320 07e1 00       		.byte	0
 1321 07e2 12       		.uleb128 0x12
 1322 07e3 04       		.byte	0x4
 1323 07e4 97000000 		.4byte	0x97
 1324 07e8 16       		.uleb128 0x16
 1325 07e9 98080000 		.4byte	.LASF140
 1326 07ed 01       		.byte	0x1
 1327 07ee 43       		.byte	0x43
 1328 07ef DA050000 		.4byte	0x5da
 1329 07f3 00000000 		.4byte	.LFB64
 1330 07f7 3C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 45


 1331 07fb 01       		.uleb128 0x1
 1332 07fc 9C       		.byte	0x9c
 1333 07fd 89080000 		.4byte	0x889
 1334 0801 17       		.uleb128 0x17
 1335 0802 B4010000 		.4byte	.LASF141
 1336 0806 01       		.byte	0x1
 1337 0807 43       		.byte	0x43
 1338 0808 B8000000 		.4byte	0xb8
 1339 080c 4D010000 		.4byte	.LLST8
 1340 0810 17       		.uleb128 0x17
 1341 0811 07010000 		.4byte	.LASF142
 1342 0815 01       		.byte	0x1
 1343 0816 43       		.byte	0x43
 1344 0817 89080000 		.4byte	0x889
 1345 081b 92010000 		.4byte	.LLST9
 1346 081f 15       		.uleb128 0x15
 1347 0820 C3090000 		.4byte	.LASF138
 1348 0824 01       		.byte	0x1
 1349 0825 45       		.byte	0x45
 1350 0826 DA050000 		.4byte	0x5da
 1351 082a D4010000 		.4byte	.LLST10
 1352 082e 1E       		.uleb128 0x1e
 1353 082f 0A000000 		.4byte	.LBB22
 1354 0833 26000000 		.4byte	.LBE22-.LBB22
 1355 0837 1F       		.uleb128 0x1f
 1356 0838 3B080000 		.4byte	.LASF136
 1357 083c 01       		.byte	0x1
 1358 083d 49       		.byte	0x49
 1359 083e B8000000 		.4byte	0xb8
 1360 0842 01       		.uleb128 0x1
 1361 0843 50       		.byte	0x50
 1362 0844 1F       		.uleb128 0x1f
 1363 0845 29050000 		.4byte	.LASF137
 1364 0849 01       		.byte	0x1
 1365 084a 4A       		.byte	0x4a
 1366 084b 97000000 		.4byte	0x97
 1367 084f 02       		.uleb128 0x2
 1368 0850 91       		.byte	0x91
 1369 0851 6F       		.sleb128 -17
 1370 0852 20       		.uleb128 0x20
 1371 0853 1C000000 		.4byte	.LBB23
 1372 0857 14000000 		.4byte	.LBE23-.LBB23
 1373 085b 6F080000 		.4byte	0x86f
 1374 085f 15       		.uleb128 0x15
 1375 0860 12000000 		.4byte	.LASF143
 1376 0864 01       		.byte	0x1
 1377 0865 52       		.byte	0x52
 1378 0866 B8000000 		.4byte	0xb8
 1379 086a 12020000 		.4byte	.LLST11
 1380 086e 00       		.byte	0
 1381 086f 1A       		.uleb128 0x1a
 1382 0870 18000000 		.4byte	.LVL26
 1383 0874 C8060000 		.4byte	0x6c8
 1384 0878 1B       		.uleb128 0x1b
 1385 0879 01       		.uleb128 0x1
 1386 087a 50       		.byte	0x50
 1387 087b 04       		.uleb128 0x4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 46


 1388 087c 75       		.byte	0x75
 1389 087d 00       		.sleb128 0
 1390 087e 33       		.byte	0x33
 1391 087f 25       		.byte	0x25
 1392 0880 1B       		.uleb128 0x1b
 1393 0881 01       		.uleb128 0x1
 1394 0882 51       		.byte	0x51
 1395 0883 02       		.uleb128 0x2
 1396 0884 7D       		.byte	0x7d
 1397 0885 07       		.sleb128 7
 1398 0886 00       		.byte	0
 1399 0887 00       		.byte	0
 1400 0888 00       		.byte	0
 1401 0889 12       		.uleb128 0x12
 1402 088a 04       		.byte	0x4
 1403 088b 6F060000 		.4byte	0x66f
 1404 088f 21       		.uleb128 0x21
 1405 0890 B5050000 		.4byte	.LASF151
 1406 0894 01       		.byte	0x1
 1407 0895 B4       		.byte	0xb4
 1408 0896 B8000000 		.4byte	0xb8
 1409 089a 00000000 		.4byte	.LFB66
 1410 089e 0C000000 		.4byte	.LFE66-.LFB66
 1411 08a2 01       		.uleb128 0x1
 1412 08a3 9C       		.byte	0x9c
 1413 08a4 1F       		.uleb128 0x1f
 1414 08a5 DB090000 		.4byte	.LASF144
 1415 08a9 01       		.byte	0x1
 1416 08aa 1F       		.byte	0x1f
 1417 08ab CA000000 		.4byte	0xca
 1418 08af 05       		.uleb128 0x5
 1419 08b0 03       		.byte	0x3
 1420 08b1 00000000 		.4byte	opcode
 1421 08b5 22       		.uleb128 0x22
 1422 08b6 E7050000 		.4byte	.LASF152
 1423 08ba 07       		.byte	0x7
 1424 08bb A7       		.byte	0xa7
 1425 08bc C0080000 		.4byte	0x8c0
 1426 08c0 12       		.uleb128 0x12
 1427 08c1 04       		.byte	0x4
 1428 08c2 C6080000 		.4byte	0x8c6
 1429 08c6 06       		.uleb128 0x6
 1430 08c7 6E050000 		.4byte	0x56e
 1431 08cb 23       		.uleb128 0x23
 1432 08cc 56080000 		.4byte	.LASF145
 1433 08d0 56080000 		.4byte	.LASF145
 1434 08d4 08       		.byte	0x8
 1435 08d5 9203     		.2byte	0x392
 1436 08d7 23       		.uleb128 0x23
 1437 08d8 C1070000 		.4byte	.LASF146
 1438 08dc C1070000 		.4byte	.LASF146
 1439 08e0 02       		.byte	0x2
 1440 08e1 9C01     		.2byte	0x19c
 1441 08e3 00       		.byte	0
 1442              		.section	.debug_abbrev,"",%progbits
 1443              	.Ldebug_abbrev0:
 1444 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 47


 1445 0001 11       		.uleb128 0x11
 1446 0002 01       		.byte	0x1
 1447 0003 25       		.uleb128 0x25
 1448 0004 0E       		.uleb128 0xe
 1449 0005 13       		.uleb128 0x13
 1450 0006 0B       		.uleb128 0xb
 1451 0007 03       		.uleb128 0x3
 1452 0008 0E       		.uleb128 0xe
 1453 0009 1B       		.uleb128 0x1b
 1454 000a 0E       		.uleb128 0xe
 1455 000b 55       		.uleb128 0x55
 1456 000c 17       		.uleb128 0x17
 1457 000d 11       		.uleb128 0x11
 1458 000e 01       		.uleb128 0x1
 1459 000f 10       		.uleb128 0x10
 1460 0010 17       		.uleb128 0x17
 1461 0011 00       		.byte	0
 1462 0012 00       		.byte	0
 1463 0013 02       		.uleb128 0x2
 1464 0014 24       		.uleb128 0x24
 1465 0015 00       		.byte	0
 1466 0016 0B       		.uleb128 0xb
 1467 0017 0B       		.uleb128 0xb
 1468 0018 3E       		.uleb128 0x3e
 1469 0019 0B       		.uleb128 0xb
 1470 001a 03       		.uleb128 0x3
 1471 001b 0E       		.uleb128 0xe
 1472 001c 00       		.byte	0
 1473 001d 00       		.byte	0
 1474 001e 03       		.uleb128 0x3
 1475 001f 16       		.uleb128 0x16
 1476 0020 00       		.byte	0
 1477 0021 03       		.uleb128 0x3
 1478 0022 0E       		.uleb128 0xe
 1479 0023 3A       		.uleb128 0x3a
 1480 0024 0B       		.uleb128 0xb
 1481 0025 3B       		.uleb128 0x3b
 1482 0026 0B       		.uleb128 0xb
 1483 0027 49       		.uleb128 0x49
 1484 0028 13       		.uleb128 0x13
 1485 0029 00       		.byte	0
 1486 002a 00       		.byte	0
 1487 002b 04       		.uleb128 0x4
 1488 002c 24       		.uleb128 0x24
 1489 002d 00       		.byte	0
 1490 002e 0B       		.uleb128 0xb
 1491 002f 0B       		.uleb128 0xb
 1492 0030 3E       		.uleb128 0x3e
 1493 0031 0B       		.uleb128 0xb
 1494 0032 03       		.uleb128 0x3
 1495 0033 08       		.uleb128 0x8
 1496 0034 00       		.byte	0
 1497 0035 00       		.byte	0
 1498 0036 05       		.uleb128 0x5
 1499 0037 35       		.uleb128 0x35
 1500 0038 00       		.byte	0
 1501 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 48


 1502 003a 13       		.uleb128 0x13
 1503 003b 00       		.byte	0
 1504 003c 00       		.byte	0
 1505 003d 06       		.uleb128 0x6
 1506 003e 26       		.uleb128 0x26
 1507 003f 00       		.byte	0
 1508 0040 49       		.uleb128 0x49
 1509 0041 13       		.uleb128 0x13
 1510 0042 00       		.byte	0
 1511 0043 00       		.byte	0
 1512 0044 07       		.uleb128 0x7
 1513 0045 01       		.uleb128 0x1
 1514 0046 01       		.byte	0x1
 1515 0047 49       		.uleb128 0x49
 1516 0048 13       		.uleb128 0x13
 1517 0049 01       		.uleb128 0x1
 1518 004a 13       		.uleb128 0x13
 1519 004b 00       		.byte	0
 1520 004c 00       		.byte	0
 1521 004d 08       		.uleb128 0x8
 1522 004e 21       		.uleb128 0x21
 1523 004f 00       		.byte	0
 1524 0050 49       		.uleb128 0x49
 1525 0051 13       		.uleb128 0x13
 1526 0052 2F       		.uleb128 0x2f
 1527 0053 0B       		.uleb128 0xb
 1528 0054 00       		.byte	0
 1529 0055 00       		.byte	0
 1530 0056 09       		.uleb128 0x9
 1531 0057 13       		.uleb128 0x13
 1532 0058 01       		.byte	0x1
 1533 0059 0B       		.uleb128 0xb
 1534 005a 0B       		.uleb128 0xb
 1535 005b 3A       		.uleb128 0x3a
 1536 005c 0B       		.uleb128 0xb
 1537 005d 3B       		.uleb128 0x3b
 1538 005e 0B       		.uleb128 0xb
 1539 005f 01       		.uleb128 0x1
 1540 0060 13       		.uleb128 0x13
 1541 0061 00       		.byte	0
 1542 0062 00       		.byte	0
 1543 0063 0A       		.uleb128 0xa
 1544 0064 0D       		.uleb128 0xd
 1545 0065 00       		.byte	0
 1546 0066 03       		.uleb128 0x3
 1547 0067 0E       		.uleb128 0xe
 1548 0068 3A       		.uleb128 0x3a
 1549 0069 0B       		.uleb128 0xb
 1550 006a 3B       		.uleb128 0x3b
 1551 006b 0B       		.uleb128 0xb
 1552 006c 49       		.uleb128 0x49
 1553 006d 13       		.uleb128 0x13
 1554 006e 38       		.uleb128 0x38
 1555 006f 0B       		.uleb128 0xb
 1556 0070 00       		.byte	0
 1557 0071 00       		.byte	0
 1558 0072 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 49


 1559 0073 16       		.uleb128 0x16
 1560 0074 00       		.byte	0
 1561 0075 03       		.uleb128 0x3
 1562 0076 0E       		.uleb128 0xe
 1563 0077 3A       		.uleb128 0x3a
 1564 0078 0B       		.uleb128 0xb
 1565 0079 3B       		.uleb128 0x3b
 1566 007a 05       		.uleb128 0x5
 1567 007b 49       		.uleb128 0x49
 1568 007c 13       		.uleb128 0x13
 1569 007d 00       		.byte	0
 1570 007e 00       		.byte	0
 1571 007f 0C       		.uleb128 0xc
 1572 0080 04       		.uleb128 0x4
 1573 0081 01       		.byte	0x1
 1574 0082 0B       		.uleb128 0xb
 1575 0083 0B       		.uleb128 0xb
 1576 0084 49       		.uleb128 0x49
 1577 0085 13       		.uleb128 0x13
 1578 0086 3A       		.uleb128 0x3a
 1579 0087 0B       		.uleb128 0xb
 1580 0088 3B       		.uleb128 0x3b
 1581 0089 0B       		.uleb128 0xb
 1582 008a 01       		.uleb128 0x1
 1583 008b 13       		.uleb128 0x13
 1584 008c 00       		.byte	0
 1585 008d 00       		.byte	0
 1586 008e 0D       		.uleb128 0xd
 1587 008f 28       		.uleb128 0x28
 1588 0090 00       		.byte	0
 1589 0091 03       		.uleb128 0x3
 1590 0092 0E       		.uleb128 0xe
 1591 0093 1C       		.uleb128 0x1c
 1592 0094 0B       		.uleb128 0xb
 1593 0095 00       		.byte	0
 1594 0096 00       		.byte	0
 1595 0097 0E       		.uleb128 0xe
 1596 0098 28       		.uleb128 0x28
 1597 0099 00       		.byte	0
 1598 009a 03       		.uleb128 0x3
 1599 009b 0E       		.uleb128 0xe
 1600 009c 1C       		.uleb128 0x1c
 1601 009d 06       		.uleb128 0x6
 1602 009e 00       		.byte	0
 1603 009f 00       		.byte	0
 1604 00a0 0F       		.uleb128 0xf
 1605 00a1 04       		.uleb128 0x4
 1606 00a2 01       		.byte	0x1
 1607 00a3 0B       		.uleb128 0xb
 1608 00a4 0B       		.uleb128 0xb
 1609 00a5 49       		.uleb128 0x49
 1610 00a6 13       		.uleb128 0x13
 1611 00a7 3A       		.uleb128 0x3a
 1612 00a8 0B       		.uleb128 0xb
 1613 00a9 3B       		.uleb128 0x3b
 1614 00aa 05       		.uleb128 0x5
 1615 00ab 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 50


 1616 00ac 13       		.uleb128 0x13
 1617 00ad 00       		.byte	0
 1618 00ae 00       		.byte	0
 1619 00af 10       		.uleb128 0x10
 1620 00b0 2E       		.uleb128 0x2e
 1621 00b1 01       		.byte	0x1
 1622 00b2 03       		.uleb128 0x3
 1623 00b3 0E       		.uleb128 0xe
 1624 00b4 3A       		.uleb128 0x3a
 1625 00b5 0B       		.uleb128 0xb
 1626 00b6 3B       		.uleb128 0x3b
 1627 00b7 05       		.uleb128 0x5
 1628 00b8 27       		.uleb128 0x27
 1629 00b9 19       		.uleb128 0x19
 1630 00ba 49       		.uleb128 0x49
 1631 00bb 13       		.uleb128 0x13
 1632 00bc 20       		.uleb128 0x20
 1633 00bd 0B       		.uleb128 0xb
 1634 00be 01       		.uleb128 0x1
 1635 00bf 13       		.uleb128 0x13
 1636 00c0 00       		.byte	0
 1637 00c1 00       		.byte	0
 1638 00c2 11       		.uleb128 0x11
 1639 00c3 05       		.uleb128 0x5
 1640 00c4 00       		.byte	0
 1641 00c5 03       		.uleb128 0x3
 1642 00c6 0E       		.uleb128 0xe
 1643 00c7 3A       		.uleb128 0x3a
 1644 00c8 0B       		.uleb128 0xb
 1645 00c9 3B       		.uleb128 0x3b
 1646 00ca 05       		.uleb128 0x5
 1647 00cb 49       		.uleb128 0x49
 1648 00cc 13       		.uleb128 0x13
 1649 00cd 00       		.byte	0
 1650 00ce 00       		.byte	0
 1651 00cf 12       		.uleb128 0x12
 1652 00d0 0F       		.uleb128 0xf
 1653 00d1 00       		.byte	0
 1654 00d2 0B       		.uleb128 0xb
 1655 00d3 0B       		.uleb128 0xb
 1656 00d4 49       		.uleb128 0x49
 1657 00d5 13       		.uleb128 0x13
 1658 00d6 00       		.byte	0
 1659 00d7 00       		.byte	0
 1660 00d8 13       		.uleb128 0x13
 1661 00d9 26       		.uleb128 0x26
 1662 00da 00       		.byte	0
 1663 00db 00       		.byte	0
 1664 00dc 00       		.byte	0
 1665 00dd 14       		.uleb128 0x14
 1666 00de 2E       		.uleb128 0x2e
 1667 00df 01       		.byte	0x1
 1668 00e0 03       		.uleb128 0x3
 1669 00e1 0E       		.uleb128 0xe
 1670 00e2 3A       		.uleb128 0x3a
 1671 00e3 0B       		.uleb128 0xb
 1672 00e4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 51


 1673 00e5 0B       		.uleb128 0xb
 1674 00e6 27       		.uleb128 0x27
 1675 00e7 19       		.uleb128 0x19
 1676 00e8 49       		.uleb128 0x49
 1677 00e9 13       		.uleb128 0x13
 1678 00ea 11       		.uleb128 0x11
 1679 00eb 01       		.uleb128 0x1
 1680 00ec 12       		.uleb128 0x12
 1681 00ed 06       		.uleb128 0x6
 1682 00ee 40       		.uleb128 0x40
 1683 00ef 18       		.uleb128 0x18
 1684 00f0 9742     		.uleb128 0x2117
 1685 00f2 19       		.uleb128 0x19
 1686 00f3 01       		.uleb128 0x1
 1687 00f4 13       		.uleb128 0x13
 1688 00f5 00       		.byte	0
 1689 00f6 00       		.byte	0
 1690 00f7 15       		.uleb128 0x15
 1691 00f8 34       		.uleb128 0x34
 1692 00f9 00       		.byte	0
 1693 00fa 03       		.uleb128 0x3
 1694 00fb 0E       		.uleb128 0xe
 1695 00fc 3A       		.uleb128 0x3a
 1696 00fd 0B       		.uleb128 0xb
 1697 00fe 3B       		.uleb128 0x3b
 1698 00ff 0B       		.uleb128 0xb
 1699 0100 49       		.uleb128 0x49
 1700 0101 13       		.uleb128 0x13
 1701 0102 02       		.uleb128 0x2
 1702 0103 17       		.uleb128 0x17
 1703 0104 00       		.byte	0
 1704 0105 00       		.byte	0
 1705 0106 16       		.uleb128 0x16
 1706 0107 2E       		.uleb128 0x2e
 1707 0108 01       		.byte	0x1
 1708 0109 3F       		.uleb128 0x3f
 1709 010a 19       		.uleb128 0x19
 1710 010b 03       		.uleb128 0x3
 1711 010c 0E       		.uleb128 0xe
 1712 010d 3A       		.uleb128 0x3a
 1713 010e 0B       		.uleb128 0xb
 1714 010f 3B       		.uleb128 0x3b
 1715 0110 0B       		.uleb128 0xb
 1716 0111 27       		.uleb128 0x27
 1717 0112 19       		.uleb128 0x19
 1718 0113 49       		.uleb128 0x49
 1719 0114 13       		.uleb128 0x13
 1720 0115 11       		.uleb128 0x11
 1721 0116 01       		.uleb128 0x1
 1722 0117 12       		.uleb128 0x12
 1723 0118 06       		.uleb128 0x6
 1724 0119 40       		.uleb128 0x40
 1725 011a 18       		.uleb128 0x18
 1726 011b 9742     		.uleb128 0x2117
 1727 011d 19       		.uleb128 0x19
 1728 011e 01       		.uleb128 0x1
 1729 011f 13       		.uleb128 0x13
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 52


 1730 0120 00       		.byte	0
 1731 0121 00       		.byte	0
 1732 0122 17       		.uleb128 0x17
 1733 0123 05       		.uleb128 0x5
 1734 0124 00       		.byte	0
 1735 0125 03       		.uleb128 0x3
 1736 0126 0E       		.uleb128 0xe
 1737 0127 3A       		.uleb128 0x3a
 1738 0128 0B       		.uleb128 0xb
 1739 0129 3B       		.uleb128 0x3b
 1740 012a 0B       		.uleb128 0xb
 1741 012b 49       		.uleb128 0x49
 1742 012c 13       		.uleb128 0x13
 1743 012d 02       		.uleb128 0x2
 1744 012e 17       		.uleb128 0x17
 1745 012f 00       		.byte	0
 1746 0130 00       		.byte	0
 1747 0131 18       		.uleb128 0x18
 1748 0132 1D       		.uleb128 0x1d
 1749 0133 01       		.byte	0x1
 1750 0134 31       		.uleb128 0x31
 1751 0135 13       		.uleb128 0x13
 1752 0136 11       		.uleb128 0x11
 1753 0137 01       		.uleb128 0x1
 1754 0138 12       		.uleb128 0x12
 1755 0139 06       		.uleb128 0x6
 1756 013a 58       		.uleb128 0x58
 1757 013b 0B       		.uleb128 0xb
 1758 013c 59       		.uleb128 0x59
 1759 013d 0B       		.uleb128 0xb
 1760 013e 01       		.uleb128 0x1
 1761 013f 13       		.uleb128 0x13
 1762 0140 00       		.byte	0
 1763 0141 00       		.byte	0
 1764 0142 19       		.uleb128 0x19
 1765 0143 05       		.uleb128 0x5
 1766 0144 00       		.byte	0
 1767 0145 31       		.uleb128 0x31
 1768 0146 13       		.uleb128 0x13
 1769 0147 02       		.uleb128 0x2
 1770 0148 17       		.uleb128 0x17
 1771 0149 00       		.byte	0
 1772 014a 00       		.byte	0
 1773 014b 1A       		.uleb128 0x1a
 1774 014c 898201   		.uleb128 0x4109
 1775 014f 01       		.byte	0x1
 1776 0150 11       		.uleb128 0x11
 1777 0151 01       		.uleb128 0x1
 1778 0152 31       		.uleb128 0x31
 1779 0153 13       		.uleb128 0x13
 1780 0154 00       		.byte	0
 1781 0155 00       		.byte	0
 1782 0156 1B       		.uleb128 0x1b
 1783 0157 8A8201   		.uleb128 0x410a
 1784 015a 00       		.byte	0
 1785 015b 02       		.uleb128 0x2
 1786 015c 18       		.uleb128 0x18
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 53


 1787 015d 9142     		.uleb128 0x2111
 1788 015f 18       		.uleb128 0x18
 1789 0160 00       		.byte	0
 1790 0161 00       		.byte	0
 1791 0162 1C       		.uleb128 0x1c
 1792 0163 05       		.uleb128 0x5
 1793 0164 00       		.byte	0
 1794 0165 31       		.uleb128 0x31
 1795 0166 13       		.uleb128 0x13
 1796 0167 00       		.byte	0
 1797 0168 00       		.byte	0
 1798 0169 1D       		.uleb128 0x1d
 1799 016a 898201   		.uleb128 0x4109
 1800 016d 00       		.byte	0
 1801 016e 11       		.uleb128 0x11
 1802 016f 01       		.uleb128 0x1
 1803 0170 31       		.uleb128 0x31
 1804 0171 13       		.uleb128 0x13
 1805 0172 00       		.byte	0
 1806 0173 00       		.byte	0
 1807 0174 1E       		.uleb128 0x1e
 1808 0175 0B       		.uleb128 0xb
 1809 0176 01       		.byte	0x1
 1810 0177 11       		.uleb128 0x11
 1811 0178 01       		.uleb128 0x1
 1812 0179 12       		.uleb128 0x12
 1813 017a 06       		.uleb128 0x6
 1814 017b 00       		.byte	0
 1815 017c 00       		.byte	0
 1816 017d 1F       		.uleb128 0x1f
 1817 017e 34       		.uleb128 0x34
 1818 017f 00       		.byte	0
 1819 0180 03       		.uleb128 0x3
 1820 0181 0E       		.uleb128 0xe
 1821 0182 3A       		.uleb128 0x3a
 1822 0183 0B       		.uleb128 0xb
 1823 0184 3B       		.uleb128 0x3b
 1824 0185 0B       		.uleb128 0xb
 1825 0186 49       		.uleb128 0x49
 1826 0187 13       		.uleb128 0x13
 1827 0188 02       		.uleb128 0x2
 1828 0189 18       		.uleb128 0x18
 1829 018a 00       		.byte	0
 1830 018b 00       		.byte	0
 1831 018c 20       		.uleb128 0x20
 1832 018d 0B       		.uleb128 0xb
 1833 018e 01       		.byte	0x1
 1834 018f 11       		.uleb128 0x11
 1835 0190 01       		.uleb128 0x1
 1836 0191 12       		.uleb128 0x12
 1837 0192 06       		.uleb128 0x6
 1838 0193 01       		.uleb128 0x1
 1839 0194 13       		.uleb128 0x13
 1840 0195 00       		.byte	0
 1841 0196 00       		.byte	0
 1842 0197 21       		.uleb128 0x21
 1843 0198 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 54


 1844 0199 00       		.byte	0
 1845 019a 3F       		.uleb128 0x3f
 1846 019b 19       		.uleb128 0x19
 1847 019c 03       		.uleb128 0x3
 1848 019d 0E       		.uleb128 0xe
 1849 019e 3A       		.uleb128 0x3a
 1850 019f 0B       		.uleb128 0xb
 1851 01a0 3B       		.uleb128 0x3b
 1852 01a1 0B       		.uleb128 0xb
 1853 01a2 27       		.uleb128 0x27
 1854 01a3 19       		.uleb128 0x19
 1855 01a4 49       		.uleb128 0x49
 1856 01a5 13       		.uleb128 0x13
 1857 01a6 11       		.uleb128 0x11
 1858 01a7 01       		.uleb128 0x1
 1859 01a8 12       		.uleb128 0x12
 1860 01a9 06       		.uleb128 0x6
 1861 01aa 40       		.uleb128 0x40
 1862 01ab 18       		.uleb128 0x18
 1863 01ac 9742     		.uleb128 0x2117
 1864 01ae 19       		.uleb128 0x19
 1865 01af 00       		.byte	0
 1866 01b0 00       		.byte	0
 1867 01b1 22       		.uleb128 0x22
 1868 01b2 34       		.uleb128 0x34
 1869 01b3 00       		.byte	0
 1870 01b4 03       		.uleb128 0x3
 1871 01b5 0E       		.uleb128 0xe
 1872 01b6 3A       		.uleb128 0x3a
 1873 01b7 0B       		.uleb128 0xb
 1874 01b8 3B       		.uleb128 0x3b
 1875 01b9 0B       		.uleb128 0xb
 1876 01ba 49       		.uleb128 0x49
 1877 01bb 13       		.uleb128 0x13
 1878 01bc 3F       		.uleb128 0x3f
 1879 01bd 19       		.uleb128 0x19
 1880 01be 3C       		.uleb128 0x3c
 1881 01bf 19       		.uleb128 0x19
 1882 01c0 00       		.byte	0
 1883 01c1 00       		.byte	0
 1884 01c2 23       		.uleb128 0x23
 1885 01c3 2E       		.uleb128 0x2e
 1886 01c4 00       		.byte	0
 1887 01c5 3F       		.uleb128 0x3f
 1888 01c6 19       		.uleb128 0x19
 1889 01c7 3C       		.uleb128 0x3c
 1890 01c8 19       		.uleb128 0x19
 1891 01c9 6E       		.uleb128 0x6e
 1892 01ca 0E       		.uleb128 0xe
 1893 01cb 03       		.uleb128 0x3
 1894 01cc 0E       		.uleb128 0xe
 1895 01cd 3A       		.uleb128 0x3a
 1896 01ce 0B       		.uleb128 0xb
 1897 01cf 3B       		.uleb128 0x3b
 1898 01d0 05       		.uleb128 0x5
 1899 01d1 00       		.byte	0
 1900 01d2 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 55


 1901 01d3 00       		.byte	0
 1902              		.section	.debug_loc,"",%progbits
 1903              	.Ldebug_loc0:
 1904              	.LLST0:
 1905 0000 16000000 		.4byte	.LVL0
 1906 0004 1A000000 		.4byte	.LVL1
 1907 0008 0600     		.2byte	0x6
 1908 000a 0C       		.byte	0xc
 1909 000b FF006A00 		.4byte	0x6a00ff
 1910 000f 9F       		.byte	0x9f
 1911 0010 1C000000 		.4byte	.LVL2
 1912 0014 38000000 		.4byte	.LFE67
 1913 0018 0100     		.2byte	0x1
 1914 001a 50       		.byte	0x50
 1915 001b 00000000 		.4byte	0
 1916 001f 00000000 		.4byte	0
 1917              	.LLST1:
 1918 0023 00000000 		.4byte	.LVL3
 1919 0027 08000000 		.4byte	.LVL5
 1920 002b 0100     		.2byte	0x1
 1921 002d 50       		.byte	0x50
 1922 002e 08000000 		.4byte	.LVL5
 1923 0032 86000000 		.4byte	.LVL17
 1924 0036 0400     		.2byte	0x4
 1925 0038 F3       		.byte	0xf3
 1926 0039 01       		.uleb128 0x1
 1927 003a 50       		.byte	0x50
 1928 003b 9F       		.byte	0x9f
 1929 003c 86000000 		.4byte	.LVL17
 1930 0040 88000000 		.4byte	.LVL18
 1931 0044 0100     		.2byte	0x1
 1932 0046 50       		.byte	0x50
 1933 0047 88000000 		.4byte	.LVL18
 1934 004b A4000000 		.4byte	.LFE65
 1935 004f 0400     		.2byte	0x4
 1936 0051 F3       		.byte	0xf3
 1937 0052 01       		.uleb128 0x1
 1938 0053 50       		.byte	0x50
 1939 0054 9F       		.byte	0x9f
 1940 0055 00000000 		.4byte	0
 1941 0059 00000000 		.4byte	0
 1942              	.LLST2:
 1943 005d 00000000 		.4byte	.LVL3
 1944 0061 20000000 		.4byte	.LVL7
 1945 0065 0100     		.2byte	0x1
 1946 0067 51       		.byte	0x51
 1947 0068 20000000 		.4byte	.LVL7
 1948 006c 86000000 		.4byte	.LVL17
 1949 0070 0100     		.2byte	0x1
 1950 0072 54       		.byte	0x54
 1951 0073 86000000 		.4byte	.LVL17
 1952 0077 8A000000 		.4byte	.LVL19
 1953 007b 0100     		.2byte	0x1
 1954 007d 51       		.byte	0x51
 1955 007e 8A000000 		.4byte	.LVL19
 1956 0082 8C000000 		.4byte	.LVL21
 1957 0086 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 56


 1958 0088 54       		.byte	0x54
 1959 0089 8C000000 		.4byte	.LVL21
 1960 008d A4000000 		.4byte	.LFE65
 1961 0091 0400     		.2byte	0x4
 1962 0093 F3       		.byte	0xf3
 1963 0094 01       		.uleb128 0x1
 1964 0095 51       		.byte	0x51
 1965 0096 9F       		.byte	0x9f
 1966 0097 00000000 		.4byte	0
 1967 009b 00000000 		.4byte	0
 1968              	.LLST3:
 1969 009f 04000000 		.4byte	.LVL4
 1970 00a3 78000000 		.4byte	.LVL14
 1971 00a7 0600     		.2byte	0x6
 1972 00a9 0C       		.byte	0xc
 1973 00aa 03006A00 		.4byte	0x6a0003
 1974 00ae 9F       		.byte	0x9f
 1975 00af 78000000 		.4byte	.LVL14
 1976 00b3 7C000000 		.4byte	.LVL15
 1977 00b7 0200     		.2byte	0x2
 1978 00b9 30       		.byte	0x30
 1979 00ba 9F       		.byte	0x9f
 1980 00bb 7C000000 		.4byte	.LVL15
 1981 00bf 80000000 		.4byte	.LVL16
 1982 00c3 0600     		.2byte	0x6
 1983 00c5 0C       		.byte	0xc
 1984 00c6 03006A00 		.4byte	0x6a0003
 1985 00ca 9F       		.byte	0x9f
 1986 00cb 80000000 		.4byte	.LVL16
 1987 00cf 86000000 		.4byte	.LVL17
 1988 00d3 0100     		.2byte	0x1
 1989 00d5 50       		.byte	0x50
 1990 00d6 86000000 		.4byte	.LVL17
 1991 00da 8C000000 		.4byte	.LVL20
 1992 00de 0600     		.2byte	0x6
 1993 00e0 0C       		.byte	0xc
 1994 00e1 03006A00 		.4byte	0x6a0003
 1995 00e5 9F       		.byte	0x9f
 1996 00e6 8C000000 		.4byte	.LVL20
 1997 00ea A4000000 		.4byte	.LFE65
 1998 00ee 0100     		.2byte	0x1
 1999 00f0 50       		.byte	0x50
 2000 00f1 00000000 		.4byte	0
 2001 00f5 00000000 		.4byte	0
 2002              	.LLST4:
 2003 00f9 12000000 		.4byte	.LVL6
 2004 00fd 2E000000 		.4byte	.LVL9
 2005 0101 0200     		.2byte	0x2
 2006 0103 30       		.byte	0x30
 2007 0104 9F       		.byte	0x9f
 2008 0105 00000000 		.4byte	0
 2009 0109 00000000 		.4byte	0
 2010              	.LLST5:
 2011 010d 2E000000 		.4byte	.LVL9
 2012 0111 36000000 		.4byte	.LVL10
 2013 0115 0600     		.2byte	0x6
 2014 0117 03       		.byte	0x3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 57


 2015 0118 00000000 		.4byte	opcode
 2016 011c 9F       		.byte	0x9f
 2017 011d 00000000 		.4byte	0
 2018 0121 00000000 		.4byte	0
 2019              	.LLST6:
 2020 0125 2E000000 		.4byte	.LVL9
 2021 0129 36000000 		.4byte	.LVL10
 2022 012d 0200     		.2byte	0x2
 2023 012f 31       		.byte	0x31
 2024 0130 9F       		.byte	0x9f
 2025 0131 00000000 		.4byte	0
 2026 0135 00000000 		.4byte	0
 2027              	.LLST7:
 2028 0139 3A000000 		.4byte	.LVL11
 2029 013d 56000000 		.4byte	.LVL13
 2030 0141 0200     		.2byte	0x2
 2031 0143 30       		.byte	0x30
 2032 0144 9F       		.byte	0x9f
 2033 0145 00000000 		.4byte	0
 2034 0149 00000000 		.4byte	0
 2035              	.LLST8:
 2036 014d 00000000 		.4byte	.LVL22
 2037 0151 0C000000 		.4byte	.LVL24
 2038 0155 0100     		.2byte	0x1
 2039 0157 50       		.byte	0x50
 2040 0158 0C000000 		.4byte	.LVL24
 2041 015c 20000000 		.4byte	.LVL27
 2042 0160 0100     		.2byte	0x1
 2043 0162 55       		.byte	0x55
 2044 0163 20000000 		.4byte	.LVL27
 2045 0167 30000000 		.4byte	.LVL28
 2046 016b 0400     		.2byte	0x4
 2047 016d F3       		.byte	0xf3
 2048 016e 01       		.uleb128 0x1
 2049 016f 50       		.byte	0x50
 2050 0170 9F       		.byte	0x9f
 2051 0171 30000000 		.4byte	.LVL28
 2052 0175 32000000 		.4byte	.LVL29
 2053 0179 0100     		.2byte	0x1
 2054 017b 50       		.byte	0x50
 2055 017c 32000000 		.4byte	.LVL29
 2056 0180 3C000000 		.4byte	.LFE64
 2057 0184 0400     		.2byte	0x4
 2058 0186 F3       		.byte	0xf3
 2059 0187 01       		.uleb128 0x1
 2060 0188 50       		.byte	0x50
 2061 0189 9F       		.byte	0x9f
 2062 018a 00000000 		.4byte	0
 2063 018e 00000000 		.4byte	0
 2064              	.LLST9:
 2065 0192 00000000 		.4byte	.LVL22
 2066 0196 14000000 		.4byte	.LVL25
 2067 019a 0100     		.2byte	0x1
 2068 019c 51       		.byte	0x51
 2069 019d 14000000 		.4byte	.LVL25
 2070 01a1 30000000 		.4byte	.LVL28
 2071 01a5 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 58


 2072 01a7 54       		.byte	0x54
 2073 01a8 30000000 		.4byte	.LVL28
 2074 01ac 32000000 		.4byte	.LVL29
 2075 01b0 0100     		.2byte	0x1
 2076 01b2 51       		.byte	0x51
 2077 01b3 32000000 		.4byte	.LVL29
 2078 01b7 34000000 		.4byte	.LVL30
 2079 01bb 0100     		.2byte	0x1
 2080 01bd 54       		.byte	0x54
 2081 01be 34000000 		.4byte	.LVL30
 2082 01c2 3C000000 		.4byte	.LFE64
 2083 01c6 0400     		.2byte	0x4
 2084 01c8 F3       		.byte	0xf3
 2085 01c9 01       		.uleb128 0x1
 2086 01ca 51       		.byte	0x51
 2087 01cb 9F       		.byte	0x9f
 2088 01cc 00000000 		.4byte	0
 2089 01d0 00000000 		.4byte	0
 2090              	.LLST10:
 2091 01d4 08000000 		.4byte	.LVL23
 2092 01d8 18000000 		.4byte	.LVL26
 2093 01dc 0600     		.2byte	0x6
 2094 01de 0C       		.byte	0xc
 2095 01df 03006A00 		.4byte	0x6a0003
 2096 01e3 9F       		.byte	0x9f
 2097 01e4 18000000 		.4byte	.LVL26
 2098 01e8 30000000 		.4byte	.LVL28
 2099 01ec 0100     		.2byte	0x1
 2100 01ee 50       		.byte	0x50
 2101 01ef 30000000 		.4byte	.LVL28
 2102 01f3 32000000 		.4byte	.LVL29
 2103 01f7 0600     		.2byte	0x6
 2104 01f9 0C       		.byte	0xc
 2105 01fa 03006A00 		.4byte	0x6a0003
 2106 01fe 9F       		.byte	0x9f
 2107 01ff 32000000 		.4byte	.LVL29
 2108 0203 3C000000 		.4byte	.LFE64
 2109 0207 0100     		.2byte	0x1
 2110 0209 50       		.byte	0x50
 2111 020a 00000000 		.4byte	0
 2112 020e 00000000 		.4byte	0
 2113              	.LLST11:
 2114 0212 20000000 		.4byte	.LVL27
 2115 0216 30000000 		.4byte	.LVL28
 2116 021a 0100     		.2byte	0x1
 2117 021c 55       		.byte	0x55
 2118 021d 00000000 		.4byte	0
 2119 0221 00000000 		.4byte	0
 2120              		.section	.debug_aranges,"",%progbits
 2121 0000 34000000 		.4byte	0x34
 2122 0004 0200     		.2byte	0x2
 2123 0006 00000000 		.4byte	.Ldebug_info0
 2124 000a 04       		.byte	0x4
 2125 000b 00       		.byte	0
 2126 000c 0000     		.2byte	0
 2127 000e 0000     		.2byte	0
 2128 0010 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 59


 2129 0014 38000000 		.4byte	.LFE67-.LFB67
 2130 0018 00000000 		.4byte	.LFB65
 2131 001c A4000000 		.4byte	.LFE65-.LFB65
 2132 0020 00000000 		.4byte	.LFB64
 2133 0024 3C000000 		.4byte	.LFE64-.LFB64
 2134 0028 00000000 		.4byte	.LFB66
 2135 002c 0C000000 		.4byte	.LFE66-.LFB66
 2136 0030 00000000 		.4byte	0
 2137 0034 00000000 		.4byte	0
 2138              		.section	.debug_ranges,"",%progbits
 2139              	.Ldebug_ranges0:
 2140 0000 00000000 		.4byte	.LFB67
 2141 0004 38000000 		.4byte	.LFE67
 2142 0008 00000000 		.4byte	.LFB65
 2143 000c A4000000 		.4byte	.LFE65
 2144 0010 00000000 		.4byte	.LFB64
 2145 0014 3C000000 		.4byte	.LFE64
 2146 0018 00000000 		.4byte	.LFB66
 2147 001c 0C000000 		.4byte	.LFE66
 2148 0020 00000000 		.4byte	0
 2149 0024 00000000 		.4byte	0
 2150              		.section	.debug_line,"",%progbits
 2151              	.Ldebug_line0:
 2152 0000 52030000 		.section	.debug_str,"MS",%progbits,1
 2152      0200BA02 
 2152      00000201 
 2152      FB0E0D00 
 2152      01010101 
 2153              	.LASF62:
 2154 0000 70726F74 		.ascii	"protBusMasterMask\000"
 2154      4275734D 
 2154      61737465 
 2154      724D6173 
 2154      6B00
 2155              	.LASF143:
 2156 0012 62697450 		.ascii	"bitPos\000"
 2156      6F7300
 2157              	.LASF72:
 2158 0019 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 2158      6843746C 
 2158      4D61696E 
 2158      57733346 
 2158      72657100 
 2159              	.LASF94:
 2160 002d 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 2160      50727443 
 2160      6667496E 
 2160      4F666673 
 2160      657400
 2161              	.LASF112:
 2162 0040 6970634C 		.ascii	"ipcLockStatusOffset\000"
 2162      6F636B53 
 2162      74617475 
 2162      734F6666 
 2162      73657400 
 2163              	.LASF38:
 2164 0054 63727970 		.ascii	"cryptoVersion\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 60


 2164      746F5665 
 2164      7273696F 
 2164      6E00
 2165              	.LASF126:
 2166 0062 43595F49 		.ascii	"CY_IPC_DRV_ERROR\000"
 2166      50435F44 
 2166      52565F45 
 2166      52524F52 
 2166      00
 2167              	.LASF34:
 2168 0073 70617373 		.ascii	"passBase\000"
 2168      42617365 
 2168      00
 2169              	.LASF47:
 2170 007c 63707573 		.ascii	"cpussIpcIrqNr\000"
 2170      73497063 
 2170      4972714E 
 2170      7200
 2171              	.LASF3:
 2172 008a 5F5F7569 		.ascii	"__uint8_t\000"
 2172      6E74385F 
 2172      7400
 2173              	.LASF148:
 2174 0094 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 2174      72617465 
 2174      645F536F 
 2174      75726365 
 2174      5C50536F 
 2175 00c2 65667573 		.ascii	"efuse\\cy_efuse.c\000"
 2175      655C6379 
 2175      5F656675 
 2175      73652E63 
 2175      00
 2176              	.LASF91:
 2177 00d3 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 2177      44697632 
 2177      345F3543 
 2177      746C4F66 
 2177      66736574 
 2178              	.LASF98:
 2179 00e8 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 2179      73436D34 
 2179      436C6F63 
 2179      6B43746C 
 2179      4F666673 
 2180              	.LASF19:
 2181 00ff 52454C45 		.ascii	"RELEASE\000"
 2181      41534500 
 2182              	.LASF142:
 2183 0107 62697456 		.ascii	"bitVal\000"
 2183      616C00
 2184              	.LASF27:
 2185 010e 63707573 		.ascii	"cpussBase\000"
 2185      73426173 
 2185      6500
 2186              	.LASF76:
 2187 0118 64774368 		.ascii	"dwChCtlPrioPos\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 61


 2187      43746C50 
 2187      72696F50 
 2187      6F7300
 2188              	.LASF56:
 2189 0127 70657269 		.ascii	"periClockNr\000"
 2189      436C6F63 
 2189      6B4E7200 
 2190              	.LASF11:
 2191 0133 6C6F6E67 		.ascii	"long long unsigned int\000"
 2191      206C6F6E 
 2191      6720756E 
 2191      7369676E 
 2191      65642069 
 2192              	.LASF80:
 2193 014a 70657269 		.ascii	"periTrCmdOffset\000"
 2193      5472436D 
 2193      644F6666 
 2193      73657400 
 2194              	.LASF104:
 2195 015a 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2195      73537973 
 2195      5469636B 
 2195      43746C4F 
 2195      66667365 
 2196              	.LASF65:
 2197 0170 666C6173 		.ascii	"flashPipeRequired\000"
 2197      68506970 
 2197      65526571 
 2197      75697265 
 2197      6400
 2198              	.LASF30:
 2199 0182 75646242 		.ascii	"udbBase\000"
 2199      61736500 
 2200              	.LASF69:
 2201 018a 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2201      6843746C 
 2201      4D61696E 
 2201      57733046 
 2201      72657100 
 2202              	.LASF14:
 2203 019e 696E7431 		.ascii	"int16_t\000"
 2203      365F7400 
 2204              	.LASF10:
 2205 01a6 6C6F6E67 		.ascii	"long long int\000"
 2205      206C6F6E 
 2205      6720696E 
 2205      7400
 2206              	.LASF141:
 2207 01b4 6269744E 		.ascii	"bitNum\000"
 2207      756D00
 2208              	.LASF85:
 2209 01bb 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2209      44697643 
 2209      6D645479 
 2209      70655365 
 2209      6C506F73 
 2210              	.LASF18:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 62


 2211 01d0 41435155 		.ascii	"ACQUIRE\000"
 2211      49524500 
 2212              	.LASF102:
 2213 01d8 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2213      73547269 
 2213      6D52616D 
 2213      43746C4F 
 2213      66667365 
 2214              	.LASF43:
 2215 01ee 69706356 		.ascii	"ipcVersion\000"
 2215      65727369 
 2215      6F6E00
 2216              	.LASF105:
 2217 01f9 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2217      73436D30 
 2217      4E6D6943 
 2217      746C4F66 
 2217      66736574 
 2218              	.LASF129:
 2219 020e 6E6F7469 		.ascii	"notifyEventIntr\000"
 2219      66794576 
 2219      656E7449 
 2219      6E747200 
 2220              	.LASF32:
 2221 021e 6873696F 		.ascii	"hsiomBase\000"
 2221      6D426173 
 2221      6500
 2222              	.LASF7:
 2223 0228 6C6F6E67 		.ascii	"long int\000"
 2223      20696E74 
 2223      00
 2224              	.LASF63:
 2225 0231 63727970 		.ascii	"cryptoMemSize\000"
 2225      746F4D65 
 2225      6D53697A 
 2225      6500
 2226              	.LASF29:
 2227 023f 70657269 		.ascii	"periBase\000"
 2227      42617365 
 2227      00
 2228              	.LASF61:
 2229 0248 73797350 		.ascii	"sysPmSimoPresent\000"
 2229      6D53696D 
 2229      6F507265 
 2229      73656E74 
 2229      00
 2230              	.LASF51:
 2231 0259 63707573 		.ascii	"cpussFmIrq\000"
 2231      73466D49 
 2231      727100
 2232              	.LASF117:
 2233 0264 646F7562 		.ascii	"double\000"
 2233      6C6500
 2234              	.LASF90:
 2235 026b 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2235      44697631 
 2235      365F3543 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 63


 2235      746C4F66 
 2235      66736574 
 2236              	.LASF54:
 2237 0280 73727373 		.ascii	"srssNumPll\000"
 2237      4E756D50 
 2237      6C6C00
 2238              	.LASF88:
 2239 028b 70657269 		.ascii	"periDiv8CtlOffset\000"
 2239      44697638 
 2239      43746C4F 
 2239      66667365 
 2239      7400
 2240              	.LASF6:
 2241 029d 73686F72 		.ascii	"short unsigned int\000"
 2241      7420756E 
 2241      7369676E 
 2241      65642069 
 2241      6E7400
 2242              	.LASF149:
 2243 02b0 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 2243      635C4461 
 2243      74615C56 
 2243      53636F64 
 2243      655C4749 
 2244 02dd 65735C45 		.ascii	"es\\Example_HelloWorld\\Onethinx_Creator.cydsn\000"
 2244      78616D70 
 2244      6C655F48 
 2244      656C6C6F 
 2244      576F726C 
 2245              	.LASF95:
 2246 030a 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2246      50727443 
 2246      66674F75 
 2246      744F6666 
 2246      73657400 
 2247              	.LASF28:
 2248 031e 666C6173 		.ascii	"flashcBase\000"
 2248      68634261 
 2248      736500
 2249              	.LASF8:
 2250 0329 5F5F7569 		.ascii	"__uint32_t\000"
 2250      6E743332 
 2250      5F7400
 2251              	.LASF58:
 2252 0334 70617373 		.ascii	"passSarChannels\000"
 2252      53617243 
 2252      68616E6E 
 2252      656C7300 
 2253              	.LASF22:
 2254 0344 4C4F434B 		.ascii	"LOCK_STATUS\000"
 2254      5F535441 
 2254      54555300 
 2255              	.LASF4:
 2256 0350 5F5F696E 		.ascii	"__int16_t\000"
 2256      7431365F 
 2256      7400
 2257              	.LASF125:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 64


 2258 035a 43595F49 		.ascii	"CY_IPC_DRV_SUCCESS\000"
 2258      50435F44 
 2258      52565F53 
 2258      55434345 
 2258      535300
 2259              	.LASF101:
 2260 036d 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2260      73436D34 
 2260      50777243 
 2260      746C4F66 
 2260      66736574 
 2261              	.LASF96:
 2262 0382 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2262      50727443 
 2262      66675369 
 2262      6F4F6666 
 2262      73657400 
 2263              	.LASF48:
 2264 0396 63707573 		.ascii	"cpussDwChNr\000"
 2264      73447743 
 2264      684E7200 
 2265              	.LASF12:
 2266 03a2 756E7369 		.ascii	"unsigned int\000"
 2266      676E6564 
 2266      20696E74 
 2266      00
 2267              	.LASF15:
 2268 03af 75696E74 		.ascii	"uint16_t\000"
 2268      31365F74 
 2268      00
 2269              	.LASF114:
 2270 03b8 63686172 		.ascii	"char_t\000"
 2270      5F7400
 2271              	.LASF81:
 2272 03bf 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2272      5472436D 
 2272      64477253 
 2272      656C4D73 
 2272      6B00
 2273              	.LASF9:
 2274 03d1 6C6F6E67 		.ascii	"long unsigned int\000"
 2274      20756E73 
 2274      69676E65 
 2274      6420696E 
 2274      7400
 2275              	.LASF120:
 2276 03e3 43595F45 		.ascii	"CY_EFUSE_INVALID_FUSE_ADDR\000"
 2276      46555345 
 2276      5F494E56 
 2276      414C4944 
 2276      5F465553 
 2277              	.LASF46:
 2278 03fe 63707573 		.ascii	"cpussIpcNr\000"
 2278      73497063 
 2278      4E7200
 2279              	.LASF33:
 2280 0409 6770696F 		.ascii	"gpioBase\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 65


 2280      42617365 
 2280      00
 2281              	.LASF71:
 2282 0412 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2282      6843746C 
 2282      4D61696E 
 2282      57733246 
 2282      72657100 
 2283              	.LASF82:
 2284 0426 70657269 		.ascii	"periTrGrOffset\000"
 2284      54724772 
 2284      4F666673 
 2284      657400
 2285              	.LASF109:
 2286 0435 63707573 		.ascii	"cpussRam1Ctl0\000"
 2286      7352616D 
 2286      3143746C 
 2286      3000
 2287              	.LASF21:
 2288 0443 44415441 		.ascii	"DATA\000"
 2288      00
 2289              	.LASF127:
 2290 0448 63795F65 		.ascii	"cy_en_ipcdrv_status_t\000"
 2290      6E5F6970 
 2290      63647276 
 2290      5F737461 
 2290      7475735F 
 2291              	.LASF83:
 2292 045e 70657269 		.ascii	"periTrGrSize\000"
 2292      54724772 
 2292      53697A65 
 2292      00
 2293              	.LASF41:
 2294 046b 6770696F 		.ascii	"gpioVersion\000"
 2294      56657273 
 2294      696F6E00 
 2295              	.LASF113:
 2296 0477 63795F73 		.ascii	"cy_stc_device_t\000"
 2296      74635F64 
 2296      65766963 
 2296      655F7400 
 2297              	.LASF20:
 2298 0487 4E4F5449 		.ascii	"NOTIFY\000"
 2298      465900
 2299              	.LASF59:
 2300 048e 65704D6F 		.ascii	"epMonitorNr\000"
 2300      6E69746F 
 2300      724E7200 
 2301              	.LASF106:
 2302 049a 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2302      73436D34 
 2302      4E6D6943 
 2302      746C4F66 
 2302      66736574 
 2303              	.LASF37:
 2304 04af 63707573 		.ascii	"cpussVersion\000"
 2304      73566572 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 66


 2304      73696F6E 
 2304      00
 2305              	.LASF97:
 2306 04bc 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2306      73436D30 
 2306      436C6F63 
 2306      6B43746C 
 2306      4F666673 
 2307              	.LASF36:
 2308 04d3 63727970 		.ascii	"cryptoBase\000"
 2308      746F4261 
 2308      736500
 2309              	.LASF128:
 2310 04de 62617365 		.ascii	"base\000"
 2310      00
 2311              	.LASF44:
 2312 04e3 70657269 		.ascii	"periVersion\000"
 2312      56657273 
 2312      696F6E00 
 2313              	.LASF100:
 2314 04ef 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2314      73436D30 
 2314      53746174 
 2314      75734F66 
 2314      66736574 
 2315              	.LASF17:
 2316 0504 73697A65 		.ascii	"sizetype\000"
 2316      74797065 
 2316      00
 2317              	.LASF74:
 2318 050d 64774368 		.ascii	"dwChOffset\000"
 2318      4F666673 
 2318      657400
 2319              	.LASF49:
 2320 0518 63707573 		.ascii	"cpussFlashPaSize\000"
 2320      73466C61 
 2320      73685061 
 2320      53697A65 
 2320      00
 2321              	.LASF137:
 2322 0529 62797465 		.ascii	"byteVal\000"
 2322      56616C00 
 2323              	.LASF87:
 2324 0531 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2324      44697643 
 2324      6D645061 
 2324      54797065 
 2324      53656C50 
 2325              	.LASF110:
 2326 0548 63707573 		.ascii	"cpussRam2Ctl0\000"
 2326      7352616D 
 2326      3243746C 
 2326      3000
 2327              	.LASF123:
 2328 0556 43595F45 		.ascii	"CY_EFUSE_ERR_UNC\000"
 2328      46555345 
 2328      5F455252 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 67


 2328      5F554E43 
 2328      00
 2329              	.LASF78:
 2330 0567 64775374 		.ascii	"dwStatusChIdxPos\000"
 2330      61747573 
 2330      43684964 
 2330      78506F73 
 2330      00
 2331              	.LASF60:
 2332 0578 75646250 		.ascii	"udbPresent\000"
 2332      72657365 
 2332      6E7400
 2333              	.LASF31:
 2334 0583 70726F74 		.ascii	"protBase\000"
 2334      42617365 
 2334      00
 2335              	.LASF40:
 2336 058c 666C6173 		.ascii	"flashcVersion\000"
 2336      68635665 
 2336      7273696F 
 2336      6E00
 2337              	.LASF57:
 2338 059a 736D6966 		.ascii	"smifDeviceNr\000"
 2338      44657669 
 2338      63654E72 
 2338      00
 2339              	.LASF111:
 2340 05a7 69706353 		.ascii	"ipcStructSize\000"
 2340      74727563 
 2340      7453697A 
 2340      6500
 2341              	.LASF151:
 2342 05b5 43795F45 		.ascii	"Cy_EFUSE_GetExternalStatus\000"
 2342      46555345 
 2342      5F476574 
 2342      45787465 
 2342      726E616C 
 2343              	.LASF116:
 2344 05d0 666C6F61 		.ascii	"float\000"
 2344      7400
 2345              	.LASF79:
 2346 05d6 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2346      61747573 
 2346      43684964 
 2346      784D736B 
 2346      00
 2347              	.LASF152:
 2348 05e7 63795F64 		.ascii	"cy_device\000"
 2348      65766963 
 2348      6500
 2349              	.LASF107:
 2350 05f1 63707573 		.ascii	"cpussRomCtl\000"
 2350      73526F6D 
 2350      43746C00 
 2351              	.LASF150:
 2352 05fd 50726F63 		.ascii	"ProcessOpcode\000"
 2352      6573734F 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 68


 2352      70636F64 
 2352      6500
 2353              	.LASF77:
 2354 060b 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2354      43746C50 
 2354      7265656D 
 2354      70746162 
 2354      6C65506F 
 2355              	.LASF130:
 2356 0621 6D736750 		.ascii	"msgPtr\000"
 2356      747200
 2357              	.LASF131:
 2358 0628 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgPtr\000"
 2358      50435F44 
 2358      72765F53 
 2358      656E644D 
 2358      73675074 
 2359              	.LASF132:
 2360 063e 43795F49 		.ascii	"Cy_IPC_Drv_IsLockAcquired\000"
 2360      50435F44 
 2360      72765F49 
 2360      734C6F63 
 2360      6B416371 
 2361              	.LASF133:
 2362 0658 5F426F6F 		.ascii	"_Bool\000"
 2362      6C00
 2363              	.LASF1:
 2364 065e 756E7369 		.ascii	"unsigned char\000"
 2364      676E6564 
 2364      20636861 
 2364      7200
 2365              	.LASF118:
 2366 066c 43595F45 		.ascii	"CY_EFUSE_SUCCESS\000"
 2366      46555345 
 2366      5F535543 
 2366      43455353 
 2366      00
 2367              	.LASF73:
 2368 067d 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2368      6843746C 
 2368      4D61696E 
 2368      57733446 
 2368      72657100 
 2369              	.LASF0:
 2370 0691 73686F72 		.ascii	"short int\000"
 2370      7420696E 
 2370      7400
 2371              	.LASF24:
 2372 069b 4950435F 		.ascii	"IPC_STRUCT_V1_Type\000"
 2372      53545255 
 2372      43545F56 
 2372      315F5479 
 2372      706500
 2373              	.LASF23:
 2374 06ae 52455345 		.ascii	"RESERVED\000"
 2374      52564544 
 2374      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 69


 2375              	.LASF84:
 2376 06b7 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2376      44697643 
 2376      6D644469 
 2376      7653656C 
 2376      4D736B00 
 2377              	.LASF55:
 2378 06cb 73727373 		.ascii	"srssNumHfroot\000"
 2378      4E756D48 
 2378      66726F6F 
 2378      7400
 2379              	.LASF68:
 2380 06d9 666C6173 		.ascii	"flashEraseDelay\000"
 2380      68457261 
 2380      73654465 
 2380      6C617900 
 2381              	.LASF16:
 2382 06e9 75696E74 		.ascii	"uint32_t\000"
 2382      33325F74 
 2382      00
 2383              	.LASF122:
 2384 06f2 43595F45 		.ascii	"CY_EFUSE_IPC_BUSY\000"
 2384      46555345 
 2384      5F495043 
 2384      5F425553 
 2384      5900
 2385              	.LASF147:
 2386 0704 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2386      43313120 
 2386      352E342E 
 2386      31203230 
 2386      31363036 
 2387 0737 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2387      20726576 
 2387      6973696F 
 2387      6E203233 
 2387      37373135 
 2388 076a 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2388      67202D66 
 2388      66756E63 
 2388      74696F6E 
 2388      2D736563 
 2389              	.LASF26:
 2390 0796 6C6F6E67 		.ascii	"long double\000"
 2390      20646F75 
 2390      626C6500 
 2391              	.LASF115:
 2392 07a2 63686172 		.ascii	"char\000"
 2392      00
 2393              	.LASF45:
 2394 07a7 70726F74 		.ascii	"protVersion\000"
 2394      56657273 
 2394      696F6E00 
 2395              	.LASF108:
 2396 07b3 63707573 		.ascii	"cpussRam0Ctl0\000"
 2396      7352616D 
 2396      3043746C 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 70


 2396      3000
 2397              	.LASF146:
 2398 07c1 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgWord\000"
 2398      50435F44 
 2398      72765F53 
 2398      656E644D 
 2398      7367576F 
 2399              	.LASF5:
 2400 07d8 5F5F7569 		.ascii	"__uint16_t\000"
 2400      6E743136 
 2400      5F7400
 2401              	.LASF121:
 2402 07e3 43595F45 		.ascii	"CY_EFUSE_BAD_PARAM\000"
 2402      46555345 
 2402      5F424144 
 2402      5F504152 
 2402      414D00
 2403              	.LASF89:
 2404 07f6 70657269 		.ascii	"periDiv16CtlOffset\000"
 2404      44697631 
 2404      3643746C 
 2404      4F666673 
 2404      657400
 2405              	.LASF119:
 2406 0809 43595F45 		.ascii	"CY_EFUSE_INVALID_PROTECTION\000"
 2406      46555345 
 2406      5F494E56 
 2406      414C4944 
 2406      5F50524F 
 2407              	.LASF42:
 2408 0825 6873696F 		.ascii	"hsiomVersion\000"
 2408      6D566572 
 2408      73696F6E 
 2408      00
 2409              	.LASF135:
 2410 0832 69706349 		.ascii	"ipcIndex\000"
 2410      6E646578 
 2410      00
 2411              	.LASF136:
 2412 083b 6F666673 		.ascii	"offset\000"
 2412      657400
 2413              	.LASF70:
 2414 0842 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2414      6843746C 
 2414      4D61696E 
 2414      57733146 
 2414      72657100 
 2415              	.LASF145:
 2416 0856 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 2416      79734C69 
 2416      625F4173 
 2416      73657274 
 2416      4661696C 
 2417              	.LASF75:
 2418 086d 64774368 		.ascii	"dwChSize\000"
 2418      53697A65 
 2418      00
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 71


 2419              	.LASF124:
 2420 0876 63795F65 		.ascii	"cy_en_efuse_status_t\000"
 2420      6E5F6566 
 2420      7573655F 
 2420      73746174 
 2420      75735F74 
 2421              	.LASF50:
 2422 088b 63707573 		.ascii	"cpussIpc0Irq\000"
 2422      73497063 
 2422      30497271 
 2422      00
 2423              	.LASF140:
 2424 0898 43795F45 		.ascii	"Cy_EFUSE_GetEfuseBit\000"
 2424      46555345 
 2424      5F476574 
 2424      45667573 
 2424      65426974 
 2425              	.LASF93:
 2426 08ad 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2426      50727443 
 2426      66674F66 
 2426      66736574 
 2426      00
 2427              	.LASF2:
 2428 08be 7369676E 		.ascii	"signed char\000"
 2428      65642063 
 2428      68617200 
 2429              	.LASF52:
 2430 08ca 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2430      734E6F74 
 2430      436F6E6E 
 2430      65637465 
 2430      64497271 
 2431              	.LASF66:
 2432 08df 666C6173 		.ascii	"flashWriteDelay\000"
 2432      68577269 
 2432      74654465 
 2432      6C617900 
 2433              	.LASF139:
 2434 08ef 43795F45 		.ascii	"Cy_EFUSE_GetEfuseByte\000"
 2434      46555345 
 2434      5F476574 
 2434      45667573 
 2434      65427974 
 2435              	.LASF13:
 2436 0905 75696E74 		.ascii	"uint8_t\000"
 2436      385F7400 
 2437              	.LASF99:
 2438 090d 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2438      73436D34 
 2438      53746174 
 2438      75734F66 
 2438      66736574 
 2439              	.LASF92:
 2440 0922 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2440      50727449 
 2440      6E747243 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccGkJMUd.s 			page 72


 2440      66674F66 
 2440      66736574 
 2441              	.LASF134:
 2442 0937 43795F49 		.ascii	"Cy_IPC_Drv_GetIpcBaseAddress\000"
 2442      50435F44 
 2442      72765F47 
 2442      65744970 
 2442      63426173 
 2443              	.LASF103:
 2444 0954 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2444      73547269 
 2444      6D526F6D 
 2444      43746C4F 
 2444      66667365 
 2445              	.LASF25:
 2446 096a 4950435F 		.ascii	"IPC_STRUCT_Type\000"
 2446      53545255 
 2446      43545F54 
 2446      79706500 
 2447              	.LASF53:
 2448 097a 73727373 		.ascii	"srssNumClkpath\000"
 2448      4E756D43 
 2448      6C6B7061 
 2448      746800
 2449              	.LASF39:
 2450 0989 64775665 		.ascii	"dwVersion\000"
 2450      7273696F 
 2450      6E00
 2451              	.LASF35:
 2452 0993 69706342 		.ascii	"ipcBase\000"
 2452      61736500 
 2453              	.LASF86:
 2454 099b 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2454      44697643 
 2454      6D645061 
 2454      44697653 
 2454      656C506F 
 2455              	.LASF67:
 2456 09b1 666C6173 		.ascii	"flashProgramDelay\000"
 2456      6850726F 
 2456      6772616D 
 2456      44656C61 
 2456      7900
 2457              	.LASF138:
 2458 09c3 72657375 		.ascii	"result\000"
 2458      6C7400
 2459              	.LASF64:
 2460 09ca 666C6173 		.ascii	"flashRwwRequired\000"
 2460      68527777 
 2460      52657175 
 2460      69726564 
 2460      00
 2461              	.LASF144:
 2462 09db 6F70636F 		.ascii	"opcode\000"
 2462      646500
 2463              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
