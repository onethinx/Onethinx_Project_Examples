ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_ipc_drv.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_IPC_Drv_LockRelease,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_IPC_Drv_LockRelease
  22              		.code	16
  23              		.thumb_func
  24              		.type	Cy_IPC_Drv_LockRelease, %function
  25              	Cy_IPC_Drv_LockRelease:
  26              	.LFB64:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_drv.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \file cy_ipc_drv.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *  \brief
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   IPC Driver - This source file contains the low-level driver code for
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   the IPC hardware.
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ********************************************************************************
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** #include "cy_ipc_drv.h"
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_LockRelease
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function is used to release an IPC channel from the locked state.
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function also has a way to specify through a parameter which IPC
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * interrupts must be notified during the release event.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param releaseEventIntr
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Bit encoded list of IPC interrupt lines that are triggered by a release event.
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return   Status of the operation
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC channel
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       was released.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR: The IPC channel was not acquired before the
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       function call.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgPtr
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type* base, uint32_t releaseEventIntr)
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
  42              	.LBB16:
  43              	.LBB17:
  44              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_drv.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \file cy_ipc_drv.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Provides an API declaration of the IPC driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifndef CY_IPC_DRV_H
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_H
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The inter-processor communication (IPC) driver provides a safe and reliable
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * method to transfer data between CPUs. Hardware locking ensures that only one
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 3


  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * device can acquire and transfer data at a time so no data is lost or
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * overwritten by asynchronous processes or CPUs.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Include either cy_ipc_pipe.h or cy_ipc_sema.h. Alternatively include cy_pdl.h 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are three parts to the API:
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Driver-level (DRV) API - used internally by Semaphore and Pipe levels
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Pipe-level (PIPE) API - establishes a communication channel between
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       processors
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Semaphore-level (SEMA) API - enables users to set and clear flags to
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       synchronize operations.
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Firmware does not need to use the DRV API. It can implement IPC functionality
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * entirely with the PIPE and SEMA APIs.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_background Background
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC is implemented in hardware as a collection of individual communication
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channels, each with a set of 32-bit registers. The IPC design implements a set
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of interrupts that enable each processor to notify the other that data is
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * available, or has been processed. There is also a locking mechanism that
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * allows only one CPU to gain access at a time.
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Driver-level API manages each channel's registers to implement IPC
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functionality. For information on the IPC registers, see the IPC chapter of
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the Technical Reference Manual (TRM).
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * At the hardware level, communication is a five-step process.
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sending processor acquires a channel
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  It puts data into the channel
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sender generates a notify event (interrupt)
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor identifies the sender and retrieves the data
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor generates a release event (interrupt)
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_driver.png
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * These transactions are handled transparently by the DRV-level API. Use the
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * PIPE and SEMA layers of the API to implement communication in your application.
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The data transferred is limited to a single 32-bit value. As implemented by
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the PIPE API, that value is a pointer to a data structure of arbitrary size
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and complexity.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_overview Overview
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Pipe is the key element in the PDL design. A pipe is typically a
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * full-duplex communication channel between CPU cores. A pipe allows a single
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * conduit to transfer messages or data to and from multiple processes or CPUs.
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe has two endpoints, one on each core. Each endpoint contains a dedicated
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channel and an interrupt. IPC channels 0-7 and IPC interrupts 0-7 are
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * reserved for system use.
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The pipe also contains the number of clients it supports, and for each client
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a callback function. So the pipe can service a number of clients, each with a
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * separate callback function, on either endpoint. The number of clients a pipe
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * supports is the sum of each endpoint's clients.
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 4


  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This design enables any number of processes on the sending core to put
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * arbitrary data into a single pipe. The first element of that data is the
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID of the client that should handle the data.
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An interrupt notifies the receiving core that data is available. The receiving
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * core parses the data to identify the client, and then dispatches the event to
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the appropriate client via the client callback function. An interrupt notifies
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the sending core that the receiver is finished. In this way a single pipe can
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * manage arbitrary data transfers between cores with data flowing in either
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * direction.
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_ints.png
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The application can use semaphores to control access to shared resources, as
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * required by the application's logic.
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The PDL provides specific files that set up default IPC functionality.
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * They are system_psoc6.h, system_psoc6_cm0plus.c and system_psoc6_cm4.c. You 
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * can modify these files based on the requirements of your design. 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * If you use PSoC Creator as a development environment, it will not overwrite 
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * your changes when you generate the application or build your code.
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_pipe_layer PIPE layer
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe is a communication channel between two endpoints. PSoC 6 devices support
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * 16 IPC channels, and 16 IPC interrupts, each numbered 0-15. IPC Channels 0-7
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and IPC interrupts 0-7 are reserved for system use. Channels 8-15 and
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupts 8-15 are available for application use.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A full duplex pipe uses two IPC channels, one per endpoint. Each endpoint
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * specifies all the information required to process a message (either sent or
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * received). Each endpoint is configured to use an IPC channel, and an IPC
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupt. Common practice is to use the interrupt with the same number as
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel. However, IPC Interrupts are not directly associated with the
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channels, so any channel can use any interrupt.  Any IPC channel can
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * trigger 0, 1 or all the IPC interrupts at once, depending on the Notify or
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release masks used.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * It is also possible to set up a one-directional pipe, using a single IPC
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel. In this design one processor is always the sender, and the other is
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * always the receiver. However, there are still two endpoints.
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe supports an arbitrary number of clients with an array of callback
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functions, one per client. The client ID is the index number into the array
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * for the client. After a pipe is configured and initialized, the application
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * calls Cy_IPC_Pipe_RegisterCallback() once per client to register each client's
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function. Multiple clients can use the same callback function. The
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * endpoints in a pipe share the callback array.
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Use Cy_IPC_Pipe_SendMessage() to send data. You specify both the "to" and
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * "from" endpoints, and a callback function to be used when the data transfer is
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * complete. The data is a 32-bit void pointer. The data pointed to is arbitrary,
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and can be an array, a structure, or a location in memory. The only limitation
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * is that the first element of the data must be a 32-bit unsigned word containing
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a client ID number. The ID number is the index into the callback array.
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 5


 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * When a message is sent, the receiving endpoint's interrupt handler is called.
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The ISR can perform any task required by the design. However, as part of its
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function it calls \ref Cy_IPC_Pipe_ExecCallback. This function retrieves the
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID from the data and calls the associated callback function.
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The user-supplied callback function handles the data in whatever way is
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * appropriate based on the application logic.
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * After the callback function is returned by the receiver, it invokes the release
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function defined by the sender of the message.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_sema_layer SEMA Layer
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A semaphore is a flag the application uses to control access to a shared
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * resource. The SEMA-level API uses an IPC channel to implement
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * semaphores. Startup code sets up a default semaphore system. The
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * default system creates an array of 128 semaphores (four 32-bit values).
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Semaphores 0-15 are reserved for system use. See
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Configuration Considerations - SEMA.
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Functions are available to initialize the semaphore system, to set or
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * clear a semaphore, or to get the semaphore's current status. Application
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * logic uses SEMA functions to relate a particular semaphore to a particular
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource, and set, clear, or check the flag when accessing the
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_cypipe Configuration Considerations - CYPIPE
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are none. The startup files set up the required CYPIPE for system
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * use. Do not modify the CYPIPE. It uses IPC channels 5 and 6 to implement full
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * duplex communication between cores. See System Interrupt (SysInt) for background.
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To create your own pipe (<b>USRPIPE</b>) you should edit startup files
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and take 4 steps:
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define a pipe callbacks processing interrupt handler
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      (similar to <b>Cy_SysIpcPipeIsrCm0</b> or <b>Cy_SysIpcPipeIsrCm4</b>)
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define a callbacks array (similar to <b>systemIpcPipeSysCbArray</b>)
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define your pipe configuration with a cy_stc_ipc_pipe_config_t type structure
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      (similar to <b>systemIpcPipeConfigCm0</b> and <b>systemIpcPipeConfigCm4</b>)
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Call Cy_IPC_Pipe_Init() from each core to initialize your pipe (similar
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      to call in the <b>SystemInit</b>)
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_sema Configuration Considerations - SEMA
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Startup code calls Cy_IPC_Sema_Init() with default values to set up semaphore 
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functionality. By default the semaphore system uses IPC channel 4, and 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * creates 128 semaphores. Do <b>not</b> change the IPC channel. 
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * You can change the number of semaphores.
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To change the number of semaphores, modify this line of code in system_psoc6.h.
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \code
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * #define CY_IPC_SEMA_COUNT               (uint32_t)(128u)
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \endcode
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Startup also declares array ipcSemaArray to hold the semaphore
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * flags based on the size defined for this symbol. Use increments of 32. You
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * must have at least 32 semaphores. Semaphores 0-15 are reserved for
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 6


 195:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * system use. Your application can use semaphores greater than 15.
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_more_information More Information
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * If the default startup file is not used, or SystemInit() is not called in your 
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * project, call the following three functions prior to executing any flash or 
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * EmEEPROM write or erase operation:
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Sema_Init()
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Config()
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Init()
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_Flash_Init()
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * See the technical reference manual(TRM) for more information on the IPC.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_MISRA MISRA-C Compliance
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>MISRA Rule</th>
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Class (Required/Advisory)</th>
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Description</th>
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th style="width: 50%;">Description of Deviation(s)</th>
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>10.3</td>
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>R</td>
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The value of a complex expression of integer type shall be cast
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         only to a type of the same signedness that is no wider than the underlying
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         type of the expression.</td>
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from integer to enumeration value is used to calculate
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         the interrupt vector source from the integer number of the IPC interrupt
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         structure, so there is no way to avoid this cast.</td>
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>11.4</td>
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A</td>
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A cast should not be performed between a pointer to the void to a
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         pointer to the object type.</td>
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from the void to pointer and vice versa is used to transmit
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         data via the \ref group_ipc channel by exchanging the pointer. We
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         exchange only one pointer, so there is no way to avoid this cast.</td>
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_changelog Changelog
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td rowspan="3">1.30</td>
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Driver library directory-structure simplification.</td>
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Moved the Cy_IPC_SystemSemaInit(), Cy_IPC_SystemPipeInit() functions implementation from 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Changed IPC driver configuration method from compile time to run time.</td>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 7


 252:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added register access layer. Use register access macros instead
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         of direct register access using dereferenced pointers.</td>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Makes register access device-independent, so that the PDL does 
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         not need to be recompiled for each supported part number.</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.20</td>
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added \ref Cy_IPC_Pipe_ExecuteCallback function.
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         Updated documentation about user pipe initialization.
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     </td>
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Interface improvement, documentation update</td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10.1</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Updated description of the \ref Cy_IPC_Pipe_Init,
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         \ref Cy_IPC_Pipe_EndpointInit, \ref Cy_IPC_Sema_Set functions.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         Added / updated code snippets.
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Documentation update and clarification</td>
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10</td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added support for more IPC structures</td>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>New device support</td>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.0</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Initial version</td>
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td></td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_drv IPC driver layer (IPC_DRV)
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The functions of this layer are used in the higher IPC levels
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   (Semaphores and Pipes).
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Users are not expected to call any of these IPC functions directly (cy_ipc_drv.h). 
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Instead include either of cy_ipc_sema.h or cy_ipc_pipe.h. 
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Alternatively include cy_pdl.h to get access to all functions and declarations in the PDL.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_macros Macros
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Macro definitions are used in the driver
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_functions Functions
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Functions are used in the driver
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_data_structures Data Structures
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Data structures are used in the driver
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_enums Enumerated Types
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Enumerations are used in the driver
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \}
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_sema IPC semaphores layer (IPC_SEMA)
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_pipe IPC pipes layer (IPC_PIPE)
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 8


 309:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Include files                                                              */
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_device.h"
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_device_headers.h"
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_syslib.h"
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include <stddef.h>
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_macros
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver major version */
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MAJOR       1
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver minor version */
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MINOR       30
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Defines a value to indicate that no notification events are needed */
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_NO_NOTIFICATION         (uint32_t)(0x00000000ul)
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Error Code constants */
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID CY_PDL_DRV_ID(0x22u)  /**< Software PDL driver ID for IPC */
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function status codes */
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_INFO    (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_INFO )
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function warning return values */
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_WARNING (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_WARNING)
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function error return values */
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_ERROR   (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_ERROR)
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Converts the IPC interrupt channel number to interrupt vector */
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_INTR_NUM_TO_VECT(x)         ((int32_t) cy_device->cpussIpc0Irq + (x))
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_macros */
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* end of definition in device.h */
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #if (CY_CPU_CORTEX_M0P)
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM0
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #else
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM4
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #endif  /* (CY_CPU_CORTEX_M0P) */
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \endcond */
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_enums
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 9


 366:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a list of ENUMs used for function return status.
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** typedef enum
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was successfully executed */
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_SUCCESS      = (0x00u),
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was not executed due to an error.
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         Typical conditions for the error explained
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         in the function description */
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_ERROR        = ( CY_IPC_ID_ERROR + 1ul),
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** } cy_en_ipcdrv_status_t;
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_enums */
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifdef __cplusplus
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** extern "C" {
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #endif
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue);
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base);
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask);
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask);
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \endcond */
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_functions
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type*       Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex);
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type*  Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex);
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base);
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type * base, uint32_t releaseEventIntr)
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool     Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base);
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base);
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type * base, uint32_t notifyEventIntr, 
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message);
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_SendMsgPtr (IPC_STRUCT_Type* base, uint32_t notify
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void ** 
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type * base,
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask (IPC_INTR_STRUCT_Type const * base);
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base);
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus (IPC_INTR_STRUCT_Type const * base);
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterrupt (IPC_INTR_STRUCT_Type * base,
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 10


 423:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ClearInterrupt (IPC_INTR_STRUCT_Type * base,
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIpcBaseAddress
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC channel index as a parameter and returns the base
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address the IPC registers corresponding to the IPC channel.
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIndex does not exceed the
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIndex
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC structure. This is converted to the base address of
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel registers.
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC registers.
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type* Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex)
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_CHANNELS > ipcIndex);
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIntrBaseAddr
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC interrupt structure index and returns the base
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address of the IPC interrupt registers corresponding to the IPC Interrupt.
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIntrIndex does not exceed the
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIntrIndex
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC interrupt structure. This is converted to the
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * base address of the IPC interrupt registers.
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC interrupt registers.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type* Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex)
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_INTERRUPTS > ipcIntrIndex);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 11


 480:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_INTR_STRUCT_Type*) &(((IPC_Type *)cy_device->ipcBase)->INTR_STRUCT[ipcIntrIndex])
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterruptMask
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt mask for an IPC Interrupt.
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The mask sets release or acquire notification events for all IPC channels.
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type* base,
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                               uint32_t ipcReleaseMask, uint32_t ipcAcquireMask)
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_MASK(base) = _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_NOTIFY,  ipcAcquireMa
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_RELEASE, ipcReleaseMask);
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptMask
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the interrupt mask.
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 12


 537:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask(IPC_INTR_STRUCT_Type const * base)
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASK(base);
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatusMasked
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the active unmasked interrupt. This function
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * can be used in the interrupt service routine to find which source triggered
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the interrupt.
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base)
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASKED(base);
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatus
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the pending interrupts. Note that this read is
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * an unmasked read of the interrupt status. Interrupt sources read as active by
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * this function would generate interrupts only if they were not masked.
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 13


 594:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus(IPC_INTR_STRUCT_Type const * base)
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR(base);
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterrupt
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt source. This function can be used
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * to activate interrupts through software.
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note That interrupt sources set using this interrupt would generate interrupts
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * only if they are not masked.
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SetInterrupt
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask, 
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_SET(base) =  _VAL2FLD( IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask ) 
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask );
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ClearInterrupt
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to clear the interrupt source. Use this function to clear
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a pending interrupt source in the interrupt status.
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 14


 651:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ClearInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR(base) =  _VAL2FLD(IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask) |
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                   _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask);
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     (void)REG_IPC_INTR_STRUCT_INTR(base);  /* Read the register to flush the cache */
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_functions */
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc */
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_AcquireNotify
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a acquire notification event by IPC interrupt structure.
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt structures that are triggered
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * by a notification. Bit number correspond to number of the IPC interrupt
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * structure.
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_NOTIFY(base) = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReleaseNotify
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 15


 708:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a release notification event by IPC interrupt structure.
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_INTR_STRUCT_INTR_RELEASE_Msk)));
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_RELEASE(base) = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_WriteDataValue
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function writes a value to the DATA register of the IPC channel.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param dataValue
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value to be written.
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue)
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_DATA(base) = dataValue;
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadDataValue
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function reads a value from the DATA register of the IPC channel.
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 16


 765:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from DATA register.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base)
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_DATA(base);
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_IsLockAcquired
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to test the status of an IPC channel. The function
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * tells the reader if the IPC channel was in the locked or released state.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Status for the function:
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   true:  The IPC channel is in the Locked state.
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   false: The IPC channel is in the Released state.
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base)
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0u != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_LOCK_STATUS(base)) );
  45              		.loc 2 804 0
  46 0006 0A4B     		ldr	r3, .L5
  47 0008 1A68     		ldr	r2, [r3]
  48 000a B423     		movs	r3, #180
  49 000c D358     		ldr	r3, [r2, r3]
  50 000e 1B18     		adds	r3, r3, r0
  51 0010 1B68     		ldr	r3, [r3]
  52              	.LVL2:
  53              	.LBE17:
  54              	.LBE16:
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     /* Check to make sure the IPC is Acquired */
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if( Cy_IPC_Drv_IsLockAcquired(base) )
  55              		.loc 1 51 0
  56 0012 002B     		cmp	r3, #0
  57 0014 0ADA     		bge	.L4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 17


  58              	.LVL3:
  59              	.LBB18:
  60              	.LBB19:
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_RELEASE(base) = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
  61              		.loc 2 725 0
  62 0016 0B0C     		lsrs	r3, r1, #16
  63 0018 03D0     		beq	.L3
  64 001a 0649     		ldr	r1, .L5+4
  65              	.LVL4:
  66 001c 0648     		ldr	r0, .L5+8
  67              	.LVL5:
  68 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  69              	.LVL6:
  70              	.L3:
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
  71              		.loc 2 726 0
  72 0022 2D04     		lsls	r5, r5, #16
  73              	.LVL7:
  74 0024 2D0C     		lsrs	r5, r5, #16
  75 0026 6560     		str	r5, [r4, #4]
  76              	.LVL8:
  77              	.LBE19:
  78              	.LBE18:
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The IPC was acquired, release the IPC channel */
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_ReleaseNotify(base, releaseEventIntr);
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
  79              		.loc 1 56 0
  80 0028 0020     		movs	r0, #0
  81 002a 00E0     		b	.L2
  82              	.LVL9:
  83              	.L4:
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else   /* The IPC channel was already released (not acquired) */
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
  84              		.loc 1 60 0
  85 002c 0348     		ldr	r0, .L5+12
  86              	.LVL10:
  87              	.L2:
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return (retStatus);
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
  88              		.loc 1 64 0
  89              		@ sp needed
  90              	.LVL11:
  91 002e 70BD     		pop	{r4, r5, r6, pc}
  92              	.L6:
  93              		.align	2
  94              	.L5:
  95 0030 00000000 		.word	cy_device
  96 0034 D5020000 		.word	725
  97 0038 00000000 		.word	.LC1
  98 003c 01008A00 		.word	9043969
  99              		.cfi_endproc
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 18


 100              	.LFE64:
 101              		.size	Cy_IPC_Drv_LockRelease, .-Cy_IPC_Drv_LockRelease
 102              		.section	.text.Cy_IPC_Drv_SendMsgWord,"ax",%progbits
 103              		.align	2
 104              		.global	Cy_IPC_Drv_SendMsgWord
 105              		.code	16
 106              		.thumb_func
 107              		.type	Cy_IPC_Drv_SendMsgWord, %function
 108              	Cy_IPC_Drv_SendMsgWord:
 109              	.LFB65:
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_SendMsgWord
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function is used to send a 32-bit word message through an IPC channel.
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function also has an associated notification field that will let the
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * message notify one or multiple IPC interrupts. The IPC channel is locked and
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * remains locked after the function returns.  The receiver of the message should
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * release the channel.
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param notifyEventIntr
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param message
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The message word that is the data placed in the IPC data register.
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return   Status of the operation:
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR: The IPC channel is unavailable because it is already locked.
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type* base, uint32_t notifyEventIntr, uin
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
 110              		.loc 1 98 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL12:
 115 0000 70B5     		push	{r4, r5, r6, lr}
 116              		.cfi_def_cfa_offset 16
 117              		.cfi_offset 4, -16
 118              		.cfi_offset 5, -12
 119              		.cfi_offset 6, -8
 120              		.cfi_offset 14, -4
 121 0002 0500     		movs	r5, r0
 122 0004 0C00     		movs	r4, r1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 19


 123              	.LVL13:
 124              	.LBB20:
 125              	.LBB21:
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetLockStatus
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to get the status of an IPC channel.
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from LOCK_STATUS register.
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetLockStatus
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base)
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_LOCK_STATUS(base);
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractAcquireMask
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts an Acquire mask part from full interrupt mask value.
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Acquire mask value.
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask)
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_NOTIFY, intMask);
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractReleaseMask
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 20


 859:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts a Release mask part from full interrupt mask value.
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release mask value.
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask)
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_RELEASE, intMask);
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SendMsgPtr
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to send a message pointer through an IPC channel.
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message structure may hold a generic pointer that may contain the address
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of any user data type or structure. This parameter could be a pointer to a 32-bit
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * integer, an array, or even a data structure defined in the user code. This
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function acts as a transfer engine for sending the pointer. Any memory
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * management of the pointer allocation and deallocation is up to the application
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * code.
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function also has an associated notification field that will let the
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * message notify one or multiple interrupts.
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered during the release
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * action.
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message pointer that is being sent over the IPC channel.
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation:
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC channel is unavailable because
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                               it is already locked.
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgPtr
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgPtr(IPC_STRUCT_Type* base, uint32_t notify
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 21


 916:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_SendMsgWord(base, notifyEventIntr, (uint32_t)msgPtr);
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadMsgPtr
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read a 32-bit pointer message through an IPC channel.
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Pointer variable to hold the data pointer that is being read from the IPC
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel.
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return Status of the operation
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       was acquired.
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The function encountered an error because the IPC
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       channel was already in a released state meaning the data
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       in it is invalid.
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgPtr
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t  Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void *
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_ReadMsgWord(base, (uint32_t *)msgPtr);
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_LockAcquire
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to acquire the IPC channel.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The IPC was successfully acquired
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC was not acquired because it was already acquired
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       by another master
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 22


 973:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base)
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0ul != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_ACQUIRE(base))) ? CY_IPC_DR
 126              		.loc 2 978 0
 127 0006 0368     		ldr	r3, [r0]
 128 0008 002B     		cmp	r3, #0
 129 000a 01DA     		bge	.L11
 130 000c 0023     		movs	r3, #0
 131 000e 00E0     		b	.L8
 132              	.L11:
 133 0010 084B     		ldr	r3, .L13
 134              	.L8:
 135              	.LVL14:
 136              	.LBE21:
 137              	.LBE20:
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if( CY_IPC_DRV_SUCCESS == Cy_IPC_Drv_LockAcquire(base) )
 138              		.loc 1 101 0
 139 0012 002B     		cmp	r3, #0
 140 0014 0BD1     		bne	.L12
 141              	.LVL15:
 142              	.LBB22:
 143              	.LBB23:
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 144              		.loc 2 751 0
 145 0016 EA60     		str	r2, [r5, #12]
 146              	.LVL16:
 147              	.LBE23:
 148              	.LBE22:
 149              	.LBB24:
 150              	.LBB25:
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_NOTIFY(base) = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
 151              		.loc 2 699 0
 152 0018 230C     		lsrs	r3, r4, #16
 153 001a 03D0     		beq	.L10
 154 001c 0649     		ldr	r1, .L13+4
 155              	.LVL17:
 156 001e 0748     		ldr	r0, .L13+8
 157              	.LVL18:
 158 0020 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 159              	.LVL19:
 160              	.L10:
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 161              		.loc 2 700 0
 162 0024 2404     		lsls	r4, r4, #16
 163              	.LVL20:
 164 0026 240C     		lsrs	r4, r4, #16
 165 0028 AC60     		str	r4, [r5, #8]
 166              	.LVL21:
 167              	.LBE25:
 168              	.LBE24:
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* If the channel was acquired, send the message. */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 23


 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_WriteDataValue(base, message);
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_AcquireNotify(base, notifyEventIntr);
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
 169              		.loc 1 108 0
 170 002a 0020     		movs	r0, #0
 171 002c 00E0     		b	.L9
 172              	.LVL22:
 173              	.L12:
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* Channel was already acquired, return Error */
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
 174              		.loc 1 113 0
 175 002e 0148     		ldr	r0, .L13
 176              	.LVL23:
 177              	.L9:
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return (retStatus);
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
 178              		.loc 1 116 0
 179              		@ sp needed
 180              	.LVL24:
 181 0030 70BD     		pop	{r4, r5, r6, pc}
 182              	.L14:
 183 0032 C046     		.align	2
 184              	.L13:
 185 0034 01008A00 		.word	9043969
 186 0038 BB020000 		.word	699
 187 003c 00000000 		.word	.LC1
 188              		.cfi_endproc
 189              	.LFE65:
 190              		.size	Cy_IPC_Drv_SendMsgWord, .-Cy_IPC_Drv_SendMsgWord
 191              		.section	.text.Cy_IPC_Drv_ReadMsgWord,"ax",%progbits
 192              		.align	2
 193              		.global	Cy_IPC_Drv_ReadMsgWord
 194              		.code	16
 195              		.thumb_func
 196              		.type	Cy_IPC_Drv_ReadMsgWord, %function
 197              	Cy_IPC_Drv_ReadMsgWord:
 198              	.LFB66:
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_ReadMsgWord
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function is used to read a 32-bit word message through an IPC channel.
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function assumes that the channel is locked (for a valid message).
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * If the channel is not locked, the message is invalid.  The user must call
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_Release() function after reading the message to release the
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * IPC channel.
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 24


 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param message
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *  A variable where the read data is copied.
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return  Status of the operation
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       was acquired.
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR:   The function encountered an error because the IPC
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       channel was already in a released state, meaning the data
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       may be invalid.
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t  Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message)
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
 199              		.loc 1 150 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              	.LVL25:
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              		.cfi_def_cfa_offset 16
 206              		.cfi_offset 4, -16
 207              		.cfi_offset 5, -12
 208              		.cfi_offset 6, -8
 209              		.cfi_offset 14, -4
 210 0002 0500     		movs	r5, r0
 211 0004 0C1E     		subs	r4, r1, #0
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     CY_ASSERT_L1(NULL != message);
 212              		.loc 1 153 0
 213 0006 03D1     		bne	.L16
 214              		.loc 1 153 0 is_stmt 0 discriminator 1
 215 0008 9921     		movs	r1, #153
 216              	.LVL26:
 217 000a 0848     		ldr	r0, .L19
 218              	.LVL27:
 219 000c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 220              	.LVL28:
 221              	.L16:
 222              	.LBB26:
 223              	.LBB27:
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 224              		.loc 2 804 0 is_stmt 1
 225 0010 074B     		ldr	r3, .L19+4
 226 0012 1A68     		ldr	r2, [r3]
 227 0014 B423     		movs	r3, #180
 228 0016 D358     		ldr	r3, [r2, r3]
 229 0018 5B19     		adds	r3, r3, r5
 230 001a 1B68     		ldr	r3, [r3]
 231              	.LVL29:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 25


 232              	.LBE27:
 233              	.LBE26:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if ( Cy_IPC_Drv_IsLockAcquired(base) )
 234              		.loc 1 155 0
 235 001c 002B     		cmp	r3, #0
 236 001e 03DA     		bge	.L18
 237              	.LVL30:
 238              	.LBB28:
 239              	.LBB29:
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 240              		.loc 2 776 0
 241 0020 EB68     		ldr	r3, [r5, #12]
 242              	.LVL31:
 243              	.LBE29:
 244              	.LBE28:
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The channel is locked; message is valid. */
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         *message = Cy_IPC_Drv_ReadDataValue(base);
 245              		.loc 1 158 0
 246 0022 2360     		str	r3, [r4]
 247              	.LVL32:
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
 248              		.loc 1 160 0
 249 0024 0020     		movs	r0, #0
 250 0026 00E0     		b	.L17
 251              	.LVL33:
 252              	.L18:
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The channel is not locked so channel is invalid. */
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
 253              		.loc 1 165 0
 254 0028 0248     		ldr	r0, .L19+8
 255              	.L17:
 256              	.LVL34:
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return(retStatus);
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
 257              		.loc 1 168 0
 258              		@ sp needed
 259              	.LVL35:
 260              	.LVL36:
 261 002a 70BD     		pop	{r4, r5, r6, pc}
 262              	.L20:
 263              		.align	2
 264              	.L19:
 265 002c 40000000 		.word	.LC4
 266 0030 00000000 		.word	cy_device
 267 0034 01008A00 		.word	9043969
 268              		.cfi_endproc
 269              	.LFE66:
 270              		.size	Cy_IPC_Drv_ReadMsgWord, .-Cy_IPC_Drv_ReadMsgWord
 271              		.section	.rodata.str1.4,"aMS",%progbits,1
 272              		.align	2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 26


 273              	.LC1:
 274 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 274      72617465 
 274      645F536F 
 274      75726365 
 274      5C50536F 
 275 002e 6970635C 		.ascii	"ipc\\cy_ipc_drv.h\000"
 275      63795F69 
 275      70635F64 
 275      72762E68 
 275      00
 276 003f 00       		.space	1
 277              	.LC4:
 278 0040 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 278      72617465 
 278      645F536F 
 278      75726365 
 278      5C50536F 
 279 006e 6970635C 		.ascii	"ipc\\cy_ipc_drv.c\000"
 279      63795F69 
 279      70635F64 
 279      72762E63 
 279      00
 280              		.text
 281              	.Letext0:
 282              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 283              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\4.4\\psoc creator\\import\\gnu\\arm\
 284              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_ipc.h"
 285              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 286              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 287              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 288              		.section	.debug_info,"",%progbits
 289              	.Ldebug_info0:
 290 0000 DB080000 		.4byte	0x8db
 291 0004 0400     		.2byte	0x4
 292 0006 00000000 		.4byte	.Ldebug_abbrev0
 293 000a 04       		.byte	0x4
 294 000b 01       		.uleb128 0x1
 295 000c 8C060000 		.4byte	.LASF137
 296 0010 0C       		.byte	0xc
 297 0011 3B080000 		.4byte	.LASF138
 298 0015 12000000 		.4byte	.LASF139
 299 0019 00000000 		.4byte	.Ldebug_ranges0+0
 300 001d 00000000 		.4byte	0
 301 0021 00000000 		.4byte	.Ldebug_line0
 302 0025 02       		.uleb128 0x2
 303 0026 01       		.byte	0x1
 304 0027 06       		.byte	0x6
 305 0028 BB010000 		.4byte	.LASF0
 306 002c 03       		.uleb128 0x3
 307 002d D7000000 		.4byte	.LASF2
 308 0031 03       		.byte	0x3
 309 0032 1D       		.byte	0x1d
 310 0033 37000000 		.4byte	0x37
 311 0037 02       		.uleb128 0x2
 312 0038 01       		.byte	0x1
 313 0039 08       		.byte	0x8
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 27


 314 003a E4050000 		.4byte	.LASF1
 315 003e 03       		.uleb128 0x3
 316 003f 19030000 		.4byte	.LASF3
 317 0043 03       		.byte	0x3
 318 0044 29       		.byte	0x29
 319 0045 49000000 		.4byte	0x49
 320 0049 02       		.uleb128 0x2
 321 004a 02       		.byte	0x2
 322 004b 05       		.byte	0x5
 323 004c 06060000 		.4byte	.LASF4
 324 0050 03       		.uleb128 0x3
 325 0051 60070000 		.4byte	.LASF5
 326 0055 03       		.byte	0x3
 327 0056 2B       		.byte	0x2b
 328 0057 5B000000 		.4byte	0x5b
 329 005b 02       		.uleb128 0x2
 330 005c 02       		.byte	0x2
 331 005d 07       		.byte	0x7
 332 005e C0020000 		.4byte	.LASF6
 333 0062 02       		.uleb128 0x2
 334 0063 04       		.byte	0x4
 335 0064 05       		.byte	0x5
 336 0065 34020000 		.4byte	.LASF7
 337 0069 03       		.uleb128 0x3
 338 006a F2020000 		.4byte	.LASF8
 339 006e 03       		.byte	0x3
 340 006f 41       		.byte	0x41
 341 0070 74000000 		.4byte	0x74
 342 0074 02       		.uleb128 0x2
 343 0075 04       		.byte	0x4
 344 0076 07       		.byte	0x7
 345 0077 9A030000 		.4byte	.LASF9
 346 007b 02       		.uleb128 0x2
 347 007c 08       		.byte	0x8
 348 007d 05       		.byte	0x5
 349 007e AD010000 		.4byte	.LASF10
 350 0082 02       		.uleb128 0x2
 351 0083 08       		.byte	0x8
 352 0084 07       		.byte	0x7
 353 0085 3A010000 		.4byte	.LASF11
 354 0089 04       		.uleb128 0x4
 355 008a 04       		.byte	0x4
 356 008b 05       		.byte	0x5
 357 008c 696E7400 		.ascii	"int\000"
 358 0090 02       		.uleb128 0x2
 359 0091 04       		.byte	0x4
 360 0092 07       		.byte	0x7
 361 0093 6B030000 		.4byte	.LASF12
 362 0097 03       		.uleb128 0x3
 363 0098 8A080000 		.4byte	.LASF13
 364 009c 04       		.byte	0x4
 365 009d 18       		.byte	0x18
 366 009e 2C000000 		.4byte	0x2c
 367 00a2 03       		.uleb128 0x3
 368 00a3 A5010000 		.4byte	.LASF14
 369 00a7 04       		.byte	0x4
 370 00a8 20       		.byte	0x20
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 28


 371 00a9 3E000000 		.4byte	0x3e
 372 00ad 03       		.uleb128 0x3
 373 00ae 78030000 		.4byte	.LASF15
 374 00b2 04       		.byte	0x4
 375 00b3 24       		.byte	0x24
 376 00b4 50000000 		.4byte	0x50
 377 00b8 03       		.uleb128 0x3
 378 00b9 83060000 		.4byte	.LASF16
 379 00bd 04       		.byte	0x4
 380 00be 30       		.byte	0x30
 381 00bf 69000000 		.4byte	0x69
 382 00c3 02       		.uleb128 0x2
 383 00c4 08       		.byte	0x8
 384 00c5 04       		.byte	0x4
 385 00c6 1E070000 		.4byte	.LASF17
 386 00ca 05       		.uleb128 0x5
 387 00cb B8000000 		.4byte	0xb8
 388 00cf 06       		.uleb128 0x6
 389 00d0 CA000000 		.4byte	0xca
 390 00d4 07       		.uleb128 0x7
 391 00d5 CF000000 		.4byte	0xcf
 392 00d9 E4000000 		.4byte	0xe4
 393 00dd 08       		.uleb128 0x8
 394 00de E4000000 		.4byte	0xe4
 395 00e2 02       		.byte	0x2
 396 00e3 00       		.byte	0
 397 00e4 02       		.uleb128 0x2
 398 00e5 04       		.byte	0x4
 399 00e6 07       		.byte	0x7
 400 00e7 CC040000 		.4byte	.LASF18
 401 00eb 09       		.uleb128 0x9
 402 00ec 20       		.byte	0x20
 403 00ed 05       		.byte	0x5
 404 00ee 23       		.byte	0x23
 405 00ef 3C010000 		.4byte	0x13c
 406 00f3 0A       		.uleb128 0xa
 407 00f4 DC010000 		.4byte	.LASF19
 408 00f8 05       		.byte	0x5
 409 00f9 24       		.byte	0x24
 410 00fa CF000000 		.4byte	0xcf
 411 00fe 00       		.byte	0
 412 00ff 0A       		.uleb128 0xa
 413 0100 0D010000 		.4byte	.LASF20
 414 0104 05       		.byte	0x5
 415 0105 25       		.byte	0x25
 416 0106 CA000000 		.4byte	0xca
 417 010a 04       		.byte	0x4
 418 010b 0A       		.uleb128 0xa
 419 010c 4F040000 		.4byte	.LASF21
 420 0110 05       		.byte	0x5
 421 0111 26       		.byte	0x26
 422 0112 CA000000 		.4byte	0xca
 423 0116 08       		.byte	0x8
 424 0117 0A       		.uleb128 0xa
 425 0118 F4030000 		.4byte	.LASF22
 426 011c 05       		.byte	0x5
 427 011d 27       		.byte	0x27
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 29


 428 011e CA000000 		.4byte	0xca
 429 0122 0C       		.byte	0xc
 430 0123 0A       		.uleb128 0xa
 431 0124 0D030000 		.4byte	.LASF23
 432 0128 05       		.byte	0x5
 433 0129 28       		.byte	0x28
 434 012a CF000000 		.4byte	0xcf
 435 012e 10       		.byte	0x10
 436 012f 0A       		.uleb128 0xa
 437 0130 23060000 		.4byte	.LASF24
 438 0134 05       		.byte	0x5
 439 0135 29       		.byte	0x29
 440 0136 41010000 		.4byte	0x141
 441 013a 14       		.byte	0x14
 442 013b 00       		.byte	0
 443 013c 05       		.uleb128 0x5
 444 013d D4000000 		.4byte	0xd4
 445 0141 06       		.uleb128 0x6
 446 0142 3C010000 		.4byte	0x13c
 447 0146 03       		.uleb128 0x3
 448 0147 10060000 		.4byte	.LASF25
 449 014b 05       		.byte	0x5
 450 014c 2A       		.byte	0x2a
 451 014d EB000000 		.4byte	0xeb
 452 0151 09       		.uleb128 0x9
 453 0152 B8       		.byte	0xb8
 454 0153 06       		.byte	0x6
 455 0154 34       		.byte	0x34
 456 0155 62050000 		.4byte	0x562
 457 0159 0A       		.uleb128 0xa
 458 015a 15010000 		.4byte	.LASF26
 459 015e 06       		.byte	0x6
 460 015f 37       		.byte	0x37
 461 0160 B8000000 		.4byte	0xb8
 462 0164 00       		.byte	0
 463 0165 0A       		.uleb128 0xa
 464 0166 E7020000 		.4byte	.LASF27
 465 016a 06       		.byte	0x6
 466 016b 38       		.byte	0x38
 467 016c B8000000 		.4byte	0xb8
 468 0170 04       		.byte	0x4
 469 0171 0A       		.uleb128 0xa
 470 0172 4B020000 		.4byte	.LASF28
 471 0176 06       		.byte	0x6
 472 0177 39       		.byte	0x39
 473 0178 B8000000 		.4byte	0xb8
 474 017c 08       		.byte	0x8
 475 017d 0A       		.uleb128 0xa
 476 017e 89010000 		.4byte	.LASF29
 477 0182 06       		.byte	0x6
 478 0183 3A       		.byte	0x3a
 479 0184 B8000000 		.4byte	0xb8
 480 0188 0C       		.byte	0xc
 481 0189 0A       		.uleb128 0xa
 482 018a 04080000 		.4byte	.LASF30
 483 018e 06       		.byte	0x6
 484 018f 3B       		.byte	0x3b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 30


 485 0190 B8000000 		.4byte	0xb8
 486 0194 10       		.byte	0x10
 487 0195 0A       		.uleb128 0xa
 488 0196 2A020000 		.4byte	.LASF31
 489 019a 06       		.byte	0x6
 490 019b 3C       		.byte	0x3c
 491 019c B8000000 		.4byte	0xb8
 492 01a0 14       		.byte	0x14
 493 01a1 0A       		.uleb128 0xa
 494 01a2 B7030000 		.4byte	.LASF32
 495 01a6 06       		.byte	0x6
 496 01a7 3D       		.byte	0x3d
 497 01a8 B8000000 		.4byte	0xb8
 498 01ac 18       		.byte	0x18
 499 01ad 0A       		.uleb128 0xa
 500 01ae C0000000 		.4byte	.LASF33
 501 01b2 06       		.byte	0x6
 502 01b3 3E       		.byte	0x3e
 503 01b4 B8000000 		.4byte	0xb8
 504 01b8 1C       		.byte	0x1c
 505 01b9 0A       		.uleb128 0xa
 506 01ba FB080000 		.4byte	.LASF34
 507 01be 06       		.byte	0x6
 508 01bf 3F       		.byte	0x3f
 509 01c0 B8000000 		.4byte	0xb8
 510 01c4 20       		.byte	0x20
 511 01c5 0A       		.uleb128 0xa
 512 01c6 9B040000 		.4byte	.LASF35
 513 01ca 06       		.byte	0x6
 514 01cb 40       		.byte	0x40
 515 01cc B8000000 		.4byte	0xb8
 516 01d0 24       		.byte	0x24
 517 01d1 0A       		.uleb128 0xa
 518 01d2 77040000 		.4byte	.LASF36
 519 01d6 06       		.byte	0x6
 520 01d7 43       		.byte	0x43
 521 01d8 97000000 		.4byte	0x97
 522 01dc 28       		.byte	0x28
 523 01dd 0A       		.uleb128 0xa
 524 01de A1000000 		.4byte	.LASF37
 525 01e2 06       		.byte	0x6
 526 01e3 44       		.byte	0x44
 527 01e4 97000000 		.4byte	0x97
 528 01e8 29       		.byte	0x29
 529 01e9 0A       		.uleb128 0xa
 530 01ea F1080000 		.4byte	.LASF38
 531 01ee 06       		.byte	0x6
 532 01ef 45       		.byte	0x45
 533 01f0 97000000 		.4byte	0x97
 534 01f4 2A       		.byte	0x2a
 535 01f5 0A       		.uleb128 0xa
 536 01f6 5C050000 		.4byte	.LASF39
 537 01fa 06       		.byte	0x6
 538 01fb 46       		.byte	0x46
 539 01fc 97000000 		.4byte	0x97
 540 0200 2B       		.byte	0x2b
 541 0201 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 31


 542 0202 1C040000 		.4byte	.LASF40
 543 0206 06       		.byte	0x6
 544 0207 47       		.byte	0x47
 545 0208 97000000 		.4byte	0x97
 546 020c 2C       		.byte	0x2c
 547 020d 0A       		.uleb128 0xa
 548 020e 7E070000 		.4byte	.LASF41
 549 0212 06       		.byte	0x6
 550 0213 48       		.byte	0x48
 551 0214 97000000 		.4byte	0x97
 552 0218 2D       		.byte	0x2d
 553 0219 0A       		.uleb128 0xa
 554 021a FA010000 		.4byte	.LASF42
 555 021e 06       		.byte	0x6
 556 021f 49       		.byte	0x49
 557 0220 97000000 		.4byte	0x97
 558 0224 2E       		.byte	0x2e
 559 0225 0A       		.uleb128 0xa
 560 0226 AB040000 		.4byte	.LASF43
 561 022a 06       		.byte	0x6
 562 022b 4A       		.byte	0x4a
 563 022c 97000000 		.4byte	0x97
 564 0230 2F       		.byte	0x2f
 565 0231 0A       		.uleb128 0xa
 566 0232 2F070000 		.4byte	.LASF44
 567 0236 06       		.byte	0x6
 568 0237 4B       		.byte	0x4b
 569 0238 97000000 		.4byte	0x97
 570 023c 30       		.byte	0x30
 571 023d 0A       		.uleb128 0xa
 572 023e AC030000 		.4byte	.LASF45
 573 0242 06       		.byte	0x6
 574 0243 4E       		.byte	0x4e
 575 0244 97000000 		.4byte	0x97
 576 0248 31       		.byte	0x31
 577 0249 0A       		.uleb128 0xa
 578 024a C9000000 		.4byte	.LASF46
 579 024e 06       		.byte	0x6
 580 024f 4F       		.byte	0x4f
 581 0250 97000000 		.4byte	0x97
 582 0254 32       		.byte	0x32
 583 0255 0A       		.uleb128 0xa
 584 0256 5F030000 		.4byte	.LASF47
 585 025a 06       		.byte	0x6
 586 025b 50       		.byte	0x50
 587 025c 97000000 		.4byte	0x97
 588 0260 33       		.byte	0x33
 589 0261 0A       		.uleb128 0xa
 590 0262 35090000 		.4byte	.LASF48
 591 0266 06       		.byte	0x6
 592 0267 51       		.byte	0x51
 593 0268 97000000 		.4byte	0x97
 594 026c 34       		.byte	0x34
 595 026d 0A       		.uleb128 0xa
 596 026e E6070000 		.4byte	.LASF49
 597 0272 06       		.byte	0x6
 598 0273 52       		.byte	0x52
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 32


 599 0274 A2000000 		.4byte	0xa2
 600 0278 36       		.byte	0x36
 601 0279 0A       		.uleb128 0xa
 602 027a 65020000 		.4byte	.LASF50
 603 027e 06       		.byte	0x6
 604 027f 53       		.byte	0x53
 605 0280 A2000000 		.4byte	0xa2
 606 0284 38       		.byte	0x38
 607 0285 0A       		.uleb128 0xa
 608 0286 26080000 		.4byte	.LASF51
 609 028a 06       		.byte	0x6
 610 028b 54       		.byte	0x54
 611 028c A2000000 		.4byte	0xa2
 612 0290 3A       		.byte	0x3a
 613 0291 0A       		.uleb128 0xa
 614 0292 E2080000 		.4byte	.LASF52
 615 0296 06       		.byte	0x6
 616 0297 55       		.byte	0x55
 617 0298 97000000 		.4byte	0x97
 618 029c 3C       		.byte	0x3c
 619 029d 0A       		.uleb128 0xa
 620 029e 8C020000 		.4byte	.LASF53
 621 02a2 06       		.byte	0x6
 622 02a3 56       		.byte	0x56
 623 02a4 97000000 		.4byte	0x97
 624 02a8 3D       		.byte	0x3d
 625 02a9 0A       		.uleb128 0xa
 626 02aa 65060000 		.4byte	.LASF54
 627 02ae 06       		.byte	0x6
 628 02af 57       		.byte	0x57
 629 02b0 97000000 		.4byte	0x97
 630 02b4 3E       		.byte	0x3e
 631 02b5 0A       		.uleb128 0xa
 632 02b6 2E010000 		.4byte	.LASF55
 633 02ba 06       		.byte	0x6
 634 02bb 58       		.byte	0x58
 635 02bc 97000000 		.4byte	0x97
 636 02c0 3F       		.byte	0x3f
 637 02c1 0A       		.uleb128 0xa
 638 02c2 74050000 		.4byte	.LASF56
 639 02c6 06       		.byte	0x6
 640 02c7 59       		.byte	0x59
 641 02c8 97000000 		.4byte	0x97
 642 02cc 40       		.byte	0x40
 643 02cd 0A       		.uleb128 0xa
 644 02ce FD020000 		.4byte	.LASF57
 645 02d2 06       		.byte	0x6
 646 02d3 5A       		.byte	0x5a
 647 02d4 97000000 		.4byte	0x97
 648 02d8 41       		.byte	0x41
 649 02d9 0A       		.uleb128 0xa
 650 02da 56040000 		.4byte	.LASF58
 651 02de 06       		.byte	0x6
 652 02df 5B       		.byte	0x5b
 653 02e0 97000000 		.4byte	0x97
 654 02e4 42       		.byte	0x42
 655 02e5 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 33


 656 02e6 49050000 		.4byte	.LASF59
 657 02ea 06       		.byte	0x6
 658 02eb 5C       		.byte	0x5c
 659 02ec 97000000 		.4byte	0x97
 660 02f0 43       		.byte	0x43
 661 02f1 0A       		.uleb128 0xa
 662 02f2 54020000 		.4byte	.LASF60
 663 02f6 06       		.byte	0x6
 664 02f7 5D       		.byte	0x5d
 665 02f8 97000000 		.4byte	0x97
 666 02fc 44       		.byte	0x44
 667 02fd 0A       		.uleb128 0xa
 668 02fe 00000000 		.4byte	.LASF61
 669 0302 06       		.byte	0x6
 670 0303 5E       		.byte	0x5e
 671 0304 B8000000 		.4byte	0xb8
 672 0308 48       		.byte	0x48
 673 0309 0A       		.uleb128 0xa
 674 030a 3D020000 		.4byte	.LASF62
 675 030e 06       		.byte	0x6
 676 030f 5F       		.byte	0x5f
 677 0310 B8000000 		.4byte	0xb8
 678 0314 4C       		.byte	0x4c
 679 0315 0A       		.uleb128 0xa
 680 0316 46090000 		.4byte	.LASF63
 681 031a 06       		.byte	0x6
 682 031b 60       		.byte	0x60
 683 031c 97000000 		.4byte	0x97
 684 0320 50       		.byte	0x50
 685 0321 0A       		.uleb128 0xa
 686 0322 77010000 		.4byte	.LASF64
 687 0326 06       		.byte	0x6
 688 0327 61       		.byte	0x61
 689 0328 97000000 		.4byte	0x97
 690 032c 51       		.byte	0x51
 691 032d 0A       		.uleb128 0xa
 692 032e 7A080000 		.4byte	.LASF65
 693 0332 06       		.byte	0x6
 694 0333 62       		.byte	0x62
 695 0334 97000000 		.4byte	0x97
 696 0338 52       		.byte	0x52
 697 0339 0A       		.uleb128 0xa
 698 033a 19090000 		.4byte	.LASF66
 699 033e 06       		.byte	0x6
 700 033f 63       		.byte	0x63
 701 0340 97000000 		.4byte	0x97
 702 0344 53       		.byte	0x53
 703 0345 0A       		.uleb128 0xa
 704 0346 73060000 		.4byte	.LASF67
 705 034a 06       		.byte	0x6
 706 034b 64       		.byte	0x64
 707 034c 97000000 		.4byte	0x97
 708 0350 54       		.byte	0x54
 709 0351 0A       		.uleb128 0xa
 710 0352 91010000 		.4byte	.LASF68
 711 0356 06       		.byte	0x6
 712 0357 65       		.byte	0x65
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 34


 713 0358 97000000 		.4byte	0x97
 714 035c 55       		.byte	0x55
 715 035d 0A       		.uleb128 0xa
 716 035e A4070000 		.4byte	.LASF69
 717 0362 06       		.byte	0x6
 718 0363 66       		.byte	0x66
 719 0364 97000000 		.4byte	0x97
 720 0368 56       		.byte	0x56
 721 0369 0A       		.uleb128 0xa
 722 036a 51060000 		.4byte	.LASF70
 723 036e 06       		.byte	0x6
 724 036f 67       		.byte	0x67
 725 0370 97000000 		.4byte	0x97
 726 0374 57       		.byte	0x57
 727 0375 0A       		.uleb128 0xa
 728 0376 66000000 		.4byte	.LASF71
 729 037a 06       		.byte	0x6
 730 037b 68       		.byte	0x68
 731 037c 97000000 		.4byte	0x97
 732 0380 58       		.byte	0x58
 733 0381 0A       		.uleb128 0xa
 734 0382 F2050000 		.4byte	.LASF72
 735 0386 06       		.byte	0x6
 736 0387 69       		.byte	0x69
 737 0388 97000000 		.4byte	0x97
 738 038c 59       		.byte	0x59
 739 038d 0A       		.uleb128 0xa
 740 038e D5040000 		.4byte	.LASF73
 741 0392 06       		.byte	0x6
 742 0393 6E       		.byte	0x6e
 743 0394 AD000000 		.4byte	0xad
 744 0398 5A       		.byte	0x5a
 745 0399 0A       		.uleb128 0xa
 746 039a CF070000 		.4byte	.LASF74
 747 039e 06       		.byte	0x6
 748 039f 6F       		.byte	0x6f
 749 03a0 AD000000 		.4byte	0xad
 750 03a4 5C       		.byte	0x5c
 751 03a5 0A       		.uleb128 0xa
 752 03a6 1F010000 		.4byte	.LASF75
 753 03aa 06       		.byte	0x6
 754 03ab 70       		.byte	0x70
 755 03ac 97000000 		.4byte	0x97
 756 03b0 5E       		.byte	0x5e
 757 03b1 0A       		.uleb128 0xa
 758 03b2 AE050000 		.4byte	.LASF76
 759 03b6 06       		.byte	0x6
 760 03b7 71       		.byte	0x71
 761 03b8 97000000 		.4byte	0x97
 762 03bc 5F       		.byte	0x5f
 763 03bd 0A       		.uleb128 0xa
 764 03be 38050000 		.4byte	.LASF77
 765 03c2 06       		.byte	0x6
 766 03c3 72       		.byte	0x72
 767 03c4 97000000 		.4byte	0x97
 768 03c8 60       		.byte	0x60
 769 03c9 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 35


 770 03ca 87050000 		.4byte	.LASF78
 771 03ce 06       		.byte	0x6
 772 03cf 73       		.byte	0x73
 773 03d0 B8000000 		.4byte	0xb8
 774 03d4 64       		.byte	0x64
 775 03d5 0A       		.uleb128 0xa
 776 03d6 51010000 		.4byte	.LASF79
 777 03da 06       		.byte	0x6
 778 03db 76       		.byte	0x76
 779 03dc AD000000 		.4byte	0xad
 780 03e0 68       		.byte	0x68
 781 03e1 0A       		.uleb128 0xa
 782 03e2 88030000 		.4byte	.LASF80
 783 03e6 06       		.byte	0x6
 784 03e7 77       		.byte	0x77
 785 03e8 AD000000 		.4byte	0xad
 786 03ec 6A       		.byte	0x6a
 787 03ed 0A       		.uleb128 0xa
 788 03ee D7030000 		.4byte	.LASF81
 789 03f2 06       		.byte	0x6
 790 03f3 78       		.byte	0x78
 791 03f4 AD000000 		.4byte	0xad
 792 03f8 6C       		.byte	0x6c
 793 03f9 0A       		.uleb128 0xa
 794 03fa 0F040000 		.4byte	.LASF82
 795 03fe 06       		.byte	0x6
 796 03ff 79       		.byte	0x79
 797 0400 AD000000 		.4byte	0xad
 798 0404 6E       		.byte	0x6e
 799 0405 0A       		.uleb128 0xa
 800 0406 3D060000 		.4byte	.LASF83
 801 040a 06       		.byte	0x6
 802 040b 7B       		.byte	0x7b
 803 040c 97000000 		.4byte	0x97
 804 0410 70       		.byte	0x70
 805 0411 0A       		.uleb128 0xa
 806 0412 C7010000 		.4byte	.LASF84
 807 0416 06       		.byte	0x6
 808 0417 7C       		.byte	0x7c
 809 0418 97000000 		.4byte	0x97
 810 041c 71       		.byte	0x71
 811 041d 0A       		.uleb128 0xa
 812 041e 03090000 		.4byte	.LASF85
 813 0422 06       		.byte	0x6
 814 0423 7D       		.byte	0x7d
 815 0424 97000000 		.4byte	0x97
 816 0428 72       		.byte	0x72
 817 0429 0A       		.uleb128 0xa
 818 042a F9040000 		.4byte	.LASF86
 819 042e 06       		.byte	0x6
 820 042f 7E       		.byte	0x7e
 821 0430 97000000 		.4byte	0x97
 822 0434 73       		.byte	0x73
 823 0435 0A       		.uleb128 0xa
 824 0436 AE020000 		.4byte	.LASF87
 825 043a 06       		.byte	0x6
 826 043b 80       		.byte	0x80
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 36


 827 043c AD000000 		.4byte	0xad
 828 0440 74       		.byte	0x74
 829 0441 0A       		.uleb128 0xa
 830 0442 6B070000 		.4byte	.LASF88
 831 0446 06       		.byte	0x6
 832 0447 81       		.byte	0x81
 833 0448 AD000000 		.4byte	0xad
 834 044c 76       		.byte	0x76
 835 044d 0A       		.uleb128 0xa
 836 044e 77020000 		.4byte	.LASF89
 837 0452 06       		.byte	0x6
 838 0453 82       		.byte	0x82
 839 0454 AD000000 		.4byte	0xad
 840 0458 78       		.byte	0x78
 841 0459 0A       		.uleb128 0xa
 842 045a E1000000 		.4byte	.LASF90
 843 045e 06       		.byte	0x6
 844 045f 83       		.byte	0x83
 845 0460 AD000000 		.4byte	0xad
 846 0464 7A       		.byte	0x7a
 847 0465 0A       		.uleb128 0xa
 848 0466 A7080000 		.4byte	.LASF91
 849 046a 06       		.byte	0x6
 850 046b 86       		.byte	0x86
 851 046c 97000000 		.4byte	0x97
 852 0470 7C       		.byte	0x7c
 853 0471 0A       		.uleb128 0xa
 854 0472 F3070000 		.4byte	.LASF92
 855 0476 06       		.byte	0x6
 856 0477 87       		.byte	0x87
 857 0478 97000000 		.4byte	0x97
 858 047c 7D       		.byte	0x7d
 859 047d 0A       		.uleb128 0xa
 860 047e 7A000000 		.4byte	.LASF93
 861 0482 06       		.byte	0x6
 862 0483 88       		.byte	0x88
 863 0484 97000000 		.4byte	0x97
 864 0488 7E       		.byte	0x7e
 865 0489 0A       		.uleb128 0xa
 866 048a D3020000 		.4byte	.LASF94
 867 048e 06       		.byte	0x6
 868 048f 89       		.byte	0x89
 869 0490 97000000 		.4byte	0x97
 870 0494 7F       		.byte	0x7f
 871 0495 0A       		.uleb128 0xa
 872 0496 4B030000 		.4byte	.LASF95
 873 049a 06       		.byte	0x6
 874 049b 8A       		.byte	0x8a
 875 049c 97000000 		.4byte	0x97
 876 04a0 80       		.byte	0x80
 877 04a1 0A       		.uleb128 0xa
 878 04a2 84040000 		.4byte	.LASF96
 879 04a6 06       		.byte	0x6
 880 04a7 8D       		.byte	0x8d
 881 04a8 B8000000 		.4byte	0xb8
 882 04ac 84       		.byte	0x84
 883 04ad 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 37


 884 04ae F6000000 		.4byte	.LASF97
 885 04b2 06       		.byte	0x6
 886 04b3 8E       		.byte	0x8e
 887 04b4 B8000000 		.4byte	0xb8
 888 04b8 88       		.byte	0x88
 889 04b9 0A       		.uleb128 0xa
 890 04ba 92080000 		.4byte	.LASF98
 891 04be 06       		.byte	0x6
 892 04bf 8F       		.byte	0x8f
 893 04c0 B8000000 		.4byte	0xb8
 894 04c4 8C       		.byte	0x8c
 895 04c5 0A       		.uleb128 0xa
 896 04c6 B7040000 		.4byte	.LASF99
 897 04ca 06       		.byte	0x6
 898 04cb 90       		.byte	0x90
 899 04cc B8000000 		.4byte	0xb8
 900 04d0 90       		.byte	0x90
 901 04d1 0A       		.uleb128 0xa
 902 04d2 36030000 		.4byte	.LASF100
 903 04d6 06       		.byte	0x6
 904 04d7 91       		.byte	0x91
 905 04d8 B8000000 		.4byte	0xb8
 906 04dc 94       		.byte	0x94
 907 04dd 0A       		.uleb128 0xa
 908 04de E4010000 		.4byte	.LASF101
 909 04e2 06       		.byte	0x6
 910 04e3 92       		.byte	0x92
 911 04e4 B8000000 		.4byte	0xb8
 912 04e8 98       		.byte	0x98
 913 04e9 0A       		.uleb128 0xa
 914 04ea BC080000 		.4byte	.LASF102
 915 04ee 06       		.byte	0x6
 916 04ef 93       		.byte	0x93
 917 04f0 B8000000 		.4byte	0xb8
 918 04f4 9C       		.byte	0x9c
 919 04f5 0A       		.uleb128 0xa
 920 04f6 61010000 		.4byte	.LASF103
 921 04fa 06       		.byte	0x6
 922 04fb 94       		.byte	0x94
 923 04fc B8000000 		.4byte	0xb8
 924 0500 A0       		.byte	0xa0
 925 0501 0A       		.uleb128 0xa
 926 0502 05020000 		.4byte	.LASF104
 927 0506 06       		.byte	0x6
 928 0507 95       		.byte	0x95
 929 0508 AD000000 		.4byte	0xad
 930 050c A4       		.byte	0xa4
 931 050d 0A       		.uleb128 0xa
 932 050e 62040000 		.4byte	.LASF105
 933 0512 06       		.byte	0x6
 934 0513 96       		.byte	0x96
 935 0514 AD000000 		.4byte	0xad
 936 0518 A6       		.byte	0xa6
 937 0519 0A       		.uleb128 0xa
 938 051a A2050000 		.4byte	.LASF106
 939 051e 06       		.byte	0x6
 940 051f 97       		.byte	0x97
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 38


 941 0520 AD000000 		.4byte	0xad
 942 0524 A8       		.byte	0xa8
 943 0525 0A       		.uleb128 0xa
 944 0526 3B070000 		.4byte	.LASF107
 945 052a 06       		.byte	0x6
 946 052b 98       		.byte	0x98
 947 052c AD000000 		.4byte	0xad
 948 0530 AA       		.byte	0xaa
 949 0531 0A       		.uleb128 0xa
 950 0532 E6030000 		.4byte	.LASF108
 951 0536 06       		.byte	0x6
 952 0537 99       		.byte	0x99
 953 0538 AD000000 		.4byte	0xad
 954 053c AC       		.byte	0xac
 955 053d 0A       		.uleb128 0xa
 956 053e 10050000 		.4byte	.LASF109
 957 0542 06       		.byte	0x6
 958 0543 9A       		.byte	0x9a
 959 0544 AD000000 		.4byte	0xad
 960 0548 AE       		.byte	0xae
 961 0549 0A       		.uleb128 0xa
 962 054a D8070000 		.4byte	.LASF110
 963 054e 06       		.byte	0x6
 964 054f 9D       		.byte	0x9d
 965 0550 AD000000 		.4byte	0xad
 966 0554 B0       		.byte	0xb0
 967 0555 0A       		.uleb128 0xa
 968 0556 8D000000 		.4byte	.LASF111
 969 055a 06       		.byte	0x6
 970 055b 9E       		.byte	0x9e
 971 055c B8000000 		.4byte	0xb8
 972 0560 B4       		.byte	0xb4
 973 0561 00       		.byte	0
 974 0562 03       		.uleb128 0x3
 975 0563 3F040000 		.4byte	.LASF112
 976 0567 06       		.byte	0x6
 977 0568 9F       		.byte	0x9f
 978 0569 51010000 		.4byte	0x151
 979 056d 0B       		.uleb128 0xb
 980 056e D2080000 		.4byte	.LASF113
 981 0572 07       		.byte	0x7
 982 0573 1D06     		.2byte	0x61d
 983 0575 46010000 		.4byte	0x146
 984 0579 0B       		.uleb128 0xb
 985 057a 81030000 		.4byte	.LASF114
 986 057e 08       		.byte	0x8
 987 057f F601     		.2byte	0x1f6
 988 0581 85050000 		.4byte	0x585
 989 0585 02       		.uleb128 0x2
 990 0586 01       		.byte	0x1
 991 0587 08       		.byte	0x8
 992 0588 2A070000 		.4byte	.LASF115
 993 058c 02       		.uleb128 0x2
 994 058d 04       		.byte	0x4
 995 058e 04       		.byte	0x4
 996 058f 81050000 		.4byte	.LASF116
 997 0593 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 39


 998 0594 08       		.byte	0x8
 999 0595 04       		.byte	0x4
 1000 0596 70020000 		.4byte	.LASF117
 1001 059a 0C       		.uleb128 0xc
 1002 059b 04       		.byte	0x4
 1003 059c 90000000 		.4byte	0x90
 1004 05a0 02       		.byte	0x2
 1005 05a1 7201     		.2byte	0x172
 1006 05a3 B7050000 		.4byte	0x5b7
 1007 05a7 0D       		.uleb128 0xd
 1008 05a8 23030000 		.4byte	.LASF118
 1009 05ac 00       		.byte	0
 1010 05ad 0E       		.uleb128 0xe
 1011 05ae AF000000 		.4byte	.LASF119
 1012 05b2 01008A00 		.4byte	0x8a0001
 1013 05b6 00       		.byte	0
 1014 05b7 0B       		.uleb128 0xb
 1015 05b8 F9030000 		.4byte	.LASF120
 1016 05bc 02       		.byte	0x2
 1017 05bd 7901     		.2byte	0x179
 1018 05bf 9A050000 		.4byte	0x59a
 1019 05c3 0F       		.uleb128 0xf
 1020 05c4 C4050000 		.4byte	.LASF124
 1021 05c8 02       		.byte	0x2
 1022 05c9 2203     		.2byte	0x322
 1023 05cb E1050000 		.4byte	0x5e1
 1024 05cf 03       		.byte	0x3
 1025 05d0 E1050000 		.4byte	0x5e1
 1026 05d4 10       		.uleb128 0x10
 1027 05d5 A6040000 		.4byte	.LASF122
 1028 05d9 02       		.byte	0x2
 1029 05da 2203     		.2byte	0x322
 1030 05dc E8050000 		.4byte	0x5e8
 1031 05e0 00       		.byte	0
 1032 05e1 02       		.uleb128 0x2
 1033 05e2 01       		.byte	0x1
 1034 05e3 02       		.byte	0x2
 1035 05e4 DE050000 		.4byte	.LASF121
 1036 05e8 11       		.uleb128 0x11
 1037 05e9 04       		.byte	0x4
 1038 05ea EE050000 		.4byte	0x5ee
 1039 05ee 06       		.uleb128 0x6
 1040 05ef 6D050000 		.4byte	0x56d
 1041 05f3 12       		.uleb128 0x12
 1042 05f4 E0040000 		.4byte	.LASF126
 1043 05f8 02       		.byte	0x2
 1044 05f9 D302     		.2byte	0x2d3
 1045 05fb 03       		.byte	0x3
 1046 05fc 19060000 		.4byte	0x619
 1047 0600 10       		.uleb128 0x10
 1048 0601 A6040000 		.4byte	.LASF122
 1049 0605 02       		.byte	0x2
 1050 0606 D302     		.2byte	0x2d3
 1051 0608 19060000 		.4byte	0x619
 1052 060c 10       		.uleb128 0x10
 1053 060d 1A020000 		.4byte	.LASF123
 1054 0611 02       		.byte	0x2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 40


 1055 0612 D302     		.2byte	0x2d3
 1056 0614 B8000000 		.4byte	0xb8
 1057 0618 00       		.byte	0
 1058 0619 11       		.uleb128 0x11
 1059 061a 04       		.byte	0x4
 1060 061b 6D050000 		.4byte	0x56d
 1061 061f 0F       		.uleb128 0xf
 1062 0620 28040000 		.4byte	.LASF125
 1063 0624 02       		.byte	0x2
 1064 0625 D003     		.2byte	0x3d0
 1065 0627 B7050000 		.4byte	0x5b7
 1066 062b 03       		.byte	0x3
 1067 062c 3D060000 		.4byte	0x63d
 1068 0630 10       		.uleb128 0x10
 1069 0631 A6040000 		.4byte	.LASF122
 1070 0635 02       		.byte	0x2
 1071 0636 D003     		.2byte	0x3d0
 1072 0638 E8050000 		.4byte	0x5e8
 1073 063c 00       		.byte	0
 1074 063d 12       		.uleb128 0x12
 1075 063e 0D080000 		.4byte	.LASF127
 1076 0642 02       		.byte	0x2
 1077 0643 B902     		.2byte	0x2b9
 1078 0645 03       		.byte	0x3
 1079 0646 63060000 		.4byte	0x663
 1080 064a 10       		.uleb128 0x10
 1081 064b A6040000 		.4byte	.LASF122
 1082 064f 02       		.byte	0x2
 1083 0650 B902     		.2byte	0x2b9
 1084 0652 19060000 		.4byte	0x619
 1085 0656 10       		.uleb128 0x10
 1086 0657 1A020000 		.4byte	.LASF123
 1087 065b 02       		.byte	0x2
 1088 065c B902     		.2byte	0x2b9
 1089 065e B8000000 		.4byte	0xb8
 1090 0662 00       		.byte	0
 1091 0663 12       		.uleb128 0x12
 1092 0664 1E050000 		.4byte	.LASF128
 1093 0668 02       		.byte	0x2
 1094 0669 ED02     		.2byte	0x2ed
 1095 066b 03       		.byte	0x3
 1096 066c 89060000 		.4byte	0x689
 1097 0670 10       		.uleb128 0x10
 1098 0671 A6040000 		.4byte	.LASF122
 1099 0675 02       		.byte	0x2
 1100 0676 ED02     		.2byte	0x2ed
 1101 0678 19060000 		.4byte	0x619
 1102 067c 10       		.uleb128 0x10
 1103 067d 6A050000 		.4byte	.LASF129
 1104 0681 02       		.byte	0x2
 1105 0682 ED02     		.2byte	0x2ed
 1106 0684 B8000000 		.4byte	0xb8
 1107 0688 00       		.byte	0
 1108 0689 0F       		.uleb128 0xf
 1109 068a 8B070000 		.4byte	.LASF130
 1110 068e 02       		.byte	0x2
 1111 068f 0603     		.2byte	0x306
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 41


 1112 0691 B8000000 		.4byte	0xb8
 1113 0695 03       		.byte	0x3
 1114 0696 A7060000 		.4byte	0x6a7
 1115 069a 10       		.uleb128 0x10
 1116 069b A6040000 		.4byte	.LASF122
 1117 069f 02       		.byte	0x2
 1118 06a0 0603     		.2byte	0x306
 1119 06a2 E8050000 		.4byte	0x5e8
 1120 06a6 00       		.byte	0
 1121 06a7 13       		.uleb128 0x13
 1122 06a8 97020000 		.4byte	.LASF132
 1123 06ac 01       		.byte	0x1
 1124 06ad 2E       		.byte	0x2e
 1125 06ae B7050000 		.4byte	0x5b7
 1126 06b2 00000000 		.4byte	.LFB64
 1127 06b6 40000000 		.4byte	.LFE64-.LFB64
 1128 06ba 01       		.uleb128 0x1
 1129 06bb 9C       		.byte	0x9c
 1130 06bc 47070000 		.4byte	0x747
 1131 06c0 14       		.uleb128 0x14
 1132 06c1 A6040000 		.4byte	.LASF122
 1133 06c5 01       		.byte	0x1
 1134 06c6 2E       		.byte	0x2e
 1135 06c7 19060000 		.4byte	0x619
 1136 06cb 00000000 		.4byte	.LLST0
 1137 06cf 14       		.uleb128 0x14
 1138 06d0 2C060000 		.4byte	.LASF131
 1139 06d4 01       		.byte	0x1
 1140 06d5 2E       		.byte	0x2e
 1141 06d6 B8000000 		.4byte	0xb8
 1142 06da 42000000 		.4byte	.LLST1
 1143 06de 15       		.uleb128 0x15
 1144 06df 2B090000 		.4byte	.LASF135
 1145 06e3 01       		.byte	0x1
 1146 06e4 30       		.byte	0x30
 1147 06e5 B7050000 		.4byte	0x5b7
 1148 06e9 87000000 		.4byte	.LLST2
 1149 06ed 16       		.uleb128 0x16
 1150 06ee C3050000 		.4byte	0x5c3
 1151 06f2 06000000 		.4byte	.LBB16
 1152 06f6 0C000000 		.4byte	.LBE16-.LBB16
 1153 06fa 01       		.byte	0x1
 1154 06fb 33       		.byte	0x33
 1155 06fc 0A070000 		.4byte	0x70a
 1156 0700 17       		.uleb128 0x17
 1157 0701 D4050000 		.4byte	0x5d4
 1158 0705 A6000000 		.4byte	.LLST3
 1159 0709 00       		.byte	0
 1160 070a 18       		.uleb128 0x18
 1161 070b F3050000 		.4byte	0x5f3
 1162 070f 16000000 		.4byte	.LBB18
 1163 0713 12000000 		.4byte	.LBE18-.LBB18
 1164 0717 01       		.byte	0x1
 1165 0718 36       		.byte	0x36
 1166 0719 17       		.uleb128 0x17
 1167 071a 0C060000 		.4byte	0x60c
 1168 071e B9000000 		.4byte	.LLST4
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 42


 1169 0722 17       		.uleb128 0x17
 1170 0723 00060000 		.4byte	0x600
 1171 0727 E5000000 		.4byte	.LLST5
 1172 072b 19       		.uleb128 0x19
 1173 072c 22000000 		.4byte	.LVL6
 1174 0730 D2080000 		.4byte	0x8d2
 1175 0734 1A       		.uleb128 0x1a
 1176 0735 01       		.uleb128 0x1
 1177 0736 50       		.byte	0x50
 1178 0737 05       		.uleb128 0x5
 1179 0738 03       		.byte	0x3
 1180 0739 00000000 		.4byte	.LC1
 1181 073d 1A       		.uleb128 0x1a
 1182 073e 01       		.uleb128 0x1
 1183 073f 51       		.byte	0x51
 1184 0740 03       		.uleb128 0x3
 1185 0741 0A       		.byte	0xa
 1186 0742 D502     		.2byte	0x2d5
 1187 0744 00       		.byte	0
 1188 0745 00       		.byte	0
 1189 0746 00       		.byte	0
 1190 0747 13       		.uleb128 0x13
 1191 0748 49070000 		.4byte	.LASF133
 1192 074c 01       		.byte	0x1
 1193 074d 61       		.byte	0x61
 1194 074e B7050000 		.4byte	0x5b7
 1195 0752 00000000 		.4byte	.LFB65
 1196 0756 40000000 		.4byte	.LFE65-.LFB65
 1197 075a 01       		.uleb128 0x1
 1198 075b 9C       		.byte	0x9c
 1199 075c 1C080000 		.4byte	0x81c
 1200 0760 14       		.uleb128 0x14
 1201 0761 A6040000 		.4byte	.LASF122
 1202 0765 01       		.byte	0x1
 1203 0766 61       		.byte	0x61
 1204 0767 19060000 		.4byte	0x619
 1205 076b 03010000 		.4byte	.LLST6
 1206 076f 14       		.uleb128 0x14
 1207 0770 1A020000 		.4byte	.LASF123
 1208 0774 01       		.byte	0x1
 1209 0775 61       		.byte	0x61
 1210 0776 B8000000 		.4byte	0xb8
 1211 077a 45010000 		.4byte	.LLST7
 1212 077e 14       		.uleb128 0x14
 1213 077f 54050000 		.4byte	.LASF134
 1214 0783 01       		.byte	0x1
 1215 0784 61       		.byte	0x61
 1216 0785 B8000000 		.4byte	0xb8
 1217 0789 8A010000 		.4byte	.LLST8
 1218 078d 15       		.uleb128 0x15
 1219 078e 2B090000 		.4byte	.LASF135
 1220 0792 01       		.byte	0x1
 1221 0793 63       		.byte	0x63
 1222 0794 B7050000 		.4byte	0x5b7
 1223 0798 C4010000 		.4byte	.LLST9
 1224 079c 16       		.uleb128 0x16
 1225 079d 1F060000 		.4byte	0x61f
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 43


 1226 07a1 06000000 		.4byte	.LBB20
 1227 07a5 0C000000 		.4byte	.LBE20-.LBB20
 1228 07a9 01       		.byte	0x1
 1229 07aa 65       		.byte	0x65
 1230 07ab B9070000 		.4byte	0x7b9
 1231 07af 17       		.uleb128 0x17
 1232 07b0 30060000 		.4byte	0x630
 1233 07b4 E3010000 		.4byte	.LLST10
 1234 07b8 00       		.byte	0
 1235 07b9 16       		.uleb128 0x16
 1236 07ba 63060000 		.4byte	0x663
 1237 07be 16000000 		.4byte	.LBB22
 1238 07c2 02000000 		.4byte	.LBE22-.LBB22
 1239 07c6 01       		.byte	0x1
 1240 07c7 68       		.byte	0x68
 1241 07c8 DF070000 		.4byte	0x7df
 1242 07cc 17       		.uleb128 0x17
 1243 07cd 7C060000 		.4byte	0x67c
 1244 07d1 F6010000 		.4byte	.LLST11
 1245 07d5 17       		.uleb128 0x17
 1246 07d6 70060000 		.4byte	0x670
 1247 07da 09020000 		.4byte	.LLST12
 1248 07de 00       		.byte	0
 1249 07df 18       		.uleb128 0x18
 1250 07e0 3D060000 		.4byte	0x63d
 1251 07e4 18000000 		.4byte	.LBB24
 1252 07e8 12000000 		.4byte	.LBE24-.LBB24
 1253 07ec 01       		.byte	0x1
 1254 07ed 6A       		.byte	0x6a
 1255 07ee 17       		.uleb128 0x17
 1256 07ef 56060000 		.4byte	0x656
 1257 07f3 1C020000 		.4byte	.LLST13
 1258 07f7 17       		.uleb128 0x17
 1259 07f8 4A060000 		.4byte	0x64a
 1260 07fc 48020000 		.4byte	.LLST14
 1261 0800 19       		.uleb128 0x19
 1262 0801 24000000 		.4byte	.LVL19
 1263 0805 D2080000 		.4byte	0x8d2
 1264 0809 1A       		.uleb128 0x1a
 1265 080a 01       		.uleb128 0x1
 1266 080b 50       		.byte	0x50
 1267 080c 05       		.uleb128 0x5
 1268 080d 03       		.byte	0x3
 1269 080e 00000000 		.4byte	.LC1
 1270 0812 1A       		.uleb128 0x1a
 1271 0813 01       		.uleb128 0x1
 1272 0814 51       		.byte	0x51
 1273 0815 03       		.uleb128 0x3
 1274 0816 0A       		.byte	0xa
 1275 0817 BB02     		.2byte	0x2bb
 1276 0819 00       		.byte	0
 1277 081a 00       		.byte	0
 1278 081b 00       		.byte	0
 1279 081c 13       		.uleb128 0x13
 1280 081d C0030000 		.4byte	.LASF136
 1281 0821 01       		.byte	0x1
 1282 0822 95       		.byte	0x95
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 44


 1283 0823 B7050000 		.4byte	0x5b7
 1284 0827 00000000 		.4byte	.LFB66
 1285 082b 38000000 		.4byte	.LFE66-.LFB66
 1286 082f 01       		.uleb128 0x1
 1287 0830 9C       		.byte	0x9c
 1288 0831 B6080000 		.4byte	0x8b6
 1289 0835 14       		.uleb128 0x14
 1290 0836 A6040000 		.4byte	.LASF122
 1291 083a 01       		.byte	0x1
 1292 083b 95       		.byte	0x95
 1293 083c E8050000 		.4byte	0x5e8
 1294 0840 66020000 		.4byte	.LLST15
 1295 0844 14       		.uleb128 0x14
 1296 0845 54050000 		.4byte	.LASF134
 1297 0849 01       		.byte	0x1
 1298 084a 95       		.byte	0x95
 1299 084b B6080000 		.4byte	0x8b6
 1300 084f 92020000 		.4byte	.LLST16
 1301 0853 15       		.uleb128 0x15
 1302 0854 2B090000 		.4byte	.LASF135
 1303 0858 01       		.byte	0x1
 1304 0859 97       		.byte	0x97
 1305 085a B7050000 		.4byte	0x5b7
 1306 085e BE020000 		.4byte	.LLST17
 1307 0862 16       		.uleb128 0x16
 1308 0863 C3050000 		.4byte	0x5c3
 1309 0867 10000000 		.4byte	.LBB26
 1310 086b 0C000000 		.4byte	.LBE26-.LBB26
 1311 086f 01       		.byte	0x1
 1312 0870 9B       		.byte	0x9b
 1313 0871 7F080000 		.4byte	0x87f
 1314 0875 17       		.uleb128 0x17
 1315 0876 D4050000 		.4byte	0x5d4
 1316 087a DD020000 		.4byte	.LLST18
 1317 087e 00       		.byte	0
 1318 087f 16       		.uleb128 0x16
 1319 0880 89060000 		.4byte	0x689
 1320 0884 20000000 		.4byte	.LBB28
 1321 0888 02000000 		.4byte	.LBE28-.LBB28
 1322 088c 01       		.byte	0x1
 1323 088d 9E       		.byte	0x9e
 1324 088e 9C080000 		.4byte	0x89c
 1325 0892 17       		.uleb128 0x17
 1326 0893 9A060000 		.4byte	0x69a
 1327 0897 F0020000 		.4byte	.LLST19
 1328 089b 00       		.byte	0
 1329 089c 19       		.uleb128 0x19
 1330 089d 10000000 		.4byte	.LVL28
 1331 08a1 D2080000 		.4byte	0x8d2
 1332 08a5 1A       		.uleb128 0x1a
 1333 08a6 01       		.uleb128 0x1
 1334 08a7 50       		.byte	0x50
 1335 08a8 05       		.uleb128 0x5
 1336 08a9 03       		.byte	0x3
 1337 08aa 40000000 		.4byte	.LC4
 1338 08ae 1A       		.uleb128 0x1a
 1339 08af 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 45


 1340 08b0 51       		.byte	0x51
 1341 08b1 02       		.uleb128 0x2
 1342 08b2 08       		.byte	0x8
 1343 08b3 99       		.byte	0x99
 1344 08b4 00       		.byte	0
 1345 08b5 00       		.byte	0
 1346 08b6 11       		.uleb128 0x11
 1347 08b7 04       		.byte	0x4
 1348 08b8 B8000000 		.4byte	0xb8
 1349 08bc 1B       		.uleb128 0x1b
 1350 08bd 98050000 		.4byte	.LASF140
 1351 08c1 06       		.byte	0x6
 1352 08c2 A7       		.byte	0xa7
 1353 08c3 C7080000 		.4byte	0x8c7
 1354 08c7 11       		.uleb128 0x11
 1355 08c8 04       		.byte	0x4
 1356 08c9 CD080000 		.4byte	0x8cd
 1357 08cd 06       		.uleb128 0x6
 1358 08ce 62050000 		.4byte	0x562
 1359 08d2 1C       		.uleb128 0x1c
 1360 08d3 B8070000 		.4byte	.LASF141
 1361 08d7 B8070000 		.4byte	.LASF141
 1362 08db 08       		.byte	0x8
 1363 08dc 9203     		.2byte	0x392
 1364 08de 00       		.byte	0
 1365              		.section	.debug_abbrev,"",%progbits
 1366              	.Ldebug_abbrev0:
 1367 0000 01       		.uleb128 0x1
 1368 0001 11       		.uleb128 0x11
 1369 0002 01       		.byte	0x1
 1370 0003 25       		.uleb128 0x25
 1371 0004 0E       		.uleb128 0xe
 1372 0005 13       		.uleb128 0x13
 1373 0006 0B       		.uleb128 0xb
 1374 0007 03       		.uleb128 0x3
 1375 0008 0E       		.uleb128 0xe
 1376 0009 1B       		.uleb128 0x1b
 1377 000a 0E       		.uleb128 0xe
 1378 000b 55       		.uleb128 0x55
 1379 000c 17       		.uleb128 0x17
 1380 000d 11       		.uleb128 0x11
 1381 000e 01       		.uleb128 0x1
 1382 000f 10       		.uleb128 0x10
 1383 0010 17       		.uleb128 0x17
 1384 0011 00       		.byte	0
 1385 0012 00       		.byte	0
 1386 0013 02       		.uleb128 0x2
 1387 0014 24       		.uleb128 0x24
 1388 0015 00       		.byte	0
 1389 0016 0B       		.uleb128 0xb
 1390 0017 0B       		.uleb128 0xb
 1391 0018 3E       		.uleb128 0x3e
 1392 0019 0B       		.uleb128 0xb
 1393 001a 03       		.uleb128 0x3
 1394 001b 0E       		.uleb128 0xe
 1395 001c 00       		.byte	0
 1396 001d 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 46


 1397 001e 03       		.uleb128 0x3
 1398 001f 16       		.uleb128 0x16
 1399 0020 00       		.byte	0
 1400 0021 03       		.uleb128 0x3
 1401 0022 0E       		.uleb128 0xe
 1402 0023 3A       		.uleb128 0x3a
 1403 0024 0B       		.uleb128 0xb
 1404 0025 3B       		.uleb128 0x3b
 1405 0026 0B       		.uleb128 0xb
 1406 0027 49       		.uleb128 0x49
 1407 0028 13       		.uleb128 0x13
 1408 0029 00       		.byte	0
 1409 002a 00       		.byte	0
 1410 002b 04       		.uleb128 0x4
 1411 002c 24       		.uleb128 0x24
 1412 002d 00       		.byte	0
 1413 002e 0B       		.uleb128 0xb
 1414 002f 0B       		.uleb128 0xb
 1415 0030 3E       		.uleb128 0x3e
 1416 0031 0B       		.uleb128 0xb
 1417 0032 03       		.uleb128 0x3
 1418 0033 08       		.uleb128 0x8
 1419 0034 00       		.byte	0
 1420 0035 00       		.byte	0
 1421 0036 05       		.uleb128 0x5
 1422 0037 35       		.uleb128 0x35
 1423 0038 00       		.byte	0
 1424 0039 49       		.uleb128 0x49
 1425 003a 13       		.uleb128 0x13
 1426 003b 00       		.byte	0
 1427 003c 00       		.byte	0
 1428 003d 06       		.uleb128 0x6
 1429 003e 26       		.uleb128 0x26
 1430 003f 00       		.byte	0
 1431 0040 49       		.uleb128 0x49
 1432 0041 13       		.uleb128 0x13
 1433 0042 00       		.byte	0
 1434 0043 00       		.byte	0
 1435 0044 07       		.uleb128 0x7
 1436 0045 01       		.uleb128 0x1
 1437 0046 01       		.byte	0x1
 1438 0047 49       		.uleb128 0x49
 1439 0048 13       		.uleb128 0x13
 1440 0049 01       		.uleb128 0x1
 1441 004a 13       		.uleb128 0x13
 1442 004b 00       		.byte	0
 1443 004c 00       		.byte	0
 1444 004d 08       		.uleb128 0x8
 1445 004e 21       		.uleb128 0x21
 1446 004f 00       		.byte	0
 1447 0050 49       		.uleb128 0x49
 1448 0051 13       		.uleb128 0x13
 1449 0052 2F       		.uleb128 0x2f
 1450 0053 0B       		.uleb128 0xb
 1451 0054 00       		.byte	0
 1452 0055 00       		.byte	0
 1453 0056 09       		.uleb128 0x9
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 47


 1454 0057 13       		.uleb128 0x13
 1455 0058 01       		.byte	0x1
 1456 0059 0B       		.uleb128 0xb
 1457 005a 0B       		.uleb128 0xb
 1458 005b 3A       		.uleb128 0x3a
 1459 005c 0B       		.uleb128 0xb
 1460 005d 3B       		.uleb128 0x3b
 1461 005e 0B       		.uleb128 0xb
 1462 005f 01       		.uleb128 0x1
 1463 0060 13       		.uleb128 0x13
 1464 0061 00       		.byte	0
 1465 0062 00       		.byte	0
 1466 0063 0A       		.uleb128 0xa
 1467 0064 0D       		.uleb128 0xd
 1468 0065 00       		.byte	0
 1469 0066 03       		.uleb128 0x3
 1470 0067 0E       		.uleb128 0xe
 1471 0068 3A       		.uleb128 0x3a
 1472 0069 0B       		.uleb128 0xb
 1473 006a 3B       		.uleb128 0x3b
 1474 006b 0B       		.uleb128 0xb
 1475 006c 49       		.uleb128 0x49
 1476 006d 13       		.uleb128 0x13
 1477 006e 38       		.uleb128 0x38
 1478 006f 0B       		.uleb128 0xb
 1479 0070 00       		.byte	0
 1480 0071 00       		.byte	0
 1481 0072 0B       		.uleb128 0xb
 1482 0073 16       		.uleb128 0x16
 1483 0074 00       		.byte	0
 1484 0075 03       		.uleb128 0x3
 1485 0076 0E       		.uleb128 0xe
 1486 0077 3A       		.uleb128 0x3a
 1487 0078 0B       		.uleb128 0xb
 1488 0079 3B       		.uleb128 0x3b
 1489 007a 05       		.uleb128 0x5
 1490 007b 49       		.uleb128 0x49
 1491 007c 13       		.uleb128 0x13
 1492 007d 00       		.byte	0
 1493 007e 00       		.byte	0
 1494 007f 0C       		.uleb128 0xc
 1495 0080 04       		.uleb128 0x4
 1496 0081 01       		.byte	0x1
 1497 0082 0B       		.uleb128 0xb
 1498 0083 0B       		.uleb128 0xb
 1499 0084 49       		.uleb128 0x49
 1500 0085 13       		.uleb128 0x13
 1501 0086 3A       		.uleb128 0x3a
 1502 0087 0B       		.uleb128 0xb
 1503 0088 3B       		.uleb128 0x3b
 1504 0089 05       		.uleb128 0x5
 1505 008a 01       		.uleb128 0x1
 1506 008b 13       		.uleb128 0x13
 1507 008c 00       		.byte	0
 1508 008d 00       		.byte	0
 1509 008e 0D       		.uleb128 0xd
 1510 008f 28       		.uleb128 0x28
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 48


 1511 0090 00       		.byte	0
 1512 0091 03       		.uleb128 0x3
 1513 0092 0E       		.uleb128 0xe
 1514 0093 1C       		.uleb128 0x1c
 1515 0094 0B       		.uleb128 0xb
 1516 0095 00       		.byte	0
 1517 0096 00       		.byte	0
 1518 0097 0E       		.uleb128 0xe
 1519 0098 28       		.uleb128 0x28
 1520 0099 00       		.byte	0
 1521 009a 03       		.uleb128 0x3
 1522 009b 0E       		.uleb128 0xe
 1523 009c 1C       		.uleb128 0x1c
 1524 009d 06       		.uleb128 0x6
 1525 009e 00       		.byte	0
 1526 009f 00       		.byte	0
 1527 00a0 0F       		.uleb128 0xf
 1528 00a1 2E       		.uleb128 0x2e
 1529 00a2 01       		.byte	0x1
 1530 00a3 03       		.uleb128 0x3
 1531 00a4 0E       		.uleb128 0xe
 1532 00a5 3A       		.uleb128 0x3a
 1533 00a6 0B       		.uleb128 0xb
 1534 00a7 3B       		.uleb128 0x3b
 1535 00a8 05       		.uleb128 0x5
 1536 00a9 27       		.uleb128 0x27
 1537 00aa 19       		.uleb128 0x19
 1538 00ab 49       		.uleb128 0x49
 1539 00ac 13       		.uleb128 0x13
 1540 00ad 20       		.uleb128 0x20
 1541 00ae 0B       		.uleb128 0xb
 1542 00af 01       		.uleb128 0x1
 1543 00b0 13       		.uleb128 0x13
 1544 00b1 00       		.byte	0
 1545 00b2 00       		.byte	0
 1546 00b3 10       		.uleb128 0x10
 1547 00b4 05       		.uleb128 0x5
 1548 00b5 00       		.byte	0
 1549 00b6 03       		.uleb128 0x3
 1550 00b7 0E       		.uleb128 0xe
 1551 00b8 3A       		.uleb128 0x3a
 1552 00b9 0B       		.uleb128 0xb
 1553 00ba 3B       		.uleb128 0x3b
 1554 00bb 05       		.uleb128 0x5
 1555 00bc 49       		.uleb128 0x49
 1556 00bd 13       		.uleb128 0x13
 1557 00be 00       		.byte	0
 1558 00bf 00       		.byte	0
 1559 00c0 11       		.uleb128 0x11
 1560 00c1 0F       		.uleb128 0xf
 1561 00c2 00       		.byte	0
 1562 00c3 0B       		.uleb128 0xb
 1563 00c4 0B       		.uleb128 0xb
 1564 00c5 49       		.uleb128 0x49
 1565 00c6 13       		.uleb128 0x13
 1566 00c7 00       		.byte	0
 1567 00c8 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 49


 1568 00c9 12       		.uleb128 0x12
 1569 00ca 2E       		.uleb128 0x2e
 1570 00cb 01       		.byte	0x1
 1571 00cc 03       		.uleb128 0x3
 1572 00cd 0E       		.uleb128 0xe
 1573 00ce 3A       		.uleb128 0x3a
 1574 00cf 0B       		.uleb128 0xb
 1575 00d0 3B       		.uleb128 0x3b
 1576 00d1 05       		.uleb128 0x5
 1577 00d2 27       		.uleb128 0x27
 1578 00d3 19       		.uleb128 0x19
 1579 00d4 20       		.uleb128 0x20
 1580 00d5 0B       		.uleb128 0xb
 1581 00d6 01       		.uleb128 0x1
 1582 00d7 13       		.uleb128 0x13
 1583 00d8 00       		.byte	0
 1584 00d9 00       		.byte	0
 1585 00da 13       		.uleb128 0x13
 1586 00db 2E       		.uleb128 0x2e
 1587 00dc 01       		.byte	0x1
 1588 00dd 3F       		.uleb128 0x3f
 1589 00de 19       		.uleb128 0x19
 1590 00df 03       		.uleb128 0x3
 1591 00e0 0E       		.uleb128 0xe
 1592 00e1 3A       		.uleb128 0x3a
 1593 00e2 0B       		.uleb128 0xb
 1594 00e3 3B       		.uleb128 0x3b
 1595 00e4 0B       		.uleb128 0xb
 1596 00e5 27       		.uleb128 0x27
 1597 00e6 19       		.uleb128 0x19
 1598 00e7 49       		.uleb128 0x49
 1599 00e8 13       		.uleb128 0x13
 1600 00e9 11       		.uleb128 0x11
 1601 00ea 01       		.uleb128 0x1
 1602 00eb 12       		.uleb128 0x12
 1603 00ec 06       		.uleb128 0x6
 1604 00ed 40       		.uleb128 0x40
 1605 00ee 18       		.uleb128 0x18
 1606 00ef 9742     		.uleb128 0x2117
 1607 00f1 19       		.uleb128 0x19
 1608 00f2 01       		.uleb128 0x1
 1609 00f3 13       		.uleb128 0x13
 1610 00f4 00       		.byte	0
 1611 00f5 00       		.byte	0
 1612 00f6 14       		.uleb128 0x14
 1613 00f7 05       		.uleb128 0x5
 1614 00f8 00       		.byte	0
 1615 00f9 03       		.uleb128 0x3
 1616 00fa 0E       		.uleb128 0xe
 1617 00fb 3A       		.uleb128 0x3a
 1618 00fc 0B       		.uleb128 0xb
 1619 00fd 3B       		.uleb128 0x3b
 1620 00fe 0B       		.uleb128 0xb
 1621 00ff 49       		.uleb128 0x49
 1622 0100 13       		.uleb128 0x13
 1623 0101 02       		.uleb128 0x2
 1624 0102 17       		.uleb128 0x17
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 50


 1625 0103 00       		.byte	0
 1626 0104 00       		.byte	0
 1627 0105 15       		.uleb128 0x15
 1628 0106 34       		.uleb128 0x34
 1629 0107 00       		.byte	0
 1630 0108 03       		.uleb128 0x3
 1631 0109 0E       		.uleb128 0xe
 1632 010a 3A       		.uleb128 0x3a
 1633 010b 0B       		.uleb128 0xb
 1634 010c 3B       		.uleb128 0x3b
 1635 010d 0B       		.uleb128 0xb
 1636 010e 49       		.uleb128 0x49
 1637 010f 13       		.uleb128 0x13
 1638 0110 02       		.uleb128 0x2
 1639 0111 17       		.uleb128 0x17
 1640 0112 00       		.byte	0
 1641 0113 00       		.byte	0
 1642 0114 16       		.uleb128 0x16
 1643 0115 1D       		.uleb128 0x1d
 1644 0116 01       		.byte	0x1
 1645 0117 31       		.uleb128 0x31
 1646 0118 13       		.uleb128 0x13
 1647 0119 11       		.uleb128 0x11
 1648 011a 01       		.uleb128 0x1
 1649 011b 12       		.uleb128 0x12
 1650 011c 06       		.uleb128 0x6
 1651 011d 58       		.uleb128 0x58
 1652 011e 0B       		.uleb128 0xb
 1653 011f 59       		.uleb128 0x59
 1654 0120 0B       		.uleb128 0xb
 1655 0121 01       		.uleb128 0x1
 1656 0122 13       		.uleb128 0x13
 1657 0123 00       		.byte	0
 1658 0124 00       		.byte	0
 1659 0125 17       		.uleb128 0x17
 1660 0126 05       		.uleb128 0x5
 1661 0127 00       		.byte	0
 1662 0128 31       		.uleb128 0x31
 1663 0129 13       		.uleb128 0x13
 1664 012a 02       		.uleb128 0x2
 1665 012b 17       		.uleb128 0x17
 1666 012c 00       		.byte	0
 1667 012d 00       		.byte	0
 1668 012e 18       		.uleb128 0x18
 1669 012f 1D       		.uleb128 0x1d
 1670 0130 01       		.byte	0x1
 1671 0131 31       		.uleb128 0x31
 1672 0132 13       		.uleb128 0x13
 1673 0133 11       		.uleb128 0x11
 1674 0134 01       		.uleb128 0x1
 1675 0135 12       		.uleb128 0x12
 1676 0136 06       		.uleb128 0x6
 1677 0137 58       		.uleb128 0x58
 1678 0138 0B       		.uleb128 0xb
 1679 0139 59       		.uleb128 0x59
 1680 013a 0B       		.uleb128 0xb
 1681 013b 00       		.byte	0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 51


 1682 013c 00       		.byte	0
 1683 013d 19       		.uleb128 0x19
 1684 013e 898201   		.uleb128 0x4109
 1685 0141 01       		.byte	0x1
 1686 0142 11       		.uleb128 0x11
 1687 0143 01       		.uleb128 0x1
 1688 0144 31       		.uleb128 0x31
 1689 0145 13       		.uleb128 0x13
 1690 0146 00       		.byte	0
 1691 0147 00       		.byte	0
 1692 0148 1A       		.uleb128 0x1a
 1693 0149 8A8201   		.uleb128 0x410a
 1694 014c 00       		.byte	0
 1695 014d 02       		.uleb128 0x2
 1696 014e 18       		.uleb128 0x18
 1697 014f 9142     		.uleb128 0x2111
 1698 0151 18       		.uleb128 0x18
 1699 0152 00       		.byte	0
 1700 0153 00       		.byte	0
 1701 0154 1B       		.uleb128 0x1b
 1702 0155 34       		.uleb128 0x34
 1703 0156 00       		.byte	0
 1704 0157 03       		.uleb128 0x3
 1705 0158 0E       		.uleb128 0xe
 1706 0159 3A       		.uleb128 0x3a
 1707 015a 0B       		.uleb128 0xb
 1708 015b 3B       		.uleb128 0x3b
 1709 015c 0B       		.uleb128 0xb
 1710 015d 49       		.uleb128 0x49
 1711 015e 13       		.uleb128 0x13
 1712 015f 3F       		.uleb128 0x3f
 1713 0160 19       		.uleb128 0x19
 1714 0161 3C       		.uleb128 0x3c
 1715 0162 19       		.uleb128 0x19
 1716 0163 00       		.byte	0
 1717 0164 00       		.byte	0
 1718 0165 1C       		.uleb128 0x1c
 1719 0166 2E       		.uleb128 0x2e
 1720 0167 00       		.byte	0
 1721 0168 3F       		.uleb128 0x3f
 1722 0169 19       		.uleb128 0x19
 1723 016a 3C       		.uleb128 0x3c
 1724 016b 19       		.uleb128 0x19
 1725 016c 6E       		.uleb128 0x6e
 1726 016d 0E       		.uleb128 0xe
 1727 016e 03       		.uleb128 0x3
 1728 016f 0E       		.uleb128 0xe
 1729 0170 3A       		.uleb128 0x3a
 1730 0171 0B       		.uleb128 0xb
 1731 0172 3B       		.uleb128 0x3b
 1732 0173 05       		.uleb128 0x5
 1733 0174 00       		.byte	0
 1734 0175 00       		.byte	0
 1735 0176 00       		.byte	0
 1736              		.section	.debug_loc,"",%progbits
 1737              	.Ldebug_loc0:
 1738              	.LLST0:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 52


 1739 0000 00000000 		.4byte	.LVL0
 1740 0004 1E000000 		.4byte	.LVL5
 1741 0008 0100     		.2byte	0x1
 1742 000a 50       		.byte	0x50
 1743 000b 1E000000 		.4byte	.LVL5
 1744 000f 2C000000 		.4byte	.LVL9
 1745 0013 0100     		.2byte	0x1
 1746 0015 54       		.byte	0x54
 1747 0016 2C000000 		.4byte	.LVL9
 1748 001a 2E000000 		.4byte	.LVL10
 1749 001e 0100     		.2byte	0x1
 1750 0020 50       		.byte	0x50
 1751 0021 2E000000 		.4byte	.LVL10
 1752 0025 2E000000 		.4byte	.LVL11
 1753 0029 0100     		.2byte	0x1
 1754 002b 54       		.byte	0x54
 1755 002c 2E000000 		.4byte	.LVL11
 1756 0030 40000000 		.4byte	.LFE64
 1757 0034 0400     		.2byte	0x4
 1758 0036 F3       		.byte	0xf3
 1759 0037 01       		.uleb128 0x1
 1760 0038 50       		.byte	0x50
 1761 0039 9F       		.byte	0x9f
 1762 003a 00000000 		.4byte	0
 1763 003e 00000000 		.4byte	0
 1764              	.LLST1:
 1765 0042 00000000 		.4byte	.LVL0
 1766 0046 1C000000 		.4byte	.LVL4
 1767 004a 0100     		.2byte	0x1
 1768 004c 51       		.byte	0x51
 1769 004d 1C000000 		.4byte	.LVL4
 1770 0051 24000000 		.4byte	.LVL7
 1771 0055 0100     		.2byte	0x1
 1772 0057 55       		.byte	0x55
 1773 0058 24000000 		.4byte	.LVL7
 1774 005c 2C000000 		.4byte	.LVL9
 1775 0060 0400     		.2byte	0x4
 1776 0062 F3       		.byte	0xf3
 1777 0063 01       		.uleb128 0x1
 1778 0064 51       		.byte	0x51
 1779 0065 9F       		.byte	0x9f
 1780 0066 2C000000 		.4byte	.LVL9
 1781 006a 2E000000 		.4byte	.LVL10
 1782 006e 0100     		.2byte	0x1
 1783 0070 51       		.byte	0x51
 1784 0071 2E000000 		.4byte	.LVL10
 1785 0075 40000000 		.4byte	.LFE64
 1786 0079 0400     		.2byte	0x4
 1787 007b F3       		.byte	0xf3
 1788 007c 01       		.uleb128 0x1
 1789 007d 51       		.byte	0x51
 1790 007e 9F       		.byte	0x9f
 1791 007f 00000000 		.4byte	0
 1792 0083 00000000 		.4byte	0
 1793              	.LLST2:
 1794 0087 28000000 		.4byte	.LVL8
 1795 008b 2C000000 		.4byte	.LVL9
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 53


 1796 008f 0200     		.2byte	0x2
 1797 0091 30       		.byte	0x30
 1798 0092 9F       		.byte	0x9f
 1799 0093 2E000000 		.4byte	.LVL10
 1800 0097 40000000 		.4byte	.LFE64
 1801 009b 0100     		.2byte	0x1
 1802 009d 50       		.byte	0x50
 1803 009e 00000000 		.4byte	0
 1804 00a2 00000000 		.4byte	0
 1805              	.LLST3:
 1806 00a6 06000000 		.4byte	.LVL1
 1807 00aa 12000000 		.4byte	.LVL2
 1808 00ae 0100     		.2byte	0x1
 1809 00b0 50       		.byte	0x50
 1810 00b1 00000000 		.4byte	0
 1811 00b5 00000000 		.4byte	0
 1812              	.LLST4:
 1813 00b9 16000000 		.4byte	.LVL3
 1814 00bd 1C000000 		.4byte	.LVL4
 1815 00c1 0100     		.2byte	0x1
 1816 00c3 51       		.byte	0x51
 1817 00c4 1C000000 		.4byte	.LVL4
 1818 00c8 24000000 		.4byte	.LVL7
 1819 00cc 0100     		.2byte	0x1
 1820 00ce 55       		.byte	0x55
 1821 00cf 24000000 		.4byte	.LVL7
 1822 00d3 28000000 		.4byte	.LVL8
 1823 00d7 0400     		.2byte	0x4
 1824 00d9 F3       		.byte	0xf3
 1825 00da 01       		.uleb128 0x1
 1826 00db 51       		.byte	0x51
 1827 00dc 9F       		.byte	0x9f
 1828 00dd 00000000 		.4byte	0
 1829 00e1 00000000 		.4byte	0
 1830              	.LLST5:
 1831 00e5 16000000 		.4byte	.LVL3
 1832 00e9 1E000000 		.4byte	.LVL5
 1833 00ed 0100     		.2byte	0x1
 1834 00ef 50       		.byte	0x50
 1835 00f0 1E000000 		.4byte	.LVL5
 1836 00f4 28000000 		.4byte	.LVL8
 1837 00f8 0100     		.2byte	0x1
 1838 00fa 54       		.byte	0x54
 1839 00fb 00000000 		.4byte	0
 1840 00ff 00000000 		.4byte	0
 1841              	.LLST6:
 1842 0103 00000000 		.4byte	.LVL12
 1843 0107 20000000 		.4byte	.LVL18
 1844 010b 0100     		.2byte	0x1
 1845 010d 50       		.byte	0x50
 1846 010e 20000000 		.4byte	.LVL18
 1847 0112 2E000000 		.4byte	.LVL22
 1848 0116 0100     		.2byte	0x1
 1849 0118 55       		.byte	0x55
 1850 0119 2E000000 		.4byte	.LVL22
 1851 011d 30000000 		.4byte	.LVL23
 1852 0121 0100     		.2byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 54


 1853 0123 50       		.byte	0x50
 1854 0124 30000000 		.4byte	.LVL23
 1855 0128 30000000 		.4byte	.LVL24
 1856 012c 0100     		.2byte	0x1
 1857 012e 55       		.byte	0x55
 1858 012f 30000000 		.4byte	.LVL24
 1859 0133 40000000 		.4byte	.LFE65
 1860 0137 0400     		.2byte	0x4
 1861 0139 F3       		.byte	0xf3
 1862 013a 01       		.uleb128 0x1
 1863 013b 50       		.byte	0x50
 1864 013c 9F       		.byte	0x9f
 1865 013d 00000000 		.4byte	0
 1866 0141 00000000 		.4byte	0
 1867              	.LLST7:
 1868 0145 00000000 		.4byte	.LVL12
 1869 0149 1E000000 		.4byte	.LVL17
 1870 014d 0100     		.2byte	0x1
 1871 014f 51       		.byte	0x51
 1872 0150 1E000000 		.4byte	.LVL17
 1873 0154 26000000 		.4byte	.LVL20
 1874 0158 0100     		.2byte	0x1
 1875 015a 54       		.byte	0x54
 1876 015b 26000000 		.4byte	.LVL20
 1877 015f 2E000000 		.4byte	.LVL22
 1878 0163 0400     		.2byte	0x4
 1879 0165 F3       		.byte	0xf3
 1880 0166 01       		.uleb128 0x1
 1881 0167 51       		.byte	0x51
 1882 0168 9F       		.byte	0x9f
 1883 0169 2E000000 		.4byte	.LVL22
 1884 016d 30000000 		.4byte	.LVL23
 1885 0171 0100     		.2byte	0x1
 1886 0173 51       		.byte	0x51
 1887 0174 30000000 		.4byte	.LVL23
 1888 0178 40000000 		.4byte	.LFE65
 1889 017c 0400     		.2byte	0x4
 1890 017e F3       		.byte	0xf3
 1891 017f 01       		.uleb128 0x1
 1892 0180 51       		.byte	0x51
 1893 0181 9F       		.byte	0x9f
 1894 0182 00000000 		.4byte	0
 1895 0186 00000000 		.4byte	0
 1896              	.LLST8:
 1897 018a 00000000 		.4byte	.LVL12
 1898 018e 23000000 		.4byte	.LVL19-1
 1899 0192 0100     		.2byte	0x1
 1900 0194 52       		.byte	0x52
 1901 0195 23000000 		.4byte	.LVL19-1
 1902 0199 2E000000 		.4byte	.LVL22
 1903 019d 0400     		.2byte	0x4
 1904 019f F3       		.byte	0xf3
 1905 01a0 01       		.uleb128 0x1
 1906 01a1 52       		.byte	0x52
 1907 01a2 9F       		.byte	0x9f
 1908 01a3 2E000000 		.4byte	.LVL22
 1909 01a7 30000000 		.4byte	.LVL23
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 55


 1910 01ab 0100     		.2byte	0x1
 1911 01ad 52       		.byte	0x52
 1912 01ae 30000000 		.4byte	.LVL23
 1913 01b2 40000000 		.4byte	.LFE65
 1914 01b6 0400     		.2byte	0x4
 1915 01b8 F3       		.byte	0xf3
 1916 01b9 01       		.uleb128 0x1
 1917 01ba 52       		.byte	0x52
 1918 01bb 9F       		.byte	0x9f
 1919 01bc 00000000 		.4byte	0
 1920 01c0 00000000 		.4byte	0
 1921              	.LLST9:
 1922 01c4 2A000000 		.4byte	.LVL21
 1923 01c8 2E000000 		.4byte	.LVL22
 1924 01cc 0200     		.2byte	0x2
 1925 01ce 30       		.byte	0x30
 1926 01cf 9F       		.byte	0x9f
 1927 01d0 30000000 		.4byte	.LVL23
 1928 01d4 40000000 		.4byte	.LFE65
 1929 01d8 0100     		.2byte	0x1
 1930 01da 50       		.byte	0x50
 1931 01db 00000000 		.4byte	0
 1932 01df 00000000 		.4byte	0
 1933              	.LLST10:
 1934 01e3 06000000 		.4byte	.LVL13
 1935 01e7 12000000 		.4byte	.LVL14
 1936 01eb 0100     		.2byte	0x1
 1937 01ed 50       		.byte	0x50
 1938 01ee 00000000 		.4byte	0
 1939 01f2 00000000 		.4byte	0
 1940              	.LLST11:
 1941 01f6 16000000 		.4byte	.LVL15
 1942 01fa 18000000 		.4byte	.LVL16
 1943 01fe 0100     		.2byte	0x1
 1944 0200 52       		.byte	0x52
 1945 0201 00000000 		.4byte	0
 1946 0205 00000000 		.4byte	0
 1947              	.LLST12:
 1948 0209 16000000 		.4byte	.LVL15
 1949 020d 18000000 		.4byte	.LVL16
 1950 0211 0100     		.2byte	0x1
 1951 0213 50       		.byte	0x50
 1952 0214 00000000 		.4byte	0
 1953 0218 00000000 		.4byte	0
 1954              	.LLST13:
 1955 021c 18000000 		.4byte	.LVL16
 1956 0220 1E000000 		.4byte	.LVL17
 1957 0224 0100     		.2byte	0x1
 1958 0226 51       		.byte	0x51
 1959 0227 1E000000 		.4byte	.LVL17
 1960 022b 26000000 		.4byte	.LVL20
 1961 022f 0100     		.2byte	0x1
 1962 0231 54       		.byte	0x54
 1963 0232 26000000 		.4byte	.LVL20
 1964 0236 2A000000 		.4byte	.LVL21
 1965 023a 0400     		.2byte	0x4
 1966 023c F3       		.byte	0xf3
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 56


 1967 023d 01       		.uleb128 0x1
 1968 023e 51       		.byte	0x51
 1969 023f 9F       		.byte	0x9f
 1970 0240 00000000 		.4byte	0
 1971 0244 00000000 		.4byte	0
 1972              	.LLST14:
 1973 0248 18000000 		.4byte	.LVL16
 1974 024c 20000000 		.4byte	.LVL18
 1975 0250 0100     		.2byte	0x1
 1976 0252 50       		.byte	0x50
 1977 0253 20000000 		.4byte	.LVL18
 1978 0257 2A000000 		.4byte	.LVL21
 1979 025b 0100     		.2byte	0x1
 1980 025d 55       		.byte	0x55
 1981 025e 00000000 		.4byte	0
 1982 0262 00000000 		.4byte	0
 1983              	.LLST15:
 1984 0266 00000000 		.4byte	.LVL25
 1985 026a 0C000000 		.4byte	.LVL27
 1986 026e 0100     		.2byte	0x1
 1987 0270 50       		.byte	0x50
 1988 0271 0C000000 		.4byte	.LVL27
 1989 0275 2A000000 		.4byte	.LVL36
 1990 0279 0100     		.2byte	0x1
 1991 027b 55       		.byte	0x55
 1992 027c 2A000000 		.4byte	.LVL36
 1993 0280 38000000 		.4byte	.LFE66
 1994 0284 0400     		.2byte	0x4
 1995 0286 F3       		.byte	0xf3
 1996 0287 01       		.uleb128 0x1
 1997 0288 50       		.byte	0x50
 1998 0289 9F       		.byte	0x9f
 1999 028a 00000000 		.4byte	0
 2000 028e 00000000 		.4byte	0
 2001              	.LLST16:
 2002 0292 00000000 		.4byte	.LVL25
 2003 0296 0A000000 		.4byte	.LVL26
 2004 029a 0100     		.2byte	0x1
 2005 029c 51       		.byte	0x51
 2006 029d 0A000000 		.4byte	.LVL26
 2007 02a1 2A000000 		.4byte	.LVL35
 2008 02a5 0100     		.2byte	0x1
 2009 02a7 54       		.byte	0x54
 2010 02a8 2A000000 		.4byte	.LVL35
 2011 02ac 38000000 		.4byte	.LFE66
 2012 02b0 0400     		.2byte	0x4
 2013 02b2 F3       		.byte	0xf3
 2014 02b3 01       		.uleb128 0x1
 2015 02b4 51       		.byte	0x51
 2016 02b5 9F       		.byte	0x9f
 2017 02b6 00000000 		.4byte	0
 2018 02ba 00000000 		.4byte	0
 2019              	.LLST17:
 2020 02be 24000000 		.4byte	.LVL32
 2021 02c2 28000000 		.4byte	.LVL33
 2022 02c6 0200     		.2byte	0x2
 2023 02c8 30       		.byte	0x30
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 57


 2024 02c9 9F       		.byte	0x9f
 2025 02ca 2A000000 		.4byte	.LVL34
 2026 02ce 38000000 		.4byte	.LFE66
 2027 02d2 0100     		.2byte	0x1
 2028 02d4 50       		.byte	0x50
 2029 02d5 00000000 		.4byte	0
 2030 02d9 00000000 		.4byte	0
 2031              	.LLST18:
 2032 02dd 10000000 		.4byte	.LVL28
 2033 02e1 1C000000 		.4byte	.LVL29
 2034 02e5 0100     		.2byte	0x1
 2035 02e7 55       		.byte	0x55
 2036 02e8 00000000 		.4byte	0
 2037 02ec 00000000 		.4byte	0
 2038              	.LLST19:
 2039 02f0 20000000 		.4byte	.LVL30
 2040 02f4 22000000 		.4byte	.LVL31
 2041 02f8 0100     		.2byte	0x1
 2042 02fa 55       		.byte	0x55
 2043 02fb 00000000 		.4byte	0
 2044 02ff 00000000 		.4byte	0
 2045              		.section	.debug_aranges,"",%progbits
 2046 0000 2C000000 		.4byte	0x2c
 2047 0004 0200     		.2byte	0x2
 2048 0006 00000000 		.4byte	.Ldebug_info0
 2049 000a 04       		.byte	0x4
 2050 000b 00       		.byte	0
 2051 000c 0000     		.2byte	0
 2052 000e 0000     		.2byte	0
 2053 0010 00000000 		.4byte	.LFB64
 2054 0014 40000000 		.4byte	.LFE64-.LFB64
 2055 0018 00000000 		.4byte	.LFB65
 2056 001c 40000000 		.4byte	.LFE65-.LFB65
 2057 0020 00000000 		.4byte	.LFB66
 2058 0024 38000000 		.4byte	.LFE66-.LFB66
 2059 0028 00000000 		.4byte	0
 2060 002c 00000000 		.4byte	0
 2061              		.section	.debug_ranges,"",%progbits
 2062              	.Ldebug_ranges0:
 2063 0000 00000000 		.4byte	.LFB64
 2064 0004 40000000 		.4byte	.LFE64
 2065 0008 00000000 		.4byte	.LFB65
 2066 000c 40000000 		.4byte	.LFE65
 2067 0010 00000000 		.4byte	.LFB66
 2068 0014 38000000 		.4byte	.LFE66
 2069 0018 00000000 		.4byte	0
 2070 001c 00000000 		.4byte	0
 2071              		.section	.debug_line,"",%progbits
 2072              	.Ldebug_line0:
 2073 0000 0B030000 		.section	.debug_str,"MS",%progbits,1
 2073      02007A02 
 2073      00000201 
 2073      FB0E0D00 
 2073      01010101 
 2074              	.LASF61:
 2075 0000 70726F74 		.ascii	"protBusMasterMask\000"
 2075      4275734D 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 58


 2075      61737465 
 2075      724D6173 
 2075      6B00
 2076              	.LASF139:
 2077 0012 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\Onethinx_Project_Exampl"
 2077      635C4461 
 2077      74615C56 
 2077      53636F64 
 2077      655C4749 
 2078 003f 65735C45 		.ascii	"es\\Example_LoRa\\Onethinx_Creator.cydsn\000"
 2078      78616D70 
 2078      6C655F4C 
 2078      6F52615C 
 2078      4F6E6574 
 2079              	.LASF71:
 2080 0066 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 2080      6843746C 
 2080      4D61696E 
 2080      57733346 
 2080      72657100 
 2081              	.LASF93:
 2082 007a 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 2082      50727443 
 2082      6667496E 
 2082      4F666673 
 2082      657400
 2083              	.LASF111:
 2084 008d 6970634C 		.ascii	"ipcLockStatusOffset\000"
 2084      6F636B53 
 2084      74617475 
 2084      734F6666 
 2084      73657400 
 2085              	.LASF37:
 2086 00a1 63727970 		.ascii	"cryptoVersion\000"
 2086      746F5665 
 2086      7273696F 
 2086      6E00
 2087              	.LASF119:
 2088 00af 43595F49 		.ascii	"CY_IPC_DRV_ERROR\000"
 2088      50435F44 
 2088      52565F45 
 2088      52524F52 
 2088      00
 2089              	.LASF33:
 2090 00c0 70617373 		.ascii	"passBase\000"
 2090      42617365 
 2090      00
 2091              	.LASF46:
 2092 00c9 63707573 		.ascii	"cpussIpcIrqNr\000"
 2092      73497063 
 2092      4972714E 
 2092      7200
 2093              	.LASF2:
 2094 00d7 5F5F7569 		.ascii	"__uint8_t\000"
 2094      6E74385F 
 2094      7400
 2095              	.LASF90:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 59


 2096 00e1 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 2096      44697632 
 2096      345F3543 
 2096      746C4F66 
 2096      66736574 
 2097              	.LASF97:
 2098 00f6 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 2098      73436D34 
 2098      436C6F63 
 2098      6B43746C 
 2098      4F666673 
 2099              	.LASF20:
 2100 010d 52454C45 		.ascii	"RELEASE\000"
 2100      41534500 
 2101              	.LASF26:
 2102 0115 63707573 		.ascii	"cpussBase\000"
 2102      73426173 
 2102      6500
 2103              	.LASF75:
 2104 011f 64774368 		.ascii	"dwChCtlPrioPos\000"
 2104      43746C50 
 2104      72696F50 
 2104      6F7300
 2105              	.LASF55:
 2106 012e 70657269 		.ascii	"periClockNr\000"
 2106      436C6F63 
 2106      6B4E7200 
 2107              	.LASF11:
 2108 013a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2108      206C6F6E 
 2108      6720756E 
 2108      7369676E 
 2108      65642069 
 2109              	.LASF79:
 2110 0151 70657269 		.ascii	"periTrCmdOffset\000"
 2110      5472436D 
 2110      644F6666 
 2110      73657400 
 2111              	.LASF103:
 2112 0161 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2112      73537973 
 2112      5469636B 
 2112      43746C4F 
 2112      66667365 
 2113              	.LASF64:
 2114 0177 666C6173 		.ascii	"flashPipeRequired\000"
 2114      68506970 
 2114      65526571 
 2114      75697265 
 2114      6400
 2115              	.LASF29:
 2116 0189 75646242 		.ascii	"udbBase\000"
 2116      61736500 
 2117              	.LASF68:
 2118 0191 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2118      6843746C 
 2118      4D61696E 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 60


 2118      57733046 
 2118      72657100 
 2119              	.LASF14:
 2120 01a5 696E7431 		.ascii	"int16_t\000"
 2120      365F7400 
 2121              	.LASF10:
 2122 01ad 6C6F6E67 		.ascii	"long long int\000"
 2122      206C6F6E 
 2122      6720696E 
 2122      7400
 2123              	.LASF0:
 2124 01bb 7369676E 		.ascii	"signed char\000"
 2124      65642063 
 2124      68617200 
 2125              	.LASF84:
 2126 01c7 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2126      44697643 
 2126      6D645479 
 2126      70655365 
 2126      6C506F73 
 2127              	.LASF19:
 2128 01dc 41435155 		.ascii	"ACQUIRE\000"
 2128      49524500 
 2129              	.LASF101:
 2130 01e4 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2130      73547269 
 2130      6D52616D 
 2130      43746C4F 
 2130      66667365 
 2131              	.LASF42:
 2132 01fa 69706356 		.ascii	"ipcVersion\000"
 2132      65727369 
 2132      6F6E00
 2133              	.LASF104:
 2134 0205 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2134      73436D30 
 2134      4E6D6943 
 2134      746C4F66 
 2134      66736574 
 2135              	.LASF123:
 2136 021a 6E6F7469 		.ascii	"notifyEventIntr\000"
 2136      66794576 
 2136      656E7449 
 2136      6E747200 
 2137              	.LASF31:
 2138 022a 6873696F 		.ascii	"hsiomBase\000"
 2138      6D426173 
 2138      6500
 2139              	.LASF7:
 2140 0234 6C6F6E67 		.ascii	"long int\000"
 2140      20696E74 
 2140      00
 2141              	.LASF62:
 2142 023d 63727970 		.ascii	"cryptoMemSize\000"
 2142      746F4D65 
 2142      6D53697A 
 2142      6500
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 61


 2143              	.LASF28:
 2144 024b 70657269 		.ascii	"periBase\000"
 2144      42617365 
 2144      00
 2145              	.LASF60:
 2146 0254 73797350 		.ascii	"sysPmSimoPresent\000"
 2146      6D53696D 
 2146      6F507265 
 2146      73656E74 
 2146      00
 2147              	.LASF50:
 2148 0265 63707573 		.ascii	"cpussFmIrq\000"
 2148      73466D49 
 2148      727100
 2149              	.LASF117:
 2150 0270 646F7562 		.ascii	"double\000"
 2150      6C6500
 2151              	.LASF89:
 2152 0277 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2152      44697631 
 2152      365F3543 
 2152      746C4F66 
 2152      66736574 
 2153              	.LASF53:
 2154 028c 73727373 		.ascii	"srssNumPll\000"
 2154      4E756D50 
 2154      6C6C00
 2155              	.LASF132:
 2156 0297 43795F49 		.ascii	"Cy_IPC_Drv_LockRelease\000"
 2156      50435F44 
 2156      72765F4C 
 2156      6F636B52 
 2156      656C6561 
 2157              	.LASF87:
 2158 02ae 70657269 		.ascii	"periDiv8CtlOffset\000"
 2158      44697638 
 2158      43746C4F 
 2158      66667365 
 2158      7400
 2159              	.LASF6:
 2160 02c0 73686F72 		.ascii	"short unsigned int\000"
 2160      7420756E 
 2160      7369676E 
 2160      65642069 
 2160      6E7400
 2161              	.LASF94:
 2162 02d3 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2162      50727443 
 2162      66674F75 
 2162      744F6666 
 2162      73657400 
 2163              	.LASF27:
 2164 02e7 666C6173 		.ascii	"flashcBase\000"
 2164      68634261 
 2164      736500
 2165              	.LASF8:
 2166 02f2 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 62


 2166      6E743332 
 2166      5F7400
 2167              	.LASF57:
 2168 02fd 70617373 		.ascii	"passSarChannels\000"
 2168      53617243 
 2168      68616E6E 
 2168      656C7300 
 2169              	.LASF23:
 2170 030d 4C4F434B 		.ascii	"LOCK_STATUS\000"
 2170      5F535441 
 2170      54555300 
 2171              	.LASF3:
 2172 0319 5F5F696E 		.ascii	"__int16_t\000"
 2172      7431365F 
 2172      7400
 2173              	.LASF118:
 2174 0323 43595F49 		.ascii	"CY_IPC_DRV_SUCCESS\000"
 2174      50435F44 
 2174      52565F53 
 2174      55434345 
 2174      535300
 2175              	.LASF100:
 2176 0336 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2176      73436D34 
 2176      50777243 
 2176      746C4F66 
 2176      66736574 
 2177              	.LASF95:
 2178 034b 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2178      50727443 
 2178      66675369 
 2178      6F4F6666 
 2178      73657400 
 2179              	.LASF47:
 2180 035f 63707573 		.ascii	"cpussDwChNr\000"
 2180      73447743 
 2180      684E7200 
 2181              	.LASF12:
 2182 036b 756E7369 		.ascii	"unsigned int\000"
 2182      676E6564 
 2182      20696E74 
 2182      00
 2183              	.LASF15:
 2184 0378 75696E74 		.ascii	"uint16_t\000"
 2184      31365F74 
 2184      00
 2185              	.LASF114:
 2186 0381 63686172 		.ascii	"char_t\000"
 2186      5F7400
 2187              	.LASF80:
 2188 0388 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2188      5472436D 
 2188      64477253 
 2188      656C4D73 
 2188      6B00
 2189              	.LASF9:
 2190 039a 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 63


 2190      20756E73 
 2190      69676E65 
 2190      6420696E 
 2190      7400
 2191              	.LASF45:
 2192 03ac 63707573 		.ascii	"cpussIpcNr\000"
 2192      73497063 
 2192      4E7200
 2193              	.LASF32:
 2194 03b7 6770696F 		.ascii	"gpioBase\000"
 2194      42617365 
 2194      00
 2195              	.LASF136:
 2196 03c0 43795F49 		.ascii	"Cy_IPC_Drv_ReadMsgWord\000"
 2196      50435F44 
 2196      72765F52 
 2196      6561644D 
 2196      7367576F 
 2197              	.LASF81:
 2198 03d7 70657269 		.ascii	"periTrGrOffset\000"
 2198      54724772 
 2198      4F666673 
 2198      657400
 2199              	.LASF108:
 2200 03e6 63707573 		.ascii	"cpussRam1Ctl0\000"
 2200      7352616D 
 2200      3143746C 
 2200      3000
 2201              	.LASF22:
 2202 03f4 44415441 		.ascii	"DATA\000"
 2202      00
 2203              	.LASF120:
 2204 03f9 63795F65 		.ascii	"cy_en_ipcdrv_status_t\000"
 2204      6E5F6970 
 2204      63647276 
 2204      5F737461 
 2204      7475735F 
 2205              	.LASF82:
 2206 040f 70657269 		.ascii	"periTrGrSize\000"
 2206      54724772 
 2206      53697A65 
 2206      00
 2207              	.LASF40:
 2208 041c 6770696F 		.ascii	"gpioVersion\000"
 2208      56657273 
 2208      696F6E00 
 2209              	.LASF125:
 2210 0428 43795F49 		.ascii	"Cy_IPC_Drv_LockAcquire\000"
 2210      50435F44 
 2210      72765F4C 
 2210      6F636B41 
 2210      63717569 
 2211              	.LASF112:
 2212 043f 63795F73 		.ascii	"cy_stc_device_t\000"
 2212      74635F64 
 2212      65766963 
 2212      655F7400 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 64


 2213              	.LASF21:
 2214 044f 4E4F5449 		.ascii	"NOTIFY\000"
 2214      465900
 2215              	.LASF58:
 2216 0456 65704D6F 		.ascii	"epMonitorNr\000"
 2216      6E69746F 
 2216      724E7200 
 2217              	.LASF105:
 2218 0462 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2218      73436D34 
 2218      4E6D6943 
 2218      746C4F66 
 2218      66736574 
 2219              	.LASF36:
 2220 0477 63707573 		.ascii	"cpussVersion\000"
 2220      73566572 
 2220      73696F6E 
 2220      00
 2221              	.LASF96:
 2222 0484 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2222      73436D30 
 2222      436C6F63 
 2222      6B43746C 
 2222      4F666673 
 2223              	.LASF35:
 2224 049b 63727970 		.ascii	"cryptoBase\000"
 2224      746F4261 
 2224      736500
 2225              	.LASF122:
 2226 04a6 62617365 		.ascii	"base\000"
 2226      00
 2227              	.LASF43:
 2228 04ab 70657269 		.ascii	"periVersion\000"
 2228      56657273 
 2228      696F6E00 
 2229              	.LASF99:
 2230 04b7 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2230      73436D30 
 2230      53746174 
 2230      75734F66 
 2230      66736574 
 2231              	.LASF18:
 2232 04cc 73697A65 		.ascii	"sizetype\000"
 2232      74797065 
 2232      00
 2233              	.LASF73:
 2234 04d5 64774368 		.ascii	"dwChOffset\000"
 2234      4F666673 
 2234      657400
 2235              	.LASF126:
 2236 04e0 43795F49 		.ascii	"Cy_IPC_Drv_ReleaseNotify\000"
 2236      50435F44 
 2236      72765F52 
 2236      656C6561 
 2236      73654E6F 
 2237              	.LASF86:
 2238 04f9 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 65


 2238      44697643 
 2238      6D645061 
 2238      54797065 
 2238      53656C50 
 2239              	.LASF109:
 2240 0510 63707573 		.ascii	"cpussRam2Ctl0\000"
 2240      7352616D 
 2240      3243746C 
 2240      3000
 2241              	.LASF128:
 2242 051e 43795F49 		.ascii	"Cy_IPC_Drv_WriteDataValue\000"
 2242      50435F44 
 2242      72765F57 
 2242      72697465 
 2242      44617461 
 2243              	.LASF77:
 2244 0538 64775374 		.ascii	"dwStatusChIdxPos\000"
 2244      61747573 
 2244      43684964 
 2244      78506F73 
 2244      00
 2245              	.LASF59:
 2246 0549 75646250 		.ascii	"udbPresent\000"
 2246      72657365 
 2246      6E7400
 2247              	.LASF134:
 2248 0554 6D657373 		.ascii	"message\000"
 2248      61676500 
 2249              	.LASF39:
 2250 055c 666C6173 		.ascii	"flashcVersion\000"
 2250      68635665 
 2250      7273696F 
 2250      6E00
 2251              	.LASF129:
 2252 056a 64617461 		.ascii	"dataValue\000"
 2252      56616C75 
 2252      6500
 2253              	.LASF56:
 2254 0574 736D6966 		.ascii	"smifDeviceNr\000"
 2254      44657669 
 2254      63654E72 
 2254      00
 2255              	.LASF116:
 2256 0581 666C6F61 		.ascii	"float\000"
 2256      7400
 2257              	.LASF78:
 2258 0587 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2258      61747573 
 2258      43684964 
 2258      784D736B 
 2258      00
 2259              	.LASF140:
 2260 0598 63795F64 		.ascii	"cy_device\000"
 2260      65766963 
 2260      6500
 2261              	.LASF106:
 2262 05a2 63707573 		.ascii	"cpussRomCtl\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 66


 2262      73526F6D 
 2262      43746C00 
 2263              	.LASF76:
 2264 05ae 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2264      43746C50 
 2264      7265656D 
 2264      70746162 
 2264      6C65506F 
 2265              	.LASF124:
 2266 05c4 43795F49 		.ascii	"Cy_IPC_Drv_IsLockAcquired\000"
 2266      50435F44 
 2266      72765F49 
 2266      734C6F63 
 2266      6B416371 
 2267              	.LASF121:
 2268 05de 5F426F6F 		.ascii	"_Bool\000"
 2268      6C00
 2269              	.LASF1:
 2270 05e4 756E7369 		.ascii	"unsigned char\000"
 2270      676E6564 
 2270      20636861 
 2270      7200
 2271              	.LASF72:
 2272 05f2 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2272      6843746C 
 2272      4D61696E 
 2272      57733446 
 2272      72657100 
 2273              	.LASF4:
 2274 0606 73686F72 		.ascii	"short int\000"
 2274      7420696E 
 2274      7400
 2275              	.LASF25:
 2276 0610 4950435F 		.ascii	"IPC_STRUCT_V1_Type\000"
 2276      53545255 
 2276      43545F56 
 2276      315F5479 
 2276      706500
 2277              	.LASF24:
 2278 0623 52455345 		.ascii	"RESERVED\000"
 2278      52564544 
 2278      00
 2279              	.LASF131:
 2280 062c 72656C65 		.ascii	"releaseEventIntr\000"
 2280      61736545 
 2280      76656E74 
 2280      496E7472 
 2280      00
 2281              	.LASF83:
 2282 063d 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2282      44697643 
 2282      6D644469 
 2282      7653656C 
 2282      4D736B00 
 2283              	.LASF70:
 2284 0651 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2284      6843746C 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 67


 2284      4D61696E 
 2284      57733246 
 2284      72657100 
 2285              	.LASF54:
 2286 0665 73727373 		.ascii	"srssNumHfroot\000"
 2286      4E756D48 
 2286      66726F6F 
 2286      7400
 2287              	.LASF67:
 2288 0673 666C6173 		.ascii	"flashEraseDelay\000"
 2288      68457261 
 2288      73654465 
 2288      6C617900 
 2289              	.LASF16:
 2290 0683 75696E74 		.ascii	"uint32_t\000"
 2290      33325F74 
 2290      00
 2291              	.LASF137:
 2292 068c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2292      43313120 
 2292      352E342E 
 2292      31203230 
 2292      31363036 
 2293 06bf 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2293      20726576 
 2293      6973696F 
 2293      6E203233 
 2293      37373135 
 2294 06f2 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2294      67202D66 
 2294      66756E63 
 2294      74696F6E 
 2294      2D736563 
 2295              	.LASF17:
 2296 071e 6C6F6E67 		.ascii	"long double\000"
 2296      20646F75 
 2296      626C6500 
 2297              	.LASF115:
 2298 072a 63686172 		.ascii	"char\000"
 2298      00
 2299              	.LASF44:
 2300 072f 70726F74 		.ascii	"protVersion\000"
 2300      56657273 
 2300      696F6E00 
 2301              	.LASF107:
 2302 073b 63707573 		.ascii	"cpussRam0Ctl0\000"
 2302      7352616D 
 2302      3043746C 
 2302      3000
 2303              	.LASF133:
 2304 0749 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgWord\000"
 2304      50435F44 
 2304      72765F53 
 2304      656E644D 
 2304      7367576F 
 2305              	.LASF5:
 2306 0760 5F5F7569 		.ascii	"__uint16_t\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 68


 2306      6E743136 
 2306      5F7400
 2307              	.LASF88:
 2308 076b 70657269 		.ascii	"periDiv16CtlOffset\000"
 2308      44697631 
 2308      3643746C 
 2308      4F666673 
 2308      657400
 2309              	.LASF41:
 2310 077e 6873696F 		.ascii	"hsiomVersion\000"
 2310      6D566572 
 2310      73696F6E 
 2310      00
 2311              	.LASF130:
 2312 078b 43795F49 		.ascii	"Cy_IPC_Drv_ReadDataValue\000"
 2312      50435F44 
 2312      72765F52 
 2312      65616444 
 2312      61746156 
 2313              	.LASF69:
 2314 07a4 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2314      6843746C 
 2314      4D61696E 
 2314      57733146 
 2314      72657100 
 2315              	.LASF141:
 2316 07b8 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 2316      79734C69 
 2316      625F4173 
 2316      73657274 
 2316      4661696C 
 2317              	.LASF74:
 2318 07cf 64774368 		.ascii	"dwChSize\000"
 2318      53697A65 
 2318      00
 2319              	.LASF110:
 2320 07d8 69706353 		.ascii	"ipcStructSize\000"
 2320      74727563 
 2320      7453697A 
 2320      6500
 2321              	.LASF49:
 2322 07e6 63707573 		.ascii	"cpussIpc0Irq\000"
 2322      73497063 
 2322      30497271 
 2322      00
 2323              	.LASF92:
 2324 07f3 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2324      50727443 
 2324      66674F66 
 2324      66736574 
 2324      00
 2325              	.LASF30:
 2326 0804 70726F74 		.ascii	"protBase\000"
 2326      42617365 
 2326      00
 2327              	.LASF127:
 2328 080d 43795F49 		.ascii	"Cy_IPC_Drv_AcquireNotify\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 69


 2328      50435F44 
 2328      72765F41 
 2328      63717569 
 2328      72654E6F 
 2329              	.LASF51:
 2330 0826 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2330      734E6F74 
 2330      436F6E6E 
 2330      65637465 
 2330      64497271 
 2331              	.LASF138:
 2332 083b 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 2332      72617465 
 2332      645F536F 
 2332      75726365 
 2332      5C50536F 
 2333 0869 6970635C 		.ascii	"ipc\\cy_ipc_drv.c\000"
 2333      63795F69 
 2333      70635F64 
 2333      72762E63 
 2333      00
 2334              	.LASF65:
 2335 087a 666C6173 		.ascii	"flashWriteDelay\000"
 2335      68577269 
 2335      74654465 
 2335      6C617900 
 2336              	.LASF13:
 2337 088a 75696E74 		.ascii	"uint8_t\000"
 2337      385F7400 
 2338              	.LASF98:
 2339 0892 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2339      73436D34 
 2339      53746174 
 2339      75734F66 
 2339      66736574 
 2340              	.LASF91:
 2341 08a7 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2341      50727449 
 2341      6E747243 
 2341      66674F66 
 2341      66736574 
 2342              	.LASF102:
 2343 08bc 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2343      73547269 
 2343      6D526F6D 
 2343      43746C4F 
 2343      66667365 
 2344              	.LASF113:
 2345 08d2 4950435F 		.ascii	"IPC_STRUCT_Type\000"
 2345      53545255 
 2345      43545F54 
 2345      79706500 
 2346              	.LASF52:
 2347 08e2 73727373 		.ascii	"srssNumClkpath\000"
 2347      4E756D43 
 2347      6C6B7061 
 2347      746800
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccDBBlzw.s 			page 70


 2348              	.LASF38:
 2349 08f1 64775665 		.ascii	"dwVersion\000"
 2349      7273696F 
 2349      6E00
 2350              	.LASF34:
 2351 08fb 69706342 		.ascii	"ipcBase\000"
 2351      61736500 
 2352              	.LASF85:
 2353 0903 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2353      44697643 
 2353      6D645061 
 2353      44697653 
 2353      656C506F 
 2354              	.LASF66:
 2355 0919 666C6173 		.ascii	"flashProgramDelay\000"
 2355      6850726F 
 2355      6772616D 
 2355      44656C61 
 2355      7900
 2356              	.LASF135:
 2357 092b 72657453 		.ascii	"retStatus\000"
 2357      74617475 
 2357      7300
 2358              	.LASF48:
 2359 0935 63707573 		.ascii	"cpussFlashPaSize\000"
 2359      73466C61 
 2359      73685061 
 2359      53697A65 
 2359      00
 2360              	.LASF63:
 2361 0946 666C6173 		.ascii	"flashRwwRequired\000"
 2361      68527777 
 2361      52657175 
 2361      69726564 
 2361      00
 2362              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
